test_diagnostic-pragma-1_1:
  build:
    cflags: "-Wc++-compat  \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/diagnostic-pragma-1.c'
    sources:
      binary: diagnostic-pragma-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*(d)[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*(a)[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*(b)[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*(c)[^\n]*\n?)+'
test_diagnostic-pragma-1_119:
  build:
    cflags: "-Wc++-compat  \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/diagnostic-pragma-1.c'
    sources:
      binary: diagnostic-pragma-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*(d)[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*(a)[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*(b)[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*(c)[^\n]*\n?)+'
test_diagnostic-pragma-1_143:
  build:
    cflags: "-std=c++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/diagnostic-pragma-1.c'
    sources:
      binary: diagnostic-pragma-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*(d)[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*(a)[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*(b)[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*(c)[^\n]*\n?)+'
test_diagnostic-pragma-1_144:
  build:
    cflags: "-std=c++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/diagnostic-pragma-1.c'
    sources:
      binary: diagnostic-pragma-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*(d)[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*(a)[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*(b)[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*(c)[^\n]*\n?)+'
test_diagnostic-pragma-1_145:
  build:
    cflags: "-std=c++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/diagnostic-pragma-1.c'
    sources:
      binary: diagnostic-pragma-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*(d)[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*(a)[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*(b)[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*(c)[^\n]*\n?)+'
test_diagnostic-pragma-1_25:
  build:
    cflags: "-Wc++-compat  \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/diagnostic-pragma-1.c'
    sources:
      binary: diagnostic-pragma-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*(d)[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*(a)[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*(b)[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*(c)[^\n]*\n?)+'
test_diagnostic-pragma-1_49:
  build:
    cflags: "-std=c++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/diagnostic-pragma-1.c'
    sources:
      binary: diagnostic-pragma-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*(d)[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*(a)[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*(b)[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*(c)[^\n]*\n?)+'
test_diagnostic-pragma-1_50:
  build:
    cflags: "-std=c++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/diagnostic-pragma-1.c'
    sources:
      binary: diagnostic-pragma-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*(d)[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*(a)[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*(b)[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*(c)[^\n]*\n?)+'
test_diagnostic-pragma-1_51:
  build:
    cflags: "-std=c++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/diagnostic-pragma-1.c'
    sources:
      binary: diagnostic-pragma-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*(d)[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*(a)[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*(b)[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*(c)[^\n]*\n?)+'
test_normalize-3_120:
  build:
    cflags: "-Wc++-compat  -std=c99 -Wnormalized=id\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/normalize-3.c'
    sources:
      binary: normalize-3.i
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
test_normalize-3_146:
  build:
    cflags: "-std=gnu++98 -Wnormalized=id\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/normalize-3.c'
    sources:
      binary: normalize-3.i
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
test_normalize-3_147:
  build:
    cflags: "-std=gnu++11 -Wnormalized=id\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/normalize-3.c'
    sources:
      binary: normalize-3.i
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
test_normalize-3_148:
  build:
    cflags: "-std=gnu++14 -Wnormalized=id\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/normalize-3.c'
    sources:
      binary: normalize-3.i
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
test_normalize-3_2:
  build:
    cflags: "-Wc++-compat  -std=c99 -Wnormalized=id\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/normalize-3.c'
    sources:
      binary: normalize-3.i
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
test_normalize-3_26:
  build:
    cflags: "-Wc++-compat  -std=c99 -Wnormalized=id\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/normalize-3.c'
    sources:
      binary: normalize-3.i
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
test_normalize-3_52:
  build:
    cflags: "-std=gnu++98 -Wnormalized=id\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/normalize-3.c'
    sources:
      binary: normalize-3.i
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
test_normalize-3_53:
  build:
    cflags: "-std=gnu++11 -Wnormalized=id\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/normalize-3.c'
    sources:
      binary: normalize-3.i
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
test_normalize-3_54:
  build:
    cflags: "-std=gnu++14 -Wnormalized=id\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/normalize-3.c'
    sources:
      binary: normalize-3.i
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
test_openacc-define-1_121:
  build:
    cflags: "-Wc++-compat  \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-1.c'
    sources:
      binary: openacc-define-1.i
  group: GRPSERIAL
test_openacc-define-1_149:
  build:
    cflags: "-std=c++98 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-1.c'
    sources:
      binary: openacc-define-1.i
  group: GRPSERIAL
test_openacc-define-1_150:
  build:
    cflags: "-std=c++11 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-1.c'
    sources:
      binary: openacc-define-1.i
  group: GRPSERIAL
test_openacc-define-1_151:
  build:
    cflags: "-std=c++14 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-1.c'
    sources:
      binary: openacc-define-1.i
  group: GRPSERIAL
test_openacc-define-1_27:
  build:
    cflags: "-Wc++-compat  \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-1.c'
    sources:
      binary: openacc-define-1.i
  group: GRPSERIAL
test_openacc-define-1_3:
  build:
    cflags: "-Wc++-compat  \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-1.c'
    sources:
      binary: openacc-define-1.i
  group: GRPSERIAL
test_openacc-define-1_55:
  build:
    cflags: "-std=c++98 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-1.c'
    sources:
      binary: openacc-define-1.i
  group: GRPSERIAL
test_openacc-define-1_56:
  build:
    cflags: "-std=c++11 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-1.c'
    sources:
      binary: openacc-define-1.i
  group: GRPSERIAL
test_openacc-define-1_57:
  build:
    cflags: "-std=c++14 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-1.c'
    sources:
      binary: openacc-define-1.i
  group: GRPSERIAL
test_openacc-define-2_122:
  build:
    cflags: "-Wc++-compat  -fno-openacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-2.c'
    sources:
      binary: openacc-define-2.i
  group: GRPSERIAL
test_openacc-define-2_152:
  build:
    cflags: "-std=gnu++98 -fno-openacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-2.c'
    sources:
      binary: openacc-define-2.i
  group: GRPSERIAL
test_openacc-define-2_153:
  build:
    cflags: "-std=gnu++11 -fno-openacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-2.c'
    sources:
      binary: openacc-define-2.i
  group: GRPSERIAL
test_openacc-define-2_154:
  build:
    cflags: "-std=gnu++14 -fno-openacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-2.c'
    sources:
      binary: openacc-define-2.i
  group: GRPSERIAL
test_openacc-define-2_28:
  build:
    cflags: "-Wc++-compat  -fno-openacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-2.c'
    sources:
      binary: openacc-define-2.i
  group: GRPSERIAL
test_openacc-define-2_4:
  build:
    cflags: "-Wc++-compat  -fno-openacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-2.c'
    sources:
      binary: openacc-define-2.i
  group: GRPSERIAL
test_openacc-define-2_58:
  build:
    cflags: "-std=gnu++98 -fno-openacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-2.c'
    sources:
      binary: openacc-define-2.i
  group: GRPSERIAL
test_openacc-define-2_59:
  build:
    cflags: "-std=gnu++11 -fno-openacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-2.c'
    sources:
      binary: openacc-define-2.i
  group: GRPSERIAL
test_openacc-define-2_60:
  build:
    cflags: "-std=gnu++14 -fno-openacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-2.c'
    sources:
      binary: openacc-define-2.i
  group: GRPSERIAL
test_openacc-define-3_123:
  build:
    cflags: "-Wc++-compat  -fopenacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-3.c'
    sources:
      binary: openacc-define-3.i
  group: GRPSERIAL
test_openacc-define-3_155:
  build:
    cflags: "-std=gnu++98 -fopenacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-3.c'
    sources:
      binary: openacc-define-3.i
  group: GRPSERIAL
test_openacc-define-3_156:
  build:
    cflags: "-std=gnu++11 -fopenacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-3.c'
    sources:
      binary: openacc-define-3.i
  group: GRPSERIAL
test_openacc-define-3_157:
  build:
    cflags: "-std=gnu++14 -fopenacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-3.c'
    sources:
      binary: openacc-define-3.i
  group: GRPSERIAL
test_openacc-define-3_29:
  build:
    cflags: "-Wc++-compat  -fopenacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-3.c'
    sources:
      binary: openacc-define-3.i
  group: GRPSERIAL
test_openacc-define-3_5:
  build:
    cflags: "-Wc++-compat  -fopenacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-3.c'
    sources:
      binary: openacc-define-3.i
  group: GRPSERIAL
test_openacc-define-3_61:
  build:
    cflags: "-std=gnu++98 -fopenacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-3.c'
    sources:
      binary: openacc-define-3.i
  group: GRPSERIAL
test_openacc-define-3_62:
  build:
    cflags: "-std=gnu++11 -fopenacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-3.c'
    sources:
      binary: openacc-define-3.i
  group: GRPSERIAL
test_openacc-define-3_63:
  build:
    cflags: "-std=gnu++14 -fopenacc\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openacc-define-3.c'
    sources:
      binary: openacc-define-3.i
  group: GRPSERIAL
test_openmp-define-1_124:
  build:
    cflags: "-Wc++-compat  \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-1.c'
    sources:
      binary: openmp-define-1.i
  group: GRPSERIAL
test_openmp-define-1_158:
  build:
    cflags: "-std=c++98 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-1.c'
    sources:
      binary: openmp-define-1.i
  group: GRPSERIAL
test_openmp-define-1_159:
  build:
    cflags: "-std=c++11 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-1.c'
    sources:
      binary: openmp-define-1.i
  group: GRPSERIAL
test_openmp-define-1_160:
  build:
    cflags: "-std=c++14 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-1.c'
    sources:
      binary: openmp-define-1.i
  group: GRPSERIAL
test_openmp-define-1_30:
  build:
    cflags: "-Wc++-compat  \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-1.c'
    sources:
      binary: openmp-define-1.i
  group: GRPSERIAL
test_openmp-define-1_6:
  build:
    cflags: "-Wc++-compat  \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-1.c'
    sources:
      binary: openmp-define-1.i
  group: GRPSERIAL
test_openmp-define-1_64:
  build:
    cflags: "-std=c++98 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-1.c'
    sources:
      binary: openmp-define-1.i
  group: GRPSERIAL
test_openmp-define-1_65:
  build:
    cflags: "-std=c++11 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-1.c'
    sources:
      binary: openmp-define-1.i
  group: GRPSERIAL
test_openmp-define-1_66:
  build:
    cflags: "-std=c++14 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-1.c'
    sources:
      binary: openmp-define-1.i
  group: GRPSERIAL
test_openmp-define-2_125:
  build:
    cflags: "-Wc++-compat  -fno-openmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-2.c'
    sources:
      binary: openmp-define-2.i
  group: GRPSERIAL
test_openmp-define-2_161:
  build:
    cflags: "-std=gnu++98 -fno-openmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-2.c'
    sources:
      binary: openmp-define-2.i
  group: GRPSERIAL
test_openmp-define-2_162:
  build:
    cflags: "-std=gnu++11 -fno-openmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-2.c'
    sources:
      binary: openmp-define-2.i
  group: GRPSERIAL
test_openmp-define-2_163:
  build:
    cflags: "-std=gnu++14 -fno-openmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-2.c'
    sources:
      binary: openmp-define-2.i
  group: GRPSERIAL
test_openmp-define-2_31:
  build:
    cflags: "-Wc++-compat  -fno-openmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-2.c'
    sources:
      binary: openmp-define-2.i
  group: GRPSERIAL
test_openmp-define-2_67:
  build:
    cflags: "-std=gnu++98 -fno-openmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-2.c'
    sources:
      binary: openmp-define-2.i
  group: GRPSERIAL
test_openmp-define-2_68:
  build:
    cflags: "-std=gnu++11 -fno-openmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-2.c'
    sources:
      binary: openmp-define-2.i
  group: GRPSERIAL
test_openmp-define-2_69:
  build:
    cflags: "-std=gnu++14 -fno-openmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-2.c'
    sources:
      binary: openmp-define-2.i
  group: GRPSERIAL
test_openmp-define-2_7:
  build:
    cflags: "-Wc++-compat  -fno-openmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-2.c'
    sources:
      binary: openmp-define-2.i
  group: GRPSERIAL
test_openmp-define-3_126:
  build:
    cflags: "-Wc++-compat  -fopenmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-3.c'
    sources:
      binary: openmp-define-3.i
  group: GRPSERIAL
test_openmp-define-3_164:
  build:
    cflags: "-std=gnu++98 -fopenmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-3.c'
    sources:
      binary: openmp-define-3.i
  group: GRPSERIAL
test_openmp-define-3_165:
  build:
    cflags: "-std=gnu++11 -fopenmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-3.c'
    sources:
      binary: openmp-define-3.i
  group: GRPSERIAL
test_openmp-define-3_166:
  build:
    cflags: "-std=gnu++14 -fopenmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-3.c'
    sources:
      binary: openmp-define-3.i
  group: GRPSERIAL
test_openmp-define-3_32:
  build:
    cflags: "-Wc++-compat  -fopenmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-3.c'
    sources:
      binary: openmp-define-3.i
  group: GRPSERIAL
test_openmp-define-3_70:
  build:
    cflags: "-std=gnu++98 -fopenmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-3.c'
    sources:
      binary: openmp-define-3.i
  group: GRPSERIAL
test_openmp-define-3_71:
  build:
    cflags: "-std=gnu++11 -fopenmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-3.c'
    sources:
      binary: openmp-define-3.i
  group: GRPSERIAL
test_openmp-define-3_72:
  build:
    cflags: "-std=gnu++14 -fopenmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-3.c'
    sources:
      binary: openmp-define-3.i
  group: GRPSERIAL
test_openmp-define-3_8:
  build:
    cflags: "-Wc++-compat  -fopenmp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/openmp-define-3.c'
    sources:
      binary: openmp-define-3.i
  group: GRPSERIAL
test_pr45457_127:
  build:
    cflags: "-Wc++-compat  \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr45457.c'
    sources:
      binary: pr45457.s
  group: GRPSERIAL
test_pr45457_167:
  build:
    cflags: "-std=c++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr45457.c'
    sources:
      binary: pr45457.s
  group: GRPSERIAL
test_pr45457_168:
  build:
    cflags: "-std=c++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr45457.c'
    sources:
      binary: pr45457.s
  group: GRPSERIAL
test_pr45457_169:
  build:
    cflags: "-std=c++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr45457.c'
    sources:
      binary: pr45457.s
  group: GRPSERIAL
test_pr45457_33:
  build:
    cflags: "-Wc++-compat  \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr45457.c'
    sources:
      binary: pr45457.s
  group: GRPSERIAL
test_pr45457_73:
  build:
    cflags: "-std=c++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr45457.c'
    sources:
      binary: pr45457.s
  group: GRPSERIAL
test_pr45457_74:
  build:
    cflags: "-std=c++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr45457.c'
    sources:
      binary: pr45457.s
  group: GRPSERIAL
test_pr45457_75:
  build:
    cflags: "-std=c++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr45457.c'
    sources:
      binary: pr45457.s
  group: GRPSERIAL
test_pr45457_9:
  build:
    cflags: "-Wc++-compat  \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr45457.c'
    sources:
      binary: pr45457.s
  group: GRPSERIAL
test_pr57580_10:
  build:
    cflags: "-Wc++-compat  -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr57580.c'
    sources:
      binary: pr57580.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr57580_128:
  build:
    cflags: "-Wc++-compat  -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr57580.c'
    sources:
      binary: pr57580.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr57580_170:
  build:
    cflags: "-std=gnu++98 -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr57580.c'
    sources:
      binary: pr57580.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr57580_171:
  build:
    cflags: "-std=gnu++11 -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr57580.c'
    sources:
      binary: pr57580.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr57580_172:
  build:
    cflags: "-std=gnu++14 -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr57580.c'
    sources:
      binary: pr57580.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr57580_34:
  build:
    cflags: "-Wc++-compat  -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr57580.c'
    sources:
      binary: pr57580.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr57580_76:
  build:
    cflags: "-std=gnu++98 -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr57580.c'
    sources:
      binary: pr57580.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr57580_77:
  build:
    cflags: "-std=gnu++11 -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr57580.c'
    sources:
      binary: pr57580.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr57580_78:
  build:
    cflags: "-std=gnu++14 -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr57580.c'
    sources:
      binary: pr57580.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr58844-1_11:
  build:
    cflags: "-Wc++-compat  -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-1.c'
    sources:
      binary: pr58844-1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-1_129:
  build:
    cflags: "-Wc++-compat  -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-1.c'
    sources:
      binary: pr58844-1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-1_173:
  build:
    cflags: "-std=gnu++98 -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-1.c'
    sources:
      binary: pr58844-1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-1_174:
  build:
    cflags: "-std=gnu++11 -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-1.c'
    sources:
      binary: pr58844-1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-1_175:
  build:
    cflags: "-std=gnu++14 -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-1.c'
    sources:
      binary: pr58844-1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-1_35:
  build:
    cflags: "-Wc++-compat  -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-1.c'
    sources:
      binary: pr58844-1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-1_79:
  build:
    cflags: "-std=gnu++98 -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-1.c'
    sources:
      binary: pr58844-1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-1_80:
  build:
    cflags: "-std=gnu++11 -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-1.c'
    sources:
      binary: pr58844-1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-1_81:
  build:
    cflags: "-std=gnu++14 -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-1.c'
    sources:
      binary: pr58844-1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-2_12:
  build:
    cflags: "-Wc++-compat  -ftrack-macro-expansion=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-2.c'
    sources:
      binary: pr58844-2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-2_130:
  build:
    cflags: "-Wc++-compat  -ftrack-macro-expansion=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-2.c'
    sources:
      binary: pr58844-2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-2_176:
  build:
    cflags: "-std=gnu++98 -ftrack-macro-expansion=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-2.c'
    sources:
      binary: pr58844-2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-2_177:
  build:
    cflags: "-std=gnu++11 -ftrack-macro-expansion=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-2.c'
    sources:
      binary: pr58844-2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-2_178:
  build:
    cflags: "-std=gnu++14 -ftrack-macro-expansion=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-2.c'
    sources:
      binary: pr58844-2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-2_36:
  build:
    cflags: "-Wc++-compat  -ftrack-macro-expansion=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-2.c'
    sources:
      binary: pr58844-2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-2_82:
  build:
    cflags: "-std=gnu++98 -ftrack-macro-expansion=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-2.c'
    sources:
      binary: pr58844-2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-2_83:
  build:
    cflags: "-std=gnu++11 -ftrack-macro-expansion=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-2.c'
    sources:
      binary: pr58844-2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr58844-2_84:
  build:
    cflags: "-std=gnu++14 -ftrack-macro-expansion=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr58844-2.c'
    sources:
      binary: pr58844-2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_pr60400_13:
  build:
    cflags: "-Wc++-compat  -trigraphs -Wtrigraphs\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr60400.c'
    sources:
      binary: pr60400.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
test_pr60400_131:
  build:
    cflags: "-Wc++-compat  -trigraphs -Wtrigraphs\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr60400.c'
    sources:
      binary: pr60400.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
test_pr60400_179:
  build:
    cflags: "-std=gnu++98 -trigraphs -Wtrigraphs\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr60400.c'
    sources:
      binary: pr60400.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
test_pr60400_180:
  build:
    cflags: "-std=gnu++11 -trigraphs -Wtrigraphs\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr60400.c'
    sources:
      binary: pr60400.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
test_pr60400_181:
  build:
    cflags: "-std=gnu++14 -trigraphs -Wtrigraphs\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr60400.c'
    sources:
      binary: pr60400.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
test_pr60400_37:
  build:
    cflags: "-Wc++-compat  -trigraphs -Wtrigraphs\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr60400.c'
    sources:
      binary: pr60400.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
test_pr60400_85:
  build:
    cflags: "-std=gnu++98 -trigraphs -Wtrigraphs\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr60400.c'
    sources:
      binary: pr60400.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
test_pr60400_86:
  build:
    cflags: "-std=gnu++11 -trigraphs -Wtrigraphs\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr60400.c'
    sources:
      binary: pr60400.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
test_pr60400_87:
  build:
    cflags: "-std=gnu++14 -trigraphs -Wtrigraphs\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr60400.c'
    sources:
      binary: pr60400.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("trigraph")[^\n]*\n?)+'
test_pr63831-1_132:
  build:
    cflags: "-Wc++-compat  \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-1.c'
    sources:
      binary: pr63831-1.s
  group: GRPSERIAL
test_pr63831-1_14:
  build:
    cflags: "-Wc++-compat  \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-1.c'
    sources:
      binary: pr63831-1.s
  group: GRPSERIAL
test_pr63831-1_182:
  build:
    cflags: "-std=c++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-1.c'
    sources:
      binary: pr63831-1.s
  group: GRPSERIAL
test_pr63831-1_183:
  build:
    cflags: "-std=c++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-1.c'
    sources:
      binary: pr63831-1.s
  group: GRPSERIAL
test_pr63831-1_184:
  build:
    cflags: "-std=c++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-1.c'
    sources:
      binary: pr63831-1.s
  group: GRPSERIAL
test_pr63831-1_38:
  build:
    cflags: "-Wc++-compat  \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-1.c'
    sources:
      binary: pr63831-1.s
  group: GRPSERIAL
test_pr63831-1_88:
  build:
    cflags: "-std=c++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-1.c'
    sources:
      binary: pr63831-1.s
  group: GRPSERIAL
test_pr63831-1_89:
  build:
    cflags: "-std=c++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-1.c'
    sources:
      binary: pr63831-1.s
  group: GRPSERIAL
test_pr63831-1_90:
  build:
    cflags: "-std=c++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-1.c'
    sources:
      binary: pr63831-1.s
  group: GRPSERIAL
test_pr63831-2_133:
  build:
    cflags: "-Wc++-compat  -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-2.c'
    sources:
      binary: pr63831-2.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr63831-2_15:
  build:
    cflags: "-Wc++-compat  -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-2.c'
    sources:
      binary: pr63831-2.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr63831-2_185:
  build:
    cflags: "-std=gnu++98 -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-2.c'
    sources:
      binary: pr63831-2.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr63831-2_186:
  build:
    cflags: "-std=gnu++11 -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-2.c'
    sources:
      binary: pr63831-2.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr63831-2_187:
  build:
    cflags: "-std=gnu++14 -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-2.c'
    sources:
      binary: pr63831-2.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr63831-2_39:
  build:
    cflags: "-Wc++-compat  -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-2.c'
    sources:
      binary: pr63831-2.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr63831-2_91:
  build:
    cflags: "-std=gnu++98 -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-2.c'
    sources:
      binary: pr63831-2.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr63831-2_92:
  build:
    cflags: "-std=gnu++11 -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-2.c'
    sources:
      binary: pr63831-2.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr63831-2_93:
  build:
    cflags: "-std=gnu++14 -save-temps\n -S"
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr63831-2.c'
    sources:
      binary: pr63831-2.s
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/c-c++-common/cpp
test_pr65238-1_134:
  build:
    cflags: -Wc++-compat
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr65238-1.c'
    sources:
      binary: ./pr65238-1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr65238-1_16:
  build:
    cflags: -Wc++-compat
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr65238-1.c'
    sources:
      binary: ./pr65238-1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr65238-1_188:
  build:
    cflags: -std=c++98
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr65238-1.c'
    sources:
      binary: ./pr65238-1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr65238-1_189:
  build:
    cflags: -std=c++11
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr65238-1.c'
    sources:
      binary: ./pr65238-1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr65238-1_190:
  build:
    cflags: -std=c++14
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr65238-1.c'
    sources:
      binary: ./pr65238-1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr65238-1_40:
  build:
    cflags: -Wc++-compat
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr65238-1.c'
    sources:
      binary: ./pr65238-1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr65238-1_94:
  build:
    cflags: -std=c++98
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr65238-1.c'
    sources:
      binary: ./pr65238-1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr65238-1_95:
  build:
    cflags: -std=c++11
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr65238-1.c'
    sources:
      binary: ./pr65238-1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr65238-1_96:
  build:
    cflags: -std=c++14
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/pr65238-1.c'
    sources:
      binary: ./pr65238-1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ucnid-2011-1_135:
  build:
    cflags: "-Wc++-compat  -std=c11 -pedantic\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/ucnid-2011-1.c'
    sources:
      binary: ucnid-2011-1.i
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not valid at the
          start of an identifier")[^\n]*\n?)+'
test_ucnid-2011-1_17:
  build:
    cflags: "-Wc++-compat  -std=c11 -pedantic\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/ucnid-2011-1.c'
    sources:
      binary: ucnid-2011-1.i
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not valid at the
          start of an identifier")[^\n]*\n?)+'
test_ucnid-2011-1_191:
  build:
    cflags: "-std=c++11 -pedantic\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/ucnid-2011-1.c'
    sources:
      binary: ucnid-2011-1.i
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not valid at the
          start of an identifier")[^\n]*\n?)+'
test_ucnid-2011-1_41:
  build:
    cflags: "-Wc++-compat  -std=c11 -pedantic\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/ucnid-2011-1.c'
    sources:
      binary: ucnid-2011-1.i
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not valid at the
          start of an identifier")[^\n]*\n?)+'
test_ucnid-2011-1_97:
  build:
    cflags: "-std=c++11 -pedantic\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/ucnid-2011-1.c'
    sources:
      binary: ucnid-2011-1.i
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("not in NFC")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not valid at the
          start of an identifier")[^\n]*\n?)+'
test_warning-directive-1_100:
  build:
    cflags: "-std=gnu++14 -fdiagnostics-show-option\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-1.c'
    sources:
      binary: warning-directive-1.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-1_136:
  build:
    cflags: "-Wc++-compat  -std=gnu99 -fdiagnostics-show-option\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-1.c'
    sources:
      binary: warning-directive-1.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-1_18:
  build:
    cflags: "-Wc++-compat  -std=gnu99 -fdiagnostics-show-option\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-1.c'
    sources:
      binary: warning-directive-1.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-1_192:
  build:
    cflags: "-std=gnu++98 -fdiagnostics-show-option\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-1.c'
    sources:
      binary: warning-directive-1.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-1_193:
  build:
    cflags: "-std=gnu++11 -fdiagnostics-show-option\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-1.c'
    sources:
      binary: warning-directive-1.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-1_194:
  build:
    cflags: "-std=gnu++14 -fdiagnostics-show-option\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-1.c'
    sources:
      binary: warning-directive-1.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-1_42:
  build:
    cflags: "-Wc++-compat  -std=gnu99 -fdiagnostics-show-option\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-1.c'
    sources:
      binary: warning-directive-1.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-1_98:
  build:
    cflags: "-std=gnu++98 -fdiagnostics-show-option\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-1.c'
    sources:
      binary: warning-directive-1.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-1_99:
  build:
    cflags: "-std=gnu++11 -fdiagnostics-show-option\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-1.c'
    sources:
      binary: warning-directive-1.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-2_101:
  build:
    cflags: "-std=gnu++98 -fdiagnostics-show-option -Werror=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-2.c'
    sources:
      binary: warning-directive-2.i
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*(" .-Werror=cpp.")[^\n]*\n?)+'
test_warning-directive-2_102:
  build:
    cflags: "-std=gnu++11 -fdiagnostics-show-option -Werror=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-2.c'
    sources:
      binary: warning-directive-2.i
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*(" .-Werror=cpp.")[^\n]*\n?)+'
test_warning-directive-2_103:
  build:
    cflags: "-std=gnu++14 -fdiagnostics-show-option -Werror=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-2.c'
    sources:
      binary: warning-directive-2.i
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*(" .-Werror=cpp.")[^\n]*\n?)+'
test_warning-directive-2_137:
  build:
    cflags: "-Wc++-compat  -std=gnu99 -fdiagnostics-show-option -Werror=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-2.c'
    sources:
      binary: warning-directive-2.i
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*(" .-Werror=cpp.")[^\n]*\n?)+'
test_warning-directive-2_19:
  build:
    cflags: "-Wc++-compat  -std=gnu99 -fdiagnostics-show-option -Werror=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-2.c'
    sources:
      binary: warning-directive-2.i
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*(" .-Werror=cpp.")[^\n]*\n?)+'
test_warning-directive-2_195:
  build:
    cflags: "-std=gnu++98 -fdiagnostics-show-option -Werror=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-2.c'
    sources:
      binary: warning-directive-2.i
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*(" .-Werror=cpp.")[^\n]*\n?)+'
test_warning-directive-2_196:
  build:
    cflags: "-std=gnu++11 -fdiagnostics-show-option -Werror=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-2.c'
    sources:
      binary: warning-directive-2.i
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*(" .-Werror=cpp.")[^\n]*\n?)+'
test_warning-directive-2_197:
  build:
    cflags: "-std=gnu++14 -fdiagnostics-show-option -Werror=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-2.c'
    sources:
      binary: warning-directive-2.i
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*(" .-Werror=cpp.")[^\n]*\n?)+'
test_warning-directive-2_43:
  build:
    cflags: "-Wc++-compat  -std=gnu99 -fdiagnostics-show-option -Werror=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-2.c'
    sources:
      binary: warning-directive-2.i
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*(" .-Werror=cpp.")[^\n]*\n?)+'
test_warning-directive-3_104:
  build:
    cflags: "-std=gnu++98 -fdiagnostics-show-option -Werror -Wno-error=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-3.c'
    sources:
      binary: warning-directive-3.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-3_105:
  build:
    cflags: "-std=gnu++11 -fdiagnostics-show-option -Werror -Wno-error=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-3.c'
    sources:
      binary: warning-directive-3.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-3_106:
  build:
    cflags: "-std=gnu++14 -fdiagnostics-show-option -Werror -Wno-error=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-3.c'
    sources:
      binary: warning-directive-3.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-3_138:
  build:
    cflags: "-Wc++-compat  -std=gnu99 -fdiagnostics-show-option -Werror -Wno-error=cpp\n\
      \ -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-3.c'
    sources:
      binary: warning-directive-3.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-3_198:
  build:
    cflags: "-std=gnu++98 -fdiagnostics-show-option -Werror -Wno-error=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-3.c'
    sources:
      binary: warning-directive-3.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-3_199:
  build:
    cflags: "-std=gnu++11 -fdiagnostics-show-option -Werror -Wno-error=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-3.c'
    sources:
      binary: warning-directive-3.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-3_20:
  build:
    cflags: "-Wc++-compat  -std=gnu99 -fdiagnostics-show-option -Werror -Wno-error=cpp\n\
      \ -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-3.c'
    sources:
      binary: warning-directive-3.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-3_200:
  build:
    cflags: "-std=gnu++14 -fdiagnostics-show-option -Werror -Wno-error=cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-3.c'
    sources:
      binary: warning-directive-3.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-3_44:
  build:
    cflags: "-Wc++-compat  -std=gnu99 -fdiagnostics-show-option -Werror -Wno-error=cpp\n\
      \ -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-3.c'
    sources:
      binary: warning-directive-3.i
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*(" .-Wcpp.")[^\n]*\n?)+'
test_warning-directive-4_107:
  build:
    cflags: "-std=gnu++98 -fdiagnostics-show-option -Wno-cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-4.c'
    sources:
      binary: warning-directive-4.i
  group: GRPSERIAL
test_warning-directive-4_108:
  build:
    cflags: "-std=gnu++11 -fdiagnostics-show-option -Wno-cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-4.c'
    sources:
      binary: warning-directive-4.i
  group: GRPSERIAL
test_warning-directive-4_109:
  build:
    cflags: "-std=gnu++14 -fdiagnostics-show-option -Wno-cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-4.c'
    sources:
      binary: warning-directive-4.i
  group: GRPSERIAL
test_warning-directive-4_139:
  build:
    cflags: "-Wc++-compat  -std=gnu99 -fdiagnostics-show-option -Wno-cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-4.c'
    sources:
      binary: warning-directive-4.i
  group: GRPSERIAL
test_warning-directive-4_201:
  build:
    cflags: "-std=gnu++98 -fdiagnostics-show-option -Wno-cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-4.c'
    sources:
      binary: warning-directive-4.i
  group: GRPSERIAL
test_warning-directive-4_202:
  build:
    cflags: "-std=gnu++11 -fdiagnostics-show-option -Wno-cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-4.c'
    sources:
      binary: warning-directive-4.i
  group: GRPSERIAL
test_warning-directive-4_203:
  build:
    cflags: "-std=gnu++14 -fdiagnostics-show-option -Wno-cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-4.c'
    sources:
      binary: warning-directive-4.i
  group: GRPSERIAL
test_warning-directive-4_21:
  build:
    cflags: "-Wc++-compat  -std=gnu99 -fdiagnostics-show-option -Wno-cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-4.c'
    sources:
      binary: warning-directive-4.i
  group: GRPSERIAL
test_warning-directive-4_45:
  build:
    cflags: "-Wc++-compat  -std=gnu99 -fdiagnostics-show-option -Wno-cpp\n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-directive-4.c'
    sources:
      binary: warning-directive-4.i
  group: GRPSERIAL
test_warning-zero-in-literals-1_110:
  build:
    cflags: "-std=c++98 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-in-literals-1.c'
    sources:
      binary: warning-zero-in-literals-1.i
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
test_warning-zero-in-literals-1_111:
  build:
    cflags: "-std=c++11 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-in-literals-1.c'
    sources:
      binary: warning-zero-in-literals-1.i
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
test_warning-zero-in-literals-1_112:
  build:
    cflags: "-std=c++14 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-in-literals-1.c'
    sources:
      binary: warning-zero-in-literals-1.i
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
test_warning-zero-in-literals-1_140:
  build:
    cflags: "-Wc++-compat  \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-in-literals-1.c'
    sources:
      binary: warning-zero-in-literals-1.i
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
test_warning-zero-in-literals-1_204:
  build:
    cflags: "-std=c++98 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-in-literals-1.c'
    sources:
      binary: warning-zero-in-literals-1.i
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
test_warning-zero-in-literals-1_205:
  build:
    cflags: "-std=c++11 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-in-literals-1.c'
    sources:
      binary: warning-zero-in-literals-1.i
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
test_warning-zero-in-literals-1_206:
  build:
    cflags: "-std=c++14 \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-in-literals-1.c'
    sources:
      binary: warning-zero-in-literals-1.i
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
test_warning-zero-in-literals-1_22:
  build:
    cflags: "-Wc++-compat  \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-in-literals-1.c'
    sources:
      binary: warning-zero-in-literals-1.i
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
test_warning-zero-in-literals-1_46:
  build:
    cflags: "-Wc++-compat  \n -E"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-in-literals-1.c'
    sources:
      binary: warning-zero-in-literals-1.i
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("null character")[^\n]*\n?)+'
test_warning-zero-location-2_113:
  build:
    cflags: "-std=gnu++98 -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location-2.c'
    sources:
      binary: warning-zero-location-2.s
  group: GRPSERIAL
test_warning-zero-location-2_114:
  build:
    cflags: "-std=gnu++11 -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location-2.c'
    sources:
      binary: warning-zero-location-2.s
  group: GRPSERIAL
test_warning-zero-location-2_115:
  build:
    cflags: "-std=gnu++14 -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location-2.c'
    sources:
      binary: warning-zero-location-2.s
  group: GRPSERIAL
test_warning-zero-location-2_141:
  build:
    cflags: "-Wc++-compat  -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location-2.c'
    sources:
      binary: warning-zero-location-2.s
  group: GRPSERIAL
test_warning-zero-location-2_207:
  build:
    cflags: "-std=gnu++98 -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location-2.c'
    sources:
      binary: warning-zero-location-2.s
  group: GRPSERIAL
test_warning-zero-location-2_208:
  build:
    cflags: "-std=gnu++11 -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location-2.c'
    sources:
      binary: warning-zero-location-2.s
  group: GRPSERIAL
test_warning-zero-location-2_209:
  build:
    cflags: "-std=gnu++14 -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location-2.c'
    sources:
      binary: warning-zero-location-2.s
  group: GRPSERIAL
test_warning-zero-location-2_23:
  build:
    cflags: "-Wc++-compat  -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location-2.c'
    sources:
      binary: warning-zero-location-2.s
  group: GRPSERIAL
test_warning-zero-location-2_47:
  build:
    cflags: "-Wc++-compat  -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location-2.c'
    sources:
      binary: warning-zero-location-2.s
  group: GRPSERIAL
test_warning-zero-location_116:
  build:
    cflags: "-std=gnu++98 -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location.c'
    sources:
      binary: warning-zero-location.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_warning-zero-location_117:
  build:
    cflags: "-std=gnu++11 -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location.c'
    sources:
      binary: warning-zero-location.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_warning-zero-location_118:
  build:
    cflags: "-std=gnu++14 -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location.c'
    sources:
      binary: warning-zero-location.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_warning-zero-location_142:
  build:
    cflags: "-Wc++-compat  -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location.c'
    sources:
      binary: warning-zero-location.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_warning-zero-location_210:
  build:
    cflags: "-std=gnu++98 -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location.c'
    sources:
      binary: warning-zero-location.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_warning-zero-location_211:
  build:
    cflags: "-std=gnu++11 -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location.c'
    sources:
      binary: warning-zero-location.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_warning-zero-location_212:
  build:
    cflags: "-std=gnu++14 -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location.c'
    sources:
      binary: warning-zero-location.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_warning-zero-location_24:
  build:
    cflags: "-Wc++-compat  -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location.c'
    sources:
      binary: warning-zero-location.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
test_warning-zero-location_48:
  build:
    cflags: "-Wc++-compat  -D _GNU_SOURCE -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/cpp/warning-zero-location.c'
    sources:
      binary: warning-zero-location.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'
