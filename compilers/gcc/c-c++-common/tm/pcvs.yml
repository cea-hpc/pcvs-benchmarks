test_20100127_1:
  build:
    cflags: "-fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20100127.c'
    sources:
      binary: 20100127.s
  group: GRPSERIAL
test_20100127_131:
  build:
    cflags: "-fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20100127.c'
    sources:
      binary: 20100127.s
  group: GRPSERIAL
test_20100127_157:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20100127.c'
    sources:
      binary: 20100127.s
  group: GRPSERIAL
test_20100127_158:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20100127.c'
    sources:
      binary: 20100127.s
  group: GRPSERIAL
test_20100127_159:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20100127.c'
    sources:
      binary: 20100127.s
  group: GRPSERIAL
test_20100127_27:
  build:
    cflags: "-fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20100127.c'
    sources:
      binary: 20100127.s
  group: GRPSERIAL
test_20100127_53:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20100127.c'
    sources:
      binary: 20100127.s
  group: GRPSERIAL
test_20100127_54:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20100127.c'
    sources:
      binary: 20100127.s
  group: GRPSERIAL
test_20100127_55:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20100127.c'
    sources:
      binary: 20100127.s
  group: GRPSERIAL
test_20111206_132:
  build:
    cflags: "-fgnu-tm -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20111206.c'
    sources:
      binary: 20111206.s
  group: GRPSERIAL
test_20111206_160:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20111206.c'
    sources:
      binary: 20111206.s
  group: GRPSERIAL
test_20111206_161:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20111206.c'
    sources:
      binary: 20111206.s
  group: GRPSERIAL
test_20111206_162:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20111206.c'
    sources:
      binary: 20111206.s
  group: GRPSERIAL
test_20111206_2:
  build:
    cflags: "-fgnu-tm -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20111206.c'
    sources:
      binary: 20111206.s
  group: GRPSERIAL
test_20111206_28:
  build:
    cflags: "-fgnu-tm -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20111206.c'
    sources:
      binary: 20111206.s
  group: GRPSERIAL
test_20111206_56:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20111206.c'
    sources:
      binary: 20111206.s
  group: GRPSERIAL
test_20111206_57:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20111206.c'
    sources:
      binary: 20111206.s
  group: GRPSERIAL
test_20111206_58:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/20111206.c'
    sources:
      binary: 20111206.s
  group: GRPSERIAL
test_abort-1_133:
  build:
    cflags: "-ansi -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-1.c'
    sources:
      binary: abort-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional")[^\n]*\n?)+'
test_abort-1_163:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-1.c'
    sources:
      binary: abort-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional")[^\n]*\n?)+'
test_abort-1_164:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-1.c'
    sources:
      binary: abort-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional")[^\n]*\n?)+'
test_abort-1_165:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-1.c'
    sources:
      binary: abort-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional")[^\n]*\n?)+'
test_abort-1_29:
  build:
    cflags: "-ansi -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-1.c'
    sources:
      binary: abort-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional")[^\n]*\n?)+'
test_abort-1_3:
  build:
    cflags: "-ansi -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-1.c'
    sources:
      binary: abort-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional")[^\n]*\n?)+'
test_abort-1_59:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-1.c'
    sources:
      binary: abort-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional")[^\n]*\n?)+'
test_abort-1_60:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-1.c'
    sources:
      binary: abort-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional")[^\n]*\n?)+'
test_abort-1_61:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-1.c'
    sources:
      binary: abort-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional")[^\n]*\n?)+'
test_abort-2_134:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-2.c'
    sources:
      binary: abort-2.s
  group: GRPSERIAL
test_abort-2_166:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-2.c'
    sources:
      binary: abort-2.s
  group: GRPSERIAL
test_abort-2_167:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-2.c'
    sources:
      binary: abort-2.s
  group: GRPSERIAL
test_abort-2_168:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-2.c'
    sources:
      binary: abort-2.s
  group: GRPSERIAL
test_abort-2_30:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-2.c'
    sources:
      binary: abort-2.s
  group: GRPSERIAL
test_abort-2_4:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-2.c'
    sources:
      binary: abort-2.s
  group: GRPSERIAL
test_abort-2_62:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-2.c'
    sources:
      binary: abort-2.s
  group: GRPSERIAL
test_abort-2_63:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-2.c'
    sources:
      binary: abort-2.s
  group: GRPSERIAL
test_abort-2_64:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-2.c'
    sources:
      binary: abort-2.s
  group: GRPSERIAL
test_abort-3_135:
  build:
    cflags: "-ansi -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-3.c'
    sources:
      binary: abort-3.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("__transaction_atomic.
          without trans")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_cancel. without
          trans")[^\n]*\n?)+'
test_abort-3_169:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-3.c'
    sources:
      binary: abort-3.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("__transaction_atomic.
          without trans")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_cancel. without
          trans")[^\n]*\n?)+'
test_abort-3_170:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-3.c'
    sources:
      binary: abort-3.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("__transaction_atomic.
          without trans")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_cancel. without
          trans")[^\n]*\n?)+'
test_abort-3_171:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-3.c'
    sources:
      binary: abort-3.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("__transaction_atomic.
          without trans")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_cancel. without
          trans")[^\n]*\n?)+'
test_abort-3_31:
  build:
    cflags: "-ansi -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-3.c'
    sources:
      binary: abort-3.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("__transaction_atomic.
          without trans")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_cancel. without
          trans")[^\n]*\n?)+'
test_abort-3_5:
  build:
    cflags: "-ansi -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-3.c'
    sources:
      binary: abort-3.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("__transaction_atomic.
          without trans")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_cancel. without
          trans")[^\n]*\n?)+'
test_abort-3_65:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-3.c'
    sources:
      binary: abort-3.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("__transaction_atomic.
          without trans")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_cancel. without
          trans")[^\n]*\n?)+'
test_abort-3_66:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-3.c'
    sources:
      binary: abort-3.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("__transaction_atomic.
          without trans")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_cancel. without
          trans")[^\n]*\n?)+'
test_abort-3_67:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/abort-3.c'
    sources:
      binary: abort-3.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("__transaction_atomic.
          without trans")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_cancel. without
          trans")[^\n]*\n?)+'
test_atomic-1_136:
  build:
    cflags: "-ansi -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-1.c'
    sources:
      binary: atomic-1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional
          memory")[^\n]*\n?)+'
test_atomic-1_172:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-1.c'
    sources:
      binary: atomic-1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional
          memory")[^\n]*\n?)+'
test_atomic-1_173:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-1.c'
    sources:
      binary: atomic-1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional
          memory")[^\n]*\n?)+'
test_atomic-1_174:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-1.c'
    sources:
      binary: atomic-1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional
          memory")[^\n]*\n?)+'
test_atomic-1_32:
  build:
    cflags: "-ansi -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-1.c'
    sources:
      binary: atomic-1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional
          memory")[^\n]*\n?)+'
test_atomic-1_6:
  build:
    cflags: "-ansi -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-1.c'
    sources:
      binary: atomic-1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional
          memory")[^\n]*\n?)+'
test_atomic-1_68:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-1.c'
    sources:
      binary: atomic-1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional
          memory")[^\n]*\n?)+'
test_atomic-1_69:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-1.c'
    sources:
      binary: atomic-1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional
          memory")[^\n]*\n?)+'
test_atomic-1_70:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-1.c'
    sources:
      binary: atomic-1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without transactional
          memory")[^\n]*\n?)+'
test_atomic-2_137:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-2.c'
    sources:
      binary: atomic-2.s
  group: GRPSERIAL
test_atomic-2_175:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-2.c'
    sources:
      binary: atomic-2.s
  group: GRPSERIAL
test_atomic-2_176:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-2.c'
    sources:
      binary: atomic-2.s
  group: GRPSERIAL
test_atomic-2_177:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-2.c'
    sources:
      binary: atomic-2.s
  group: GRPSERIAL
test_atomic-2_33:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-2.c'
    sources:
      binary: atomic-2.s
  group: GRPSERIAL
test_atomic-2_7:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-2.c'
    sources:
      binary: atomic-2.s
  group: GRPSERIAL
test_atomic-2_71:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-2.c'
    sources:
      binary: atomic-2.s
  group: GRPSERIAL
test_atomic-2_72:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-2.c'
    sources:
      binary: atomic-2.s
  group: GRPSERIAL
test_atomic-2_73:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/atomic-2.c'
    sources:
      binary: atomic-2.s
  group: GRPSERIAL
test_attrib-1_138:
  build:
    cflags: "-fgnu-tm -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/attrib-1.c'
    sources:
      binary: attrib-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
test_attrib-1_178:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/attrib-1.c'
    sources:
      binary: attrib-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
test_attrib-1_179:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/attrib-1.c'
    sources:
      binary: attrib-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
test_attrib-1_180:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/attrib-1.c'
    sources:
      binary: attrib-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
test_attrib-1_34:
  build:
    cflags: "-fgnu-tm -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/attrib-1.c'
    sources:
      binary: attrib-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
test_attrib-1_74:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/attrib-1.c'
    sources:
      binary: attrib-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
test_attrib-1_75:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/attrib-1.c'
    sources:
      binary: attrib-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
test_attrib-1_76:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/attrib-1.c'
    sources:
      binary: attrib-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
test_attrib-1_8:
  build:
    cflags: "-fgnu-tm -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/attrib-1.c'
    sources:
      binary: attrib-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously declared")[^\n]*\n?)+'
test_cancel-1_139:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/cancel-1.c'
    sources:
      binary: cancel-1.s
  group: GRPSERIAL
test_cancel-1_181:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/cancel-1.c'
    sources:
      binary: cancel-1.s
  group: GRPSERIAL
test_cancel-1_182:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/cancel-1.c'
    sources:
      binary: cancel-1.s
  group: GRPSERIAL
test_cancel-1_183:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/cancel-1.c'
    sources:
      binary: cancel-1.s
  group: GRPSERIAL
test_cancel-1_35:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/cancel-1.c'
    sources:
      binary: cancel-1.s
  group: GRPSERIAL
test_cancel-1_77:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/cancel-1.c'
    sources:
      binary: cancel-1.s
  group: GRPSERIAL
test_cancel-1_78:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/cancel-1.c'
    sources:
      binary: cancel-1.s
  group: GRPSERIAL
test_cancel-1_79:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/cancel-1.c'
    sources:
      binary: cancel-1.s
  group: GRPSERIAL
test_cancel-1_9:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/cancel-1.c'
    sources:
      binary: cancel-1.s
  group: GRPSERIAL
test_freq_10:
  build:
    cflags: "-fgnu-tm -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/freq.c'
    sources:
      binary: freq.s
  group: GRPSERIAL
test_freq_140:
  build:
    cflags: "-fgnu-tm -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/freq.c'
    sources:
      binary: freq.s
  group: GRPSERIAL
test_freq_184:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/freq.c'
    sources:
      binary: freq.s
  group: GRPSERIAL
test_freq_185:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/freq.c'
    sources:
      binary: freq.s
  group: GRPSERIAL
test_freq_186:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/freq.c'
    sources:
      binary: freq.s
  group: GRPSERIAL
test_freq_36:
  build:
    cflags: "-fgnu-tm -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/freq.c'
    sources:
      binary: freq.s
  group: GRPSERIAL
test_freq_80:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/freq.c'
    sources:
      binary: freq.s
  group: GRPSERIAL
test_freq_81:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/freq.c'
    sources:
      binary: freq.s
  group: GRPSERIAL
test_freq_82:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/freq.c'
    sources:
      binary: freq.s
  group: GRPSERIAL
test_inline-asm-2_11:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm-2.c'
    sources:
      binary: inline-asm-2.s
  group: GRPSERIAL
test_inline-asm-2_141:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm-2.c'
    sources:
      binary: inline-asm-2.s
  group: GRPSERIAL
test_inline-asm-2_187:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm-2.c'
    sources:
      binary: inline-asm-2.s
  group: GRPSERIAL
test_inline-asm-2_188:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm-2.c'
    sources:
      binary: inline-asm-2.s
  group: GRPSERIAL
test_inline-asm-2_189:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm-2.c'
    sources:
      binary: inline-asm-2.s
  group: GRPSERIAL
test_inline-asm-2_37:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm-2.c'
    sources:
      binary: inline-asm-2.s
  group: GRPSERIAL
test_inline-asm-2_83:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm-2.c'
    sources:
      binary: inline-asm-2.s
  group: GRPSERIAL
test_inline-asm-2_84:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm-2.c'
    sources:
      binary: inline-asm-2.s
  group: GRPSERIAL
test_inline-asm-2_85:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm-2.c'
    sources:
      binary: inline-asm-2.s
  group: GRPSERIAL
test_inline-asm_12:
  build:
    cflags: "-fgnu-tm -O1\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm.c'
    sources:
      binary: inline-asm.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_inline-asm_142:
  build:
    cflags: "-fgnu-tm -O1\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm.c'
    sources:
      binary: inline-asm.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_inline-asm_190:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -O1\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm.c'
    sources:
      binary: inline-asm.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_inline-asm_191:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -O1\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm.c'
    sources:
      binary: inline-asm.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_inline-asm_192:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -O1\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm.c'
    sources:
      binary: inline-asm.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_inline-asm_38:
  build:
    cflags: "-fgnu-tm -O1\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm.c'
    sources:
      binary: inline-asm.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_inline-asm_86:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -O1\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm.c'
    sources:
      binary: inline-asm.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_inline-asm_87:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -O1\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm.c'
    sources:
      binary: inline-asm.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_inline-asm_88:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -O1\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/inline-asm.c'
    sources:
      binary: inline-asm.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_ipa-1_13:
  build:
    cflags: "-fgnu-tm -O -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/ipa-1.c'
    sources:
      binary: ipa-1.s
  group: GRPSERIAL
test_ipa-1_143:
  build:
    cflags: "-fgnu-tm -O -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/ipa-1.c'
    sources:
      binary: ipa-1.s
  group: GRPSERIAL
test_ipa-1_193:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -O -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/ipa-1.c'
    sources:
      binary: ipa-1.s
  group: GRPSERIAL
test_ipa-1_194:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -O -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/ipa-1.c'
    sources:
      binary: ipa-1.s
  group: GRPSERIAL
test_ipa-1_195:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -O -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/ipa-1.c'
    sources:
      binary: ipa-1.s
  group: GRPSERIAL
test_ipa-1_39:
  build:
    cflags: "-fgnu-tm -O -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/ipa-1.c'
    sources:
      binary: ipa-1.s
  group: GRPSERIAL
test_ipa-1_89:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -O -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/ipa-1.c'
    sources:
      binary: ipa-1.s
  group: GRPSERIAL
test_ipa-1_90:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -O -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/ipa-1.c'
    sources:
      binary: ipa-1.s
  group: GRPSERIAL
test_ipa-1_91:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -O -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/ipa-1.c'
    sources:
      binary: ipa-1.s
  group: GRPSERIAL
test_malloc_14:
  build:
    cflags: "-fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/malloc.c'
    sources:
      binary: malloc.s
  group: GRPSERIAL
test_malloc_144:
  build:
    cflags: "-fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/malloc.c'
    sources:
      binary: malloc.s
  group: GRPSERIAL
test_malloc_196:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/malloc.c'
    sources:
      binary: malloc.s
  group: GRPSERIAL
test_malloc_197:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/malloc.c'
    sources:
      binary: malloc.s
  group: GRPSERIAL
test_malloc_198:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/malloc.c'
    sources:
      binary: malloc.s
  group: GRPSERIAL
test_malloc_40:
  build:
    cflags: "-fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/malloc.c'
    sources:
      binary: malloc.s
  group: GRPSERIAL
test_malloc_92:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/malloc.c'
    sources:
      binary: malloc.s
  group: GRPSERIAL
test_malloc_93:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/malloc.c'
    sources:
      binary: malloc.s
  group: GRPSERIAL
test_malloc_94:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/malloc.c'
    sources:
      binary: malloc.s
  group: GRPSERIAL
test_memcpy-1_145:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/memcpy-1.c'
    sources:
      binary: memcpy-1.s
  group: GRPSERIAL
test_memcpy-1_15:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/memcpy-1.c'
    sources:
      binary: memcpy-1.s
  group: GRPSERIAL
test_memcpy-1_199:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/memcpy-1.c'
    sources:
      binary: memcpy-1.s
  group: GRPSERIAL
test_memcpy-1_200:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/memcpy-1.c'
    sources:
      binary: memcpy-1.s
  group: GRPSERIAL
test_memcpy-1_201:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/memcpy-1.c'
    sources:
      binary: memcpy-1.s
  group: GRPSERIAL
test_memcpy-1_41:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/memcpy-1.c'
    sources:
      binary: memcpy-1.s
  group: GRPSERIAL
test_memcpy-1_95:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/memcpy-1.c'
    sources:
      binary: memcpy-1.s
  group: GRPSERIAL
test_memcpy-1_96:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/memcpy-1.c'
    sources:
      binary: memcpy-1.s
  group: GRPSERIAL
test_memcpy-1_97:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/memcpy-1.c'
    sources:
      binary: memcpy-1.s
  group: GRPSERIAL
test_omp_100:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/omp.c'
    sources:
      binary: omp.s
  group: GRPSERIAL
test_omp_146:
  build:
    cflags: "-fgnu-tm -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/omp.c'
    sources:
      binary: omp.s
  group: GRPSERIAL
test_omp_16:
  build:
    cflags: "-fgnu-tm -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/omp.c'
    sources:
      binary: omp.s
  group: GRPSERIAL
test_omp_202:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/omp.c'
    sources:
      binary: omp.s
  group: GRPSERIAL
test_omp_203:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/omp.c'
    sources:
      binary: omp.s
  group: GRPSERIAL
test_omp_204:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/omp.c'
    sources:
      binary: omp.s
  group: GRPSERIAL
test_omp_42:
  build:
    cflags: "-fgnu-tm -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/omp.c'
    sources:
      binary: omp.s
  group: GRPSERIAL
test_omp_98:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/omp.c'
    sources:
      binary: omp.s
  group: GRPSERIAL
test_omp_99:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/omp.c'
    sources:
      binary: omp.s
  group: GRPSERIAL
test_outer-1_101:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/outer-1.c'
    sources:
      binary: outer-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_outer-1_102:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/outer-1.c'
    sources:
      binary: outer-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_outer-1_103:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/outer-1.c'
    sources:
      binary: outer-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_outer-1_147:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/outer-1.c'
    sources:
      binary: outer-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_outer-1_17:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/outer-1.c'
    sources:
      binary: outer-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_outer-1_205:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/outer-1.c'
    sources:
      binary: outer-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_outer-1_206:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/outer-1.c'
    sources:
      binary: outer-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_outer-1_207:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/outer-1.c'
    sources:
      binary: outer-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_outer-1_43:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/outer-1.c'
    sources:
      binary: outer-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_pr54893_104:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/pr54893.c'
    sources:
      binary: pr54893.s
  group: GRPSERIAL
test_pr54893_105:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/pr54893.c'
    sources:
      binary: pr54893.s
  group: GRPSERIAL
test_pr54893_106:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/pr54893.c'
    sources:
      binary: pr54893.s
  group: GRPSERIAL
test_pr54893_148:
  build:
    cflags: "-fgnu-tm -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/pr54893.c'
    sources:
      binary: pr54893.s
  group: GRPSERIAL
test_pr54893_18:
  build:
    cflags: "-fgnu-tm -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/pr54893.c'
    sources:
      binary: pr54893.s
  group: GRPSERIAL
test_pr54893_208:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/pr54893.c'
    sources:
      binary: pr54893.s
  group: GRPSERIAL
test_pr54893_209:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/pr54893.c'
    sources:
      binary: pr54893.s
  group: GRPSERIAL
test_pr54893_210:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/pr54893.c'
    sources:
      binary: pr54893.s
  group: GRPSERIAL
test_pr54893_44:
  build:
    cflags: "-fgnu-tm -fdump-ipa-tmipa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/pr54893.c'
    sources:
      binary: pr54893.s
  group: GRPSERIAL
test_safe-1_107:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-1.c'
    sources:
      binary: safe-1.s
  group: GRPSERIAL
  validate:
    match:
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_safe-1_108:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-1.c'
    sources:
      binary: safe-1.s
  group: GRPSERIAL
  validate:
    match:
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_safe-1_109:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-1.c'
    sources:
      binary: safe-1.s
  group: GRPSERIAL
  validate:
    match:
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_safe-1_149:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-1.c'
    sources:
      binary: safe-1.s
  group: GRPSERIAL
  validate:
    match:
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_safe-1_19:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-1.c'
    sources:
      binary: safe-1.s
  group: GRPSERIAL
  validate:
    match:
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_safe-1_211:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-1.c'
    sources:
      binary: safe-1.s
  group: GRPSERIAL
  validate:
    match:
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_safe-1_212:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-1.c'
    sources:
      binary: safe-1.s
  group: GRPSERIAL
  validate:
    match:
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_safe-1_213:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-1.c'
    sources:
      binary: safe-1.s
  group: GRPSERIAL
  validate:
    match:
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_safe-1_45:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-1.c'
    sources:
      binary: safe-1.s
  group: GRPSERIAL
  validate:
    match:
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe indirect
          function call")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("asm not allowed")[^\n]*\n?)+'
test_safe-2_110:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-2.c'
    sources:
      binary: safe-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_safe-2_111:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-2.c'
    sources:
      binary: safe-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_safe-2_112:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-2.c'
    sources:
      binary: safe-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_safe-2_150:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-2.c'
    sources:
      binary: safe-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_safe-2_20:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-2.c'
    sources:
      binary: safe-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_safe-2_214:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-2.c'
    sources:
      binary: safe-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_safe-2_215:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-2.c'
    sources:
      binary: safe-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_safe-2_216:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-2.c'
    sources:
      binary: safe-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_safe-2_46:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-2.c'
    sources:
      binary: safe-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_safe-3_113:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-3.c'
    sources:
      binary: safe-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
test_safe-3_114:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-3.c'
    sources:
      binary: safe-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
test_safe-3_115:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-3.c'
    sources:
      binary: safe-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
test_safe-3_151:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-3.c'
    sources:
      binary: safe-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
test_safe-3_21:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-3.c'
    sources:
      binary: safe-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
test_safe-3_217:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-3.c'
    sources:
      binary: safe-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
test_safe-3_218:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-3.c'
    sources:
      binary: safe-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
test_safe-3_219:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-3.c'
    sources:
      binary: safe-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
test_safe-3_47:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/safe-3.c'
    sources:
      binary: safe-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsafe function
          call")[^\n]*\n?)+'
test_trxn-expr-2_116:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-2.c'
    sources:
      binary: trxn-expr-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_trxn-expr-2_117:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-2.c'
    sources:
      binary: trxn-expr-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_trxn-expr-2_118:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-2.c'
    sources:
      binary: trxn-expr-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_trxn-expr-2_152:
  build:
    cflags: -S
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-2.c'
    sources:
      binary: trxn-expr-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_trxn-expr-2_22:
  build:
    cflags: -S
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-2.c'
    sources:
      binary: trxn-expr-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_trxn-expr-2_220:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-2.c'
    sources:
      binary: trxn-expr-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_trxn-expr-2_221:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-2.c'
    sources:
      binary: trxn-expr-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_trxn-expr-2_222:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-2.c'
    sources:
      binary: trxn-expr-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_trxn-expr-2_48:
  build:
    cflags: -S
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-2.c'
    sources:
      binary: trxn-expr-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_trxn-expr-3_119:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-3.c'
    sources:
      binary: trxn-expr-3.s
  group: GRPSERIAL
test_trxn-expr-3_120:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-3.c'
    sources:
      binary: trxn-expr-3.s
  group: GRPSERIAL
test_trxn-expr-3_121:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-3.c'
    sources:
      binary: trxn-expr-3.s
  group: GRPSERIAL
test_trxn-expr-3_153:
  build:
    cflags: "-fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-3.c'
    sources:
      binary: trxn-expr-3.s
  group: GRPSERIAL
test_trxn-expr-3_223:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-3.c'
    sources:
      binary: trxn-expr-3.s
  group: GRPSERIAL
test_trxn-expr-3_224:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-3.c'
    sources:
      binary: trxn-expr-3.s
  group: GRPSERIAL
test_trxn-expr-3_225:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-3.c'
    sources:
      binary: trxn-expr-3.s
  group: GRPSERIAL
test_trxn-expr-3_23:
  build:
    cflags: "-fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-3.c'
    sources:
      binary: trxn-expr-3.s
  group: GRPSERIAL
test_trxn-expr-3_49:
  build:
    cflags: "-fgnu-tm -O -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr-3.c'
    sources:
      binary: trxn-expr-3.s
  group: GRPSERIAL
test_trxn-expr_122:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr.c'
    sources:
      binary: trxn-expr.s
  group: GRPSERIAL
test_trxn-expr_123:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr.c'
    sources:
      binary: trxn-expr.s
  group: GRPSERIAL
test_trxn-expr_124:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr.c'
    sources:
      binary: trxn-expr.s
  group: GRPSERIAL
test_trxn-expr_154:
  build:
    cflags: "-fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr.c'
    sources:
      binary: trxn-expr.s
  group: GRPSERIAL
test_trxn-expr_226:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr.c'
    sources:
      binary: trxn-expr.s
  group: GRPSERIAL
test_trxn-expr_227:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr.c'
    sources:
      binary: trxn-expr.s
  group: GRPSERIAL
test_trxn-expr_228:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr.c'
    sources:
      binary: trxn-expr.s
  group: GRPSERIAL
test_trxn-expr_24:
  build:
    cflags: "-fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr.c'
    sources:
      binary: trxn-expr.s
  group: GRPSERIAL
test_trxn-expr_50:
  build:
    cflags: "-fgnu-tm -fdump-tree-tmmark\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/trxn-expr.c'
    sources:
      binary: trxn-expr.s
  group: GRPSERIAL
test_volatile-1_125:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/volatile-1.c'
    sources:
      binary: volatile-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("volatile")[^\n]*\n?)+'
test_volatile-1_126:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/volatile-1.c'
    sources:
      binary: volatile-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("volatile")[^\n]*\n?)+'
test_volatile-1_127:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/volatile-1.c'
    sources:
      binary: volatile-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("volatile")[^\n]*\n?)+'
test_volatile-1_155:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/volatile-1.c'
    sources:
      binary: volatile-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("volatile")[^\n]*\n?)+'
test_volatile-1_229:
  build:
    cflags: "-std=gnu++98 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/volatile-1.c'
    sources:
      binary: volatile-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("volatile")[^\n]*\n?)+'
test_volatile-1_230:
  build:
    cflags: "-std=gnu++11 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/volatile-1.c'
    sources:
      binary: volatile-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("volatile")[^\n]*\n?)+'
test_volatile-1_231:
  build:
    cflags: "-std=gnu++14 -fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/volatile-1.c'
    sources:
      binary: volatile-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("volatile")[^\n]*\n?)+'
test_volatile-1_25:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/volatile-1.c'
    sources:
      binary: volatile-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("volatile")[^\n]*\n?)+'
test_volatile-1_51:
  build:
    cflags: "-fgnu-tm\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/volatile-1.c'
    sources:
      binary: volatile-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("volatile")[^\n]*\n?)+'
test_wrap-1_128:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/wrap-1.c'
    sources:
      binary: wrap-1.s
  group: GRPSERIAL
test_wrap-1_129:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/wrap-1.c'
    sources:
      binary: wrap-1.s
  group: GRPSERIAL
test_wrap-1_130:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/wrap-1.c'
    sources:
      binary: wrap-1.s
  group: GRPSERIAL
test_wrap-1_156:
  build:
    cflags: "-fgnu-tm -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/wrap-1.c'
    sources:
      binary: wrap-1.s
  group: GRPSERIAL
test_wrap-1_232:
  build:
    cflags: "-std=gnu++98 -fgnu-tm -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/wrap-1.c'
    sources:
      binary: wrap-1.s
  group: GRPSERIAL
test_wrap-1_233:
  build:
    cflags: "-std=gnu++11 -fgnu-tm -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/wrap-1.c'
    sources:
      binary: wrap-1.s
  group: GRPSERIAL
test_wrap-1_234:
  build:
    cflags: "-std=gnu++14 -fgnu-tm -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/wrap-1.c'
    sources:
      binary: wrap-1.s
  group: GRPSERIAL
test_wrap-1_26:
  build:
    cflags: "-fgnu-tm -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/wrap-1.c'
    sources:
      binary: wrap-1.s
  group: GRPSERIAL
test_wrap-1_52:
  build:
    cflags: "-fgnu-tm -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./c-c++-common/tm/wrap-1.c'
    sources:
      binary: wrap-1.s
  group: GRPSERIAL
