test_access1_1:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/access1.C'
    sources: {binary: access1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inaccessible
          base")[^\n]*\n?)+'}
test_access1_2:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/access1.C'
    sources: {binary: access1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inaccessible
          base")[^\n]*\n?)+'}
test_access1_207:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/access1.C'
    sources: {binary: access1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inaccessible
          base")[^\n]*\n?)+'}
test_access1_208:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/access1.C'
    sources: {binary: access1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inaccessible
          base")[^\n]*\n?)+'}
test_access1_209:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/access1.C'
    sources: {binary: access1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inaccessible
          base")[^\n]*\n?)+'}
test_access1_3:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/access1.C'
    sources: {binary: access1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inaccessible
          base")[^\n]*\n?)+'}
test_ambig1_210:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig1.C'
    sources: {binary: ambig1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_ambig1_211:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig1.C'
    sources: {binary: ambig1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_ambig1_212:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig1.C'
    sources: {binary: ambig1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_ambig1_4:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig1.C'
    sources: {binary: ambig1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_ambig1_5:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig1.C'
    sources: {binary: ambig1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_ambig1_6:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig1.C'
    sources: {binary: ambig1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_ambig2_213:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig2.C'
    sources: {binary: ambig2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_ambig2_214:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig2.C'
    sources: {binary: ambig2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_ambig2_215:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig2.C'
    sources: {binary: ambig2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_ambig2_7:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig2.C'
    sources: {binary: ambig2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_ambig2_8:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig2.C'
    sources: {binary: ambig2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_ambig2_9:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig2.C'
    sources: {binary: ambig2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_ambig3_10:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig3.C'
    sources: {binary: ambig3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          ambiguous")[^\n]*\n?)+'}
test_ambig3_11:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig3.C'
    sources: {binary: ambig3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          ambiguous")[^\n]*\n?)+'}
test_ambig3_12:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig3.C'
    sources: {binary: ambig3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          ambiguous")[^\n]*\n?)+'}
test_ambig3_216:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig3.C'
    sources: {binary: ambig3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          ambiguous")[^\n]*\n?)+'}
test_ambig3_217:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig3.C'
    sources: {binary: ambig3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          ambiguous")[^\n]*\n?)+'}
test_ambig3_218:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ambig3.C'
    sources: {binary: ambig3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          ambiguous")[^\n]*\n?)+'}
test_base1_13:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/base1.C'
    sources: {binary: base1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_base1_14:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/base1.C'
    sources: {binary: base1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_base1_15:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/base1.C'
    sources: {binary: base1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_base1_219:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/base1.C'
    sources: {binary: base1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_base1_220:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/base1.C'
    sources: {binary: base1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_base1_221:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/base1.C'
    sources: {binary: base1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield10_19:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield10.C'
    sources: {binary: bitfield10.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield10_20:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield10.C'
    sources: {binary: bitfield10.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield10_21:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield10.C'
    sources: {binary: bitfield10.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield10_225:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield10.C'
    sources: {binary: bitfield10.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield10_226:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield10.C'
    sources: {binary: bitfield10.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield10_227:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield10.C'
    sources: {binary: bitfield10.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield11_22:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield11.C'
    sources: {binary: bitfield11.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_bitfield11_228:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield11.C'
    sources: {binary: bitfield11.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_bitfield11_229:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield11.C'
    sources: {binary: bitfield11.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_bitfield11_23:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield11.C'
    sources: {binary: bitfield11.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_bitfield11_230:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield11.C'
    sources: {binary: bitfield11.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_bitfield11_24:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield11.C'
    sources: {binary: bitfield11.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_bitfield1_16:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield1.C'
    sources: {binary: ./bitfield1.exe, cflags: -std=gnu++98 -w}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield1_17:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield1.C'
    sources: {binary: ./bitfield1.exe, cflags: -std=gnu++11 -w}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield1_18:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield1.C'
    sources: {binary: ./bitfield1.exe, cflags: -std=gnu++14 -w}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield1_222:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield1.C'
    sources: {binary: ./bitfield1.exe, cflags: -std=gnu++98 -w}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield1_223:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield1.C'
    sources: {binary: ./bitfield1.exe, cflags: -std=gnu++11 -w}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield1_224:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield1.C'
    sources: {binary: ./bitfield1.exe, cflags: -std=gnu++14 -w}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield2_231:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield2.C'
    sources: {binary: bitfield2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield2_232:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield2.C'
    sources: {binary: bitfield2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield2_233:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield2.C'
    sources: {binary: bitfield2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield2_25:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield2.C'
    sources: {binary: bitfield2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield2_26:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield2.C'
    sources: {binary: bitfield2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield2_27:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield2.C'
    sources: {binary: bitfield2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield3_234:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield3.C'
    sources: {binary: ./bitfield3.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield3_235:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield3.C'
    sources: {binary: ./bitfield3.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield3_236:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield3.C'
    sources: {binary: ./bitfield3.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield3_28:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield3.C'
    sources: {binary: ./bitfield3.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield3_29:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield3.C'
    sources: {binary: ./bitfield3.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield3_30:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield3.C'
    sources: {binary: ./bitfield3.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield4_237:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield4.C'
    sources: {binary: bitfield4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield4_238:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield4.C'
    sources: {binary: bitfield4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield4_239:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield4.C'
    sources: {binary: bitfield4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield4_31:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield4.C'
    sources: {binary: bitfield4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield4_32:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield4.C'
    sources: {binary: bitfield4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield4_33:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield4.C'
    sources: {binary: bitfield4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield5_240:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield5.C'
    sources: {binary: bitfield5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield5_241:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield5.C'
    sources: {binary: bitfield5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield5_242:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield5.C'
    sources: {binary: bitfield5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield5_34:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield5.C'
    sources: {binary: bitfield5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield5_35:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield5.C'
    sources: {binary: bitfield5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield5_36:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield5.C'
    sources: {binary: bitfield5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield6_243:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield6.C'
    sources: {binary: bitfield6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield6_244:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield6.C'
    sources: {binary: bitfield6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield6_245:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield6.C'
    sources: {binary: bitfield6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield6_37:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield6.C'
    sources: {binary: bitfield6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield6_38:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield6.C'
    sources: {binary: bitfield6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield6_39:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield6.C'
    sources: {binary: bitfield6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield7_246:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield7.C'
    sources: {binary: bitfield7.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind bitfield")[^\n]*\n?)+'}
test_bitfield7_247:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield7.C'
    sources: {binary: bitfield7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind bitfield")[^\n]*\n?)+'}
test_bitfield7_248:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield7.C'
    sources: {binary: bitfield7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind bitfield")[^\n]*\n?)+'}
test_bitfield7_40:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield7.C'
    sources: {binary: bitfield7.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind bitfield")[^\n]*\n?)+'}
test_bitfield7_41:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield7.C'
    sources: {binary: bitfield7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind bitfield")[^\n]*\n?)+'}
test_bitfield7_42:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield7.C'
    sources: {binary: bitfield7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind bitfield")[^\n]*\n?)+'}
test_bitfield8_249:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield8.C'
    sources: {binary: bitfield8.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
test_bitfield8_250:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield8.C'
    sources: {binary: bitfield8.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
test_bitfield8_251:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield8.C'
    sources: {binary: bitfield8.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
test_bitfield8_43:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield8.C'
    sources: {binary: bitfield8.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
test_bitfield8_44:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield8.C'
    sources: {binary: bitfield8.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
test_bitfield8_45:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield8.C'
    sources: {binary: bitfield8.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
test_bitfield9_252:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield9.C'
    sources: {binary: bitfield9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield9_253:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield9.C'
    sources: {binary: bitfield9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield9_254:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield9.C'
    sources: {binary: bitfield9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield9_46:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield9.C'
    sources: {binary: bitfield9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield9_47:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield9.C'
    sources: {binary: bitfield9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_bitfield9_48:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/bitfield9.C'
    sources: {binary: bitfield9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cast1_255:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast1.C'
    sources: {binary: cast1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cast1_256:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast1.C'
    sources: {binary: cast1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cast1_257:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast1.C'
    sources: {binary: cast1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cast1_49:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast1.C'
    sources: {binary: cast1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cast1_50:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast1.C'
    sources: {binary: cast1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cast1_51:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast1.C'
    sources: {binary: cast1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cast2_258:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast2.C'
    sources: {binary: cast2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          match")[^\n]*\n?)+'}
test_cast2_259:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast2.C'
    sources: {binary: cast2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          match")[^\n]*\n?)+'}
test_cast2_260:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast2.C'
    sources: {binary: cast2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          match")[^\n]*\n?)+'}
test_cast2_52:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast2.C'
    sources: {binary: cast2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          match")[^\n]*\n?)+'}
test_cast2_53:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast2.C'
    sources: {binary: cast2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          match")[^\n]*\n?)+'}
test_cast2_54:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast2.C'
    sources: {binary: cast2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          match")[^\n]*\n?)+'}
test_cast3_261:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast3.C'
    sources: {binary: cast3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cast3_262:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast3.C'
    sources: {binary: cast3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cast3_263:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast3.C'
    sources: {binary: cast3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cast3_55:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast3.C'
    sources: {binary: cast3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cast3_56:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast3.C'
    sources: {binary: cast3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cast3_57:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cast3.C'
    sources: {binary: cast3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond1_264:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond1.C'
    sources: {binary: cond1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond1_265:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond1.C'
    sources: {binary: cond1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond1_266:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond1.C'
    sources: {binary: cond1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond1_58:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond1.C'
    sources: {binary: cond1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond1_59:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond1.C'
    sources: {binary: cond1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond1_60:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond1.C'
    sources: {binary: cond1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond2_267:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond2.C'
    sources: {binary: cond2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond2_268:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond2.C'
    sources: {binary: cond2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond2_269:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond2.C'
    sources: {binary: cond2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond2_61:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond2.C'
    sources: {binary: cond2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond2_62:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond2.C'
    sources: {binary: cond2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond2_63:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond2.C'
    sources: {binary: cond2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond3_270:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond3.C'
    sources: {binary: cond3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond3_271:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond3.C'
    sources: {binary: cond3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond3_272:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond3.C'
    sources: {binary: cond3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond3_64:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond3.C'
    sources: {binary: cond3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond3_65:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond3.C'
    sources: {binary: cond3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond3_66:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond3.C'
    sources: {binary: cond3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond4_273:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond4.C'
    sources: {binary: ./cond4.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_cond4_274:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond4.C'
    sources: {binary: ./cond4.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_cond4_275:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond4.C'
    sources: {binary: ./cond4.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_cond4_67:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond4.C'
    sources: {binary: ./cond4.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_cond4_68:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond4.C'
    sources: {binary: ./cond4.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_cond4_69:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond4.C'
    sources: {binary: ./cond4.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_cond6_276:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond6.C'
    sources: {binary: cond6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond6_277:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond6.C'
    sources: {binary: cond6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond6_278:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond6.C'
    sources: {binary: cond6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond6_70:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond6.C'
    sources: {binary: cond6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond6_71:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond6.C'
    sources: {binary: cond6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_cond6_72:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/cond6.C'
    sources: {binary: cond6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_const1_279:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const1.C'
    sources: {binary: const1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const1_280:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const1.C'
    sources: {binary: const1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const1_281:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const1.C'
    sources: {binary: const1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const1_73:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const1.C'
    sources: {binary: const1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const1_74:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const1.C'
    sources: {binary: const1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const1_75:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const1.C'
    sources: {binary: const1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const2_282:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const2.C'
    sources: {binary: const2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const2_283:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const2.C'
    sources: {binary: const2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const2_284:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const2.C'
    sources: {binary: const2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const2_76:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const2.C'
    sources: {binary: const2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const2_77:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const2.C'
    sources: {binary: const2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const2_78:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const2.C'
    sources: {binary: const2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const3_285:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const3.C'
    sources: {binary: const3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const3_286:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const3.C'
    sources: {binary: const3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const3_287:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const3.C'
    sources: {binary: const3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const3_79:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const3.C'
    sources: {binary: const3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const3_80:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const3.C'
    sources: {binary: const3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_const3_81:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/const3.C'
    sources: {binary: const3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_dr195-1_288:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dr195-1.C'
    sources: {binary: dr195-1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_dr195-1_289:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dr195-1.C'
    sources: {binary: dr195-1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_dr195-1_290:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dr195-1.C'
    sources: {binary: dr195-1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_dr195-1_82:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dr195-1.C'
    sources: {binary: dr195-1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_dr195-1_83:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dr195-1.C'
    sources: {binary: dr195-1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_dr195-1_84:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dr195-1.C'
    sources: {binary: dr195-1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_dr195_291:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dr195.C'
    sources: {binary: dr195.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_dr195_292:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dr195.C'
    sources: {binary: dr195.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_dr195_293:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dr195.C'
    sources: {binary: dr195.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_dr195_85:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dr195.C'
    sources: {binary: dr195.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_dr195_86:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dr195.C'
    sources: {binary: dr195.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_dr195_87:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dr195.C'
    sources: {binary: dr195.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_dynamic1_294:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dynamic1.C'
    sources: {binary: dynamic1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          dynamic_cast")[^\n]*\n?)+'}
test_dynamic1_295:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dynamic1.C'
    sources: {binary: dynamic1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          dynamic_cast")[^\n]*\n?)+'}
test_dynamic1_296:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dynamic1.C'
    sources: {binary: dynamic1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          dynamic_cast")[^\n]*\n?)+'}
test_dynamic1_88:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dynamic1.C'
    sources: {binary: dynamic1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          dynamic_cast")[^\n]*\n?)+'}
test_dynamic1_89:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dynamic1.C'
    sources: {binary: dynamic1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          dynamic_cast")[^\n]*\n?)+'}
test_dynamic1_90:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/dynamic1.C'
    sources: {binary: dynamic1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          dynamic_cast")[^\n]*\n?)+'}
test_enum1_297:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/enum1.C'
    sources: {binary: ./enum1.exe, cflags: -std=gnu++98 -O2 -finline-functions}
  group: GRPSERIAL
  run: {cwd: .}
test_enum1_298:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/enum1.C'
    sources: {binary: ./enum1.exe, cflags: -std=gnu++11 -O2 -finline-functions}
  group: GRPSERIAL
  run: {cwd: .}
test_enum1_299:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/enum1.C'
    sources: {binary: ./enum1.exe, cflags: -std=gnu++14 -O2 -finline-functions}
  group: GRPSERIAL
  run: {cwd: .}
test_enum1_91:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/enum1.C'
    sources: {binary: ./enum1.exe, cflags: -std=gnu++98 -O2 -finline-functions}
  group: GRPSERIAL
  run: {cwd: .}
test_enum1_92:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/enum1.C'
    sources: {binary: ./enum1.exe, cflags: -std=gnu++11 -O2 -finline-functions}
  group: GRPSERIAL
  run: {cwd: .}
test_enum1_93:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/enum1.C'
    sources: {binary: ./enum1.exe, cflags: -std=gnu++14 -O2 -finline-functions}
  group: GRPSERIAL
  run: {cwd: .}
test_err-recover1_300:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/err-recover1.C'
    sources: {binary: err-recover1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of cv-qualified")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_err-recover1_301:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/err-recover1.C'
    sources: {binary: err-recover1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of cv-qualified")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_err-recover1_302:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/err-recover1.C'
    sources: {binary: err-recover1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of cv-qualified")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_err-recover1_94:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/err-recover1.C'
    sources: {binary: err-recover1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of cv-qualified")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_err-recover1_95:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/err-recover1.C'
    sources: {binary: err-recover1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of cv-qualified")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_err-recover1_96:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/err-recover1.C'
    sources: {binary: err-recover1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of cv-qualified")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_memfn1_303:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/memfn1.C'
    sources: {binary: memfn1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_memfn1_304:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/memfn1.C'
    sources: {binary: memfn1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_memfn1_305:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/memfn1.C'
    sources: {binary: memfn1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_memfn1_97:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/memfn1.C'
    sources: {binary: memfn1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_memfn1_98:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/memfn1.C'
    sources: {binary: memfn1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_memfn1_99:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/memfn1.C'
    sources: {binary: memfn1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_memfn2_100:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/memfn2.C'
    sources: {binary: memfn2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of member")[^\n]*\n?)+'}
test_memfn2_101:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/memfn2.C'
    sources: {binary: memfn2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of member")[^\n]*\n?)+'}
test_memfn2_102:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/memfn2.C'
    sources: {binary: memfn2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of member")[^\n]*\n?)+'}
test_memfn2_306:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/memfn2.C'
    sources: {binary: memfn2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of member")[^\n]*\n?)+'}
test_memfn2_307:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/memfn2.C'
    sources: {binary: memfn2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of member")[^\n]*\n?)+'}
test_memfn2_308:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/memfn2.C'
    sources: {binary: memfn2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of member")[^\n]*\n?)+'}
test_nullptr1_103:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/nullptr1.C'
    sources: {binary: nullptr1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_nullptr1_104:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/nullptr1.C'
    sources: {binary: nullptr1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_nullptr1_105:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/nullptr1.C'
    sources: {binary: nullptr1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_nullptr1_309:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/nullptr1.C'
    sources: {binary: nullptr1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_nullptr1_310:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/nullptr1.C'
    sources: {binary: nullptr1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_nullptr1_311:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/nullptr1.C'
    sources: {binary: nullptr1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_nullptr2_106:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/nullptr2.C'
    sources: {binary: nullptr2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_nullptr2_107:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/nullptr2.C'
    sources: {binary: nullptr2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_nullptr2_108:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/nullptr2.C'
    sources: {binary: nullptr2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_nullptr2_312:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/nullptr2.C'
    sources: {binary: nullptr2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_nullptr2_313:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/nullptr2.C'
    sources: {binary: nullptr2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_nullptr2_314:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/nullptr2.C'
    sources: {binary: nullptr2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_op1_109:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op1.C'
    sources: {binary: op1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operator
          float.C")[^\n]*\n?)+'}
test_op1_110:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op1.C'
    sources: {binary: op1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operator
          float.C")[^\n]*\n?)+'}
test_op1_111:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op1.C'
    sources: {binary: op1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operator
          float.C")[^\n]*\n?)+'}
test_op1_315:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op1.C'
    sources: {binary: op1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operator
          float.C")[^\n]*\n?)+'}
test_op1_316:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op1.C'
    sources: {binary: op1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operator
          float.C")[^\n]*\n?)+'}
test_op1_317:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op1.C'
    sources: {binary: op1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operator
          float.C")[^\n]*\n?)+'}
test_op2_112:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op2.C'
    sources: {binary: op2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_op2_113:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op2.C'
    sources: {binary: op2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_op2_114:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op2.C'
    sources: {binary: op2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_op2_318:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op2.C'
    sources: {binary: op2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_op2_319:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op2.C'
    sources: {binary: op2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_op2_320:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op2.C'
    sources: {binary: op2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_op3_115:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op3.C'
    sources: {binary: op3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("return
          type specified")[^\n]*\n?)+'}
test_op3_116:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op3.C'
    sources: {binary: op3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("return
          type specified")[^\n]*\n?)+'}
test_op3_117:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op3.C'
    sources: {binary: op3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("return
          type specified")[^\n]*\n?)+'}
test_op3_321:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op3.C'
    sources: {binary: op3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("return
          type specified")[^\n]*\n?)+'}
test_op3_322:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op3.C'
    sources: {binary: op3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("return
          type specified")[^\n]*\n?)+'}
test_op3_323:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op3.C'
    sources: {binary: op3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("return
          type specified")[^\n]*\n?)+'}
test_op4_118:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op4.C'
    sources: {binary: op4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("discards
          qualifiers")[^\n]*\n?)+'}
test_op4_119:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op4.C'
    sources: {binary: op4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("discards
          qualifiers")[^\n]*\n?)+'}
test_op4_120:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op4.C'
    sources: {binary: op4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("discards
          qualifiers")[^\n]*\n?)+'}
test_op4_324:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op4.C'
    sources: {binary: op4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("discards
          qualifiers")[^\n]*\n?)+'}
test_op4_325:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op4.C'
    sources: {binary: op4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("discards
          qualifiers")[^\n]*\n?)+'}
test_op4_326:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op4.C'
    sources: {binary: op4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("discards
          qualifiers")[^\n]*\n?)+'}
test_op5_121:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op5.C'
    sources: {binary: op5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const
          B")[^\n]*\n?)+'}
test_op5_122:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op5.C'
    sources: {binary: op5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const
          B")[^\n]*\n?)+'}
test_op5_123:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op5.C'
    sources: {binary: op5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const
          B")[^\n]*\n?)+'}
test_op5_327:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op5.C'
    sources: {binary: op5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const
          B")[^\n]*\n?)+'}
test_op5_328:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op5.C'
    sources: {binary: op5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const
          B")[^\n]*\n?)+'}
test_op5_329:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op5.C'
    sources: {binary: op5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const
          B")[^\n]*\n?)+'}
test_op6_124:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op6.C'
    sources: {binary: op6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_op6_125:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op6.C'
    sources: {binary: op6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_op6_126:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op6.C'
    sources: {binary: op6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_op6_330:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op6.C'
    sources: {binary: op6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_op6_331:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op6.C'
    sources: {binary: op6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_op6_332:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/op6.C'
    sources: {binary: op6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr16333_127:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr16333.C'
    sources: {binary: pr16333.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind non-const lvalue ref")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
test_pr16333_128:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr16333.C'
    sources: {binary: pr16333.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind non-const lvalue ref")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
test_pr16333_129:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr16333.C'
    sources: {binary: pr16333.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind non-const lvalue ref")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
test_pr16333_333:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr16333.C'
    sources: {binary: pr16333.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind non-const lvalue ref")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
test_pr16333_334:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr16333.C'
    sources: {binary: pr16333.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind non-const lvalue ref")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
test_pr16333_335:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr16333.C'
    sources: {binary: pr16333.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind non-const lvalue ref")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
test_pr41426_130:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr41426.C'
    sources: {binary: pr41426.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind non-const lvalue ref")[^\n]*\n?)+'}
test_pr41426_131:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr41426.C'
    sources: {binary: pr41426.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind non-const lvalue ref")[^\n]*\n?)+'}
test_pr41426_132:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr41426.C'
    sources: {binary: pr41426.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind non-const lvalue ref")[^\n]*\n?)+'}
test_pr41426_336:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr41426.C'
    sources: {binary: pr41426.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind non-const lvalue ref")[^\n]*\n?)+'}
test_pr41426_337:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr41426.C'
    sources: {binary: pr41426.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind non-const lvalue ref")[^\n]*\n?)+'}
test_pr41426_338:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr41426.C'
    sources: {binary: pr41426.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind non-const lvalue ref")[^\n]*\n?)+'}
test_pr59879_133:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr59879.C'
    sources: {binary: pr59879.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr59879_134:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr59879.C'
    sources: {binary: pr59879.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr59879_135:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr59879.C'
    sources: {binary: pr59879.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr59879_339:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr59879.C'
    sources: {binary: pr59879.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr59879_340:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr59879.C'
    sources: {binary: pr59879.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr59879_341:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr59879.C'
    sources: {binary: pr59879.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr66211_136:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr66211.C'
    sources: {binary: pr66211.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind .* to an rvalue")[^\n]*\n?)+'}
test_pr66211_137:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr66211.C'
    sources: {binary: pr66211.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind .* to an rvalue")[^\n]*\n?)+'}
test_pr66211_138:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr66211.C'
    sources: {binary: pr66211.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind .* to an rvalue")[^\n]*\n?)+'}
test_pr66211_342:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr66211.C'
    sources: {binary: pr66211.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind .* to an rvalue")[^\n]*\n?)+'}
test_pr66211_343:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr66211.C'
    sources: {binary: pr66211.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind .* to an rvalue")[^\n]*\n?)+'}
test_pr66211_344:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr66211.C'
    sources: {binary: pr66211.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind .* to an rvalue")[^\n]*\n?)+'}
test_pr66895_139:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr66895.C'
    sources: {binary: pr66895.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr66895_140:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr66895.C'
    sources: {binary: pr66895.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr66895_345:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr66895.C'
    sources: {binary: pr66895.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr66895_346:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/pr66895.C'
    sources: {binary: pr66895.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_ptrmem1_141:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem1.C'
    sources: {binary: ptrmem1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_ptrmem1_142:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem1.C'
    sources: {binary: ptrmem1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_ptrmem1_143:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem1.C'
    sources: {binary: ptrmem1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_ptrmem1_347:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem1.C'
    sources: {binary: ptrmem1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_ptrmem1_348:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem1.C'
    sources: {binary: ptrmem1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_ptrmem1_349:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem1.C'
    sources: {binary: ptrmem1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_ptrmem2_144:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem2.C'
    sources: {binary: ptrmem2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("casts
          away qualifiers")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("casts
          away qualifiers")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem2_145:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem2.C'
    sources: {binary: ptrmem2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("casts
          away qualifiers")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("casts
          away qualifiers")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem2_146:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem2.C'
    sources: {binary: ptrmem2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("casts
          away qualifiers")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("casts
          away qualifiers")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem2_350:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem2.C'
    sources: {binary: ptrmem2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("casts
          away qualifiers")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("casts
          away qualifiers")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem2_351:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem2.C'
    sources: {binary: ptrmem2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("casts
          away qualifiers")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("casts
          away qualifiers")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem2_352:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem2.C'
    sources: {binary: ptrmem2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("casts
          away qualifiers")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("casts
          away qualifiers")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem3_147:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem3.C'
    sources: {binary: ptrmem3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem3_148:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem3.C'
    sources: {binary: ptrmem3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem3_149:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem3.C'
    sources: {binary: ptrmem3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem3_353:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem3.C'
    sources: {binary: ptrmem3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem3_354:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem3.C'
    sources: {binary: ptrmem3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem3_355:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem3.C'
    sources: {binary: ptrmem3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem4_150:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem4.C'
    sources: {binary: ptrmem4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem4_151:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem4.C'
    sources: {binary: ptrmem4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem4_152:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem4.C'
    sources: {binary: ptrmem4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem4_356:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem4.C'
    sources: {binary: ptrmem4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem4_357:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem4.C'
    sources: {binary: ptrmem4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem4_358:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem4.C'
    sources: {binary: ptrmem4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem5_153:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem5.C'
    sources: {binary: ptrmem5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem5_154:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem5.C'
    sources: {binary: ptrmem5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem5_155:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem5.C'
    sources: {binary: ptrmem5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem5_359:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem5.C'
    sources: {binary: ptrmem5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem5_360:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem5.C'
    sources: {binary: ptrmem5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem5_361:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem5.C'
    sources: {binary: ptrmem5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem6_156:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem6.C'
    sources: {binary: ptrmem6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem6_157:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem6.C'
    sources: {binary: ptrmem6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem6_158:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem6.C'
    sources: {binary: ptrmem6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem6_362:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem6.C'
    sources: {binary: ptrmem6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem6_363:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem6.C'
    sources: {binary: ptrmem6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem6_364:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem6.C'
    sources: {binary: ptrmem6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem7_159:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem7.C'
    sources: {binary: ptrmem7.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem7_160:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem7.C'
    sources: {binary: ptrmem7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem7_161:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem7.C'
    sources: {binary: ptrmem7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem7_365:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem7.C'
    sources: {binary: ptrmem7.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem7_366:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem7.C'
    sources: {binary: ptrmem7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem7_367:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem7.C'
    sources: {binary: ptrmem7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_ptrmem8_162:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem8.C'
    sources: {binary: ./ptrmem8.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_ptrmem8_163:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem8.C'
    sources: {binary: ./ptrmem8.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_ptrmem8_164:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem8.C'
    sources: {binary: ./ptrmem8.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_ptrmem8_368:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem8.C'
    sources: {binary: ./ptrmem8.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_ptrmem8_369:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem8.C'
    sources: {binary: ./ptrmem8.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_ptrmem8_370:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem8.C'
    sources: {binary: ./ptrmem8.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_ptrmem9_165:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem9.C'
    sources: {binary: ptrmem9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison
          between distinct pointer-to-member types")[^\n]*\n?)+'}
test_ptrmem9_166:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem9.C'
    sources: {binary: ptrmem9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison
          between distinct pointer-to-member types")[^\n]*\n?)+'}
test_ptrmem9_167:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem9.C'
    sources: {binary: ptrmem9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison
          between distinct pointer-to-member types")[^\n]*\n?)+'}
test_ptrmem9_371:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem9.C'
    sources: {binary: ptrmem9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison
          between distinct pointer-to-member types")[^\n]*\n?)+'}
test_ptrmem9_372:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem9.C'
    sources: {binary: ptrmem9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison
          between distinct pointer-to-member types")[^\n]*\n?)+'}
test_ptrmem9_373:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ptrmem9.C'
    sources: {binary: ptrmem9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison
          between distinct pointer-to-member types")[^\n]*\n?)+'}
test_ref1_168:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ref1.C'
    sources: {binary: ref1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_ref1_169:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ref1.C'
    sources: {binary: ref1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_ref1_170:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ref1.C'
    sources: {binary: ref1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_ref1_374:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ref1.C'
    sources: {binary: ref1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_ref1_375:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ref1.C'
    sources: {binary: ref1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_ref1_376:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/ref1.C'
    sources: {binary: ref1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_reinterpret1_171:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret1.C'
    sources: {binary: reinterpret1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_reinterpret1_172:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret1.C'
    sources: {binary: reinterpret1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_reinterpret1_173:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret1.C'
    sources: {binary: reinterpret1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_reinterpret1_377:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret1.C'
    sources: {binary: reinterpret1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_reinterpret1_378:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret1.C'
    sources: {binary: reinterpret1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_reinterpret1_379:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret1.C'
    sources: {binary: reinterpret1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_reinterpret2_174:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret2.C'
    sources: {binary: reinterpret2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_reinterpret2_175:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret2.C'
    sources: {binary: reinterpret2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_reinterpret2_176:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret2.C'
    sources: {binary: reinterpret2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_reinterpret2_380:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret2.C'
    sources: {binary: reinterpret2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_reinterpret2_381:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret2.C'
    sources: {binary: reinterpret2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_reinterpret2_382:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret2.C'
    sources: {binary: reinterpret2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_reinterpret3_177:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret3.C'
    sources: {binary: reinterpret3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_reinterpret3_178:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret3.C'
    sources: {binary: reinterpret3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_reinterpret3_179:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret3.C'
    sources: {binary: reinterpret3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_reinterpret3_383:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret3.C'
    sources: {binary: reinterpret3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_reinterpret3_384:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret3.C'
    sources: {binary: reinterpret3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_reinterpret3_385:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret3.C'
    sources: {binary: reinterpret3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_reinterpret4_180:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret4.C'
    sources: {binary: reinterpret4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_reinterpret4_181:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret4.C'
    sources: {binary: reinterpret4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_reinterpret4_182:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret4.C'
    sources: {binary: reinterpret4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_reinterpret4_386:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret4.C'
    sources: {binary: reinterpret4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_reinterpret4_387:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret4.C'
    sources: {binary: reinterpret4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_reinterpret4_388:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/reinterpret4.C'
    sources: {binary: reinterpret4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_self1_183:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/self1.C'
    sources: {binary: self1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_self1_184:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/self1.C'
    sources: {binary: self1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_self1_185:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/self1.C'
    sources: {binary: self1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_self1_389:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/self1.C'
    sources: {binary: self1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_self1_390:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/self1.C'
    sources: {binary: self1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_self1_391:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/self1.C'
    sources: {binary: self1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_simd1_186:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd1.C'
    sources: {binary: simd1.s, cflags: "-std=gnu++98 -msse2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matching function for call")[^\n]*\n?)+'}
test_simd1_187:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd1.C'
    sources: {binary: simd1.s, cflags: "-std=gnu++11 -msse2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matching function for call")[^\n]*\n?)+'}
test_simd1_188:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd1.C'
    sources: {binary: simd1.s, cflags: "-std=gnu++14 -msse2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matching function for call")[^\n]*\n?)+'}
test_simd1_392:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd1.C'
    sources: {binary: simd1.s, cflags: "-std=gnu++98 -msse2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matching function for call")[^\n]*\n?)+'}
test_simd1_393:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd1.C'
    sources: {binary: simd1.s, cflags: "-std=gnu++11 -msse2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matching function for call")[^\n]*\n?)+'}
test_simd1_394:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd1.C'
    sources: {binary: simd1.s, cflags: "-std=gnu++14 -msse2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matching function for call")[^\n]*\n?)+'}
test_simd2_189:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd2.C'
    sources: {binary: simd2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          operands to binary +")[^\n]*\n?)+'}
test_simd2_190:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd2.C'
    sources: {binary: simd2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          operands to binary +")[^\n]*\n?)+'}
test_simd2_191:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd2.C'
    sources: {binary: simd2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          operands to binary +")[^\n]*\n?)+'}
test_simd2_395:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd2.C'
    sources: {binary: simd2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          operands to binary +")[^\n]*\n?)+'}
test_simd2_396:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd2.C'
    sources: {binary: simd2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          operands to binary +")[^\n]*\n?)+'}
test_simd2_397:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd2.C'
    sources: {binary: simd2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          operands to binary +")[^\n]*\n?)+'}
test_simd3_192:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd3.C'
    sources: {binary: simd3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          operands to binary")[^\n]*\n?)+'}
test_simd3_193:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd3.C'
    sources: {binary: simd3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          operands to binary")[^\n]*\n?)+'}
test_simd3_194:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd3.C'
    sources: {binary: simd3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          operands to binary")[^\n]*\n?)+'}
test_simd3_398:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd3.C'
    sources: {binary: simd3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          operands to binary")[^\n]*\n?)+'}
test_simd3_399:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd3.C'
    sources: {binary: simd3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          operands to binary")[^\n]*\n?)+'}
test_simd3_400:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd3.C'
    sources: {binary: simd3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          operands to binary")[^\n]*\n?)+'}
test_simd4_195:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd4.C'
    sources: {binary: simd4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to bit-complement")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to bit-complement")[^\n]*\n?)+'}
test_simd4_196:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd4.C'
    sources: {binary: simd4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to bit-complement")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to bit-complement")[^\n]*\n?)+'}
test_simd4_197:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd4.C'
    sources: {binary: simd4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to bit-complement")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to bit-complement")[^\n]*\n?)+'}
test_simd4_401:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd4.C'
    sources: {binary: simd4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to bit-complement")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to bit-complement")[^\n]*\n?)+'}
test_simd4_402:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd4.C'
    sources: {binary: simd4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to bit-complement")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to bit-complement")[^\n]*\n?)+'}
test_simd4_403:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/simd4.C'
    sources: {binary: simd4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new-declarator
          must have integral")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("switch
          quantity not an integer")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to bit-complement")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to bit-complement")[^\n]*\n?)+'}
test_to-virtual-base-1_198:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/to-virtual-base-1.C'
    sources: {binary: to-virtual-base-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_to-virtual-base-1_199:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/to-virtual-base-1.C'
    sources: {binary: to-virtual-base-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_to-virtual-base-1_200:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/to-virtual-base-1.C'
    sources: {binary: to-virtual-base-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_to-virtual-base-1_404:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/to-virtual-base-1.C'
    sources: {binary: to-virtual-base-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_to-virtual-base-1_405:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/to-virtual-base-1.C'
    sources: {binary: to-virtual-base-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_to-virtual-base-1_406:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/to-virtual-base-1.C'
    sources: {binary: to-virtual-base-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_void1_201:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/void1.C'
    sources: {binary: void1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type|invalid use")[^\n]*\n?)+'}
test_void1_202:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/void1.C'
    sources: {binary: void1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type|invalid use")[^\n]*\n?)+'}
test_void1_203:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/void1.C'
    sources: {binary: void1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type|invalid use")[^\n]*\n?)+'}
test_void1_407:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/void1.C'
    sources: {binary: void1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type|invalid use")[^\n]*\n?)+'}
test_void1_408:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/void1.C'
    sources: {binary: void1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type|invalid use")[^\n]*\n?)+'}
test_void1_409:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/void1.C'
    sources: {binary: void1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type|invalid use")[^\n]*\n?)+'}
test_void2_204:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/void2.C'
    sources: {binary: void2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_void2_205:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/void2.C'
    sources: {binary: void2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_void2_206:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/void2.C'
    sources: {binary: void2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_void2_410:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/void2.C'
    sources: {binary: void2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_void2_411:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/void2.C'
    sources: {binary: void2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_void2_412:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/conversion/void2.C'
    sources: {binary: void2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
