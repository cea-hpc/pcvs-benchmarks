test_Wattributes1_1:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wattributes1.C'
    sources:
      binary: Wattributes1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("visibility attribute
          ignored")[^\n]*\n?)+'
test_Wattributes1_2:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wattributes1.C'
    sources:
      binary: Wattributes1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("visibility attribute
          ignored")[^\n]*\n?)+'
test_Wattributes1_3760:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wattributes1.C'
    sources:
      binary: Wattributes1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("visibility attribute
          ignored")[^\n]*\n?)+'
test_Wattributes1_3761:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wattributes1.C'
    sources:
      binary: Wattributes1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("visibility attribute
          ignored")[^\n]*\n?)+'
test_Wdtor1_3:
  build:
    cflags: "-std=gnu++11 -Wnon-virtual-dtor\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wdtor1.C'
    sources:
      binary: Wdtor1.s
  group: GRPSERIAL
test_Wdtor1_3762:
  build:
    cflags: "-std=gnu++11 -Wnon-virtual-dtor\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wdtor1.C'
    sources:
      binary: Wdtor1.s
  group: GRPSERIAL
test_Wdtor1_3763:
  build:
    cflags: "-std=gnu++14 -Wnon-virtual-dtor\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wdtor1.C'
    sources:
      binary: Wdtor1.s
  group: GRPSERIAL
test_Wdtor1_4:
  build:
    cflags: "-std=gnu++14 -Wnon-virtual-dtor\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wdtor1.C'
    sources:
      binary: Wdtor1.s
  group: GRPSERIAL
test_Wliteral-suffix2_3766:
  build:
    cflags: "-std=gnu++11 -Wno-literal-suffix\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wliteral-suffix2.C'
    sources:
      binary: Wliteral-suffix2.s
  group: GRPSERIAL
test_Wliteral-suffix2_3767:
  build:
    cflags: "-std=gnu++14 -Wno-literal-suffix\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wliteral-suffix2.C'
    sources:
      binary: Wliteral-suffix2.s
  group: GRPSERIAL
test_Wliteral-suffix2_7:
  build:
    cflags: "-std=gnu++11 -Wno-literal-suffix\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wliteral-suffix2.C'
    sources:
      binary: Wliteral-suffix2.s
  group: GRPSERIAL
test_Wliteral-suffix2_8:
  build:
    cflags: "-std=gnu++14 -Wno-literal-suffix\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wliteral-suffix2.C'
    sources:
      binary: Wliteral-suffix2.s
  group: GRPSERIAL
test_Wliteral-suffix_3764:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wliteral-suffix.C'
    sources:
      binary: ./Wliteral-suffix.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("invalid suffix on
          literal")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("invalid suffix on
          literal")[^\n]*\n?)+'
test_Wliteral-suffix_3765:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wliteral-suffix.C'
    sources:
      binary: ./Wliteral-suffix.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("invalid suffix on
          literal")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("invalid suffix on
          literal")[^\n]*\n?)+'
test_Wliteral-suffix_5:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wliteral-suffix.C'
    sources:
      binary: ./Wliteral-suffix.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("invalid suffix on
          literal")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("invalid suffix on
          literal")[^\n]*\n?)+'
test_Wliteral-suffix_6:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wliteral-suffix.C'
    sources:
      binary: ./Wliteral-suffix.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("invalid suffix on
          literal")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("invalid suffix on
          literal")[^\n]*\n?)+'
test_Wnarrowing1_10:
  build:
    cflags: "-std=gnu++14 -Wnarrowing -Wno-overflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing1.C'
    sources:
      binary: Wnarrowing1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
test_Wnarrowing1_3768:
  build:
    cflags: "-std=gnu++11 -Wnarrowing -Wno-overflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing1.C'
    sources:
      binary: Wnarrowing1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
test_Wnarrowing1_3769:
  build:
    cflags: "-std=gnu++14 -Wnarrowing -Wno-overflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing1.C'
    sources:
      binary: Wnarrowing1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
test_Wnarrowing1_9:
  build:
    cflags: "-std=gnu++11 -Wnarrowing -Wno-overflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing1.C'
    sources:
      binary: Wnarrowing1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("narrowing conversion")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion")[^\n]*\n?)+'
test_Wnarrowing2_11:
  build:
    cflags: "-std=gnu++11 -Wno-narrowing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing2.C'
    sources:
      binary: Wnarrowing2.s
  group: GRPSERIAL
test_Wnarrowing2_12:
  build:
    cflags: "-std=gnu++14 -Wno-narrowing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing2.C'
    sources:
      binary: Wnarrowing2.s
  group: GRPSERIAL
test_Wnarrowing2_3770:
  build:
    cflags: "-std=gnu++11 -Wno-narrowing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing2.C'
    sources:
      binary: Wnarrowing2.s
  group: GRPSERIAL
test_Wnarrowing2_3771:
  build:
    cflags: "-std=gnu++14 -Wno-narrowing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing2.C'
    sources:
      binary: Wnarrowing2.s
  group: GRPSERIAL
test_Wnarrowing3_13:
  build:
    cflags: "-std=gnu++11 -flto -Wno-narrowing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing3.C'
    sources:
      binary: Wnarrowing3.s
  group: GRPSERIAL
test_Wnarrowing3_14:
  build:
    cflags: "-std=gnu++14 -flto -Wno-narrowing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing3.C'
    sources:
      binary: Wnarrowing3.s
  group: GRPSERIAL
test_Wnarrowing3_3772:
  build:
    cflags: "-std=gnu++11 -flto -Wno-narrowing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing3.C'
    sources:
      binary: Wnarrowing3.s
  group: GRPSERIAL
test_Wnarrowing3_3773:
  build:
    cflags: "-std=gnu++14 -flto -Wno-narrowing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing3.C'
    sources:
      binary: Wnarrowing3.s
  group: GRPSERIAL
test_Wnarrowing4_15:
  build:
    cflags: -std=gnu++11 -Wno-error=narrowing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing4.C'
    sources:
      binary: ./Wnarrowing4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_Wnarrowing4_16:
  build:
    cflags: -std=gnu++14 -Wno-error=narrowing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing4.C'
    sources:
      binary: ./Wnarrowing4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_Wnarrowing4_3774:
  build:
    cflags: -std=gnu++11 -Wno-error=narrowing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing4.C'
    sources:
      binary: ./Wnarrowing4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_Wnarrowing4_3775:
  build:
    cflags: -std=gnu++14 -Wno-error=narrowing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wnarrowing4.C'
    sources:
      binary: ./Wnarrowing4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_Wunused-parm_17:
  build:
    cflags: "-std=gnu++11 -Wunused-parameter\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wunused-parm.C'
    sources:
      binary: Wunused-parm.s
  group: GRPSERIAL
test_Wunused-parm_18:
  build:
    cflags: "-std=gnu++14 -Wunused-parameter\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wunused-parm.C'
    sources:
      binary: Wunused-parm.s
  group: GRPSERIAL
test_Wunused-parm_3776:
  build:
    cflags: "-std=gnu++11 -Wunused-parameter\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wunused-parm.C'
    sources:
      binary: Wunused-parm.s
  group: GRPSERIAL
test_Wunused-parm_3777:
  build:
    cflags: "-std=gnu++14 -Wunused-parameter\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wunused-parm.C'
    sources:
      binary: Wunused-parm.s
  group: GRPSERIAL
test_Wunused-variable-1_19:
  build:
    cflags: "-std=gnu++11 -Wunused-variable\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wunused-variable-1.C'
    sources:
      binary: Wunused-variable-1.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
test_Wunused-variable-1_20:
  build:
    cflags: "-std=gnu++14 -Wunused-variable\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wunused-variable-1.C'
    sources:
      binary: Wunused-variable-1.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
test_Wunused-variable-1_3778:
  build:
    cflags: "-std=gnu++11 -Wunused-variable\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wunused-variable-1.C'
    sources:
      binary: Wunused-variable-1.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
test_Wunused-variable-1_3779:
  build:
    cflags: "-std=gnu++14 -Wunused-variable\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wunused-variable-1.C'
    sources:
      binary: Wunused-variable-1.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("unused variable")[^\n]*\n?)+'
test_Wzero-as-null-pointer-constant-1_21:
  build:
    cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wzero-as-null-pointer-constant-1.C'
    sources:
      binary: Wzero-as-null-pointer-constant-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
test_Wzero-as-null-pointer-constant-1_22:
  build:
    cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wzero-as-null-pointer-constant-1.C'
    sources:
      binary: Wzero-as-null-pointer-constant-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
test_Wzero-as-null-pointer-constant-1_3780:
  build:
    cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wzero-as-null-pointer-constant-1.C'
    sources:
      binary: Wzero-as-null-pointer-constant-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
test_Wzero-as-null-pointer-constant-1_3781:
  build:
    cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wzero-as-null-pointer-constant-1.C'
    sources:
      binary: Wzero-as-null-pointer-constant-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
test_Wzero-as-null-pointer-constant-2_23:
  build:
    cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wzero-as-null-pointer-constant-2.C'
    sources:
      binary: Wzero-as-null-pointer-constant-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
test_Wzero-as-null-pointer-constant-2_24:
  build:
    cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wzero-as-null-pointer-constant-2.C'
    sources:
      binary: Wzero-as-null-pointer-constant-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
test_Wzero-as-null-pointer-constant-2_3782:
  build:
    cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wzero-as-null-pointer-constant-2.C'
    sources:
      binary: Wzero-as-null-pointer-constant-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
test_Wzero-as-null-pointer-constant-2_3783:
  build:
    cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/Wzero-as-null-pointer-constant-2.C'
    sources:
      binary: Wzero-as-null-pointer-constant-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("zero as null pointer")[^\n]*\n?)+'
test___func___25:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/__func__.C'
    sources:
      binary: __func__.s
  group: GRPSERIAL
test___func___26:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/__func__.C'
    sources:
      binary: __func__.s
  group: GRPSERIAL
test___func___3784:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/__func__.C'
    sources:
      binary: __func__.s
  group: GRPSERIAL
test___func___3785:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/__func__.C'
    sources:
      binary: __func__.s
  group: GRPSERIAL
test_access01_27:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/access01.C'
    sources:
      binary: access01.s
  group: GRPSERIAL
test_access01_28:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/access01.C'
    sources:
      binary: access01.s
  group: GRPSERIAL
test_access01_3786:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/access01.C'
    sources:
      binary: access01.s
  group: GRPSERIAL
test_access01_3787:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/access01.C'
    sources:
      binary: access01.s
  group: GRPSERIAL
test_access02_29:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/access02.C'
    sources:
      binary: access02.s
  group: GRPSERIAL
test_access02_30:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/access02.C'
    sources:
      binary: access02.s
  group: GRPSERIAL
test_access02_3788:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/access02.C'
    sources:
      binary: access02.s
  group: GRPSERIAL
test_access02_3789:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/access02.C'
    sources:
      binary: access02.s
  group: GRPSERIAL
test_addressof1_31:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/addressof1.C'
    sources:
      binary: ./addressof1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_addressof1_32:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/addressof1.C'
    sources:
      binary: ./addressof1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_addressof1_3790:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/addressof1.C'
    sources:
      binary: ./addressof1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_addressof1_3791:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/addressof1.C'
    sources:
      binary: ./addressof1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_addressof2_33:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/addressof2.C'
    sources:
      binary: addressof2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue required
          as unary")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind non-const
          lvalue reference of type")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("attempt to take
          address of bit-field")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind bitfield")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("taking address
          of temporary")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind non-const
          lvalue reference of type")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static data member")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared
          in this scope")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue required
          as unary")[^\n]*\n?)+'
test_addressof2_34:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/addressof2.C'
    sources:
      binary: addressof2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue required
          as unary")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind non-const
          lvalue reference of type")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("attempt to take
          address of bit-field")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind bitfield")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("taking address
          of temporary")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind non-const
          lvalue reference of type")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static data member")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared
          in this scope")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue required
          as unary")[^\n]*\n?)+'
test_addressof2_3792:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/addressof2.C'
    sources:
      binary: addressof2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue required
          as unary")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind non-const
          lvalue reference of type")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("attempt to take
          address of bit-field")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind bitfield")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("taking address
          of temporary")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind non-const
          lvalue reference of type")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static data member")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared
          in this scope")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue required
          as unary")[^\n]*\n?)+'
test_addressof2_3793:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/addressof2.C'
    sources:
      binary: addressof2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue required
          as unary")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind non-const
          lvalue reference of type")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("attempt to take
          address of bit-field")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind bitfield")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("taking address
          of temporary")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind non-const
          lvalue reference of type")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static data member")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared
          in this scope")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue required
          as unary")[^\n]*\n?)+'
test_addressof3_35:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/addressof3.C'
    sources:
      binary: addressof3.s
  group: GRPSERIAL
test_addressof3_36:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/addressof3.C'
    sources:
      binary: addressof3.s
  group: GRPSERIAL
test_addressof3_37:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/addressof3.C'
    sources:
      binary: addressof3.s
  group: GRPSERIAL
test_addressof3_3794:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/addressof3.C'
    sources:
      binary: addressof3.s
  group: GRPSERIAL
test_addressof3_3795:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/addressof3.C'
    sources:
      binary: addressof3.s
  group: GRPSERIAL
test_addressof3_3796:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/addressof3.C'
    sources:
      binary: addressof3.s
  group: GRPSERIAL
test_aggr1_3797:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/aggr1.C'
    sources:
      binary: aggr1.s
  group: GRPSERIAL
test_aggr1_3798:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/aggr1.C'
    sources:
      binary: aggr1.s
  group: GRPSERIAL
test_aggr1_38:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/aggr1.C'
    sources:
      binary: aggr1.s
  group: GRPSERIAL
test_aggr1_39:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/aggr1.C'
    sources:
      binary: aggr1.s
  group: GRPSERIAL
test_aggr2_3799:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/aggr2.C'
    sources:
      binary: aggr2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
test_aggr2_3800:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/aggr2.C'
    sources:
      binary: aggr2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
test_aggr2_40:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/aggr2.C'
    sources:
      binary: aggr2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
test_aggr2_41:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/aggr2.C'
    sources:
      binary: aggr2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
test_alias-decl-0_3801:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-0.C'
    sources:
      binary: alias-decl-0.s
  group: GRPSERIAL
test_alias-decl-0_3802:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-0.C'
    sources:
      binary: alias-decl-0.s
  group: GRPSERIAL
test_alias-decl-0_42:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-0.C'
    sources:
      binary: alias-decl-0.s
  group: GRPSERIAL
test_alias-decl-0_43:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-0.C'
    sources:
      binary: alias-decl-0.s
  group: GRPSERIAL
test_alias-decl-10_3805:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-10.C'
    sources:
      binary: alias-decl-10.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias templ\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*Arg<A>\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias template
          specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias template
          specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a template|does
          not declare anything")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias template
          specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
test_alias-decl-10_3806:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-10.C'
    sources:
      binary: alias-decl-10.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias templ\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*Arg<A>\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias template
          specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias template
          specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a template|does
          not declare anything")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias template
          specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
test_alias-decl-10_46:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-10.C'
    sources:
      binary: alias-decl-10.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias templ\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*Arg<A>\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias template
          specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias template
          specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a template|does
          not declare anything")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias template
          specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
test_alias-decl-10_47:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-10.C'
    sources:
      binary: alias-decl-10.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias templ\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*Arg<A>\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias template
          specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias template
          specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a template|does
          not declare anything")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias template
          specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
test_alias-decl-11_3807:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-11.C'
    sources:
      binary: alias-decl-11.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void f(N::U<int>)|not
          declared")[^\n]*\n?)+'
test_alias-decl-11_3808:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-11.C'
    sources:
      binary: alias-decl-11.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void f(N::U<int>)|not
          declared")[^\n]*\n?)+'
test_alias-decl-11_48:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-11.C'
    sources:
      binary: alias-decl-11.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void f(N::U<int>)|not
          declared")[^\n]*\n?)+'
test_alias-decl-11_49:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-11.C'
    sources:
      binary: alias-decl-11.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void f(N::U<int>)|not
          declared")[^\n]*\n?)+'
test_alias-decl-12_3809:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-12.C'
    sources:
      binary: alias-decl-12.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|;|at
          end of input")[^\n]*\n?)+'
test_alias-decl-12_3810:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-12.C'
    sources:
      binary: alias-decl-12.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|;|at
          end of input")[^\n]*\n?)+'
test_alias-decl-12_50:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-12.C'
    sources:
      binary: alias-decl-12.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|;|at
          end of input")[^\n]*\n?)+'
test_alias-decl-12_51:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-12.C'
    sources:
      binary: alias-decl-12.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|;|at
          end of input")[^\n]*\n?)+'
test_alias-decl-13_3811:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-13.C'
    sources:
      binary: alias-decl-13.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to|f")[^\n]*\n?)+'
test_alias-decl-13_3812:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-13.C'
    sources:
      binary: alias-decl-13.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to|f")[^\n]*\n?)+'
test_alias-decl-13_52:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-13.C'
    sources:
      binary: alias-decl-13.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to|f")[^\n]*\n?)+'
test_alias-decl-13_53:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-13.C'
    sources:
      binary: alias-decl-13.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to|f")[^\n]*\n?)+'
test_alias-decl-14_3813:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-14.C'
    sources:
      binary: alias-decl-14.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*Y<0>\\[^\\n\\r\\]*after\\[^\\n\\r\\]*struct|invalid
          type in declaration before\\[^\\n\\r\\]*;")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("using\\[^\\n\\r\\]*alias\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*X<int>\\[^\\n\\r\\]*after\\[^\\n\\r\\]*struct|invalid
          type in declaration before\\[^\\n\\r\\]*;")[^\n]*\n?)+'
test_alias-decl-14_3814:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-14.C'
    sources:
      binary: alias-decl-14.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*Y<0>\\[^\\n\\r\\]*after\\[^\\n\\r\\]*struct|invalid
          type in declaration before\\[^\\n\\r\\]*;")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("using\\[^\\n\\r\\]*alias\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*X<int>\\[^\\n\\r\\]*after\\[^\\n\\r\\]*struct|invalid
          type in declaration before\\[^\\n\\r\\]*;")[^\n]*\n?)+'
test_alias-decl-14_54:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-14.C'
    sources:
      binary: alias-decl-14.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*Y<0>\\[^\\n\\r\\]*after\\[^\\n\\r\\]*struct|invalid
          type in declaration before\\[^\\n\\r\\]*;")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("using\\[^\\n\\r\\]*alias\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*X<int>\\[^\\n\\r\\]*after\\[^\\n\\r\\]*struct|invalid
          type in declaration before\\[^\\n\\r\\]*;")[^\n]*\n?)+'
test_alias-decl-14_55:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-14.C'
    sources:
      binary: alias-decl-14.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*Y<0>\\[^\\n\\r\\]*after\\[^\\n\\r\\]*struct|invalid
          type in declaration before\\[^\\n\\r\\]*;")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("using\\[^\\n\\r\\]*alias\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*X<int>\\[^\\n\\r\\]*after\\[^\\n\\r\\]*struct|invalid
          type in declaration before\\[^\\n\\r\\]*;")[^\n]*\n?)+'
test_alias-decl-15_3815:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-15.C'
    sources:
      binary: alias-decl-15.s
  group: GRPSERIAL
test_alias-decl-15_3816:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-15.C'
    sources:
      binary: alias-decl-15.s
  group: GRPSERIAL
test_alias-decl-15_56:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-15.C'
    sources:
      binary: alias-decl-15.s
  group: GRPSERIAL
test_alias-decl-15_57:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-15.C'
    sources:
      binary: alias-decl-15.s
  group: GRPSERIAL
test_alias-decl-16_3817:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-16.C'
    sources:
      binary: alias-decl-16.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined in alias template")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined in alias template")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''A3\'' does
          not name a type")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined in alias template")[^\n]*\n?)+'
test_alias-decl-16_3818:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-16.C'
    sources:
      binary: alias-decl-16.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined in alias template")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined in alias template")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''A3\'' does
          not name a type")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined in alias template")[^\n]*\n?)+'
test_alias-decl-16_58:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-16.C'
    sources:
      binary: alias-decl-16.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined in alias template")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined in alias template")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''A3\'' does
          not name a type")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined in alias template")[^\n]*\n?)+'
test_alias-decl-16_59:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-16.C'
    sources:
      binary: alias-decl-16.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined in alias template")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined in alias template")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''A3\'' does
          not name a type")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined in alias template")[^\n]*\n?)+'
test_alias-decl-17_3819:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-17.C'
    sources:
      binary: alias-decl-17.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_alias-decl-17_3820:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-17.C'
    sources:
      binary: alias-decl-17.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_alias-decl-17_60:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-17.C'
    sources:
      binary: alias-decl-17.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_alias-decl-17_61:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-17.C'
    sources:
      binary: alias-decl-17.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_alias-decl-18_3821:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-18.C'
    sources:
      binary: alias-decl-18.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_alias-decl-18_3822:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-18.C'
    sources:
      binary: alias-decl-18.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_alias-decl-18_62:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-18.C'
    sources:
      binary: alias-decl-18.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_alias-decl-18_63:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-18.C'
    sources:
      binary: alias-decl-18.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_alias-decl-19_3823:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-19.C'
    sources:
      binary: alias-decl-19.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a member")[^\n]*\n?)+'
test_alias-decl-19_3824:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-19.C'
    sources:
      binary: alias-decl-19.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a member")[^\n]*\n?)+'
test_alias-decl-19_64:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-19.C'
    sources:
      binary: alias-decl-19.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a member")[^\n]*\n?)+'
test_alias-decl-19_65:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-19.C'
    sources:
      binary: alias-decl-19.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a member")[^\n]*\n?)+'
test_alias-decl-1_3803:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-1.C'
    sources:
      binary: alias-decl-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specialization")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested|has|same
          name as|class|in which|declared")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specialization")[^\n]*\n?)+'
test_alias-decl-1_3804:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-1.C'
    sources:
      binary: alias-decl-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specialization")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested|has|same
          name as|class|in which|declared")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specialization")[^\n]*\n?)+'
test_alias-decl-1_44:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-1.C'
    sources:
      binary: alias-decl-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specialization")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested|has|same
          name as|class|in which|declared")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specialization")[^\n]*\n?)+'
test_alias-decl-1_45:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-1.C'
    sources:
      binary: alias-decl-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specialization")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested|has|same
          name as|class|in which|declared")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specialization")[^\n]*\n?)+'
test_alias-decl-20_3827:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-20.C'
    sources:
      binary: alias-decl-20.s
  group: GRPSERIAL
test_alias-decl-20_3828:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-20.C'
    sources:
      binary: alias-decl-20.s
  group: GRPSERIAL
test_alias-decl-20_68:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-20.C'
    sources:
      binary: alias-decl-20.s
  group: GRPSERIAL
test_alias-decl-20_69:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-20.C'
    sources:
      binary: alias-decl-20.s
  group: GRPSERIAL
test_alias-decl-21_3829:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-21.C'
    sources:
      binary: alias-decl-21.s
  group: GRPSERIAL
test_alias-decl-21_3830:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-21.C'
    sources:
      binary: alias-decl-21.s
  group: GRPSERIAL
test_alias-decl-21_70:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-21.C'
    sources:
      binary: alias-decl-21.s
  group: GRPSERIAL
test_alias-decl-21_71:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-21.C'
    sources:
      binary: alias-decl-21.s
  group: GRPSERIAL
test_alias-decl-22_3831:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-22.C'
    sources:
      binary: alias-decl-22.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_alias-decl-22_3832:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-22.C'
    sources:
      binary: alias-decl-22.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_alias-decl-22_72:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-22.C'
    sources:
      binary: alias-decl-22.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_alias-decl-22_73:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-22.C'
    sources:
      binary: alias-decl-22.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_alias-decl-23_3833:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-23.C'
    sources:
      binary: alias-decl-23.s
  group: GRPSERIAL
test_alias-decl-23_3834:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-23.C'
    sources:
      binary: alias-decl-23.s
  group: GRPSERIAL
test_alias-decl-23_74:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-23.C'
    sources:
      binary: alias-decl-23.s
  group: GRPSERIAL
test_alias-decl-23_75:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-23.C'
    sources:
      binary: alias-decl-23.s
  group: GRPSERIAL
test_alias-decl-24_3835:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-24.C'
    sources:
      binary: alias-decl-24.s
  group: GRPSERIAL
test_alias-decl-24_3836:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-24.C'
    sources:
      binary: alias-decl-24.s
  group: GRPSERIAL
test_alias-decl-24_76:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-24.C'
    sources:
      binary: alias-decl-24.s
  group: GRPSERIAL
test_alias-decl-24_77:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-24.C'
    sources:
      binary: alias-decl-24.s
  group: GRPSERIAL
test_alias-decl-25_3837:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-25.C'
    sources:
      binary: alias-decl-25.s
  group: GRPSERIAL
test_alias-decl-25_3838:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-25.C'
    sources:
      binary: alias-decl-25.s
  group: GRPSERIAL
test_alias-decl-25_78:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-25.C'
    sources:
      binary: alias-decl-25.s
  group: GRPSERIAL
test_alias-decl-25_79:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-25.C'
    sources:
      binary: alias-decl-25.s
  group: GRPSERIAL
test_alias-decl-26_3839:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-26.C'
    sources:
      binary: alias-decl-26.s
  group: GRPSERIAL
test_alias-decl-26_3840:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-26.C'
    sources:
      binary: alias-decl-26.s
  group: GRPSERIAL
test_alias-decl-26_80:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-26.C'
    sources:
      binary: alias-decl-26.s
  group: GRPSERIAL
test_alias-decl-26_81:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-26.C'
    sources:
      binary: alias-decl-26.s
  group: GRPSERIAL
test_alias-decl-27_3841:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-27.C'
    sources:
      binary: alias-decl-27.s
  group: GRPSERIAL
test_alias-decl-27_3842:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-27.C'
    sources:
      binary: alias-decl-27.s
  group: GRPSERIAL
test_alias-decl-27_82:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-27.C'
    sources:
      binary: alias-decl-27.s
  group: GRPSERIAL
test_alias-decl-27_83:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-27.C'
    sources:
      binary: alias-decl-27.s
  group: GRPSERIAL
test_alias-decl-28_3843:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-28.C'
    sources:
      binary: alias-decl-28.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected type-specifier|does
          not name a type")[^\n]*\n?)+'
test_alias-decl-28_3844:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-28.C'
    sources:
      binary: alias-decl-28.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected type-specifier|does
          not name a type")[^\n]*\n?)+'
test_alias-decl-28_84:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-28.C'
    sources:
      binary: alias-decl-28.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected type-specifier|does
          not name a type")[^\n]*\n?)+'
test_alias-decl-28_85:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-28.C'
    sources:
      binary: alias-decl-28.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected type-specifier|does
          not name a type")[^\n]*\n?)+'
test_alias-decl-29_3845:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-29.C'
    sources:
      binary: alias-decl-29.s
  group: GRPSERIAL
test_alias-decl-29_3846:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-29.C'
    sources:
      binary: alias-decl-29.s
  group: GRPSERIAL
test_alias-decl-29_86:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-29.C'
    sources:
      binary: alias-decl-29.s
  group: GRPSERIAL
test_alias-decl-29_87:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-29.C'
    sources:
      binary: alias-decl-29.s
  group: GRPSERIAL
test_alias-decl-2_3825:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-2.C'
    sources:
      binary: alias-decl-2.s
  group: GRPSERIAL
  validate:
    match:
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function|wrong
          number of template arguments")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias templ\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
test_alias-decl-2_3826:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-2.C'
    sources:
      binary: alias-decl-2.s
  group: GRPSERIAL
  validate:
    match:
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function|wrong
          number of template arguments")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias templ\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
test_alias-decl-2_66:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-2.C'
    sources:
      binary: alias-decl-2.s
  group: GRPSERIAL
  validate:
    match:
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function|wrong
          number of template arguments")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias templ\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
test_alias-decl-2_67:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-2.C'
    sources:
      binary: alias-decl-2.s
  group: GRPSERIAL
  validate:
    match:
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function|wrong
          number of template arguments")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias templ\\[^\\n\\r\\]*specialization\\[^\\n\\r\\]*after\\[^\\n\\r\\]*class")[^\n]*\n?)+'
test_alias-decl-30_3849:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-30.C'
    sources:
      binary: alias-decl-30.s
  group: GRPSERIAL
test_alias-decl-30_3850:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-30.C'
    sources:
      binary: alias-decl-30.s
  group: GRPSERIAL
test_alias-decl-30_90:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-30.C'
    sources:
      binary: alias-decl-30.s
  group: GRPSERIAL
test_alias-decl-30_91:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-30.C'
    sources:
      binary: alias-decl-30.s
  group: GRPSERIAL
test_alias-decl-31_3851:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-31.C'
    sources:
      binary: alias-decl-31.s
  group: GRPSERIAL
test_alias-decl-31_3852:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-31.C'
    sources:
      binary: alias-decl-31.s
  group: GRPSERIAL
test_alias-decl-31_92:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-31.C'
    sources:
      binary: alias-decl-31.s
  group: GRPSERIAL
test_alias-decl-31_93:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-31.C'
    sources:
      binary: alias-decl-31.s
  group: GRPSERIAL
test_alias-decl-32_3853:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-32.C'
    sources:
      binary: alias-decl-32.s
  group: GRPSERIAL
test_alias-decl-32_3854:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-32.C'
    sources:
      binary: alias-decl-32.s
  group: GRPSERIAL
test_alias-decl-32_94:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-32.C'
    sources:
      binary: alias-decl-32.s
  group: GRPSERIAL
test_alias-decl-32_95:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-32.C'
    sources:
      binary: alias-decl-32.s
  group: GRPSERIAL
test_alias-decl-33_3855:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-33.C'
    sources:
      binary: alias-decl-33.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias")[^\n]*\n?)+'
test_alias-decl-33_3856:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-33.C'
    sources:
      binary: alias-decl-33.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias")[^\n]*\n?)+'
test_alias-decl-33_96:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-33.C'
    sources:
      binary: alias-decl-33.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias")[^\n]*\n?)+'
test_alias-decl-33_97:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-33.C'
    sources:
      binary: alias-decl-33.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("alias")[^\n]*\n?)+'
test_alias-decl-33a_3857:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-33a.C'
    sources:
      binary: alias-decl-33a.s
  group: GRPSERIAL
test_alias-decl-33a_3858:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-33a.C'
    sources:
      binary: alias-decl-33a.s
  group: GRPSERIAL
test_alias-decl-33a_98:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-33a.C'
    sources:
      binary: alias-decl-33a.s
  group: GRPSERIAL
test_alias-decl-33a_99:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-33a.C'
    sources:
      binary: alias-decl-33a.s
  group: GRPSERIAL
test_alias-decl-34_100:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-34.C'
    sources:
      binary: alias-decl-34.s
  group: GRPSERIAL
test_alias-decl-34_101:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-34.C'
    sources:
      binary: alias-decl-34.s
  group: GRPSERIAL
test_alias-decl-34_3859:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-34.C'
    sources:
      binary: alias-decl-34.s
  group: GRPSERIAL
test_alias-decl-34_3860:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-34.C'
    sources:
      binary: alias-decl-34.s
  group: GRPSERIAL
test_alias-decl-35_102:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-35.C'
    sources:
      binary: alias-decl-35.s
  group: GRPSERIAL
test_alias-decl-35_103:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-35.C'
    sources:
      binary: alias-decl-35.s
  group: GRPSERIAL
test_alias-decl-35_3861:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-35.C'
    sources:
      binary: alias-decl-35.s
  group: GRPSERIAL
test_alias-decl-35_3862:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-35.C'
    sources:
      binary: alias-decl-35.s
  group: GRPSERIAL
test_alias-decl-36_104:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-36.C'
    sources:
      binary: alias-decl-36.s
  group: GRPSERIAL
test_alias-decl-36_105:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-36.C'
    sources:
      binary: alias-decl-36.s
  group: GRPSERIAL
test_alias-decl-36_3863:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-36.C'
    sources:
      binary: alias-decl-36.s
  group: GRPSERIAL
test_alias-decl-36_3864:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-36.C'
    sources:
      binary: alias-decl-36.s
  group: GRPSERIAL
test_alias-decl-37_106:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-37.C'
    sources:
      binary: alias-decl-37.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pack expansion")[^\n]*\n?)+'
test_alias-decl-37_107:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-37.C'
    sources:
      binary: alias-decl-37.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pack expansion")[^\n]*\n?)+'
test_alias-decl-37_3865:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-37.C'
    sources:
      binary: alias-decl-37.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pack expansion")[^\n]*\n?)+'
test_alias-decl-37_3866:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-37.C'
    sources:
      binary: alias-decl-37.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pack expansion")[^\n]*\n?)+'
test_alias-decl-38_108:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-38.C'
    sources:
      binary: alias-decl-38.s
  group: GRPSERIAL
test_alias-decl-38_109:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-38.C'
    sources:
      binary: alias-decl-38.s
  group: GRPSERIAL
test_alias-decl-38_3867:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-38.C'
    sources:
      binary: alias-decl-38.s
  group: GRPSERIAL
test_alias-decl-38_3868:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-38.C'
    sources:
      binary: alias-decl-38.s
  group: GRPSERIAL
test_alias-decl-39_110:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-39.C'
    sources:
      binary: alias-decl-39.s
  group: GRPSERIAL
test_alias-decl-39_111:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-39.C'
    sources:
      binary: alias-decl-39.s
  group: GRPSERIAL
test_alias-decl-39_3869:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-39.C'
    sources:
      binary: alias-decl-39.s
  group: GRPSERIAL
test_alias-decl-39_3870:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-39.C'
    sources:
      binary: alias-decl-39.s
  group: GRPSERIAL
test_alias-decl-3_3847:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-3.C'
    sources:
      binary: alias-decl-3.s
  group: GRPSERIAL
test_alias-decl-3_3848:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-3.C'
    sources:
      binary: alias-decl-3.s
  group: GRPSERIAL
test_alias-decl-3_88:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-3.C'
    sources:
      binary: alias-decl-3.s
  group: GRPSERIAL
test_alias-decl-3_89:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-3.C'
    sources:
      binary: alias-decl-3.s
  group: GRPSERIAL
test_alias-decl-40_114:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-40.C'
    sources:
      binary: alias-decl-40.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template|typename")[^\n]*\n?)+'
test_alias-decl-40_115:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-40.C'
    sources:
      binary: alias-decl-40.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template|typename")[^\n]*\n?)+'
test_alias-decl-40_3873:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-40.C'
    sources:
      binary: alias-decl-40.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template|typename")[^\n]*\n?)+'
test_alias-decl-40_3874:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-40.C'
    sources:
      binary: alias-decl-40.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template|typename")[^\n]*\n?)+'
test_alias-decl-41_116:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-41.C'
    sources:
      binary: alias-decl-41.s
  group: GRPSERIAL
test_alias-decl-41_117:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-41.C'
    sources:
      binary: alias-decl-41.s
  group: GRPSERIAL
test_alias-decl-41_3875:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-41.C'
    sources:
      binary: alias-decl-41.s
  group: GRPSERIAL
test_alias-decl-41_3876:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-41.C'
    sources:
      binary: alias-decl-41.s
  group: GRPSERIAL
test_alias-decl-42_118:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-42.C'
    sources:
      binary: alias-decl-42.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_alias-decl-42_119:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-42.C'
    sources:
      binary: alias-decl-42.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_alias-decl-42_3877:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-42.C'
    sources:
      binary: alias-decl-42.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_alias-decl-42_3878:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-42.C'
    sources:
      binary: alias-decl-42.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_alias-decl-43_120:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-43.C'
    sources:
      binary: alias-decl-43.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_alias-decl-43_121:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-43.C'
    sources:
      binary: alias-decl-43.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_alias-decl-43_3879:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-43.C'
    sources:
      binary: alias-decl-43.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_alias-decl-43_3880:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-43.C'
    sources:
      binary: alias-decl-43.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_alias-decl-44_122:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-44.C'
    sources:
      binary: alias-decl-44.s
  group: GRPSERIAL
test_alias-decl-44_123:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-44.C'
    sources:
      binary: alias-decl-44.s
  group: GRPSERIAL
test_alias-decl-44_3881:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-44.C'
    sources:
      binary: alias-decl-44.s
  group: GRPSERIAL
test_alias-decl-44_3882:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-44.C'
    sources:
      binary: alias-decl-44.s
  group: GRPSERIAL
test_alias-decl-45_124:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-45.C'
    sources:
      binary: alias-decl-45.s
  group: GRPSERIAL
test_alias-decl-45_125:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-45.C'
    sources:
      binary: alias-decl-45.s
  group: GRPSERIAL
test_alias-decl-45_3883:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-45.C'
    sources:
      binary: alias-decl-45.s
  group: GRPSERIAL
test_alias-decl-45_3884:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-45.C'
    sources:
      binary: alias-decl-45.s
  group: GRPSERIAL
test_alias-decl-46_126:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-46.C'
    sources:
      binary: alias-decl-46.s
  group: GRPSERIAL
test_alias-decl-46_127:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-46.C'
    sources:
      binary: alias-decl-46.s
  group: GRPSERIAL
test_alias-decl-46_3885:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-46.C'
    sources:
      binary: alias-decl-46.s
  group: GRPSERIAL
test_alias-decl-46_3886:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-46.C'
    sources:
      binary: alias-decl-46.s
  group: GRPSERIAL
test_alias-decl-47_128:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-47.C'
    sources:
      binary: alias-decl-47.s
  group: GRPSERIAL
test_alias-decl-47_129:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-47.C'
    sources:
      binary: alias-decl-47.s
  group: GRPSERIAL
test_alias-decl-47_3887:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-47.C'
    sources:
      binary: alias-decl-47.s
  group: GRPSERIAL
test_alias-decl-47_3888:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-47.C'
    sources:
      binary: alias-decl-47.s
  group: GRPSERIAL
test_alias-decl-48_130:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-48.C'
    sources:
      binary: alias-decl-48.s
  group: GRPSERIAL
test_alias-decl-48_131:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-48.C'
    sources:
      binary: alias-decl-48.s
  group: GRPSERIAL
test_alias-decl-48_3889:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-48.C'
    sources:
      binary: alias-decl-48.s
  group: GRPSERIAL
test_alias-decl-48_3890:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-48.C'
    sources:
      binary: alias-decl-48.s
  group: GRPSERIAL
test_alias-decl-49_132:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-49.C'
    sources:
      binary: alias-decl-49.s
  group: GRPSERIAL
test_alias-decl-49_133:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-49.C'
    sources:
      binary: alias-decl-49.s
  group: GRPSERIAL
test_alias-decl-49_3891:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-49.C'
    sources:
      binary: alias-decl-49.s
  group: GRPSERIAL
test_alias-decl-49_3892:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-49.C'
    sources:
      binary: alias-decl-49.s
  group: GRPSERIAL
test_alias-decl-4_112:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-4.C'
    sources:
      binary: alias-decl-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
test_alias-decl-4_113:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-4.C'
    sources:
      binary: alias-decl-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
test_alias-decl-4_3871:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-4.C'
    sources:
      binary: alias-decl-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
test_alias-decl-4_3872:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-4.C'
    sources:
      binary: alias-decl-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
test_alias-decl-50_136:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-50.C'
    sources:
      binary: alias-decl-50.s
  group: GRPSERIAL
test_alias-decl-50_137:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-50.C'
    sources:
      binary: alias-decl-50.s
  group: GRPSERIAL
test_alias-decl-50_3895:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-50.C'
    sources:
      binary: alias-decl-50.s
  group: GRPSERIAL
test_alias-decl-50_3896:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-50.C'
    sources:
      binary: alias-decl-50.s
  group: GRPSERIAL
test_alias-decl-51_138:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-51.C'
    sources:
      binary: alias-decl-51.s
  group: GRPSERIAL
test_alias-decl-51_139:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-51.C'
    sources:
      binary: alias-decl-51.s
  group: GRPSERIAL
test_alias-decl-51_3897:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-51.C'
    sources:
      binary: alias-decl-51.s
  group: GRPSERIAL
test_alias-decl-51_3898:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-51.C'
    sources:
      binary: alias-decl-51.s
  group: GRPSERIAL
test_alias-decl-52_140:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-52.C'
    sources:
      binary: alias-decl-52.s
  group: GRPSERIAL
test_alias-decl-52_141:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-52.C'
    sources:
      binary: alias-decl-52.s
  group: GRPSERIAL
test_alias-decl-52_3899:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-52.C'
    sources:
      binary: alias-decl-52.s
  group: GRPSERIAL
test_alias-decl-52_3900:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-52.C'
    sources:
      binary: alias-decl-52.s
  group: GRPSERIAL
test_alias-decl-53_142:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-53.C'
    sources:
      binary: alias-decl-53.s
  group: GRPSERIAL
test_alias-decl-53_143:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-53.C'
    sources:
      binary: alias-decl-53.s
  group: GRPSERIAL
test_alias-decl-53_3901:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-53.C'
    sources:
      binary: alias-decl-53.s
  group: GRPSERIAL
test_alias-decl-53_3902:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-53.C'
    sources:
      binary: alias-decl-53.s
  group: GRPSERIAL
test_alias-decl-54_144:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-54.C'
    sources:
      binary: alias-decl-54.s
  group: GRPSERIAL
test_alias-decl-54_145:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-54.C'
    sources:
      binary: alias-decl-54.s
  group: GRPSERIAL
test_alias-decl-54_3903:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-54.C'
    sources:
      binary: alias-decl-54.s
  group: GRPSERIAL
test_alias-decl-54_3904:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-54.C'
    sources:
      binary: alias-decl-54.s
  group: GRPSERIAL
test_alias-decl-55_146:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-55.C'
    sources:
      binary: alias-decl-55.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_alias-decl-55_147:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-55.C'
    sources:
      binary: alias-decl-55.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_alias-decl-55_3905:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-55.C'
    sources:
      binary: alias-decl-55.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_alias-decl-55_3906:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-55.C'
    sources:
      binary: alias-decl-55.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_alias-decl-56_148:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-56.C'
    sources:
      binary: alias-decl-56.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("float")[^\n]*\n?)+'
test_alias-decl-56_149:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-56.C'
    sources:
      binary: alias-decl-56.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("float")[^\n]*\n?)+'
test_alias-decl-56_3907:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-56.C'
    sources:
      binary: alias-decl-56.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("float")[^\n]*\n?)+'
test_alias-decl-56_3908:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-56.C'
    sources:
      binary: alias-decl-56.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("float")[^\n]*\n?)+'
test_alias-decl-57_150:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-57.C'
    sources:
      binary: alias-decl-57.s
  group: GRPSERIAL
test_alias-decl-57_151:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-57.C'
    sources:
      binary: alias-decl-57.s
  group: GRPSERIAL
test_alias-decl-57_3909:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-57.C'
    sources:
      binary: alias-decl-57.s
  group: GRPSERIAL
test_alias-decl-57_3910:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-57.C'
    sources:
      binary: alias-decl-57.s
  group: GRPSERIAL
test_alias-decl-58_152:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-58.C'
    sources:
      binary: alias-decl-58.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_alias-decl-58_153:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-58.C'
    sources:
      binary: alias-decl-58.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_alias-decl-58_3911:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-58.C'
    sources:
      binary: alias-decl-58.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_alias-decl-58_3912:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-58.C'
    sources:
      binary: alias-decl-58.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_alias-decl-59_154:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-59.C'
    sources:
      binary: alias-decl-59.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ignoring attributes
          on template argument")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring attributes
          on template argument")[^\n]*\n?)+'
test_alias-decl-59_155:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-59.C'
    sources:
      binary: alias-decl-59.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ignoring attributes
          on template argument")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring attributes
          on template argument")[^\n]*\n?)+'
test_alias-decl-59_3913:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-59.C'
    sources:
      binary: alias-decl-59.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ignoring attributes
          on template argument")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring attributes
          on template argument")[^\n]*\n?)+'
test_alias-decl-59_3914:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-59.C'
    sources:
      binary: alias-decl-59.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ignoring attributes
          on template argument")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring attributes
          on template argument")[^\n]*\n?)+'
test_alias-decl-5_134:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-5.C'
    sources:
      binary: alias-decl-5.s
  group: GRPSERIAL
test_alias-decl-5_135:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-5.C'
    sources:
      binary: alias-decl-5.s
  group: GRPSERIAL
test_alias-decl-5_3893:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-5.C'
    sources:
      binary: alias-decl-5.s
  group: GRPSERIAL
test_alias-decl-5_3894:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-5.C'
    sources:
      binary: alias-decl-5.s
  group: GRPSERIAL
test_alias-decl-6_156:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-6.C'
    sources:
      binary: alias-decl-6.s
  group: GRPSERIAL
test_alias-decl-6_157:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-6.C'
    sources:
      binary: alias-decl-6.s
  group: GRPSERIAL
test_alias-decl-6_3915:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-6.C'
    sources:
      binary: alias-decl-6.s
  group: GRPSERIAL
test_alias-decl-6_3916:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-6.C'
    sources:
      binary: alias-decl-6.s
  group: GRPSERIAL
test_alias-decl-7_158:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-7.C'
    sources:
      binary: alias-decl-7.s
  group: GRPSERIAL
test_alias-decl-7_159:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-7.C'
    sources:
      binary: alias-decl-7.s
  group: GRPSERIAL
test_alias-decl-7_3917:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-7.C'
    sources:
      binary: alias-decl-7.s
  group: GRPSERIAL
test_alias-decl-7_3918:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-7.C'
    sources:
      binary: alias-decl-7.s
  group: GRPSERIAL
test_alias-decl-80296_162:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-80296.C'
    sources:
      binary: alias-decl-80296.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type/value mismatch")[^\n]*\n?)+'
test_alias-decl-80296_163:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-80296.C'
    sources:
      binary: alias-decl-80296.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type/value mismatch")[^\n]*\n?)+'
test_alias-decl-80296_3921:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-80296.C'
    sources:
      binary: alias-decl-80296.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type/value mismatch")[^\n]*\n?)+'
test_alias-decl-80296_3922:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-80296.C'
    sources:
      binary: alias-decl-80296.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type/value mismatch")[^\n]*\n?)+'
test_alias-decl-8_160:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-8.C'
    sources:
      binary: alias-decl-8.s
  group: GRPSERIAL
test_alias-decl-8_161:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-8.C'
    sources:
      binary: alias-decl-8.s
  group: GRPSERIAL
test_alias-decl-8_3919:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-8.C'
    sources:
      binary: alias-decl-8.s
  group: GRPSERIAL
test_alias-decl-8_3920:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-8.C'
    sources:
      binary: alias-decl-8.s
  group: GRPSERIAL
test_alias-decl-9_164:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-9.C'
    sources:
      binary: alias-decl-9.s
  group: GRPSERIAL
test_alias-decl-9_165:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-9.C'
    sources:
      binary: alias-decl-9.s
  group: GRPSERIAL
test_alias-decl-9_3923:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-9.C'
    sources:
      binary: alias-decl-9.s
  group: GRPSERIAL
test_alias-decl-9_3924:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-9.C'
    sources:
      binary: alias-decl-9.s
  group: GRPSERIAL
test_alias-decl-debug-0_166:
  build:
    cflags: "-std=gnu++11 -gstabs+\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-debug-0.C'
    sources:
      binary: alias-decl-debug-0.s
  group: GRPSERIAL
test_alias-decl-debug-0_167:
  build:
    cflags: "-std=gnu++14 -gstabs+\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-debug-0.C'
    sources:
      binary: alias-decl-debug-0.s
  group: GRPSERIAL
test_alias-decl-debug-0_3925:
  build:
    cflags: "-std=gnu++11 -gstabs+\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-debug-0.C'
    sources:
      binary: alias-decl-debug-0.s
  group: GRPSERIAL
test_alias-decl-debug-0_3926:
  build:
    cflags: "-std=gnu++14 -gstabs+\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-debug-0.C'
    sources:
      binary: alias-decl-debug-0.s
  group: GRPSERIAL
test_alias-decl-dr1286_168:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1286.C'
    sources:
      binary: alias-decl-dr1286.s
  group: GRPSERIAL
test_alias-decl-dr1286_169:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1286.C'
    sources:
      binary: alias-decl-dr1286.s
  group: GRPSERIAL
test_alias-decl-dr1286_3927:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1286.C'
    sources:
      binary: alias-decl-dr1286.s
  group: GRPSERIAL
test_alias-decl-dr1286_3928:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1286.C'
    sources:
      binary: alias-decl-dr1286.s
  group: GRPSERIAL
test_alias-decl-dr1286a_170:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1286a.C'
    sources:
      binary: alias-decl-dr1286a.s
  group: GRPSERIAL
test_alias-decl-dr1286a_171:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1286a.C'
    sources:
      binary: alias-decl-dr1286a.s
  group: GRPSERIAL
test_alias-decl-dr1286a_3929:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1286a.C'
    sources:
      binary: alias-decl-dr1286a.s
  group: GRPSERIAL
test_alias-decl-dr1286a_3930:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1286a.C'
    sources:
      binary: alias-decl-dr1286a.s
  group: GRPSERIAL
test_alias-decl-dr1286b_172:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1286b.C'
    sources:
      binary: alias-decl-dr1286b.s
  group: GRPSERIAL
test_alias-decl-dr1286b_173:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1286b.C'
    sources:
      binary: alias-decl-dr1286b.s
  group: GRPSERIAL
test_alias-decl-dr1286b_3931:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1286b.C'
    sources:
      binary: alias-decl-dr1286b.s
  group: GRPSERIAL
test_alias-decl-dr1286b_3932:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1286b.C'
    sources:
      binary: alias-decl-dr1286b.s
  group: GRPSERIAL
test_alias-decl-dr1558_174:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1558.C'
    sources:
      binary: alias-decl-dr1558.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int")[^\n]*\n?)+'
test_alias-decl-dr1558_175:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1558.C'
    sources:
      binary: alias-decl-dr1558.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int")[^\n]*\n?)+'
test_alias-decl-dr1558_3933:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1558.C'
    sources:
      binary: alias-decl-dr1558.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int")[^\n]*\n?)+'
test_alias-decl-dr1558_3934:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-dr1558.C'
    sources:
      binary: alias-decl-dr1558.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int")[^\n]*\n?)+'
test_alias-decl-enum-1_176:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-enum-1.C'
    sources:
      binary: alias-decl-enum-1.s
  group: GRPSERIAL
test_alias-decl-enum-1_177:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-enum-1.C'
    sources:
      binary: alias-decl-enum-1.s
  group: GRPSERIAL
test_alias-decl-enum-1_3935:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-enum-1.C'
    sources:
      binary: alias-decl-enum-1.s
  group: GRPSERIAL
test_alias-decl-enum-1_3936:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-enum-1.C'
    sources:
      binary: alias-decl-enum-1.s
  group: GRPSERIAL
test_alias-decl-pmf1_178:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-pmf1.C'
    sources:
      binary: alias-decl-pmf1.s
  group: GRPSERIAL
test_alias-decl-pmf1_179:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-pmf1.C'
    sources:
      binary: alias-decl-pmf1.s
  group: GRPSERIAL
test_alias-decl-pmf1_3937:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-pmf1.C'
    sources:
      binary: alias-decl-pmf1.s
  group: GRPSERIAL
test_alias-decl-pmf1_3938:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alias-decl-pmf1.C'
    sources:
      binary: alias-decl-pmf1.s
  group: GRPSERIAL
test_alignas10_182:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas10.C'
    sources:
      binary: alignas10.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack lengths")[^\n]*\n?)+'
test_alignas10_183:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas10.C'
    sources:
      binary: alignas10.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack lengths")[^\n]*\n?)+'
test_alignas10_3941:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas10.C'
    sources:
      binary: alignas10.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack lengths")[^\n]*\n?)+'
test_alignas10_3942:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas10.C'
    sources:
      binary: alignas10.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack lengths")[^\n]*\n?)+'
test_alignas11_184:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas11.C'
    sources:
      binary: alignas11.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expansion pattern")[^\n]*\n?)+'
test_alignas11_185:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas11.C'
    sources:
      binary: alignas11.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expansion pattern")[^\n]*\n?)+'
test_alignas11_3943:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas11.C'
    sources:
      binary: alignas11.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expansion pattern")[^\n]*\n?)+'
test_alignas11_3944:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas11.C'
    sources:
      binary: alignas11.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expansion pattern")[^\n]*\n?)+'
test_alignas1_180:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas1.C'
    sources:
      binary: alignas1.s
  group: GRPSERIAL
test_alignas1_181:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas1.C'
    sources:
      binary: alignas1.s
  group: GRPSERIAL
test_alignas1_3939:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas1.C'
    sources:
      binary: alignas1.s
  group: GRPSERIAL
test_alignas1_3940:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas1.C'
    sources:
      binary: alignas1.s
  group: GRPSERIAL
test_alignas2_186:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas2.C'
    sources:
      binary: alignas2.s
  group: GRPSERIAL
test_alignas2_187:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas2.C'
    sources:
      binary: alignas2.s
  group: GRPSERIAL
test_alignas2_3945:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas2.C'
    sources:
      binary: alignas2.s
  group: GRPSERIAL
test_alignas2_3946:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas2.C'
    sources:
      binary: alignas2.s
  group: GRPSERIAL
test_alignas3_188:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas3.C'
    sources:
      binary: alignas3.s
  group: GRPSERIAL
test_alignas3_189:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas3.C'
    sources:
      binary: alignas3.s
  group: GRPSERIAL
test_alignas3_3947:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas3.C'
    sources:
      binary: alignas3.s
  group: GRPSERIAL
test_alignas3_3948:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas3.C'
    sources:
      binary: alignas3.s
  group: GRPSERIAL
test_alignas4_190:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas4.C'
    sources:
      binary: alignas4.s
  group: GRPSERIAL
test_alignas4_191:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas4.C'
    sources:
      binary: alignas4.s
  group: GRPSERIAL
test_alignas4_3949:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas4.C'
    sources:
      binary: alignas4.s
  group: GRPSERIAL
test_alignas4_3950:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas4.C'
    sources:
      binary: alignas4.s
  group: GRPSERIAL
test_alignas5_192:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas5.C'
    sources:
      binary: alignas5.s
  group: GRPSERIAL
test_alignas5_193:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas5.C'
    sources:
      binary: alignas5.s
  group: GRPSERIAL
test_alignas5_194:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas5.C'
    sources:
      binary: alignas5.s
  group: GRPSERIAL
test_alignas5_3951:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas5.C'
    sources:
      binary: alignas5.s
  group: GRPSERIAL
test_alignas5_3952:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas5.C'
    sources:
      binary: alignas5.s
  group: GRPSERIAL
test_alignas5_3953:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas5.C'
    sources:
      binary: alignas5.s
  group: GRPSERIAL
test_alignas6_195:
  build:
    cflags: "-std=gnu++11 -Wno-attributes\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas6.C'
    sources:
      binary: alignas6.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
test_alignas6_196:
  build:
    cflags: "-std=gnu++14 -Wno-attributes\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas6.C'
    sources:
      binary: alignas6.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
test_alignas6_3954:
  build:
    cflags: "-std=gnu++11 -Wno-attributes\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas6.C'
    sources:
      binary: alignas6.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
test_alignas6_3955:
  build:
    cflags: "-std=gnu++14 -Wno-attributes\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas6.C'
    sources:
      binary: alignas6.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a positive
          power of 2")[^\n]*\n?)+'
test_alignas7_197:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas7.C'
    sources:
      binary: alignas7.s
  group: GRPSERIAL
test_alignas7_198:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas7.C'
    sources:
      binary: alignas7.s
  group: GRPSERIAL
test_alignas7_3956:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas7.C'
    sources:
      binary: alignas7.s
  group: GRPSERIAL
test_alignas7_3957:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas7.C'
    sources:
      binary: alignas7.s
  group: GRPSERIAL
test_alignas8_199:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas8.C'
    sources:
      binary: alignas8.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("17:\''alignas\''
          argument has non-integral type")[^\n]*\n?)+'
test_alignas8_200:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas8.C'
    sources:
      binary: alignas8.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("17:\''alignas\''
          argument has non-integral type")[^\n]*\n?)+'
test_alignas8_3958:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas8.C'
    sources:
      binary: alignas8.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("17:\''alignas\''
          argument has non-integral type")[^\n]*\n?)+'
test_alignas8_3959:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas8.C'
    sources:
      binary: alignas8.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("17:\''alignas\''
          argument has non-integral type")[^\n]*\n?)+'
test_alignas9_201:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas9.C'
    sources:
      binary: alignas9.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no argument packs|expected")[^\n]*\n?)+'
test_alignas9_202:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas9.C'
    sources:
      binary: alignas9.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no argument packs|expected")[^\n]*\n?)+'
test_alignas9_3960:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas9.C'
    sources:
      binary: alignas9.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no argument packs|expected")[^\n]*\n?)+'
test_alignas9_3961:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignas9.C'
    sources:
      binary: alignas9.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no argument packs|expected")[^\n]*\n?)+'
test_alignof2_205:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof2.C'
    sources:
      binary: alignof2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("alignof")[^\n]*\n?)+'
test_alignof2_206:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof2.C'
    sources:
      binary: alignof2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("alignof")[^\n]*\n?)+'
test_alignof2_3964:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof2.C'
    sources:
      binary: alignof2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("alignof")[^\n]*\n?)+'
test_alignof2_3965:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof2.C'
    sources:
      binary: alignof2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("alignof")[^\n]*\n?)+'
test_alignof3_207:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof3.C'
    sources:
      binary: alignof3.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("function type")[^\n]*\n?)+'
test_alignof3_208:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof3.C'
    sources:
      binary: alignof3.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("function type")[^\n]*\n?)+'
test_alignof3_3966:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof3.C'
    sources:
      binary: alignof3.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("function type")[^\n]*\n?)+'
test_alignof3_3967:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof3.C'
    sources:
      binary: alignof3.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("function type")[^\n]*\n?)+'
test_alignof4_209:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof4.C'
    sources:
      binary: alignof4.s
  group: GRPSERIAL
test_alignof4_210:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof4.C'
    sources:
      binary: alignof4.s
  group: GRPSERIAL
test_alignof4_3968:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof4.C'
    sources:
      binary: alignof4.s
  group: GRPSERIAL
test_alignof4_3969:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof4.C'
    sources:
      binary: alignof4.s
  group: GRPSERIAL
test_alignof_203:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof.C'
    sources:
      binary: alignof.s
  group: GRPSERIAL
test_alignof_204:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof.C'
    sources:
      binary: alignof.s
  group: GRPSERIAL
test_alignof_3962:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof.C'
    sources:
      binary: alignof.s
  group: GRPSERIAL
test_alignof_3963:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/alignof.C'
    sources:
      binary: alignof.s
  group: GRPSERIAL
test_anon-union1_211:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/anon-union1.C'
    sources:
      binary: ./anon-union1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_anon-union1_212:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/anon-union1.C'
    sources:
      binary: ./anon-union1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_anon-union1_3970:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/anon-union1.C'
    sources:
      binary: ./anon-union1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_anon-union1_3971:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/anon-union1.C'
    sources:
      binary: ./anon-union1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_attrib54_213:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/attrib54.C'
    sources:
      binary: attrib54.s
  group: GRPSERIAL
test_attrib54_214:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/attrib54.C'
    sources:
      binary: attrib54.s
  group: GRPSERIAL
test_attrib54_3972:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/attrib54.C'
    sources:
      binary: attrib54.s
  group: GRPSERIAL
test_attrib54_3973:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/attrib54.C'
    sources:
      binary: attrib54.s
  group: GRPSERIAL
test_attrib55_215:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/attrib55.C'
    sources:
      binary: attrib55.s
  group: GRPSERIAL
test_attrib55_216:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/attrib55.C'
    sources:
      binary: attrib55.s
  group: GRPSERIAL
test_attrib55_3974:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/attrib55.C'
    sources:
      binary: attrib55.s
  group: GRPSERIAL
test_attrib55_3975:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/attrib55.C'
    sources:
      binary: attrib55.s
  group: GRPSERIAL
test_attributes-enum-1_217:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/attributes-enum-1.C'
    sources:
      binary: attributes-enum-1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*(".B. is deprecated")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*(".C. is deprecated")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*(".A. is deprecated")[^\n]*\n?)+'
test_attributes-enum-1_218:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/attributes-enum-1.C'
    sources:
      binary: attributes-enum-1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*(".B. is deprecated")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*(".C. is deprecated")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*(".A. is deprecated")[^\n]*\n?)+'
test_attributes-enum-1_3976:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/attributes-enum-1.C'
    sources:
      binary: attributes-enum-1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*(".B. is deprecated")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*(".C. is deprecated")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*(".A. is deprecated")[^\n]*\n?)+'
test_attributes-enum-1_3977:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/attributes-enum-1.C'
    sources:
      binary: attributes-enum-1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*(".B. is deprecated")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*(".C. is deprecated")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*(".A. is deprecated")[^\n]*\n?)+'
test_auto10_220:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto10.C'
    sources:
      binary: ./auto10.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto10_221:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto10.C'
    sources:
      binary: ./auto10.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto10_3979:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto10.C'
    sources:
      binary: ./auto10.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto10_3980:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto10.C'
    sources:
      binary: ./auto10.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto11_222:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto11.C'
    sources:
      binary: auto11.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto11_223:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto11.C'
    sources:
      binary: auto11.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto11_3981:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto11.C'
    sources:
      binary: auto11.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto11_3982:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto11.C'
    sources:
      binary: auto11.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto14_224:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto14.C'
    sources:
      binary: ./auto14.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto14_225:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto14.C'
    sources:
      binary: ./auto14.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto14_3983:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto14.C'
    sources:
      binary: ./auto14.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto14_3984:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto14.C'
    sources:
      binary: ./auto14.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto15_226:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto15.C'
    sources:
      binary: auto15.s
  group: GRPSERIAL
test_auto15_227:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto15.C'
    sources:
      binary: auto15.s
  group: GRPSERIAL
test_auto15_3985:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto15.C'
    sources:
      binary: auto15.s
  group: GRPSERIAL
test_auto15_3986:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto15.C'
    sources:
      binary: auto15.s
  group: GRPSERIAL
test_auto16_228:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto16.C'
    sources:
      binary: auto16.s
  group: GRPSERIAL
test_auto16_229:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto16.C'
    sources:
      binary: auto16.s
  group: GRPSERIAL
test_auto16_3987:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto16.C'
    sources:
      binary: auto16.s
  group: GRPSERIAL
test_auto16_3988:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto16.C'
    sources:
      binary: auto16.s
  group: GRPSERIAL
test_auto17_230:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto17.C'
    sources:
      binary: auto17.s
  group: GRPSERIAL
test_auto17_231:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto17.C'
    sources:
      binary: auto17.s
  group: GRPSERIAL
test_auto17_3989:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto17.C'
    sources:
      binary: auto17.s
  group: GRPSERIAL
test_auto17_3990:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto17.C'
    sources:
      binary: auto17.s
  group: GRPSERIAL
test_auto18_232:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto18.C'
    sources:
      binary: auto18.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto18_233:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto18.C'
    sources:
      binary: auto18.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto18_3991:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto18.C'
    sources:
      binary: auto18.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto18_3992:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto18.C'
    sources:
      binary: auto18.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto19_234:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto19.C'
    sources:
      binary: auto19.s
  group: GRPSERIAL
test_auto19_235:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto19.C'
    sources:
      binary: auto19.s
  group: GRPSERIAL
test_auto19_3993:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto19.C'
    sources:
      binary: auto19.s
  group: GRPSERIAL
test_auto19_3994:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto19.C'
    sources:
      binary: auto19.s
  group: GRPSERIAL
test_auto1_219:
  build:
    cflags: "-std=c++98 -Wc++11-compat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto1.C'
    sources:
      binary: auto1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("changes meaning")[^\n]*\n?)+'
test_auto1_3978:
  build:
    cflags: "-std=c++98 -Wc++11-compat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto1.C'
    sources:
      binary: auto1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("changes meaning")[^\n]*\n?)+'
test_auto20_238:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto20.C'
    sources:
      binary: auto20.s
  group: GRPSERIAL
test_auto20_239:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto20.C'
    sources:
      binary: auto20.s
  group: GRPSERIAL
test_auto20_3997:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto20.C'
    sources:
      binary: auto20.s
  group: GRPSERIAL
test_auto20_3998:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto20.C'
    sources:
      binary: auto20.s
  group: GRPSERIAL
test_auto21_240:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto21.C'
    sources:
      binary: auto21.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deducing from
          brace-enclosed initializer list requires #include <initializer_list>")[^\n]*\n?)+'
test_auto21_241:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto21.C'
    sources:
      binary: auto21.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deducing from
          brace-enclosed initializer list requires #include <initializer_list>")[^\n]*\n?)+'
test_auto21_3999:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto21.C'
    sources:
      binary: auto21.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deducing from
          brace-enclosed initializer list requires #include <initializer_list>")[^\n]*\n?)+'
test_auto21_4000:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto21.C'
    sources:
      binary: auto21.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deducing from
          brace-enclosed initializer list requires #include <initializer_list>")[^\n]*\n?)+'
test_auto22_242:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto22.C'
    sources:
      binary: auto22.s
  group: GRPSERIAL
test_auto22_243:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto22.C'
    sources:
      binary: auto22.s
  group: GRPSERIAL
test_auto22_4001:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto22.C'
    sources:
      binary: auto22.s
  group: GRPSERIAL
test_auto22_4002:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto22.C'
    sources:
      binary: auto22.s
  group: GRPSERIAL
test_auto23_244:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto23.C'
    sources:
      binary: auto23.s
  group: GRPSERIAL
test_auto23_245:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto23.C'
    sources:
      binary: auto23.s
  group: GRPSERIAL
test_auto23_4003:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto23.C'
    sources:
      binary: auto23.s
  group: GRPSERIAL
test_auto23_4004:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto23.C'
    sources:
      binary: auto23.s
  group: GRPSERIAL
test_auto24_246:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto24.C'
    sources:
      binary: auto24.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of .auto")[^\n]*\n?)+'
test_auto24_247:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto24.C'
    sources:
      binary: auto24.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of .auto")[^\n]*\n?)+'
test_auto24_4005:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto24.C'
    sources:
      binary: auto24.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of .auto")[^\n]*\n?)+'
test_auto24_4006:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto24.C'
    sources:
      binary: auto24.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of .auto")[^\n]*\n?)+'
test_auto25_248:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto25.C'
    sources:
      binary: auto25.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
test_auto25_249:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto25.C'
    sources:
      binary: auto25.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
test_auto25_4007:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto25.C'
    sources:
      binary: auto25.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
test_auto25_4008:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto25.C'
    sources:
      binary: auto25.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
test_auto26_250:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto26.C'
    sources:
      binary: auto26.s
  group: GRPSERIAL
test_auto26_251:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto26.C'
    sources:
      binary: auto26.s
  group: GRPSERIAL
test_auto26_4009:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto26.C'
    sources:
      binary: auto26.s
  group: GRPSERIAL
test_auto26_4010:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto26.C'
    sources:
      binary: auto26.s
  group: GRPSERIAL
test_auto27_252:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto27.C'
    sources:
      binary: auto27.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("std=")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type")[^\n]*\n?)+'
test_auto27_253:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto27.C'
    sources:
      binary: auto27.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("std=")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type")[^\n]*\n?)+'
test_auto27_254:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto27.C'
    sources:
      binary: auto27.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("std=")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type")[^\n]*\n?)+'
test_auto27_4011:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto27.C'
    sources:
      binary: auto27.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("std=")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type")[^\n]*\n?)+'
test_auto27_4012:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto27.C'
    sources:
      binary: auto27.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("std=")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type")[^\n]*\n?)+'
test_auto27_4013:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto27.C'
    sources:
      binary: auto27.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("std=")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type")[^\n]*\n?)+'
test_auto28_255:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto28.C'
    sources:
      binary: auto28.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
test_auto28_256:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto28.C'
    sources:
      binary: auto28.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
test_auto28_4014:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto28.C'
    sources:
      binary: auto28.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
test_auto28_4015:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto28.C'
    sources:
      binary: auto28.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
test_auto29_257:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto29.C'
    sources:
      binary: auto29.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
test_auto29_258:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto29.C'
    sources:
      binary: auto29.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
test_auto29_4016:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto29.C'
    sources:
      binary: auto29.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
test_auto29_4017:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto29.C'
    sources:
      binary: auto29.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
test_auto2_236:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto2.C'
    sources:
      binary: ./auto2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto2_237:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto2.C'
    sources:
      binary: ./auto2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto2_3995:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto2.C'
    sources:
      binary: ./auto2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto2_3996:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto2.C'
    sources:
      binary: ./auto2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto30_261:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto30.C'
    sources:
      binary: auto30.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple types|can
          only be specified|friend")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple types|can
          only be specified for variables")[^\n]*\n?)+'
test_auto30_262:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto30.C'
    sources:
      binary: auto30.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple types|can
          only be specified|friend")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple types|can
          only be specified for variables")[^\n]*\n?)+'
test_auto30_4020:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto30.C'
    sources:
      binary: auto30.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple types|can
          only be specified|friend")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple types|can
          only be specified for variables")[^\n]*\n?)+'
test_auto30_4021:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto30.C'
    sources:
      binary: auto30.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple types|can
          only be specified|friend")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple types|can
          only be specified for variables")[^\n]*\n?)+'
test_auto31_263:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto31.C'
    sources:
      binary: auto31.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto31_264:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto31.C'
    sources:
      binary: auto31.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto31_4022:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto31.C'
    sources:
      binary: auto31.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto31_4023:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto31.C'
    sources:
      binary: auto31.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto32_265:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto32.C'
    sources:
      binary: auto32.s
  group: GRPSERIAL
test_auto32_266:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto32.C'
    sources:
      binary: auto32.s
  group: GRPSERIAL
test_auto32_4024:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto32.C'
    sources:
      binary: auto32.s
  group: GRPSERIAL
test_auto32_4025:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto32.C'
    sources:
      binary: auto32.s
  group: GRPSERIAL
test_auto33_267:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto33.C'
    sources:
      binary: auto33.s
  group: GRPSERIAL
test_auto33_268:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto33.C'
    sources:
      binary: auto33.s
  group: GRPSERIAL
test_auto33_4026:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto33.C'
    sources:
      binary: auto33.s
  group: GRPSERIAL
test_auto33_4027:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto33.C'
    sources:
      binary: auto33.s
  group: GRPSERIAL
test_auto34_269:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto34.C'
    sources:
      binary: auto34.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before deduction")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before deduction")[^\n]*\n?)+'
test_auto34_270:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto34.C'
    sources:
      binary: auto34.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before deduction")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before deduction")[^\n]*\n?)+'
test_auto34_4028:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto34.C'
    sources:
      binary: auto34.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before deduction")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before deduction")[^\n]*\n?)+'
test_auto34_4029:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto34.C'
    sources:
      binary: auto34.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before deduction")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before deduction")[^\n]*\n?)+'
test_auto35_271:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto35.C'
    sources:
      binary: auto35.s
  group: GRPSERIAL
test_auto35_272:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto35.C'
    sources:
      binary: auto35.s
  group: GRPSERIAL
test_auto35_4030:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto35.C'
    sources:
      binary: auto35.s
  group: GRPSERIAL
test_auto35_4031:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto35.C'
    sources:
      binary: auto35.s
  group: GRPSERIAL
test_auto36_273:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto36.C'
    sources:
      binary: auto36.s
  group: GRPSERIAL
test_auto36_274:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto36.C'
    sources:
      binary: auto36.s
  group: GRPSERIAL
test_auto36_4032:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto36.C'
    sources:
      binary: auto36.s
  group: GRPSERIAL
test_auto36_4033:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto36.C'
    sources:
      binary: auto36.s
  group: GRPSERIAL
test_auto37_275:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto37.C'
    sources:
      binary: auto37.s
  group: GRPSERIAL
test_auto37_276:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto37.C'
    sources:
      binary: auto37.s
  group: GRPSERIAL
test_auto37_4034:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto37.C'
    sources:
      binary: auto37.s
  group: GRPSERIAL
test_auto37_4035:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto37.C'
    sources:
      binary: auto37.s
  group: GRPSERIAL
test_auto38_277:
  build:
    cflags: "-std=gnu++11 -Wunused-variable\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto38.C'
    sources:
      binary: auto38.s
  group: GRPSERIAL
test_auto38_278:
  build:
    cflags: "-std=gnu++14 -Wunused-variable\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto38.C'
    sources:
      binary: auto38.s
  group: GRPSERIAL
test_auto38_4036:
  build:
    cflags: "-std=gnu++11 -Wunused-variable\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto38.C'
    sources:
      binary: auto38.s
  group: GRPSERIAL
test_auto38_4037:
  build:
    cflags: "-std=gnu++14 -Wunused-variable\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto38.C'
    sources:
      binary: auto38.s
  group: GRPSERIAL
test_auto39_279:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto39.C'
    sources:
      binary: auto39.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typedef declared
          \''auto\''")[^\n]*\n?)+'
test_auto39_280:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto39.C'
    sources:
      binary: auto39.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typedef declared
          \''auto\''")[^\n]*\n?)+'
test_auto39_4038:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto39.C'
    sources:
      binary: auto39.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typedef declared
          \''auto\''")[^\n]*\n?)+'
test_auto39_4039:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto39.C'
    sources:
      binary: auto39.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typedef declared
          \''auto\''")[^\n]*\n?)+'
test_auto3_259:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto3.C'
    sources:
      binary: auto3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|initializer_list")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete|auto")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto3_260:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto3.C'
    sources:
      binary: auto3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|initializer_list")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete|auto")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto3_4018:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto3.C'
    sources:
      binary: auto3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|initializer_list")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete|auto")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto3_4019:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto3.C'
    sources:
      binary: auto3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|initializer_list")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete|auto")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto40_283:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto40.C'
    sources:
      binary: auto40.s
  group: GRPSERIAL
test_auto40_284:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto40.C'
    sources:
      binary: auto40.s
  group: GRPSERIAL
test_auto40_4042:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto40.C'
    sources:
      binary: auto40.s
  group: GRPSERIAL
test_auto40_4043:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto40.C'
    sources:
      binary: auto40.s
  group: GRPSERIAL
test_auto41_285:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto41.C'
    sources:
      binary: auto41.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto41_286:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto41.C'
    sources:
      binary: auto41.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto41_4044:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto41.C'
    sources:
      binary: auto41.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto41_4045:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto41.C'
    sources:
      binary: auto41.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
test_auto42_287:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto42.C'
    sources:
      binary: auto42.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of .auto")[^\n]*\n?)+'
test_auto42_288:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto42.C'
    sources:
      binary: auto42.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of .auto")[^\n]*\n?)+'
test_auto42_4046:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto42.C'
    sources:
      binary: auto42.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of .auto")[^\n]*\n?)+'
test_auto42_4047:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto42.C'
    sources:
      binary: auto42.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of .auto")[^\n]*\n?)+'
test_auto43_289:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto43.C'
    sources:
      binary: auto43.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          .auto")[^\n]*\n?)+'
test_auto43_290:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto43.C'
    sources:
      binary: auto43.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          .auto")[^\n]*\n?)+'
test_auto43_4048:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto43.C'
    sources:
      binary: auto43.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          .auto")[^\n]*\n?)+'
test_auto43_4049:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto43.C'
    sources:
      binary: auto43.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          .auto")[^\n]*\n?)+'
test_auto44_291:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto44.C'
    sources:
      binary: auto44.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to deduce")[^\n]*\n?)+'
test_auto44_292:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto44.C'
    sources:
      binary: auto44.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to deduce")[^\n]*\n?)+'
test_auto44_4050:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto44.C'
    sources:
      binary: auto44.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to deduce")[^\n]*\n?)+'
test_auto44_4051:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto44.C'
    sources:
      binary: auto44.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to deduce")[^\n]*\n?)+'
test_auto45_293:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto45.C'
    sources:
      binary: auto45.s
  group: GRPSERIAL
test_auto45_294:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto45.C'
    sources:
      binary: auto45.s
  group: GRPSERIAL
test_auto45_4052:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto45.C'
    sources:
      binary: auto45.s
  group: GRPSERIAL
test_auto45_4053:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto45.C'
    sources:
      binary: auto45.s
  group: GRPSERIAL
test_auto46_295:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto46.C'
    sources:
      binary: auto46.s
  group: GRPSERIAL
test_auto46_296:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto46.C'
    sources:
      binary: auto46.s
  group: GRPSERIAL
test_auto46_4054:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto46.C'
    sources:
      binary: auto46.s
  group: GRPSERIAL
test_auto46_4055:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto46.C'
    sources:
      binary: auto46.s
  group: GRPSERIAL
test_auto47_297:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto47.C'
    sources:
      binary: auto47.s
  group: GRPSERIAL
test_auto47_298:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto47.C'
    sources:
      binary: auto47.s
  group: GRPSERIAL
test_auto47_4056:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto47.C'
    sources:
      binary: auto47.s
  group: GRPSERIAL
test_auto47_4057:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto47.C'
    sources:
      binary: auto47.s
  group: GRPSERIAL
test_auto48_299:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto48.C'
    sources:
      binary: auto48.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before deduction")[^\n]*\n?)+'
test_auto48_300:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto48.C'
    sources:
      binary: auto48.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before deduction")[^\n]*\n?)+'
test_auto48_4058:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto48.C'
    sources:
      binary: auto48.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before deduction")[^\n]*\n?)+'
test_auto48_4059:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto48.C'
    sources:
      binary: auto48.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before deduction")[^\n]*\n?)+'
test_auto4_281:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto4.C'
    sources:
      binary: ./auto4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto4_282:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto4.C'
    sources:
      binary: ./auto4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto4_4040:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto4.C'
    sources:
      binary: ./auto4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto4_4041:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto4.C'
    sources:
      binary: ./auto4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_auto5_301:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto5.C'
    sources:
      binary: auto5.s
  group: GRPSERIAL
test_auto5_302:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto5.C'
    sources:
      binary: auto5.s
  group: GRPSERIAL
test_auto5_4060:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto5.C'
    sources:
      binary: auto5.s
  group: GRPSERIAL
test_auto5_4061:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto5.C'
    sources:
      binary: auto5.s
  group: GRPSERIAL
test_auto7_303:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto7.C'
    sources:
      binary: auto7.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("15:ISO C\\\\+\\\\+
          forbids")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has no initializer")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has no initializer")[^\n]*\n?)+'
test_auto7_304:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto7.C'
    sources:
      binary: auto7.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("15:ISO C\\\\+\\\\+
          forbids")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has no initializer")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has no initializer")[^\n]*\n?)+'
test_auto7_4062:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto7.C'
    sources:
      binary: auto7.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("15:ISO C\\\\+\\\\+
          forbids")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has no initializer")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has no initializer")[^\n]*\n?)+'
test_auto7_4063:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto7.C'
    sources:
      binary: auto7.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("15:ISO C\\\\+\\\\+
          forbids")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has no initializer")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static data
          member declared")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has no initializer")[^\n]*\n?)+'
test_auto9_305:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto9.C'
    sources:
      binary: auto9.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of|expected")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of|expected")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid|initializer")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|trailing
          return type")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|trailing
          return type")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|deduce")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|invalid")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|invalid")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|invalid")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an integral
          type")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an integral
          type|declar|expected")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|expected")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|expected")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|expected")[^\n]*\n?)+'
test_auto9_306:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto9.C'
    sources:
      binary: auto9.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of|expected")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of|expected")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid|initializer")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|trailing
          return type")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|trailing
          return type")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|deduce")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|invalid")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|invalid")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|invalid")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an integral
          type")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an integral
          type|declar|expected")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|expected")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|expected")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|expected")[^\n]*\n?)+'
test_auto9_4064:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto9.C'
    sources:
      binary: auto9.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of|expected")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of|expected")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid|initializer")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|trailing
          return type")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|trailing
          return type")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|deduce")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|invalid")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|invalid")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|invalid")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an integral
          type")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an integral
          type|declar|expected")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|expected")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|expected")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|expected")[^\n]*\n?)+'
test_auto9_4065:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/auto9.C'
    sources:
      binary: auto9.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of|expected")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of|expected")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid|initializer")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|trailing
          return type")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|trailing
          return type")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|deduce")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|expected")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|invalid")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|invalid")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|invalid")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an integral
          type")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an integral
          type|declar|expected")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|expected")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|expected")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of|expected")[^\n]*\n?)+'
test_bad_array_new1_307:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bad_array_new1.C'
    sources:
      binary: ./bad_array_new1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_bad_array_new1_308:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bad_array_new1.C'
    sources:
      binary: ./bad_array_new1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_bad_array_new1_4066:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bad_array_new1.C'
    sources:
      binary: ./bad_array_new1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_bad_array_new1_4067:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bad_array_new1.C'
    sources:
      binary: ./bad_array_new1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_bad_array_new2_309:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bad_array_new2.C'
    sources:
      binary: ./bad_array_new2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_bad_array_new2_310:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bad_array_new2.C'
    sources:
      binary: ./bad_array_new2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_bad_array_new2_4068:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bad_array_new2.C'
    sources:
      binary: ./bad_array_new2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_bad_array_new2_4069:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bad_array_new2.C'
    sources:
      binary: ./bad_array_new2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_bind_311:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bind.C'
    sources:
      binary: bind.s
  group: GRPSERIAL
test_bind_312:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bind.C'
    sources:
      binary: bind.s
  group: GRPSERIAL
test_bind_4070:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bind.C'
    sources:
      binary: bind.s
  group: GRPSERIAL
test_bind_4071:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bind.C'
    sources:
      binary: bind.s
  group: GRPSERIAL
test_bracket1_313:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket1.C'
    sources:
      binary: bracket1.s
  group: GRPSERIAL
test_bracket1_314:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket1.C'
    sources:
      binary: bracket1.s
  group: GRPSERIAL
test_bracket1_4072:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket1.C'
    sources:
      binary: bracket1.s
  group: GRPSERIAL
test_bracket1_4073:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket1.C'
    sources:
      binary: bracket1.s
  group: GRPSERIAL
test_bracket2_315:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket2.C'
    sources:
      binary: bracket2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("numeric constant")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("numeric constant")[^\n]*\n?)+'
test_bracket2_316:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket2.C'
    sources:
      binary: bracket2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("numeric constant")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("numeric constant")[^\n]*\n?)+'
test_bracket2_4074:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket2.C'
    sources:
      binary: bracket2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("numeric constant")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("numeric constant")[^\n]*\n?)+'
test_bracket2_4075:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket2.C'
    sources:
      binary: bracket2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("numeric constant")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("numeric constant")[^\n]*\n?)+'
test_bracket3_317:
  build:
    cflags: "-std=c++98 -Wc++11-compat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket3.C'
    sources:
      binary: bracket3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("is treated as|suggest
          parentheses")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("is treated as|suggest
          parentheses")[^\n]*\n?)+'
test_bracket3_4076:
  build:
    cflags: "-std=c++98 -Wc++11-compat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket3.C'
    sources:
      binary: bracket3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("is treated as|suggest
          parentheses")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("is treated as|suggest
          parentheses")[^\n]*\n?)+'
test_bracket4_318:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket4.C'
    sources:
      binary: bracket4.s
  group: GRPSERIAL
test_bracket4_319:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket4.C'
    sources:
      binary: bracket4.s
  group: GRPSERIAL
test_bracket4_4077:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket4.C'
    sources:
      binary: bracket4.s
  group: GRPSERIAL
test_bracket4_4078:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket4.C'
    sources:
      binary: bracket4.s
  group: GRPSERIAL
test_bracket5_320:
  build:
    cflags: "-std=gnu++11 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket5.C'
    sources:
      binary: bracket5.s
  group: GRPSERIAL
test_bracket5_321:
  build:
    cflags: "-std=gnu++14 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket5.C'
    sources:
      binary: bracket5.s
  group: GRPSERIAL
test_bracket5_4079:
  build:
    cflags: "-std=gnu++11 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket5.C'
    sources:
      binary: bracket5.s
  group: GRPSERIAL
test_bracket5_4080:
  build:
    cflags: "-std=gnu++14 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/bracket5.C'
    sources:
      binary: bracket5.s
  group: GRPSERIAL
test_cast-bug_322:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/cast-bug.C'
    sources:
      binary: cast-bug.s
  group: GRPSERIAL
test_cast-bug_323:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/cast-bug.C'
    sources:
      binary: cast-bug.s
  group: GRPSERIAL
test_cast-bug_4081:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/cast-bug.C'
    sources:
      binary: cast-bug.s
  group: GRPSERIAL
test_cast-bug_4082:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/cast-bug.C'
    sources:
      binary: cast-bug.s
  group: GRPSERIAL
test_cast_324:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/cast.C'
    sources:
      binary: cast.s
  group: GRPSERIAL
test_cast_325:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/cast.C'
    sources:
      binary: cast.s
  group: GRPSERIAL
test_cast_4083:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/cast.C'
    sources:
      binary: cast.s
  group: GRPSERIAL
test_cast_4084:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/cast.C'
    sources:
      binary: cast.s
  group: GRPSERIAL
test_catch1_326:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/catch1.C'
    sources:
      binary: catch1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("abstract class
          type")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("rvalue reference
          type")[^\n]*\n?)+'
test_catch1_327:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/catch1.C'
    sources:
      binary: catch1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("abstract class
          type")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("rvalue reference
          type")[^\n]*\n?)+'
test_catch1_4085:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/catch1.C'
    sources:
      binary: catch1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("abstract class
          type")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("rvalue reference
          type")[^\n]*\n?)+'
test_catch1_4086:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/catch1.C'
    sources:
      binary: catch1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("abstract class
          type")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("rvalue reference
          type")[^\n]*\n?)+'
test_collapse-bug_328:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/collapse-bug.C'
    sources:
      binary: collapse-bug.s
  group: GRPSERIAL
test_collapse-bug_329:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/collapse-bug.C'
    sources:
      binary: collapse-bug.s
  group: GRPSERIAL
test_collapse-bug_4087:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/collapse-bug.C'
    sources:
      binary: collapse-bug.s
  group: GRPSERIAL
test_collapse-bug_4088:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/collapse-bug.C'
    sources:
      binary: collapse-bug.s
  group: GRPSERIAL
test_collapse_330:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/collapse.C'
    sources:
      binary: collapse.s
  group: GRPSERIAL
test_collapse_331:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/collapse.C'
    sources:
      binary: collapse.s
  group: GRPSERIAL
test_collapse_4089:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/collapse.C'
    sources:
      binary: collapse.s
  group: GRPSERIAL
test_collapse_4090:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/collapse.C'
    sources:
      binary: collapse.s
  group: GRPSERIAL
test_constexpr-46336_332:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-46336.C'
    sources:
      binary: constexpr-46336.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C function")[^\n]*\n?)+'
test_constexpr-46336_333:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-46336.C'
    sources:
      binary: constexpr-46336.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C function")[^\n]*\n?)+'
test_constexpr-46336_4091:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-46336.C'
    sources:
      binary: constexpr-46336.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C function")[^\n]*\n?)+'
test_constexpr-46336_4092:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-46336.C'
    sources:
      binary: constexpr-46336.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C function")[^\n]*\n?)+'
test_constexpr-46420_334:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-46420.C'
    sources:
      binary: constexpr-46420.s
  group: GRPSERIAL
test_constexpr-46420_335:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-46420.C'
    sources:
      binary: constexpr-46420.s
  group: GRPSERIAL
test_constexpr-46420_4093:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-46420.C'
    sources:
      binary: constexpr-46420.s
  group: GRPSERIAL
test_constexpr-46420_4094:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-46420.C'
    sources:
      binary: constexpr-46420.s
  group: GRPSERIAL
test_constexpr-47570_336:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-47570.C'
    sources:
      binary: constexpr-47570.s
  group: GRPSERIAL
test_constexpr-47570_337:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-47570.C'
    sources:
      binary: constexpr-47570.s
  group: GRPSERIAL
test_constexpr-47570_4095:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-47570.C'
    sources:
      binary: constexpr-47570.s
  group: GRPSERIAL
test_constexpr-47570_4096:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-47570.C'
    sources:
      binary: constexpr-47570.s
  group: GRPSERIAL
test_constexpr-47969_338:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-47969.C'
    sources:
      binary: constexpr-47969.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has non-integral
          type")[^\n]*\n?)+'
test_constexpr-47969_339:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-47969.C'
    sources:
      binary: constexpr-47969.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has non-integral
          type")[^\n]*\n?)+'
test_constexpr-47969_4097:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-47969.C'
    sources:
      binary: constexpr-47969.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has non-integral
          type")[^\n]*\n?)+'
test_constexpr-47969_4098:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-47969.C'
    sources:
      binary: constexpr-47969.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has non-integral
          type")[^\n]*\n?)+'
test_constexpr-48089_340:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-48089.C'
    sources:
      binary: constexpr-48089.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-48089_341:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-48089.C'
    sources:
      binary: constexpr-48089.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-48089_4099:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-48089.C'
    sources:
      binary: constexpr-48089.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-48089_4100:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-48089.C'
    sources:
      binary: constexpr-48089.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-48324_342:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-48324.C'
    sources:
      binary: constexpr-48324.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("reference to temporary")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not an integral")[^\n]*\n?)+'
test_constexpr-48324_343:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-48324.C'
    sources:
      binary: constexpr-48324.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("reference to temporary")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not an integral")[^\n]*\n?)+'
test_constexpr-48324_4101:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-48324.C'
    sources:
      binary: constexpr-48324.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("reference to temporary")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not an integral")[^\n]*\n?)+'
test_constexpr-48324_4102:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-48324.C'
    sources:
      binary: constexpr-48324.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("reference to temporary")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not an integral")[^\n]*\n?)+'
test_constexpr-49776_344:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-49776.C'
    sources:
      binary: constexpr-49776.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_constexpr-49776_345:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-49776.C'
    sources:
      binary: constexpr-49776.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_constexpr-49776_4103:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-49776.C'
    sources:
      binary: constexpr-49776.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_constexpr-49776_4104:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-49776.C'
    sources:
      binary: constexpr-49776.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_constexpr-50060_346:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-50060.C'
    sources:
      binary: constexpr-50060.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a constant
          expression")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition for static assertion|in constexpr expansion")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition for static assertion|called in a constant expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a constant
          expression")[^\n]*\n?)+'
test_constexpr-50060_347:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-50060.C'
    sources:
      binary: constexpr-50060.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a constant
          expression")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition for static assertion|in constexpr expansion")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition for static assertion|called in a constant expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a constant
          expression")[^\n]*\n?)+'
test_constexpr-50060_4105:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-50060.C'
    sources:
      binary: constexpr-50060.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a constant
          expression")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition for static assertion|in constexpr expansion")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition for static assertion|called in a constant expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a constant
          expression")[^\n]*\n?)+'
test_constexpr-50060_4106:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-50060.C'
    sources:
      binary: constexpr-50060.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a constant
          expression")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition for static assertion|in constexpr expansion")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition for static assertion|called in a constant expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a constant
          expression")[^\n]*\n?)+'
test_constexpr-51369_348:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-51369.C'
    sources:
      binary: constexpr-51369.s
  group: GRPSERIAL
test_constexpr-51369_349:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-51369.C'
    sources:
      binary: constexpr-51369.s
  group: GRPSERIAL
test_constexpr-51369_4107:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-51369.C'
    sources:
      binary: constexpr-51369.s
  group: GRPSERIAL
test_constexpr-51369_4108:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-51369.C'
    sources:
      binary: constexpr-51369.s
  group: GRPSERIAL
test_constexpr-51707_350:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-51707.C'
    sources:
      binary: constexpr-51707.s
  group: GRPSERIAL
test_constexpr-51707_351:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-51707.C'
    sources:
      binary: constexpr-51707.s
  group: GRPSERIAL
test_constexpr-51707_4109:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-51707.C'
    sources:
      binary: constexpr-51707.s
  group: GRPSERIAL
test_constexpr-51707_4110:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-51707.C'
    sources:
      binary: constexpr-51707.s
  group: GRPSERIAL
test_constexpr-52282-1_352:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52282-1.C'
    sources:
      binary: constexpr-52282-1.s
  group: GRPSERIAL
test_constexpr-52282-1_353:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52282-1.C'
    sources:
      binary: constexpr-52282-1.s
  group: GRPSERIAL
test_constexpr-52282-1_4111:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52282-1.C'
    sources:
      binary: constexpr-52282-1.s
  group: GRPSERIAL
test_constexpr-52282-1_4112:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52282-1.C'
    sources:
      binary: constexpr-52282-1.s
  group: GRPSERIAL
test_constexpr-52672_354:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52672.C'
    sources:
      binary: constexpr-52672.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-52672_355:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52672.C'
    sources:
      binary: constexpr-52672.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-52672_4113:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52672.C'
    sources:
      binary: constexpr-52672.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-52672_4114:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52672.C'
    sources:
      binary: constexpr-52672.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-52892-1_356:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52892-1.C'
    sources:
      binary: constexpr-52892-1.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match for
          call")[^\n]*\n?)+'
test_constexpr-52892-1_357:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52892-1.C'
    sources:
      binary: constexpr-52892-1.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match for
          call")[^\n]*\n?)+'
test_constexpr-52892-1_4115:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52892-1.C'
    sources:
      binary: constexpr-52892-1.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match for
          call")[^\n]*\n?)+'
test_constexpr-52892-1_4116:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52892-1.C'
    sources:
      binary: constexpr-52892-1.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match for
          call")[^\n]*\n?)+'
test_constexpr-52892-2_358:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52892-2.C'
    sources:
      binary: constexpr-52892-2.s
  group: GRPSERIAL
test_constexpr-52892-2_359:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52892-2.C'
    sources:
      binary: constexpr-52892-2.s
  group: GRPSERIAL
test_constexpr-52892-2_4117:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52892-2.C'
    sources:
      binary: constexpr-52892-2.s
  group: GRPSERIAL
test_constexpr-52892-2_4118:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-52892-2.C'
    sources:
      binary: constexpr-52892-2.s
  group: GRPSERIAL
test_constexpr-53094-1_360:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-53094-1.C'
    sources:
      binary: constexpr-53094-1.s
  group: GRPSERIAL
test_constexpr-53094-1_361:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-53094-1.C'
    sources:
      binary: constexpr-53094-1.s
  group: GRPSERIAL
test_constexpr-53094-1_4119:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-53094-1.C'
    sources:
      binary: constexpr-53094-1.s
  group: GRPSERIAL
test_constexpr-53094-1_4120:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-53094-1.C'
    sources:
      binary: constexpr-53094-1.s
  group: GRPSERIAL
test_constexpr-53094-2_362:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-53094-2.C'
    sources:
      binary: constexpr-53094-2.s
  group: GRPSERIAL
test_constexpr-53094-2_363:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-53094-2.C'
    sources:
      binary: constexpr-53094-2.s
  group: GRPSERIAL
test_constexpr-53094-2_4121:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-53094-2.C'
    sources:
      binary: constexpr-53094-2.s
  group: GRPSERIAL
test_constexpr-53094-2_4122:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-53094-2.C'
    sources:
      binary: constexpr-53094-2.s
  group: GRPSERIAL
test_constexpr-53094-3_364:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-53094-3.C'
    sources:
      binary: constexpr-53094-3.s
  group: GRPSERIAL
test_constexpr-53094-3_365:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-53094-3.C'
    sources:
      binary: constexpr-53094-3.s
  group: GRPSERIAL
test_constexpr-53094-3_4123:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-53094-3.C'
    sources:
      binary: constexpr-53094-3.s
  group: GRPSERIAL
test_constexpr-53094-3_4124:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-53094-3.C'
    sources:
      binary: constexpr-53094-3.s
  group: GRPSERIAL
test_constexpr-54002_366:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-54002.C'
    sources:
      binary: constexpr-54002.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant expression")[^\n]*\n?)+'
test_constexpr-54002_367:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-54002.C'
    sources:
      binary: constexpr-54002.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant expression")[^\n]*\n?)+'
test_constexpr-54002_4125:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-54002.C'
    sources:
      binary: constexpr-54002.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant expression")[^\n]*\n?)+'
test_constexpr-54002_4126:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-54002.C'
    sources:
      binary: constexpr-54002.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant expression")[^\n]*\n?)+'
test_constexpr-55432_368:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55432.C'
    sources:
      binary: constexpr-55432.s
  group: GRPSERIAL
test_constexpr-55432_369:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55432.C'
    sources:
      binary: constexpr-55432.s
  group: GRPSERIAL
test_constexpr-55432_4127:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55432.C'
    sources:
      binary: constexpr-55432.s
  group: GRPSERIAL
test_constexpr-55432_4128:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55432.C'
    sources:
      binary: constexpr-55432.s
  group: GRPSERIAL
test_constexpr-55573_370:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55573.C'
    sources:
      binary: constexpr-55573.s
  group: GRPSERIAL
test_constexpr-55573_371:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55573.C'
    sources:
      binary: constexpr-55573.s
  group: GRPSERIAL
test_constexpr-55573_4129:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55573.C'
    sources:
      binary: constexpr-55573.s
  group: GRPSERIAL
test_constexpr-55573_4130:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55573.C'
    sources:
      binary: constexpr-55573.s
  group: GRPSERIAL
test_constexpr-55708_372:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55708.C'
    sources:
      binary: constexpr-55708.s
  group: GRPSERIAL
test_constexpr-55708_373:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55708.C'
    sources:
      binary: constexpr-55708.s
  group: GRPSERIAL
test_constexpr-55708_4131:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55708.C'
    sources:
      binary: constexpr-55708.s
  group: GRPSERIAL
test_constexpr-55708_4132:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55708.C'
    sources:
      binary: constexpr-55708.s
  group: GRPSERIAL
test_constexpr-55942_374:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55942.C'
    sources:
      binary: constexpr-55942.s
  group: GRPSERIAL
test_constexpr-55942_375:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55942.C'
    sources:
      binary: constexpr-55942.s
  group: GRPSERIAL
test_constexpr-55942_4133:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55942.C'
    sources:
      binary: constexpr-55942.s
  group: GRPSERIAL
test_constexpr-55942_4134:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-55942.C'
    sources:
      binary: constexpr-55942.s
  group: GRPSERIAL
test_constexpr-56302_376:
  build:
    cflags: "-std=gnu++11 -O0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-56302.C'
    sources:
      binary: constexpr-56302.s
  group: GRPSERIAL
test_constexpr-56302_377:
  build:
    cflags: "-std=gnu++14 -O0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-56302.C'
    sources:
      binary: constexpr-56302.s
  group: GRPSERIAL
test_constexpr-56302_4135:
  build:
    cflags: "-std=gnu++11 -O0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-56302.C'
    sources:
      binary: constexpr-56302.s
  group: GRPSERIAL
test_constexpr-56302_4136:
  build:
    cflags: "-std=gnu++14 -O0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-56302.C'
    sources:
      binary: constexpr-56302.s
  group: GRPSERIAL
test_constexpr-56991_378:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-56991.C'
    sources:
      binary: constexpr-56991.s
  group: GRPSERIAL
test_constexpr-56991_379:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-56991.C'
    sources:
      binary: constexpr-56991.s
  group: GRPSERIAL
test_constexpr-56991_4137:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-56991.C'
    sources:
      binary: constexpr-56991.s
  group: GRPSERIAL
test_constexpr-56991_4138:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-56991.C'
    sources:
      binary: constexpr-56991.s
  group: GRPSERIAL
test_constexpr-57764_380:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-57764.C'
    sources:
      binary: constexpr-57764.s
  group: GRPSERIAL
test_constexpr-57764_381:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-57764.C'
    sources:
      binary: constexpr-57764.s
  group: GRPSERIAL
test_constexpr-57764_4139:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-57764.C'
    sources:
      binary: constexpr-57764.s
  group: GRPSERIAL
test_constexpr-57764_4140:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-57764.C'
    sources:
      binary: constexpr-57764.s
  group: GRPSERIAL
test_constexpr-59686_382:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59686.C'
    sources:
      binary: constexpr-59686.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant|value")[^\n]*\n?)+'
test_constexpr-59686_383:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59686.C'
    sources:
      binary: constexpr-59686.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant|value")[^\n]*\n?)+'
test_constexpr-59686_4141:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59686.C'
    sources:
      binary: constexpr-59686.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant|value")[^\n]*\n?)+'
test_constexpr-59686_4142:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59686.C'
    sources:
      binary: constexpr-59686.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant|value")[^\n]*\n?)+'
test_constexpr-59937-1_384:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59937-1.C'
    sources:
      binary: constexpr-59937-1.s
  group: GRPSERIAL
test_constexpr-59937-1_385:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59937-1.C'
    sources:
      binary: constexpr-59937-1.s
  group: GRPSERIAL
test_constexpr-59937-1_4143:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59937-1.C'
    sources:
      binary: constexpr-59937-1.s
  group: GRPSERIAL
test_constexpr-59937-1_4144:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59937-1.C'
    sources:
      binary: constexpr-59937-1.s
  group: GRPSERIAL
test_constexpr-59937-2_386:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59937-2.C'
    sources:
      binary: constexpr-59937-2.s
  group: GRPSERIAL
test_constexpr-59937-2_387:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59937-2.C'
    sources:
      binary: constexpr-59937-2.s
  group: GRPSERIAL
test_constexpr-59937-2_4145:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59937-2.C'
    sources:
      binary: constexpr-59937-2.s
  group: GRPSERIAL
test_constexpr-59937-2_4146:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59937-2.C'
    sources:
      binary: constexpr-59937-2.s
  group: GRPSERIAL
test_constexpr-59938_388:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59938.C'
    sources:
      binary: constexpr-59938.s
  group: GRPSERIAL
test_constexpr-59938_389:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59938.C'
    sources:
      binary: constexpr-59938.s
  group: GRPSERIAL
test_constexpr-59938_4147:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59938.C'
    sources:
      binary: constexpr-59938.s
  group: GRPSERIAL
test_constexpr-59938_4148:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-59938.C'
    sources:
      binary: constexpr-59938.s
  group: GRPSERIAL
test_constexpr-60049_390:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -Wno-shift-negative-value\
      \ -Wno-shift-count-negative -Wno-shift-count-overflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60049.C'
    sources:
      binary: constexpr-60049.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
test_constexpr-60049_391:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -Wno-shift-negative-value\
      \ -Wno-shift-count-negative -Wno-shift-count-overflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60049.C'
    sources:
      binary: constexpr-60049.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
test_constexpr-60049_4149:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -Wno-shift-negative-value\
      \ -Wno-shift-count-negative -Wno-shift-count-overflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60049.C'
    sources:
      binary: constexpr-60049.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
test_constexpr-60049_4150:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -Wno-shift-negative-value\
      \ -Wno-shift-count-negative -Wno-shift-count-overflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60049.C'
    sources:
      binary: constexpr-60049.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shift expression")[^\n]*\n?)+'
test_constexpr-60199_392:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60199.C'
    sources:
      binary: constexpr-60199.s
  group: GRPSERIAL
test_constexpr-60199_393:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60199.C'
    sources:
      binary: constexpr-60199.s
  group: GRPSERIAL
test_constexpr-60199_4151:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60199.C'
    sources:
      binary: constexpr-60199.s
  group: GRPSERIAL
test_constexpr-60199_4152:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60199.C'
    sources:
      binary: constexpr-60199.s
  group: GRPSERIAL
test_constexpr-60245_394:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60245.C'
    sources:
      binary: constexpr-60245.s
  group: GRPSERIAL
test_constexpr-60245_395:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60245.C'
    sources:
      binary: constexpr-60245.s
  group: GRPSERIAL
test_constexpr-60245_4153:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60245.C'
    sources:
      binary: constexpr-60245.s
  group: GRPSERIAL
test_constexpr-60245_4154:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60245.C'
    sources:
      binary: constexpr-60245.s
  group: GRPSERIAL
test_constexpr-60432_396:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60432.C'
    sources:
      binary: constexpr-60432.s
  group: GRPSERIAL
test_constexpr-60432_397:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60432.C'
    sources:
      binary: constexpr-60432.s
  group: GRPSERIAL
test_constexpr-60432_4155:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60432.C'
    sources:
      binary: constexpr-60432.s
  group: GRPSERIAL
test_constexpr-60432_4156:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-60432.C'
    sources:
      binary: constexpr-60432.s
  group: GRPSERIAL
test_constexpr-61484_398:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-61484.C'
    sources:
      binary: constexpr-61484.s
  group: GRPSERIAL
test_constexpr-61484_399:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-61484.C'
    sources:
      binary: constexpr-61484.s
  group: GRPSERIAL
test_constexpr-61484_4157:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-61484.C'
    sources:
      binary: constexpr-61484.s
  group: GRPSERIAL
test_constexpr-61484_4158:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-61484.C'
    sources:
      binary: constexpr-61484.s
  group: GRPSERIAL
test_constexpr-63241_400:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-63241.C'
    sources:
      binary: constexpr-63241.s
  group: GRPSERIAL
test_constexpr-63241_401:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-63241.C'
    sources:
      binary: constexpr-63241.s
  group: GRPSERIAL
test_constexpr-63241_4159:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-63241.C'
    sources:
      binary: constexpr-63241.s
  group: GRPSERIAL
test_constexpr-63241_4160:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-63241.C'
    sources:
      binary: constexpr-63241.s
  group: GRPSERIAL
test_constexpr-63265_402:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-63265.C'
    sources:
      binary: constexpr-63265.s
  group: GRPSERIAL
test_constexpr-63265_403:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-63265.C'
    sources:
      binary: constexpr-63265.s
  group: GRPSERIAL
test_constexpr-63265_4161:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-63265.C'
    sources:
      binary: constexpr-63265.s
  group: GRPSERIAL
test_constexpr-63265_4162:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-63265.C'
    sources:
      binary: constexpr-63265.s
  group: GRPSERIAL
test_constexpr-64462_404:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-64462.C'
    sources:
      binary: constexpr-64462.s
  group: GRPSERIAL
test_constexpr-64462_405:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-64462.C'
    sources:
      binary: constexpr-64462.s
  group: GRPSERIAL
test_constexpr-64462_4163:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-64462.C'
    sources:
      binary: constexpr-64462.s
  group: GRPSERIAL
test_constexpr-64462_4164:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-64462.C'
    sources:
      binary: constexpr-64462.s
  group: GRPSERIAL
test_constexpr-65080_406:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-65080.C'
    sources:
      binary: constexpr-65080.s
  group: GRPSERIAL
test_constexpr-65080_407:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-65080.C'
    sources:
      binary: constexpr-65080.s
  group: GRPSERIAL
test_constexpr-65080_4165:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-65080.C'
    sources:
      binary: constexpr-65080.s
  group: GRPSERIAL
test_constexpr-65080_4166:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-65080.C'
    sources:
      binary: constexpr-65080.s
  group: GRPSERIAL
test_constexpr-67376_408:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-67376.C'
    sources:
      binary: constexpr-67376.s
  group: GRPSERIAL
test_constexpr-67376_409:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-67376.C'
    sources:
      binary: constexpr-67376.s
  group: GRPSERIAL
test_constexpr-67376_4167:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-67376.C'
    sources:
      binary: constexpr-67376.s
  group: GRPSERIAL
test_constexpr-67376_4168:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-67376.C'
    sources:
      binary: constexpr-67376.s
  group: GRPSERIAL
test_constexpr-69315_410:
  build:
    cflags: "-std=gnu++11 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-69315.C'
    sources:
      binary: constexpr-69315.s
  group: GRPSERIAL
test_constexpr-69315_411:
  build:
    cflags: "-std=gnu++14 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-69315.C'
    sources:
      binary: constexpr-69315.s
  group: GRPSERIAL
test_constexpr-69315_4169:
  build:
    cflags: "-std=gnu++11 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-69315.C'
    sources:
      binary: constexpr-69315.s
  group: GRPSERIAL
test_constexpr-69315_4170:
  build:
    cflags: "-std=gnu++14 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-69315.C'
    sources:
      binary: constexpr-69315.s
  group: GRPSERIAL
test_constexpr-70001-1_412:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70001-1.C'
    sources:
      binary: constexpr-70001-1.s
  group: GRPSERIAL
test_constexpr-70001-1_413:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70001-1.C'
    sources:
      binary: constexpr-70001-1.s
  group: GRPSERIAL
test_constexpr-70001-1_4171:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70001-1.C'
    sources:
      binary: constexpr-70001-1.s
  group: GRPSERIAL
test_constexpr-70001-1_4172:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70001-1.C'
    sources:
      binary: constexpr-70001-1.s
  group: GRPSERIAL
test_constexpr-70001-2_414:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70001-2.C'
    sources:
      binary: ./constexpr-70001-2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-70001-2_415:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70001-2.C'
    sources:
      binary: ./constexpr-70001-2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-70001-2_4173:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70001-2.C'
    sources:
      binary: ./constexpr-70001-2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-70001-2_4174:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70001-2.C'
    sources:
      binary: ./constexpr-70001-2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-70001-3_416:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70001-3.C'
    sources:
      binary: constexpr-70001-3.s
  group: GRPSERIAL
test_constexpr-70001-3_4175:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70001-3.C'
    sources:
      binary: constexpr-70001-3.s
  group: GRPSERIAL
test_constexpr-70001-4_417:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70001-4.C'
    sources:
      binary: constexpr-70001-4.s
  group: GRPSERIAL
test_constexpr-70001-4_4176:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70001-4.C'
    sources:
      binary: constexpr-70001-4.s
  group: GRPSERIAL
test_constexpr-70204a_4177:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70204a.C'
    sources:
      binary: constexpr-70204a.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant|no match")[^\n]*\n?)+'
test_constexpr-70204a_4178:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70204a.C'
    sources:
      binary: constexpr-70204a.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant|no match")[^\n]*\n?)+'
test_constexpr-70204a_418:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70204a.C'
    sources:
      binary: constexpr-70204a.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant|no match")[^\n]*\n?)+'
test_constexpr-70204a_419:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70204a.C'
    sources:
      binary: constexpr-70204a.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant|no match")[^\n]*\n?)+'
test_constexpr-70204b_4179:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70204b.C'
    sources:
      binary: constexpr-70204b.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant")[^\n]*\n?)+'
test_constexpr-70204b_4180:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70204b.C'
    sources:
      binary: constexpr-70204b.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant")[^\n]*\n?)+'
test_constexpr-70204b_420:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70204b.C'
    sources:
      binary: constexpr-70204b.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant")[^\n]*\n?)+'
test_constexpr-70204b_421:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70204b.C'
    sources:
      binary: constexpr-70204b.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant")[^\n]*\n?)+'
test_constexpr-70323_4181:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70323.C'
    sources:
      binary: constexpr-70323.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
test_constexpr-70323_4182:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70323.C'
    sources:
      binary: constexpr-70323.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
test_constexpr-70323_422:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70323.C'
    sources:
      binary: constexpr-70323.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
test_constexpr-70323_423:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70323.C'
    sources:
      binary: constexpr-70323.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
test_constexpr-70323a_4183:
  build:
    cflags: "-std=gnu++11 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70323a.C'
    sources:
      binary: constexpr-70323a.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
test_constexpr-70323a_4184:
  build:
    cflags: "-std=gnu++14 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70323a.C'
    sources:
      binary: constexpr-70323a.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
test_constexpr-70323a_424:
  build:
    cflags: "-std=gnu++11 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70323a.C'
    sources:
      binary: constexpr-70323a.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
test_constexpr-70323a_425:
  build:
    cflags: "-std=gnu++14 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-70323a.C'
    sources:
      binary: constexpr-70323a.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow in constant
          expression")[^\n]*\n?)+'
test_constexpr-71537_4185:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-71537.C'
    sources:
      binary: constexpr-71537.s
  group: GRPSERIAL
test_constexpr-71537_4186:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-71537.C'
    sources:
      binary: constexpr-71537.s
  group: GRPSERIAL
test_constexpr-71537_426:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-71537.C'
    sources:
      binary: constexpr-71537.s
  group: GRPSERIAL
test_constexpr-71537_427:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-71537.C'
    sources:
      binary: constexpr-71537.s
  group: GRPSERIAL
test_constexpr-71828_4187:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-71828.C'
    sources:
      binary: constexpr-71828.s
  group: GRPSERIAL
test_constexpr-71828_4188:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-71828.C'
    sources:
      binary: constexpr-71828.s
  group: GRPSERIAL
test_constexpr-71828_428:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-71828.C'
    sources:
      binary: constexpr-71828.s
  group: GRPSERIAL
test_constexpr-71828_429:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-71828.C'
    sources:
      binary: constexpr-71828.s
  group: GRPSERIAL
test_constexpr-71988_4189:
  build:
    cflags: "-std=gnu++11 -fdump-ipa-cgraph\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-71988.C'
    sources:
      binary: constexpr-71988.s
  group: GRPSERIAL
test_constexpr-71988_4190:
  build:
    cflags: "-std=gnu++14 -fdump-ipa-cgraph\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-71988.C'
    sources:
      binary: constexpr-71988.s
  group: GRPSERIAL
test_constexpr-71988_430:
  build:
    cflags: "-std=gnu++11 -fdump-ipa-cgraph\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-71988.C'
    sources:
      binary: constexpr-71988.s
  group: GRPSERIAL
test_constexpr-71988_431:
  build:
    cflags: "-std=gnu++14 -fdump-ipa-cgraph\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-71988.C'
    sources:
      binary: constexpr-71988.s
  group: GRPSERIAL
test_constexpr-77482_4191:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-77482.C'
    sources:
      binary: constexpr-77482.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration\\[^\\n\\r]*has
          no initializer")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has incomplete
          type")[^\n]*\n?)+'
test_constexpr-77482_4192:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-77482.C'
    sources:
      binary: constexpr-77482.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration\\[^\\n\\r]*has
          no initializer")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has incomplete
          type")[^\n]*\n?)+'
test_constexpr-77482_432:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-77482.C'
    sources:
      binary: constexpr-77482.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration\\[^\\n\\r]*has
          no initializer")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has incomplete
          type")[^\n]*\n?)+'
test_constexpr-77482_433:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-77482.C'
    sources:
      binary: constexpr-77482.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration\\[^\\n\\r]*has
          no initializer")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has incomplete
          type")[^\n]*\n?)+'
test_constexpr-79822_4193:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-79822.C'
    sources:
      binary: constexpr-79822.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_constexpr-79822_4194:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-79822.C'
    sources:
      binary: constexpr-79822.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_constexpr-79822_4195:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-79822.C'
    sources:
      binary: constexpr-79822.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_constexpr-79822_434:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-79822.C'
    sources:
      binary: constexpr-79822.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_constexpr-79822_435:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-79822.C'
    sources:
      binary: constexpr-79822.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_constexpr-79822_436:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-79822.C'
    sources:
      binary: constexpr-79822.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_constexpr-98_4196:
  build:
    cflags: "-std=c++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-98.C'
    sources:
      binary: constexpr-98.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-98_437:
  build:
    cflags: "-std=c++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-98.C'
    sources:
      binary: constexpr-98.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-99_4197:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-99.C'
    sources:
      binary: constexpr-99.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_constexpr-99_4198:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-99.C'
    sources:
      binary: constexpr-99.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_constexpr-99_438:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-99.C'
    sources:
      binary: constexpr-99.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_constexpr-99_439:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-99.C'
    sources:
      binary: constexpr-99.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_constexpr-__func__2_4201:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-__func__2.C'
    sources:
      binary: constexpr-__func__2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-__func__2_4202:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-__func__2.C'
    sources:
      binary: constexpr-__func__2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-__func__2_442:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-__func__2.C'
    sources:
      binary: constexpr-__func__2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-__func__2_443:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-__func__2.C'
    sources:
      binary: constexpr-__func__2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-__func___4199:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-__func__.C'
    sources:
      binary: constexpr-__func__.s
  group: GRPSERIAL
test_constexpr-__func___4200:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-__func__.C'
    sources:
      binary: constexpr-__func__.s
  group: GRPSERIAL
test_constexpr-__func___440:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-__func__.C'
    sources:
      binary: constexpr-__func__.s
  group: GRPSERIAL
test_constexpr-__func___441:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-__func__.C'
    sources:
      binary: constexpr-__func__.s
  group: GRPSERIAL
test_constexpr-access_4203:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-access.C'
    sources:
      binary: constexpr-access.s
  group: GRPSERIAL
test_constexpr-access_4204:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-access.C'
    sources:
      binary: constexpr-access.s
  group: GRPSERIAL
test_constexpr-access_444:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-access.C'
    sources:
      binary: constexpr-access.s
  group: GRPSERIAL
test_constexpr-access_445:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-access.C'
    sources:
      binary: constexpr-access.s
  group: GRPSERIAL
test_constexpr-aggr1_4205:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-aggr1.C'
    sources:
      binary: constexpr-aggr1.s
  group: GRPSERIAL
test_constexpr-aggr1_4206:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-aggr1.C'
    sources:
      binary: constexpr-aggr1.s
  group: GRPSERIAL
test_constexpr-aggr1_446:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-aggr1.C'
    sources:
      binary: constexpr-aggr1.s
  group: GRPSERIAL
test_constexpr-aggr1_447:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-aggr1.C'
    sources:
      binary: constexpr-aggr1.s
  group: GRPSERIAL
test_constexpr-aggr2_4207:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-aggr2.C'
    sources:
      binary: constexpr-aggr2.s
  group: GRPSERIAL
test_constexpr-aggr2_4208:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-aggr2.C'
    sources:
      binary: constexpr-aggr2.s
  group: GRPSERIAL
test_constexpr-aggr2_448:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-aggr2.C'
    sources:
      binary: constexpr-aggr2.s
  group: GRPSERIAL
test_constexpr-aggr2_449:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-aggr2.C'
    sources:
      binary: constexpr-aggr2.s
  group: GRPSERIAL
test_constexpr-aggr3_4209:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-aggr3.C'
    sources:
      binary: constexpr-aggr3.s
  group: GRPSERIAL
test_constexpr-aggr3_4210:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-aggr3.C'
    sources:
      binary: constexpr-aggr3.s
  group: GRPSERIAL
test_constexpr-aggr3_450:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-aggr3.C'
    sources:
      binary: constexpr-aggr3.s
  group: GRPSERIAL
test_constexpr-aggr3_451:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-aggr3.C'
    sources:
      binary: constexpr-aggr3.s
  group: GRPSERIAL
test_constexpr-and_4211:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-and.C'
    sources:
      binary: constexpr-and.s
  group: GRPSERIAL
test_constexpr-and_4212:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-and.C'
    sources:
      binary: constexpr-and.s
  group: GRPSERIAL
test_constexpr-and_452:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-and.C'
    sources:
      binary: constexpr-and.s
  group: GRPSERIAL
test_constexpr-and_453:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-and.C'
    sources:
      binary: constexpr-and.s
  group: GRPSERIAL
test_constexpr-arith-overflow_4213:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-arith-overflow.C'
    sources:
      binary: constexpr-arith-overflow.s
  group: GRPSERIAL
test_constexpr-arith-overflow_4214:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-arith-overflow.C'
    sources:
      binary: constexpr-arith-overflow.s
  group: GRPSERIAL
test_constexpr-arith-overflow_454:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-arith-overflow.C'
    sources:
      binary: constexpr-arith-overflow.s
  group: GRPSERIAL
test_constexpr-arith-overflow_455:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-arith-overflow.C'
    sources:
      binary: constexpr-arith-overflow.s
  group: GRPSERIAL
test_constexpr-array-ptr10_4217:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -Wall -Wextra -fdelete-null-pointer-checks\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr10.C'
    sources:
      binary: constexpr-array-ptr10.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
test_constexpr-array-ptr10_4218:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -Wall -Wextra -fdelete-null-pointer-checks\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr10.C'
    sources:
      binary: constexpr-array-ptr10.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
test_constexpr-array-ptr10_458:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -Wall -Wextra -fdelete-null-pointer-checks\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr10.C'
    sources:
      binary: constexpr-array-ptr10.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
test_constexpr-array-ptr10_459:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -Wall -Wextra -fdelete-null-pointer-checks\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr10.C'
    sources:
      binary: constexpr-array-ptr10.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("address of .A::i.")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("ordered comparison")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
test_constexpr-array-ptr2_4219:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr2.C'
    sources:
      binary: constexpr-array-ptr2.s
  group: GRPSERIAL
test_constexpr-array-ptr2_4220:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr2.C'
    sources:
      binary: constexpr-array-ptr2.s
  group: GRPSERIAL
test_constexpr-array-ptr2_460:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr2.C'
    sources:
      binary: constexpr-array-ptr2.s
  group: GRPSERIAL
test_constexpr-array-ptr2_461:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr2.C'
    sources:
      binary: constexpr-array-ptr2.s
  group: GRPSERIAL
test_constexpr-array-ptr3_4221:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr3.C'
    sources:
      binary: constexpr-array-ptr3.s
  group: GRPSERIAL
test_constexpr-array-ptr3_4222:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr3.C'
    sources:
      binary: constexpr-array-ptr3.s
  group: GRPSERIAL
test_constexpr-array-ptr3_462:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr3.C'
    sources:
      binary: constexpr-array-ptr3.s
  group: GRPSERIAL
test_constexpr-array-ptr3_463:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr3.C'
    sources:
      binary: constexpr-array-ptr3.s
  group: GRPSERIAL
test_constexpr-array-ptr4_4223:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr4.C'
    sources:
      binary: constexpr-array-ptr4.s
  group: GRPSERIAL
test_constexpr-array-ptr4_4224:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr4.C'
    sources:
      binary: constexpr-array-ptr4.s
  group: GRPSERIAL
test_constexpr-array-ptr4_464:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr4.C'
    sources:
      binary: constexpr-array-ptr4.s
  group: GRPSERIAL
test_constexpr-array-ptr4_465:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr4.C'
    sources:
      binary: constexpr-array-ptr4.s
  group: GRPSERIAL
test_constexpr-array-ptr5_4225:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr5.C'
    sources:
      binary: constexpr-array-ptr5.s
  group: GRPSERIAL
test_constexpr-array-ptr5_4226:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr5.C'
    sources:
      binary: constexpr-array-ptr5.s
  group: GRPSERIAL
test_constexpr-array-ptr5_466:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr5.C'
    sources:
      binary: constexpr-array-ptr5.s
  group: GRPSERIAL
test_constexpr-array-ptr5_467:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr5.C'
    sources:
      binary: constexpr-array-ptr5.s
  group: GRPSERIAL
test_constexpr-array-ptr6_4227:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr6.C'
    sources:
      binary: constexpr-array-ptr6.s
  group: GRPSERIAL
test_constexpr-array-ptr6_4228:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr6.C'
    sources:
      binary: constexpr-array-ptr6.s
  group: GRPSERIAL
test_constexpr-array-ptr6_468:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr6.C'
    sources:
      binary: constexpr-array-ptr6.s
  group: GRPSERIAL
test_constexpr-array-ptr6_469:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr6.C'
    sources:
      binary: constexpr-array-ptr6.s
  group: GRPSERIAL
test_constexpr-array-ptr7_4229:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr7.C'
    sources:
      binary: constexpr-array-ptr7.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("discards qualifiers")[^\n]*\n?)+'
test_constexpr-array-ptr7_4230:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr7.C'
    sources:
      binary: constexpr-array-ptr7.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("discards qualifiers")[^\n]*\n?)+'
test_constexpr-array-ptr7_470:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr7.C'
    sources:
      binary: constexpr-array-ptr7.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("discards qualifiers")[^\n]*\n?)+'
test_constexpr-array-ptr7_471:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr7.C'
    sources:
      binary: constexpr-array-ptr7.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("discards qualifiers")[^\n]*\n?)+'
test_constexpr-array-ptr8_4231:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr8.C'
    sources:
      binary: constexpr-array-ptr8.s
  group: GRPSERIAL
test_constexpr-array-ptr8_4232:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr8.C'
    sources:
      binary: constexpr-array-ptr8.s
  group: GRPSERIAL
test_constexpr-array-ptr8_472:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr8.C'
    sources:
      binary: constexpr-array-ptr8.s
  group: GRPSERIAL
test_constexpr-array-ptr8_473:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr8.C'
    sources:
      binary: constexpr-array-ptr8.s
  group: GRPSERIAL
test_constexpr-array-ptr9_4233:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr9.C'
    sources:
      binary: constexpr-array-ptr9.s
  group: GRPSERIAL
test_constexpr-array-ptr9_4234:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr9.C'
    sources:
      binary: constexpr-array-ptr9.s
  group: GRPSERIAL
test_constexpr-array-ptr9_474:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr9.C'
    sources:
      binary: constexpr-array-ptr9.s
  group: GRPSERIAL
test_constexpr-array-ptr9_475:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr9.C'
    sources:
      binary: constexpr-array-ptr9.s
  group: GRPSERIAL
test_constexpr-array-ptr_4215:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr.C'
    sources:
      binary: constexpr-array-ptr.s
  group: GRPSERIAL
test_constexpr-array-ptr_4216:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr.C'
    sources:
      binary: constexpr-array-ptr.s
  group: GRPSERIAL
test_constexpr-array-ptr_456:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr.C'
    sources:
      binary: constexpr-array-ptr.s
  group: GRPSERIAL
test_constexpr-array-ptr_457:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-ptr.C'
    sources:
      binary: constexpr-array-ptr.s
  group: GRPSERIAL
test_constexpr-array-tparm_4235:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-tparm.C'
    sources:
      binary: constexpr-array-tparm.s
  group: GRPSERIAL
test_constexpr-array-tparm_4236:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-tparm.C'
    sources:
      binary: constexpr-array-tparm.s
  group: GRPSERIAL
test_constexpr-array-tparm_476:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-tparm.C'
    sources:
      binary: constexpr-array-tparm.s
  group: GRPSERIAL
test_constexpr-array-tparm_477:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array-tparm.C'
    sources:
      binary: constexpr-array-tparm.s
  group: GRPSERIAL
test_constexpr-array10_4239:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array10.C'
    sources:
      binary: constexpr-array10.s
  group: GRPSERIAL
test_constexpr-array10_4240:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array10.C'
    sources:
      binary: constexpr-array10.s
  group: GRPSERIAL
test_constexpr-array10_480:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array10.C'
    sources:
      binary: constexpr-array10.s
  group: GRPSERIAL
test_constexpr-array10_481:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array10.C'
    sources:
      binary: constexpr-array10.s
  group: GRPSERIAL
test_constexpr-array11_4241:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array11.C'
    sources:
      binary: constexpr-array11.s
  group: GRPSERIAL
test_constexpr-array11_4242:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array11.C'
    sources:
      binary: constexpr-array11.s
  group: GRPSERIAL
test_constexpr-array11_482:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array11.C'
    sources:
      binary: constexpr-array11.s
  group: GRPSERIAL
test_constexpr-array11_483:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array11.C'
    sources:
      binary: constexpr-array11.s
  group: GRPSERIAL
test_constexpr-array12_4243:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array12.C'
    sources:
      binary: constexpr-array12.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_constexpr-array12_4244:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array12.C'
    sources:
      binary: constexpr-array12.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_constexpr-array12_484:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array12.C'
    sources:
      binary: constexpr-array12.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_constexpr-array12_485:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array12.C'
    sources:
      binary: constexpr-array12.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_constexpr-array13_4245:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array13.C'
    sources:
      binary: constexpr-array13.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-array13_4246:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array13.C'
    sources:
      binary: constexpr-array13.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-array13_486:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array13.C'
    sources:
      binary: constexpr-array13.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-array13_487:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array13.C'
    sources:
      binary: constexpr-array13.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-array14_4247:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array14.C'
    sources:
      binary: constexpr-array14.s
  group: GRPSERIAL
test_constexpr-array14_4248:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array14.C'
    sources:
      binary: constexpr-array14.s
  group: GRPSERIAL
test_constexpr-array14_488:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array14.C'
    sources:
      binary: constexpr-array14.s
  group: GRPSERIAL
test_constexpr-array14_489:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array14.C'
    sources:
      binary: constexpr-array14.s
  group: GRPSERIAL
test_constexpr-array15_4249:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array15.C'
    sources:
      binary: ./constexpr-array15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-array15_4250:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array15.C'
    sources:
      binary: ./constexpr-array15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-array15_490:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array15.C'
    sources:
      binary: ./constexpr-array15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-array15_491:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array15.C'
    sources:
      binary: ./constexpr-array15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-array17_4251:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array17.C'
    sources:
      binary: constexpr-array17.s
  group: GRPSERIAL
test_constexpr-array17_4252:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array17.C'
    sources:
      binary: constexpr-array17.s
  group: GRPSERIAL
test_constexpr-array17_492:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array17.C'
    sources:
      binary: constexpr-array17.s
  group: GRPSERIAL
test_constexpr-array17_493:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array17.C'
    sources:
      binary: constexpr-array17.s
  group: GRPSERIAL
test_constexpr-array18_4253:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array18.C'
    sources:
      binary: constexpr-array18.s
  group: GRPSERIAL
test_constexpr-array18_4254:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array18.C'
    sources:
      binary: constexpr-array18.s
  group: GRPSERIAL
test_constexpr-array18_494:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array18.C'
    sources:
      binary: constexpr-array18.s
  group: GRPSERIAL
test_constexpr-array18_495:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array18.C'
    sources:
      binary: constexpr-array18.s
  group: GRPSERIAL
test_constexpr-array2_4255:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array2.C'
    sources:
      binary: constexpr-array2.s
  group: GRPSERIAL
test_constexpr-array2_4256:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array2.C'
    sources:
      binary: constexpr-array2.s
  group: GRPSERIAL
test_constexpr-array2_496:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array2.C'
    sources:
      binary: constexpr-array2.s
  group: GRPSERIAL
test_constexpr-array2_497:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array2.C'
    sources:
      binary: constexpr-array2.s
  group: GRPSERIAL
test_constexpr-array3_4257:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array3.C'
    sources:
      binary: constexpr-array3.s
  group: GRPSERIAL
test_constexpr-array3_4258:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array3.C'
    sources:
      binary: constexpr-array3.s
  group: GRPSERIAL
test_constexpr-array3_498:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array3.C'
    sources:
      binary: constexpr-array3.s
  group: GRPSERIAL
test_constexpr-array3_499:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array3.C'
    sources:
      binary: constexpr-array3.s
  group: GRPSERIAL
test_constexpr-array4_4259:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array4.C'
    sources:
      binary: constexpr-array4.s
  group: GRPSERIAL
test_constexpr-array4_4260:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array4.C'
    sources:
      binary: constexpr-array4.s
  group: GRPSERIAL
test_constexpr-array4_500:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array4.C'
    sources:
      binary: constexpr-array4.s
  group: GRPSERIAL
test_constexpr-array4_501:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array4.C'
    sources:
      binary: constexpr-array4.s
  group: GRPSERIAL
test_constexpr-array5_4261:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array5.C'
    sources:
      binary: constexpr-array5.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-array5_4262:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array5.C'
    sources:
      binary: constexpr-array5.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-array5_502:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array5.C'
    sources:
      binary: constexpr-array5.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-array5_503:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array5.C'
    sources:
      binary: constexpr-array5.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-array6_4263:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array6.C'
    sources:
      binary: constexpr-array6.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::A")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::i")[^\n]*\n?)+'
test_constexpr-array6_4264:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array6.C'
    sources:
      binary: constexpr-array6.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::A")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::i")[^\n]*\n?)+'
test_constexpr-array6_504:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array6.C'
    sources:
      binary: constexpr-array6.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::A")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::i")[^\n]*\n?)+'
test_constexpr-array6_505:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array6.C'
    sources:
      binary: constexpr-array6.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::A")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::i")[^\n]*\n?)+'
test_constexpr-array7_4265:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array7.C'
    sources:
      binary: constexpr-array7.s
  group: GRPSERIAL
test_constexpr-array7_4266:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array7.C'
    sources:
      binary: constexpr-array7.s
  group: GRPSERIAL
test_constexpr-array7_506:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array7.C'
    sources:
      binary: constexpr-array7.s
  group: GRPSERIAL
test_constexpr-array7_507:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array7.C'
    sources:
      binary: constexpr-array7.s
  group: GRPSERIAL
test_constexpr-array8_4267:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array8.C'
    sources:
      binary: ./constexpr-array8.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-array8_4268:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array8.C'
    sources:
      binary: ./constexpr-array8.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-array8_508:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array8.C'
    sources:
      binary: ./constexpr-array8.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-array8_509:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array8.C'
    sources:
      binary: ./constexpr-array8.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-array9_4269:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array9.C'
    sources:
      binary: ./constexpr-array9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-array9_4270:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array9.C'
    sources:
      binary: ./constexpr-array9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-array9_510:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array9.C'
    sources:
      binary: ./constexpr-array9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-array9_511:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array9.C'
    sources:
      binary: ./constexpr-array9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-array_4237:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array.C'
    sources:
      binary: constexpr-array.s
  group: GRPSERIAL
test_constexpr-array_4238:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array.C'
    sources:
      binary: constexpr-array.s
  group: GRPSERIAL
test_constexpr-array_478:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array.C'
    sources:
      binary: constexpr-array.s
  group: GRPSERIAL
test_constexpr-array_479:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-array.C'
    sources:
      binary: constexpr-array.s
  group: GRPSERIAL
test_constexpr-attribute2_4273:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-attribute2.C'
    sources:
      binary: constexpr-attribute2.s
  group: GRPSERIAL
test_constexpr-attribute2_4274:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-attribute2.C'
    sources:
      binary: constexpr-attribute2.s
  group: GRPSERIAL
test_constexpr-attribute2_514:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-attribute2.C'
    sources:
      binary: constexpr-attribute2.s
  group: GRPSERIAL
test_constexpr-attribute2_515:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-attribute2.C'
    sources:
      binary: constexpr-attribute2.s
  group: GRPSERIAL
test_constexpr-attribute3_4275:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-attribute3.C'
    sources:
      binary: constexpr-attribute3.s
  group: GRPSERIAL
test_constexpr-attribute3_4276:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-attribute3.C'
    sources:
      binary: constexpr-attribute3.s
  group: GRPSERIAL
test_constexpr-attribute3_516:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-attribute3.C'
    sources:
      binary: constexpr-attribute3.s
  group: GRPSERIAL
test_constexpr-attribute3_517:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-attribute3.C'
    sources:
      binary: constexpr-attribute3.s
  group: GRPSERIAL
test_constexpr-attribute_4271:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-attribute.C'
    sources:
      binary: constexpr-attribute.s
  group: GRPSERIAL
test_constexpr-attribute_4272:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-attribute.C'
    sources:
      binary: constexpr-attribute.s
  group: GRPSERIAL
test_constexpr-attribute_512:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-attribute.C'
    sources:
      binary: constexpr-attribute.s
  group: GRPSERIAL
test_constexpr-attribute_513:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-attribute.C'
    sources:
      binary: constexpr-attribute.s
  group: GRPSERIAL
test_constexpr-auto_4277:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-auto.C'
    sources:
      binary: constexpr-auto.s
  group: GRPSERIAL
test_constexpr-auto_4278:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-auto.C'
    sources:
      binary: constexpr-auto.s
  group: GRPSERIAL
test_constexpr-auto_518:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-auto.C'
    sources:
      binary: constexpr-auto.s
  group: GRPSERIAL
test_constexpr-auto_519:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-auto.C'
    sources:
      binary: constexpr-auto.s
  group: GRPSERIAL
test_constexpr-base2_4281:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base2.C'
    sources:
      binary: constexpr-base2.s
  group: GRPSERIAL
test_constexpr-base2_4282:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base2.C'
    sources:
      binary: constexpr-base2.s
  group: GRPSERIAL
test_constexpr-base2_522:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base2.C'
    sources:
      binary: constexpr-base2.s
  group: GRPSERIAL
test_constexpr-base2_523:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base2.C'
    sources:
      binary: constexpr-base2.s
  group: GRPSERIAL
test_constexpr-base3_4283:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base3.C'
    sources:
      binary: ./constexpr-base3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-base3_4284:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base3.C'
    sources:
      binary: ./constexpr-base3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-base3_524:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base3.C'
    sources:
      binary: ./constexpr-base3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-base3_525:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base3.C'
    sources:
      binary: ./constexpr-base3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-base4_4285:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base4.C'
    sources:
      binary: ./constexpr-base4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-base4_4286:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base4.C'
    sources:
      binary: ./constexpr-base4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-base4_526:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base4.C'
    sources:
      binary: ./constexpr-base4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-base4_527:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base4.C'
    sources:
      binary: ./constexpr-base4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-base5_4287:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base5.C'
    sources:
      binary: constexpr-base5.s
  group: GRPSERIAL
test_constexpr-base5_4288:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base5.C'
    sources:
      binary: constexpr-base5.s
  group: GRPSERIAL
test_constexpr-base5_528:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base5.C'
    sources:
      binary: constexpr-base5.s
  group: GRPSERIAL
test_constexpr-base5_529:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base5.C'
    sources:
      binary: constexpr-base5.s
  group: GRPSERIAL
test_constexpr-base_4279:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base.C'
    sources:
      binary: constexpr-base.s
  group: GRPSERIAL
test_constexpr-base_4280:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base.C'
    sources:
      binary: constexpr-base.s
  group: GRPSERIAL
test_constexpr-base_520:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base.C'
    sources:
      binary: constexpr-base.s
  group: GRPSERIAL
test_constexpr-base_521:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-base.C'
    sources:
      binary: constexpr-base.s
  group: GRPSERIAL
test_constexpr-bitfield2_4291:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-bitfield2.C'
    sources:
      binary: constexpr-bitfield2.s
  group: GRPSERIAL
test_constexpr-bitfield2_4292:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-bitfield2.C'
    sources:
      binary: constexpr-bitfield2.s
  group: GRPSERIAL
test_constexpr-bitfield2_532:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-bitfield2.C'
    sources:
      binary: constexpr-bitfield2.s
  group: GRPSERIAL
test_constexpr-bitfield2_533:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-bitfield2.C'
    sources:
      binary: constexpr-bitfield2.s
  group: GRPSERIAL
test_constexpr-bitfield3_4293:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-bitfield3.C'
    sources:
      binary: constexpr-bitfield3.s
  group: GRPSERIAL
test_constexpr-bitfield3_4294:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-bitfield3.C'
    sources:
      binary: constexpr-bitfield3.s
  group: GRPSERIAL
test_constexpr-bitfield3_534:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-bitfield3.C'
    sources:
      binary: constexpr-bitfield3.s
  group: GRPSERIAL
test_constexpr-bitfield3_535:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-bitfield3.C'
    sources:
      binary: constexpr-bitfield3.s
  group: GRPSERIAL
test_constexpr-bitfield_4289:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-bitfield.C'
    sources:
      binary: constexpr-bitfield.s
  group: GRPSERIAL
test_constexpr-bitfield_4290:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-bitfield.C'
    sources:
      binary: constexpr-bitfield.s
  group: GRPSERIAL
test_constexpr-bitfield_530:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-bitfield.C'
    sources:
      binary: constexpr-bitfield.s
  group: GRPSERIAL
test_constexpr-bitfield_531:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-bitfield.C'
    sources:
      binary: constexpr-bitfield.s
  group: GRPSERIAL
test_constexpr-builtin1_4295:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-builtin1.C'
    sources:
      binary: constexpr-builtin1.s
  group: GRPSERIAL
test_constexpr-builtin1_4296:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-builtin1.C'
    sources:
      binary: constexpr-builtin1.s
  group: GRPSERIAL
test_constexpr-builtin1_536:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-builtin1.C'
    sources:
      binary: constexpr-builtin1.s
  group: GRPSERIAL
test_constexpr-builtin1_537:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-builtin1.C'
    sources:
      binary: constexpr-builtin1.s
  group: GRPSERIAL
test_constexpr-builtin2_4297:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-builtin2.C'
    sources:
      binary: constexpr-builtin2.s
  group: GRPSERIAL
test_constexpr-builtin2_4298:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-builtin2.C'
    sources:
      binary: constexpr-builtin2.s
  group: GRPSERIAL
test_constexpr-builtin2_538:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-builtin2.C'
    sources:
      binary: constexpr-builtin2.s
  group: GRPSERIAL
test_constexpr-builtin2_539:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-builtin2.C'
    sources:
      binary: constexpr-builtin2.s
  group: GRPSERIAL
test_constexpr-builtin3_4299:
  build:
    cflags: "-std=c++11 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-builtin3.C'
    sources:
      binary: constexpr-builtin3.s
  group: GRPSERIAL
test_constexpr-builtin3_540:
  build:
    cflags: "-std=c++11 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-builtin3.C'
    sources:
      binary: constexpr-builtin3.s
  group: GRPSERIAL
test_constexpr-cache1_4300:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-cache1.C'
    sources:
      binary: constexpr-cache1.s
  group: GRPSERIAL
test_constexpr-cache1_4301:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-cache1.C'
    sources:
      binary: constexpr-cache1.s
  group: GRPSERIAL
test_constexpr-cache1_541:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-cache1.C'
    sources:
      binary: constexpr-cache1.s
  group: GRPSERIAL
test_constexpr-cache1_542:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-cache1.C'
    sources:
      binary: constexpr-cache1.s
  group: GRPSERIAL
test_constexpr-cast_4302:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-cast.C'
    sources:
      binary: constexpr-cast.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".reinterpret_cast<void\\\\*>\\\\(1\\[ul\\]\\*\\\\).
          is not a constant expression")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-cast_4303:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-cast.C'
    sources:
      binary: constexpr-cast.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".reinterpret_cast<void\\\\*>\\\\(1\\[ul\\]\\*\\\\).
          is not a constant expression")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-cast_543:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-cast.C'
    sources:
      binary: constexpr-cast.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".reinterpret_cast<void\\\\*>\\\\(1\\[ul\\]\\*\\\\).
          is not a constant expression")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-cast_544:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-cast.C'
    sources:
      binary: constexpr-cast.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".reinterpret_cast<void\\\\*>\\\\(1\\[ul\\]\\*\\\\).
          is not a constant expression")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-cleanup_4304:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-cleanup.C'
    sources:
      binary: constexpr-cleanup.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-literal")[^\n]*\n?)+'
test_constexpr-cleanup_4305:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-cleanup.C'
    sources:
      binary: constexpr-cleanup.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-literal")[^\n]*\n?)+'
test_constexpr-cleanup_545:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-cleanup.C'
    sources:
      binary: constexpr-cleanup.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-literal")[^\n]*\n?)+'
test_constexpr-cleanup_546:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-cleanup.C'
    sources:
      binary: constexpr-cleanup.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-literal")[^\n]*\n?)+'
test_constexpr-complex2_4308:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-complex2.C'
    sources:
      binary: constexpr-complex2.s
  group: GRPSERIAL
test_constexpr-complex2_4309:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-complex2.C'
    sources:
      binary: constexpr-complex2.s
  group: GRPSERIAL
test_constexpr-complex2_549:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-complex2.C'
    sources:
      binary: constexpr-complex2.s
  group: GRPSERIAL
test_constexpr-complex2_550:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-complex2.C'
    sources:
      binary: constexpr-complex2.s
  group: GRPSERIAL
test_constexpr-complex_4306:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-complex.C'
    sources:
      binary: constexpr-complex.s
  group: GRPSERIAL
test_constexpr-complex_4307:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-complex.C'
    sources:
      binary: constexpr-complex.s
  group: GRPSERIAL
test_constexpr-complex_547:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-complex.C'
    sources:
      binary: constexpr-complex.s
  group: GRPSERIAL
test_constexpr-complex_548:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-complex.C'
    sources:
      binary: constexpr-complex.s
  group: GRPSERIAL
test_constexpr-compound_4310:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-compound.C'
    sources:
      binary: constexpr-compound.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("compound-statement")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("compound-statement")[^\n]*\n?)+'
test_constexpr-compound_4311:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-compound.C'
    sources:
      binary: constexpr-compound.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("compound-statement")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("compound-statement")[^\n]*\n?)+'
test_constexpr-compound_551:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-compound.C'
    sources:
      binary: constexpr-compound.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("compound-statement")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("compound-statement")[^\n]*\n?)+'
test_constexpr-compound_552:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-compound.C'
    sources:
      binary: constexpr-compound.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("compound-statement")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("compound-statement")[^\n]*\n?)+'
test_constexpr-condition2_4314:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-condition2.C'
    sources:
      binary: constexpr-condition2.s
  group: GRPSERIAL
test_constexpr-condition2_4315:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-condition2.C'
    sources:
      binary: constexpr-condition2.s
  group: GRPSERIAL
test_constexpr-condition2_555:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-condition2.C'
    sources:
      binary: constexpr-condition2.s
  group: GRPSERIAL
test_constexpr-condition2_556:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-condition2.C'
    sources:
      binary: constexpr-condition2.s
  group: GRPSERIAL
test_constexpr-condition_4312:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-condition.C'
    sources:
      binary: constexpr-condition.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("decl-specifier
          invalid")[^\n]*\n?)+'
test_constexpr-condition_4313:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-condition.C'
    sources:
      binary: constexpr-condition.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("decl-specifier
          invalid")[^\n]*\n?)+'
test_constexpr-condition_553:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-condition.C'
    sources:
      binary: constexpr-condition.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("decl-specifier
          invalid")[^\n]*\n?)+'
test_constexpr-condition_554:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-condition.C'
    sources:
      binary: constexpr-condition.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("decl-specifier
          invalid")[^\n]*\n?)+'
test_constexpr-const1_4316:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-const1.C'
    sources:
      binary: constexpr-const1.s
  group: GRPSERIAL
test_constexpr-const1_4317:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-const1.C'
    sources:
      binary: constexpr-const1.s
  group: GRPSERIAL
test_constexpr-const1_557:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-const1.C'
    sources:
      binary: constexpr-const1.s
  group: GRPSERIAL
test_constexpr-const1_558:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-const1.C'
    sources:
      binary: constexpr-const1.s
  group: GRPSERIAL
test_constexpr-conv1_4318:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-conv1.C'
    sources:
      binary: constexpr-conv1.s
  group: GRPSERIAL
test_constexpr-conv1_4319:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-conv1.C'
    sources:
      binary: constexpr-conv1.s
  group: GRPSERIAL
test_constexpr-conv1_559:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-conv1.C'
    sources:
      binary: constexpr-conv1.s
  group: GRPSERIAL
test_constexpr-conv1_560:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-conv1.C'
    sources:
      binary: constexpr-conv1.s
  group: GRPSERIAL
test_constexpr-ctor10_4322:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor10.C'
    sources:
      binary: constexpr-ctor10.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-ctor10_4323:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor10.C'
    sources:
      binary: constexpr-ctor10.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-ctor10_563:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor10.C'
    sources:
      binary: constexpr-ctor10.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-ctor10_564:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor10.C'
    sources:
      binary: constexpr-ctor10.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-ctor11_4324:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor11.C'
    sources:
      binary: constexpr-ctor11.s
  group: GRPSERIAL
test_constexpr-ctor11_4325:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor11.C'
    sources:
      binary: constexpr-ctor11.s
  group: GRPSERIAL
test_constexpr-ctor11_565:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor11.C'
    sources:
      binary: constexpr-ctor11.s
  group: GRPSERIAL
test_constexpr-ctor11_566:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor11.C'
    sources:
      binary: constexpr-ctor11.s
  group: GRPSERIAL
test_constexpr-ctor12_4326:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor12.C'
    sources:
      binary: constexpr-ctor12.s
  group: GRPSERIAL
test_constexpr-ctor12_4327:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor12.C'
    sources:
      binary: constexpr-ctor12.s
  group: GRPSERIAL
test_constexpr-ctor12_567:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor12.C'
    sources:
      binary: constexpr-ctor12.s
  group: GRPSERIAL
test_constexpr-ctor12_568:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor12.C'
    sources:
      binary: constexpr-ctor12.s
  group: GRPSERIAL
test_constexpr-ctor13_4328:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor13.C'
    sources:
      binary: constexpr-ctor13.s
  group: GRPSERIAL
test_constexpr-ctor13_4329:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor13.C'
    sources:
      binary: constexpr-ctor13.s
  group: GRPSERIAL
test_constexpr-ctor13_569:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor13.C'
    sources:
      binary: constexpr-ctor13.s
  group: GRPSERIAL
test_constexpr-ctor13_570:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor13.C'
    sources:
      binary: constexpr-ctor13.s
  group: GRPSERIAL
test_constexpr-ctor14_4330:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor14.C'
    sources:
      binary: constexpr-ctor14.s
  group: GRPSERIAL
test_constexpr-ctor14_4331:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor14.C'
    sources:
      binary: constexpr-ctor14.s
  group: GRPSERIAL
test_constexpr-ctor14_571:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor14.C'
    sources:
      binary: constexpr-ctor14.s
  group: GRPSERIAL
test_constexpr-ctor14_572:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor14.C'
    sources:
      binary: constexpr-ctor14.s
  group: GRPSERIAL
test_constexpr-ctor14a_4332:
  build:
    cflags: "-std=gnu++11 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor14a.C'
    sources:
      binary: constexpr-ctor14a.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-ctor14a_4333:
  build:
    cflags: "-std=gnu++14 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor14a.C'
    sources:
      binary: constexpr-ctor14a.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-ctor14a_573:
  build:
    cflags: "-std=gnu++11 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor14a.C'
    sources:
      binary: constexpr-ctor14a.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-ctor14a_574:
  build:
    cflags: "-std=gnu++14 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor14a.C'
    sources:
      binary: constexpr-ctor14a.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-ctor15_4334:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor15.C'
    sources:
      binary: constexpr-ctor15.s
  group: GRPSERIAL
test_constexpr-ctor15_4335:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor15.C'
    sources:
      binary: constexpr-ctor15.s
  group: GRPSERIAL
test_constexpr-ctor15_575:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor15.C'
    sources:
      binary: constexpr-ctor15.s
  group: GRPSERIAL
test_constexpr-ctor15_576:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor15.C'
    sources:
      binary: constexpr-ctor15.s
  group: GRPSERIAL
test_constexpr-ctor16_4336:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor16.C'
    sources:
      binary: constexpr-ctor16.s
  group: GRPSERIAL
test_constexpr-ctor16_4337:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor16.C'
    sources:
      binary: constexpr-ctor16.s
  group: GRPSERIAL
test_constexpr-ctor16_577:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor16.C'
    sources:
      binary: constexpr-ctor16.s
  group: GRPSERIAL
test_constexpr-ctor16_578:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor16.C'
    sources:
      binary: constexpr-ctor16.s
  group: GRPSERIAL
test_constexpr-ctor17_4338:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor17.C'
    sources:
      binary: constexpr-ctor17.s
  group: GRPSERIAL
test_constexpr-ctor17_4339:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor17.C'
    sources:
      binary: constexpr-ctor17.s
  group: GRPSERIAL
test_constexpr-ctor17_579:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor17.C'
    sources:
      binary: constexpr-ctor17.s
  group: GRPSERIAL
test_constexpr-ctor17_580:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor17.C'
    sources:
      binary: constexpr-ctor17.s
  group: GRPSERIAL
test_constexpr-ctor18_4340:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor18.C'
    sources:
      binary: constexpr-ctor18.s
  group: GRPSERIAL
test_constexpr-ctor18_4341:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor18.C'
    sources:
      binary: constexpr-ctor18.s
  group: GRPSERIAL
test_constexpr-ctor18_581:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor18.C'
    sources:
      binary: constexpr-ctor18.s
  group: GRPSERIAL
test_constexpr-ctor18_582:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor18.C'
    sources:
      binary: constexpr-ctor18.s
  group: GRPSERIAL
test_constexpr-ctor19_4342:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor19.C'
    sources:
      binary: constexpr-ctor19.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
test_constexpr-ctor19_4343:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor19.C'
    sources:
      binary: constexpr-ctor19.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
test_constexpr-ctor19_583:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor19.C'
    sources:
      binary: constexpr-ctor19.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
test_constexpr-ctor19_584:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor19.C'
    sources:
      binary: constexpr-ctor19.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
test_constexpr-ctor2_4344:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor2.C'
    sources:
      binary: constexpr-ctor2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::A")[^\n]*\n?)+'
test_constexpr-ctor2_4345:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor2.C'
    sources:
      binary: constexpr-ctor2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::A")[^\n]*\n?)+'
test_constexpr-ctor2_585:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor2.C'
    sources:
      binary: constexpr-ctor2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::A")[^\n]*\n?)+'
test_constexpr-ctor2_586:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor2.C'
    sources:
      binary: constexpr-ctor2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::A")[^\n]*\n?)+'
test_constexpr-ctor3_4346:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor3.C'
    sources:
      binary: constexpr-ctor3.s
  group: GRPSERIAL
test_constexpr-ctor3_4347:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor3.C'
    sources:
      binary: constexpr-ctor3.s
  group: GRPSERIAL
test_constexpr-ctor3_587:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor3.C'
    sources:
      binary: constexpr-ctor3.s
  group: GRPSERIAL
test_constexpr-ctor3_588:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor3.C'
    sources:
      binary: constexpr-ctor3.s
  group: GRPSERIAL
test_constexpr-ctor4_4348:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor4.C'
    sources:
      binary: constexpr-ctor4.s
  group: GRPSERIAL
test_constexpr-ctor4_4349:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor4.C'
    sources:
      binary: constexpr-ctor4.s
  group: GRPSERIAL
test_constexpr-ctor4_589:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor4.C'
    sources:
      binary: constexpr-ctor4.s
  group: GRPSERIAL
test_constexpr-ctor4_590:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor4.C'
    sources:
      binary: constexpr-ctor4.s
  group: GRPSERIAL
test_constexpr-ctor5_4350:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor5.C'
    sources:
      binary: constexpr-ctor5.s
  group: GRPSERIAL
test_constexpr-ctor5_4351:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor5.C'
    sources:
      binary: constexpr-ctor5.s
  group: GRPSERIAL
test_constexpr-ctor5_591:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor5.C'
    sources:
      binary: constexpr-ctor5.s
  group: GRPSERIAL
test_constexpr-ctor5_592:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor5.C'
    sources:
      binary: constexpr-ctor5.s
  group: GRPSERIAL
test_constexpr-ctor6_4352:
  build:
    cflags: "-std=gnu++11 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor6.C'
    sources:
      binary: constexpr-ctor6.s
  group: GRPSERIAL
test_constexpr-ctor6_4353:
  build:
    cflags: "-std=gnu++14 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor6.C'
    sources:
      binary: constexpr-ctor6.s
  group: GRPSERIAL
test_constexpr-ctor6_593:
  build:
    cflags: "-std=gnu++11 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor6.C'
    sources:
      binary: constexpr-ctor6.s
  group: GRPSERIAL
test_constexpr-ctor6_594:
  build:
    cflags: "-std=gnu++14 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor6.C'
    sources:
      binary: constexpr-ctor6.s
  group: GRPSERIAL
test_constexpr-ctor7_4354:
  build:
    cflags: "-std=gnu++11 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor7.C'
    sources:
      binary: constexpr-ctor7.s
  group: GRPSERIAL
test_constexpr-ctor7_4355:
  build:
    cflags: "-std=gnu++14 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor7.C'
    sources:
      binary: constexpr-ctor7.s
  group: GRPSERIAL
test_constexpr-ctor7_595:
  build:
    cflags: "-std=gnu++11 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor7.C'
    sources:
      binary: constexpr-ctor7.s
  group: GRPSERIAL
test_constexpr-ctor7_596:
  build:
    cflags: "-std=gnu++14 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor7.C'
    sources:
      binary: constexpr-ctor7.s
  group: GRPSERIAL
test_constexpr-ctor8_4356:
  build:
    cflags: "-std=gnu++11 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor8.C'
    sources:
      binary: constexpr-ctor8.s
  group: GRPSERIAL
test_constexpr-ctor8_4357:
  build:
    cflags: "-std=gnu++14 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor8.C'
    sources:
      binary: constexpr-ctor8.s
  group: GRPSERIAL
test_constexpr-ctor8_597:
  build:
    cflags: "-std=gnu++11 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor8.C'
    sources:
      binary: constexpr-ctor8.s
  group: GRPSERIAL
test_constexpr-ctor8_598:
  build:
    cflags: "-std=gnu++14 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor8.C'
    sources:
      binary: constexpr-ctor8.s
  group: GRPSERIAL
test_constexpr-ctor9_4358:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor9.C'
    sources:
      binary: constexpr-ctor9.s
  group: GRPSERIAL
test_constexpr-ctor9_4359:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor9.C'
    sources:
      binary: constexpr-ctor9.s
  group: GRPSERIAL
test_constexpr-ctor9_599:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor9.C'
    sources:
      binary: constexpr-ctor9.s
  group: GRPSERIAL
test_constexpr-ctor9_600:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor9.C'
    sources:
      binary: constexpr-ctor9.s
  group: GRPSERIAL
test_constexpr-ctor_4320:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor.C'
    sources:
      binary: constexpr-ctor.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::i")[^\n]*\n?)+'
test_constexpr-ctor_4321:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor.C'
    sources:
      binary: constexpr-ctor.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::i")[^\n]*\n?)+'
test_constexpr-ctor_561:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor.C'
    sources:
      binary: constexpr-ctor.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::i")[^\n]*\n?)+'
test_constexpr-ctor_562:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ctor.C'
    sources:
      binary: constexpr-ctor.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A::i")[^\n]*\n?)+'
test_constexpr-data1_4360:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-data1.C'
    sources:
      binary: constexpr-data1.s
  group: GRPSERIAL
  validate:
    match:
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing class
          .* not a literal type")[^\n]*\n?)+'
test_constexpr-data1_4361:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-data1.C'
    sources:
      binary: constexpr-data1.s
  group: GRPSERIAL
  validate:
    match:
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing class
          .* not a literal type")[^\n]*\n?)+'
test_constexpr-data1_601:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-data1.C'
    sources:
      binary: constexpr-data1.s
  group: GRPSERIAL
  validate:
    match:
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing class
          .* not a literal type")[^\n]*\n?)+'
test_constexpr-data1_602:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-data1.C'
    sources:
      binary: constexpr-data1.s
  group: GRPSERIAL
  validate:
    match:
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing class
          .* not a literal type")[^\n]*\n?)+'
test_constexpr-data2_4362:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-data2.C'
    sources:
      binary: constexpr-data2.s
  group: GRPSERIAL
  validate:
    match:
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_constexpr-data2_4363:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-data2.C'
    sources:
      binary: constexpr-data2.s
  group: GRPSERIAL
  validate:
    match:
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_constexpr-data2_603:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-data2.C'
    sources:
      binary: constexpr-data2.s
  group: GRPSERIAL
  validate:
    match:
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_constexpr-data2_604:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-data2.C'
    sources:
      binary: constexpr-data2.s
  group: GRPSERIAL
  validate:
    match:
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_constexpr-decl_4364:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-decl.C'
    sources:
      binary: constexpr-decl.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must have an initializer")[^\n]*\n?)+'
test_constexpr-decl_4365:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-decl.C'
    sources:
      binary: constexpr-decl.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must have an initializer")[^\n]*\n?)+'
test_constexpr-decl_605:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-decl.C'
    sources:
      binary: constexpr-decl.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must have an initializer")[^\n]*\n?)+'
test_constexpr-decl_606:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-decl.C'
    sources:
      binary: constexpr-decl.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must have an initializer")[^\n]*\n?)+'
test_constexpr-decltype1_4366:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-decltype1.C'
    sources:
      binary: ./constexpr-decltype1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-decltype1_4367:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-decltype1.C'
    sources:
      binary: ./constexpr-decltype1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-decltype1_607:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-decltype1.C'
    sources:
      binary: ./constexpr-decltype1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-decltype1_608:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-decltype1.C'
    sources:
      binary: ./constexpr-decltype1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-decltype2_4368:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-decltype2.C'
    sources:
      binary: constexpr-decltype2.s
  group: GRPSERIAL
test_constexpr-decltype2_4369:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-decltype2.C'
    sources:
      binary: constexpr-decltype2.s
  group: GRPSERIAL
test_constexpr-decltype2_609:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-decltype2.C'
    sources:
      binary: constexpr-decltype2.s
  group: GRPSERIAL
test_constexpr-decltype2_610:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-decltype2.C'
    sources:
      binary: constexpr-decltype2.s
  group: GRPSERIAL
test_constexpr-defarg2_4372:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-defarg2.C'
    sources:
      binary: constexpr-defarg2.s
  group: GRPSERIAL
test_constexpr-defarg2_4373:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-defarg2.C'
    sources:
      binary: constexpr-defarg2.s
  group: GRPSERIAL
test_constexpr-defarg2_613:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-defarg2.C'
    sources:
      binary: constexpr-defarg2.s
  group: GRPSERIAL
test_constexpr-defarg2_614:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-defarg2.C'
    sources:
      binary: constexpr-defarg2.s
  group: GRPSERIAL
test_constexpr-defarg_4370:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-defarg.C'
    sources:
      binary: constexpr-defarg.s
  group: GRPSERIAL
test_constexpr-defarg_4371:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-defarg.C'
    sources:
      binary: constexpr-defarg.s
  group: GRPSERIAL
test_constexpr-defarg_611:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-defarg.C'
    sources:
      binary: constexpr-defarg.s
  group: GRPSERIAL
test_constexpr-defarg_612:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-defarg.C'
    sources:
      binary: constexpr-defarg.s
  group: GRPSERIAL
test_constexpr-default-ctor_4374:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-default-ctor.C'
    sources:
      binary: constexpr-default-ctor.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid type")[^\n]*\n?)+'
test_constexpr-default-ctor_4375:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-default-ctor.C'
    sources:
      binary: constexpr-default-ctor.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid type")[^\n]*\n?)+'
test_constexpr-default-ctor_615:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-default-ctor.C'
    sources:
      binary: constexpr-default-ctor.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid type")[^\n]*\n?)+'
test_constexpr-default-ctor_616:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-default-ctor.C'
    sources:
      binary: constexpr-default-ctor.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid type")[^\n]*\n?)+'
test_constexpr-default1_4376:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-default1.C'
    sources:
      binary: constexpr-default1.s
  group: GRPSERIAL
test_constexpr-default1_4377:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-default1.C'
    sources:
      binary: constexpr-default1.s
  group: GRPSERIAL
test_constexpr-default1_617:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-default1.C'
    sources:
      binary: constexpr-default1.s
  group: GRPSERIAL
test_constexpr-default1_618:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-default1.C'
    sources:
      binary: constexpr-default1.s
  group: GRPSERIAL
test_constexpr-delegating2_4380:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delegating2.C'
    sources:
      binary: constexpr-delegating2.s
  group: GRPSERIAL
test_constexpr-delegating2_4381:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delegating2.C'
    sources:
      binary: constexpr-delegating2.s
  group: GRPSERIAL
test_constexpr-delegating2_621:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delegating2.C'
    sources:
      binary: constexpr-delegating2.s
  group: GRPSERIAL
test_constexpr-delegating2_622:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delegating2.C'
    sources:
      binary: constexpr-delegating2.s
  group: GRPSERIAL
test_constexpr-delegating_4378:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delegating.C'
    sources:
      binary: constexpr-delegating.s
  group: GRPSERIAL
test_constexpr-delegating_4379:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delegating.C'
    sources:
      binary: constexpr-delegating.s
  group: GRPSERIAL
test_constexpr-delegating_619:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delegating.C'
    sources:
      binary: constexpr-delegating.s
  group: GRPSERIAL
test_constexpr-delegating_620:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delegating.C'
    sources:
      binary: constexpr-delegating.s
  group: GRPSERIAL
test_constexpr-delete2_4384:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delete2.C'
    sources:
      binary: constexpr-delete2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-delete2_4385:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delete2.C'
    sources:
      binary: constexpr-delete2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-delete2_625:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delete2.C'
    sources:
      binary: constexpr-delete2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-delete2_626:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delete2.C'
    sources:
      binary: constexpr-delete2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-delete_4382:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delete.C'
    sources:
      binary: constexpr-delete.s
  group: GRPSERIAL
test_constexpr-delete_4383:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delete.C'
    sources:
      binary: constexpr-delete.s
  group: GRPSERIAL
test_constexpr-delete_623:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delete.C'
    sources:
      binary: constexpr-delete.s
  group: GRPSERIAL
test_constexpr-delete_624:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-delete.C'
    sources:
      binary: constexpr-delete.s
  group: GRPSERIAL
test_constexpr-deref_4386:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-deref.C'
    sources:
      binary: constexpr-deref.s
  group: GRPSERIAL
test_constexpr-deref_4387:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-deref.C'
    sources:
      binary: constexpr-deref.s
  group: GRPSERIAL
test_constexpr-deref_627:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-deref.C'
    sources:
      binary: constexpr-deref.s
  group: GRPSERIAL
test_constexpr-deref_628:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-deref.C'
    sources:
      binary: constexpr-deref.s
  group: GRPSERIAL
test_constexpr-diag1_4388:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag1.C'
    sources:
      binary: constexpr-diag1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing class")[^\n]*\n?)+'
test_constexpr-diag1_4389:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag1.C'
    sources:
      binary: constexpr-diag1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing class")[^\n]*\n?)+'
test_constexpr-diag1_629:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag1.C'
    sources:
      binary: constexpr-diag1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing class")[^\n]*\n?)+'
test_constexpr-diag1_630:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag1.C'
    sources:
      binary: constexpr-diag1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing class")[^\n]*\n?)+'
test_constexpr-diag2_4390:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag2.C'
    sources:
      binary: constexpr-diag2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not usable")[^\n]*\n?)+'
test_constexpr-diag2_4391:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag2.C'
    sources:
      binary: constexpr-diag2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not usable")[^\n]*\n?)+'
test_constexpr-diag2_631:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag2.C'
    sources:
      binary: constexpr-diag2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not usable")[^\n]*\n?)+'
test_constexpr-diag2_632:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag2.C'
    sources:
      binary: constexpr-diag2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not usable")[^\n]*\n?)+'
test_constexpr-diag3_4392:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag3.C'
    sources:
      binary: constexpr-diag3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("g.T")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a literal
          type")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not literal")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr
          function")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not literal")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicit declaration
          is not constexpr")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("f.int")[^\n]*\n?)+'
test_constexpr-diag3_4393:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag3.C'
    sources:
      binary: constexpr-diag3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("g.T")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a literal
          type")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not literal")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr
          function")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not literal")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicit declaration
          is not constexpr")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("f.int")[^\n]*\n?)+'
test_constexpr-diag3_633:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag3.C'
    sources:
      binary: constexpr-diag3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("g.T")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a literal
          type")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not literal")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr
          function")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not literal")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicit declaration
          is not constexpr")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("f.int")[^\n]*\n?)+'
test_constexpr-diag3_634:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag3.C'
    sources:
      binary: constexpr-diag3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("g.T")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a literal
          type")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not literal")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr
          function")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not literal")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicit declaration
          is not constexpr")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("f.int")[^\n]*\n?)+'
test_constexpr-diag4_4394:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag4.C'
    sources:
      binary: constexpr-diag4.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B1::a1")[^\n]*\n?)+'
test_constexpr-diag4_4395:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag4.C'
    sources:
      binary: constexpr-diag4.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B1::a1")[^\n]*\n?)+'
test_constexpr-diag4_635:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag4.C'
    sources:
      binary: constexpr-diag4.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B1::a1")[^\n]*\n?)+'
test_constexpr-diag4_636:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag4.C'
    sources:
      binary: constexpr-diag4.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B1::a1")[^\n]*\n?)+'
test_constexpr-diag5_4396:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag5.C'
    sources:
      binary: constexpr-diag5.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
test_constexpr-diag5_4397:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag5.C'
    sources:
      binary: constexpr-diag5.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
test_constexpr-diag5_637:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag5.C'
    sources:
      binary: constexpr-diag5.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
test_constexpr-diag5_638:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-diag5.C'
    sources:
      binary: constexpr-diag5.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
test_constexpr-eh-spec_4398:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-eh-spec.C'
    sources:
      binary: constexpr-eh-spec.s
  group: GRPSERIAL
test_constexpr-eh-spec_4399:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-eh-spec.C'
    sources:
      binary: constexpr-eh-spec.s
  group: GRPSERIAL
test_constexpr-eh-spec_639:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-eh-spec.C'
    sources:
      binary: constexpr-eh-spec.s
  group: GRPSERIAL
test_constexpr-eh-spec_640:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-eh-spec.C'
    sources:
      binary: constexpr-eh-spec.s
  group: GRPSERIAL
test_constexpr-ellipsis2_4402:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ellipsis2.C'
    sources:
      binary: constexpr-ellipsis2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition|empty")[^\n]*\n?)+'
test_constexpr-ellipsis2_4403:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ellipsis2.C'
    sources:
      binary: constexpr-ellipsis2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition|empty")[^\n]*\n?)+'
test_constexpr-ellipsis2_643:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ellipsis2.C'
    sources:
      binary: constexpr-ellipsis2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition|empty")[^\n]*\n?)+'
test_constexpr-ellipsis2_644:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ellipsis2.C'
    sources:
      binary: constexpr-ellipsis2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition|empty")[^\n]*\n?)+'
test_constexpr-ellipsis_4400:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ellipsis.C'
    sources:
      binary: constexpr-ellipsis.s
  group: GRPSERIAL
test_constexpr-ellipsis_4401:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ellipsis.C'
    sources:
      binary: constexpr-ellipsis.s
  group: GRPSERIAL
test_constexpr-ellipsis_641:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ellipsis.C'
    sources:
      binary: constexpr-ellipsis.s
  group: GRPSERIAL
test_constexpr-ellipsis_642:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ellipsis.C'
    sources:
      binary: constexpr-ellipsis.s
  group: GRPSERIAL
test_constexpr-empty10_4406:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty10.C'
    sources:
      binary: constexpr-empty10.s
  group: GRPSERIAL
test_constexpr-empty10_4407:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty10.C'
    sources:
      binary: constexpr-empty10.s
  group: GRPSERIAL
test_constexpr-empty10_647:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty10.C'
    sources:
      binary: constexpr-empty10.s
  group: GRPSERIAL
test_constexpr-empty10_648:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty10.C'
    sources:
      binary: constexpr-empty10.s
  group: GRPSERIAL
test_constexpr-empty11_4408:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty11.C'
    sources:
      binary: constexpr-empty11.s
  group: GRPSERIAL
test_constexpr-empty11_4409:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty11.C'
    sources:
      binary: constexpr-empty11.s
  group: GRPSERIAL
test_constexpr-empty11_649:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty11.C'
    sources:
      binary: constexpr-empty11.s
  group: GRPSERIAL
test_constexpr-empty11_650:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty11.C'
    sources:
      binary: constexpr-empty11.s
  group: GRPSERIAL
test_constexpr-empty12_4410:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty12.C'
    sources:
      binary: constexpr-empty12.s
  group: GRPSERIAL
test_constexpr-empty12_4411:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty12.C'
    sources:
      binary: constexpr-empty12.s
  group: GRPSERIAL
test_constexpr-empty12_651:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty12.C'
    sources:
      binary: constexpr-empty12.s
  group: GRPSERIAL
test_constexpr-empty12_652:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty12.C'
    sources:
      binary: constexpr-empty12.s
  group: GRPSERIAL
test_constexpr-empty13_4412:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty13.C'
    sources:
      binary: constexpr-empty13.s
  group: GRPSERIAL
test_constexpr-empty13_4413:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty13.C'
    sources:
      binary: constexpr-empty13.s
  group: GRPSERIAL
test_constexpr-empty13_653:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty13.C'
    sources:
      binary: constexpr-empty13.s
  group: GRPSERIAL
test_constexpr-empty13_654:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty13.C'
    sources:
      binary: constexpr-empty13.s
  group: GRPSERIAL
test_constexpr-empty2_4414:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty2.C'
    sources:
      binary: constexpr-empty2.s
  group: GRPSERIAL
test_constexpr-empty2_4415:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty2.C'
    sources:
      binary: constexpr-empty2.s
  group: GRPSERIAL
test_constexpr-empty2_655:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty2.C'
    sources:
      binary: constexpr-empty2.s
  group: GRPSERIAL
test_constexpr-empty2_656:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty2.C'
    sources:
      binary: constexpr-empty2.s
  group: GRPSERIAL
test_constexpr-empty3_4416:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty3.C'
    sources:
      binary: constexpr-empty3.s
  group: GRPSERIAL
test_constexpr-empty3_4417:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty3.C'
    sources:
      binary: constexpr-empty3.s
  group: GRPSERIAL
test_constexpr-empty3_657:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty3.C'
    sources:
      binary: constexpr-empty3.s
  group: GRPSERIAL
test_constexpr-empty3_658:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty3.C'
    sources:
      binary: constexpr-empty3.s
  group: GRPSERIAL
test_constexpr-empty4_4418:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty4.C'
    sources:
      binary: constexpr-empty4.s
  group: GRPSERIAL
test_constexpr-empty4_4419:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty4.C'
    sources:
      binary: constexpr-empty4.s
  group: GRPSERIAL
test_constexpr-empty4_659:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty4.C'
    sources:
      binary: constexpr-empty4.s
  group: GRPSERIAL
test_constexpr-empty4_660:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty4.C'
    sources:
      binary: constexpr-empty4.s
  group: GRPSERIAL
test_constexpr-empty5_4420:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty5.C'
    sources:
      binary: constexpr-empty5.s
  group: GRPSERIAL
test_constexpr-empty5_4421:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty5.C'
    sources:
      binary: constexpr-empty5.s
  group: GRPSERIAL
test_constexpr-empty5_661:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty5.C'
    sources:
      binary: constexpr-empty5.s
  group: GRPSERIAL
test_constexpr-empty5_662:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty5.C'
    sources:
      binary: constexpr-empty5.s
  group: GRPSERIAL
test_constexpr-empty6_4422:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty6.C'
    sources:
      binary: constexpr-empty6.s
  group: GRPSERIAL
test_constexpr-empty6_4423:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty6.C'
    sources:
      binary: constexpr-empty6.s
  group: GRPSERIAL
test_constexpr-empty6_663:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty6.C'
    sources:
      binary: constexpr-empty6.s
  group: GRPSERIAL
test_constexpr-empty6_664:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty6.C'
    sources:
      binary: constexpr-empty6.s
  group: GRPSERIAL
test_constexpr-empty7_4424:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty7.C'
    sources:
      binary: constexpr-empty7.s
  group: GRPSERIAL
test_constexpr-empty7_4425:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty7.C'
    sources:
      binary: constexpr-empty7.s
  group: GRPSERIAL
test_constexpr-empty7_665:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty7.C'
    sources:
      binary: constexpr-empty7.s
  group: GRPSERIAL
test_constexpr-empty7_666:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty7.C'
    sources:
      binary: constexpr-empty7.s
  group: GRPSERIAL
test_constexpr-empty8_4426:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty8.C'
    sources:
      binary: constexpr-empty8.s
  group: GRPSERIAL
test_constexpr-empty8_4427:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty8.C'
    sources:
      binary: constexpr-empty8.s
  group: GRPSERIAL
test_constexpr-empty8_667:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty8.C'
    sources:
      binary: constexpr-empty8.s
  group: GRPSERIAL
test_constexpr-empty8_668:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty8.C'
    sources:
      binary: constexpr-empty8.s
  group: GRPSERIAL
test_constexpr-empty9_4428:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty9.C'
    sources:
      binary: constexpr-empty9.s
  group: GRPSERIAL
test_constexpr-empty9_4429:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty9.C'
    sources:
      binary: constexpr-empty9.s
  group: GRPSERIAL
test_constexpr-empty9_669:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty9.C'
    sources:
      binary: constexpr-empty9.s
  group: GRPSERIAL
test_constexpr-empty9_670:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty9.C'
    sources:
      binary: constexpr-empty9.s
  group: GRPSERIAL
test_constexpr-empty_4404:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty.C'
    sources:
      binary: constexpr-empty.s
  group: GRPSERIAL
test_constexpr-empty_4405:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty.C'
    sources:
      binary: constexpr-empty.s
  group: GRPSERIAL
test_constexpr-empty_645:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty.C'
    sources:
      binary: constexpr-empty.s
  group: GRPSERIAL
test_constexpr-empty_646:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-empty.C'
    sources:
      binary: constexpr-empty.s
  group: GRPSERIAL
test_constexpr-ex1_4430:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex1.C'
    sources:
      binary: constexpr-ex1.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("S::t")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ff")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("x5|argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr")[^\n]*\n?)+'
test_constexpr-ex1_4431:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex1.C'
    sources:
      binary: constexpr-ex1.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("S::t")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ff")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("x5|argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr")[^\n]*\n?)+'
test_constexpr-ex1_671:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex1.C'
    sources:
      binary: constexpr-ex1.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("S::t")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ff")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("x5|argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr")[^\n]*\n?)+'
test_constexpr-ex1_672:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex1.C'
    sources:
      binary: constexpr-ex1.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("S::t")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ff")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("x5|argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr")[^\n]*\n?)+'
test_constexpr-ex2_4432:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex2.C'
    sources:
      binary: constexpr-ex2.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous|conversion|array")[^\n]*\n?)+'
test_constexpr-ex2_4433:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex2.C'
    sources:
      binary: constexpr-ex2.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous|conversion|array")[^\n]*\n?)+'
test_constexpr-ex2_673:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex2.C'
    sources:
      binary: constexpr-ex2.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous|conversion|array")[^\n]*\n?)+'
test_constexpr-ex2_674:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex2.C'
    sources:
      binary: constexpr-ex2.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous|conversion|array")[^\n]*\n?)+'
test_constexpr-ex3_4434:
  build:
    cflags: "-std=gnu++11 -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex3.C'
    sources:
      binary: constexpr-ex3.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition|\''b\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty body|A::i")[^\n]*\n?)+'
test_constexpr-ex3_4435:
  build:
    cflags: "-std=gnu++14 -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex3.C'
    sources:
      binary: constexpr-ex3.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition|\''b\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty body|A::i")[^\n]*\n?)+'
test_constexpr-ex3_675:
  build:
    cflags: "-std=gnu++11 -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex3.C'
    sources:
      binary: constexpr-ex3.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition|\''b\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty body|A::i")[^\n]*\n?)+'
test_constexpr-ex3_676:
  build:
    cflags: "-std=gnu++14 -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex3.C'
    sources:
      binary: constexpr-ex3.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant
          condition|\''b\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty body|A::i")[^\n]*\n?)+'
test_constexpr-ex4_4436:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex4.C'
    sources:
      binary: constexpr-ex4.s
  group: GRPSERIAL
test_constexpr-ex4_4437:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex4.C'
    sources:
      binary: constexpr-ex4.s
  group: GRPSERIAL
test_constexpr-ex4_677:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex4.C'
    sources:
      binary: constexpr-ex4.s
  group: GRPSERIAL
test_constexpr-ex4_678:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ex4.C'
    sources:
      binary: constexpr-ex4.s
  group: GRPSERIAL
test_constexpr-expinst_4438:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-expinst.C'
    sources:
      binary: constexpr-expinst.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specifier")[^\n]*\n?)+'
test_constexpr-expinst_4439:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-expinst.C'
    sources:
      binary: constexpr-expinst.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specifier")[^\n]*\n?)+'
test_constexpr-expinst_679:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-expinst.C'
    sources:
      binary: constexpr-expinst.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specifier")[^\n]*\n?)+'
test_constexpr-expinst_680:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-expinst.C'
    sources:
      binary: constexpr-expinst.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specifier")[^\n]*\n?)+'
test_constexpr-explicit-inst_4440:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-explicit-inst.C'
    sources:
      binary: constexpr-explicit-inst.s
  group: GRPSERIAL
test_constexpr-explicit-inst_4441:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-explicit-inst.C'
    sources:
      binary: constexpr-explicit-inst.s
  group: GRPSERIAL
test_constexpr-explicit-inst_681:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-explicit-inst.C'
    sources:
      binary: constexpr-explicit-inst.s
  group: GRPSERIAL
test_constexpr-explicit-inst_682:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-explicit-inst.C'
    sources:
      binary: constexpr-explicit-inst.s
  group: GRPSERIAL
test_constexpr-fnptr_4442:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fnptr.C'
    sources:
      binary: constexpr-fnptr.s
  group: GRPSERIAL
test_constexpr-fnptr_4443:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fnptr.C'
    sources:
      binary: constexpr-fnptr.s
  group: GRPSERIAL
test_constexpr-fnptr_683:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fnptr.C'
    sources:
      binary: constexpr-fnptr.s
  group: GRPSERIAL
test_constexpr-fnptr_684:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fnptr.C'
    sources:
      binary: constexpr-fnptr.s
  group: GRPSERIAL
test_constexpr-fold1_4444:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fold1.C'
    sources:
      binary: constexpr-fold1.s
  group: GRPSERIAL
test_constexpr-fold1_4445:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fold1.C'
    sources:
      binary: constexpr-fold1.s
  group: GRPSERIAL
test_constexpr-fold1_685:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fold1.C'
    sources:
      binary: constexpr-fold1.s
  group: GRPSERIAL
test_constexpr-fold1_686:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fold1.C'
    sources:
      binary: constexpr-fold1.s
  group: GRPSERIAL
test_constexpr-fold2_4446:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fold2.C'
    sources:
      binary: constexpr-fold2.s
  group: GRPSERIAL
test_constexpr-fold2_4447:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fold2.C'
    sources:
      binary: constexpr-fold2.s
  group: GRPSERIAL
test_constexpr-fold2_687:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fold2.C'
    sources:
      binary: constexpr-fold2.s
  group: GRPSERIAL
test_constexpr-fold2_688:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fold2.C'
    sources:
      binary: constexpr-fold2.s
  group: GRPSERIAL
test_constexpr-friend-2_4448:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-friend-2.C'
    sources:
      binary: constexpr-friend-2.s
  group: GRPSERIAL
test_constexpr-friend-2_4449:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-friend-2.C'
    sources:
      binary: constexpr-friend-2.s
  group: GRPSERIAL
test_constexpr-friend-2_689:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-friend-2.C'
    sources:
      binary: constexpr-friend-2.s
  group: GRPSERIAL
test_constexpr-friend-2_690:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-friend-2.C'
    sources:
      binary: constexpr-friend-2.s
  group: GRPSERIAL
test_constexpr-friend-3_4450:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-friend-3.C'
    sources:
      binary: constexpr-friend-3.s
  group: GRPSERIAL
test_constexpr-friend-3_4451:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-friend-3.C'
    sources:
      binary: constexpr-friend-3.s
  group: GRPSERIAL
test_constexpr-friend-3_691:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-friend-3.C'
    sources:
      binary: constexpr-friend-3.s
  group: GRPSERIAL
test_constexpr-friend-3_692:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-friend-3.C'
    sources:
      binary: constexpr-friend-3.s
  group: GRPSERIAL
test_constexpr-friend_4452:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-friend.C'
    sources:
      binary: constexpr-friend.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-friend_4453:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-friend.C'
    sources:
      binary: constexpr-friend.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-friend_693:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-friend.C'
    sources:
      binary: constexpr-friend.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-friend_694:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-friend.C'
    sources:
      binary: constexpr-friend.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-function1_4454:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-function1.C'
    sources:
      binary: constexpr-function1.s
  group: GRPSERIAL
test_constexpr-function1_4455:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-function1.C'
    sources:
      binary: constexpr-function1.s
  group: GRPSERIAL
test_constexpr-function1_695:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-function1.C'
    sources:
      binary: constexpr-function1.s
  group: GRPSERIAL
test_constexpr-function1_696:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-function1.C'
    sources:
      binary: constexpr-function1.s
  group: GRPSERIAL
test_constexpr-function2_4456:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-function2.C'
    sources:
      binary: constexpr-function2.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("side|argument")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("return type .void")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("--")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-function2_4457:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-function2.C'
    sources:
      binary: constexpr-function2.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("side|argument")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("return type .void")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("--")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-function2_697:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-function2.C'
    sources:
      binary: constexpr-function2.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("side|argument")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("return type .void")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("--")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-function2_698:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-function2.C'
    sources:
      binary: constexpr-function2.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("side|argument")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("return type .void")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("--")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-function3_4458:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-function3.C'
    sources:
      binary: constexpr-function3.s
  group: GRPSERIAL
test_constexpr-function3_4459:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-function3.C'
    sources:
      binary: constexpr-function3.s
  group: GRPSERIAL
test_constexpr-function3_699:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-function3.C'
    sources:
      binary: constexpr-function3.s
  group: GRPSERIAL
test_constexpr-function3_700:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-function3.C'
    sources:
      binary: constexpr-function3.s
  group: GRPSERIAL
test_constexpr-fwctor1_4460:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fwctor1.C'
    sources:
      binary: constexpr-fwctor1.s
  group: GRPSERIAL
test_constexpr-fwctor1_4461:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fwctor1.C'
    sources:
      binary: constexpr-fwctor1.s
  group: GRPSERIAL
test_constexpr-fwctor1_701:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fwctor1.C'
    sources:
      binary: constexpr-fwctor1.s
  group: GRPSERIAL
test_constexpr-fwctor1_702:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-fwctor1.C'
    sources:
      binary: constexpr-fwctor1.s
  group: GRPSERIAL
test_constexpr-generated1_4462:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-generated1.C'
    sources:
      binary: constexpr-generated1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr")[^\n]*\n?)+'
test_constexpr-generated1_4463:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-generated1.C'
    sources:
      binary: constexpr-generated1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr")[^\n]*\n?)+'
test_constexpr-generated1_703:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-generated1.C'
    sources:
      binary: constexpr-generated1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr")[^\n]*\n?)+'
test_constexpr-generated1_704:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-generated1.C'
    sources:
      binary: constexpr-generated1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr")[^\n]*\n?)+'
test_constexpr-ice10_4466:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice10.C'
    sources:
      binary: constexpr-ice10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:elements of
          array \''constexpr const A A::a \\\\\\[2\\\\\\]\'' have incomplete type")[^\n]*\n?)+'
test_constexpr-ice10_4467:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice10.C'
    sources:
      binary: constexpr-ice10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:elements of
          array \''constexpr const A A::a \\\\\\[2\\\\\\]\'' have incomplete type")[^\n]*\n?)+'
test_constexpr-ice10_707:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice10.C'
    sources:
      binary: constexpr-ice10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:elements of
          array \''constexpr const A A::a \\\\\\[2\\\\\\]\'' have incomplete type")[^\n]*\n?)+'
test_constexpr-ice10_708:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice10.C'
    sources:
      binary: constexpr-ice10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:elements of
          array \''constexpr const A A::a \\\\\\[2\\\\\\]\'' have incomplete type")[^\n]*\n?)+'
test_constexpr-ice11_4468:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice11.C'
    sources:
      binary: constexpr-ice11.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal|matching")[^\n]*\n?)+'
test_constexpr-ice11_4469:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice11.C'
    sources:
      binary: constexpr-ice11.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal|matching")[^\n]*\n?)+'
test_constexpr-ice11_709:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice11.C'
    sources:
      binary: constexpr-ice11.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal|matching")[^\n]*\n?)+'
test_constexpr-ice11_710:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice11.C'
    sources:
      binary: constexpr-ice11.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal|matching")[^\n]*\n?)+'
test_constexpr-ice12_4470:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice12.C'
    sources:
      binary: constexpr-ice12.s
  group: GRPSERIAL
test_constexpr-ice12_4471:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice12.C'
    sources:
      binary: constexpr-ice12.s
  group: GRPSERIAL
test_constexpr-ice12_711:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice12.C'
    sources:
      binary: constexpr-ice12.s
  group: GRPSERIAL
test_constexpr-ice12_712:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice12.C'
    sources:
      binary: constexpr-ice12.s
  group: GRPSERIAL
test_constexpr-ice13_4472:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice13.C'
    sources:
      binary: constexpr-ice13.s
  group: GRPSERIAL
test_constexpr-ice13_4473:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice13.C'
    sources:
      binary: constexpr-ice13.s
  group: GRPSERIAL
test_constexpr-ice13_713:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice13.C'
    sources:
      binary: constexpr-ice13.s
  group: GRPSERIAL
test_constexpr-ice13_714:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice13.C'
    sources:
      binary: constexpr-ice13.s
  group: GRPSERIAL
test_constexpr-ice14_4474:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice14.C'
    sources:
      binary: constexpr-ice14.s
  group: GRPSERIAL
test_constexpr-ice14_4475:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice14.C'
    sources:
      binary: constexpr-ice14.s
  group: GRPSERIAL
test_constexpr-ice14_715:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice14.C'
    sources:
      binary: constexpr-ice14.s
  group: GRPSERIAL
test_constexpr-ice14_716:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice14.C'
    sources:
      binary: constexpr-ice14.s
  group: GRPSERIAL
test_constexpr-ice15_4476:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice15.C'
    sources:
      binary: constexpr-ice15.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared")[^\n]*\n?)+'
test_constexpr-ice15_4477:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice15.C'
    sources:
      binary: constexpr-ice15.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared")[^\n]*\n?)+'
test_constexpr-ice15_717:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice15.C'
    sources:
      binary: constexpr-ice15.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared")[^\n]*\n?)+'
test_constexpr-ice15_718:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice15.C'
    sources:
      binary: constexpr-ice15.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared")[^\n]*\n?)+'
test_constexpr-ice16_4478:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice16.C'
    sources:
      binary: constexpr-ice16.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("call to non-constexpr")[^\n]*\n?)+'
test_constexpr-ice16_4479:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice16.C'
    sources:
      binary: constexpr-ice16.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("call to non-constexpr")[^\n]*\n?)+'
test_constexpr-ice16_719:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice16.C'
    sources:
      binary: constexpr-ice16.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("call to non-constexpr")[^\n]*\n?)+'
test_constexpr-ice16_720:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice16.C'
    sources:
      binary: constexpr-ice16.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("call to non-constexpr")[^\n]*\n?)+'
test_constexpr-ice2_4480:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice2.C'
    sources:
      binary: constexpr-ice2.s
  group: GRPSERIAL
test_constexpr-ice2_4481:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice2.C'
    sources:
      binary: constexpr-ice2.s
  group: GRPSERIAL
test_constexpr-ice2_721:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice2.C'
    sources:
      binary: constexpr-ice2.s
  group: GRPSERIAL
test_constexpr-ice2_722:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice2.C'
    sources:
      binary: constexpr-ice2.s
  group: GRPSERIAL
test_constexpr-ice3_4482:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice3.C'
    sources:
      binary: constexpr-ice3.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-ice3_4483:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice3.C'
    sources:
      binary: constexpr-ice3.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-ice3_723:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice3.C'
    sources:
      binary: constexpr-ice3.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-ice3_724:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice3.C'
    sources:
      binary: constexpr-ice3.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-ice4_4484:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice4.C'
    sources:
      binary: constexpr-ice4.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has virtual base
          classes")[^\n]*\n?)+'
test_constexpr-ice4_4485:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice4.C'
    sources:
      binary: constexpr-ice4.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has virtual base
          classes")[^\n]*\n?)+'
test_constexpr-ice4_725:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice4.C'
    sources:
      binary: constexpr-ice4.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has virtual base
          classes")[^\n]*\n?)+'
test_constexpr-ice4_726:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice4.C'
    sources:
      binary: constexpr-ice4.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has virtual base
          classes")[^\n]*\n?)+'
test_constexpr-ice5_4486:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice5.C'
    sources:
      binary: constexpr-ice5.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant|non-constexpr")[^\n]*\n?)+'
test_constexpr-ice5_4487:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice5.C'
    sources:
      binary: constexpr-ice5.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant|non-constexpr")[^\n]*\n?)+'
test_constexpr-ice5_727:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice5.C'
    sources:
      binary: constexpr-ice5.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant|non-constexpr")[^\n]*\n?)+'
test_constexpr-ice5_728:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice5.C'
    sources:
      binary: constexpr-ice5.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant|non-constexpr")[^\n]*\n?)+'
test_constexpr-ice6_4488:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice6.C'
    sources:
      binary: constexpr-ice6.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid type")[^\n]*\n?)+'
test_constexpr-ice6_4489:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice6.C'
    sources:
      binary: constexpr-ice6.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid type")[^\n]*\n?)+'
test_constexpr-ice6_729:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice6.C'
    sources:
      binary: constexpr-ice6.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid type")[^\n]*\n?)+'
test_constexpr-ice6_730:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice6.C'
    sources:
      binary: constexpr-ice6.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid type")[^\n]*\n?)+'
test_constexpr-ice7_4490:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice7.C'
    sources:
      binary: constexpr-ice7.s
  group: GRPSERIAL
test_constexpr-ice7_4491:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice7.C'
    sources:
      binary: constexpr-ice7.s
  group: GRPSERIAL
test_constexpr-ice7_731:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice7.C'
    sources:
      binary: constexpr-ice7.s
  group: GRPSERIAL
test_constexpr-ice7_732:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice7.C'
    sources:
      binary: constexpr-ice7.s
  group: GRPSERIAL
test_constexpr-ice8_4492:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice8.C'
    sources:
      binary: constexpr-ice8.s
  group: GRPSERIAL
test_constexpr-ice8_4493:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice8.C'
    sources:
      binary: constexpr-ice8.s
  group: GRPSERIAL
test_constexpr-ice8_733:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice8.C'
    sources:
      binary: constexpr-ice8.s
  group: GRPSERIAL
test_constexpr-ice8_734:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice8.C'
    sources:
      binary: constexpr-ice8.s
  group: GRPSERIAL
test_constexpr-ice9_4494:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice9.C'
    sources:
      binary: constexpr-ice9.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared|empty
          body")[^\n]*\n?)+'
test_constexpr-ice9_4495:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice9.C'
    sources:
      binary: constexpr-ice9.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared|empty
          body")[^\n]*\n?)+'
test_constexpr-ice9_735:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice9.C'
    sources:
      binary: constexpr-ice9.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared|empty
          body")[^\n]*\n?)+'
test_constexpr-ice9_736:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice9.C'
    sources:
      binary: constexpr-ice9.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared|empty
          body")[^\n]*\n?)+'
test_constexpr-ice_4464:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice.C'
    sources:
      binary: constexpr-ice.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant|expansion")[^\n]*\n?)+'
test_constexpr-ice_4465:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice.C'
    sources:
      binary: constexpr-ice.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant|expansion")[^\n]*\n?)+'
test_constexpr-ice_705:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice.C'
    sources:
      binary: constexpr-ice.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant|expansion")[^\n]*\n?)+'
test_constexpr-ice_706:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ice.C'
    sources:
      binary: constexpr-ice.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant|expansion")[^\n]*\n?)+'
test_constexpr-incomplete1_4496:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-incomplete1.C'
    sources:
      binary: constexpr-incomplete1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:\''constexpr
          const A A::a\'' has incomplete type")[^\n]*\n?)+'
test_constexpr-incomplete1_4497:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-incomplete1.C'
    sources:
      binary: constexpr-incomplete1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:\''constexpr
          const A A::a\'' has incomplete type")[^\n]*\n?)+'
test_constexpr-incomplete1_737:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-incomplete1.C'
    sources:
      binary: constexpr-incomplete1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:\''constexpr
          const A A::a\'' has incomplete type")[^\n]*\n?)+'
test_constexpr-incomplete1_738:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-incomplete1.C'
    sources:
      binary: constexpr-incomplete1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:\''constexpr
          const A A::a\'' has incomplete type")[^\n]*\n?)+'
test_constexpr-incomplete2_4498:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-incomplete2.C'
    sources:
      binary: constexpr-incomplete2.s
  group: GRPSERIAL
  validate:
    match:
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr
          function")[^\n]*\n?)+'
test_constexpr-incomplete2_4499:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-incomplete2.C'
    sources:
      binary: constexpr-incomplete2.s
  group: GRPSERIAL
  validate:
    match:
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr
          function")[^\n]*\n?)+'
test_constexpr-incomplete2_739:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-incomplete2.C'
    sources:
      binary: constexpr-incomplete2.s
  group: GRPSERIAL
  validate:
    match:
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr
          function")[^\n]*\n?)+'
test_constexpr-incomplete2_740:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-incomplete2.C'
    sources:
      binary: constexpr-incomplete2.s
  group: GRPSERIAL
  validate:
    match:
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constexpr
          function")[^\n]*\n?)+'
test_constexpr-incomplete3_4500:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-incomplete3.C'
    sources:
      binary: constexpr-incomplete3.s
  group: GRPSERIAL
test_constexpr-incomplete3_4501:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-incomplete3.C'
    sources:
      binary: constexpr-incomplete3.s
  group: GRPSERIAL
test_constexpr-incomplete3_741:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-incomplete3.C'
    sources:
      binary: constexpr-incomplete3.s
  group: GRPSERIAL
test_constexpr-incomplete3_742:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-incomplete3.C'
    sources:
      binary: constexpr-incomplete3.s
  group: GRPSERIAL
test_constexpr-inhctor1_4502:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-inhctor1.C'
    sources:
      binary: constexpr-inhctor1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-inhctor1_4503:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-inhctor1.C'
    sources:
      binary: constexpr-inhctor1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-inhctor1_743:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-inhctor1.C'
    sources:
      binary: constexpr-inhctor1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-inhctor1_744:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-inhctor1.C'
    sources:
      binary: constexpr-inhctor1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-initlist10_4506:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist10.C'
    sources:
      binary: constexpr-initlist10.s
  group: GRPSERIAL
test_constexpr-initlist10_4507:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist10.C'
    sources:
      binary: constexpr-initlist10.s
  group: GRPSERIAL
test_constexpr-initlist10_747:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist10.C'
    sources:
      binary: constexpr-initlist10.s
  group: GRPSERIAL
test_constexpr-initlist10_748:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist10.C'
    sources:
      binary: constexpr-initlist10.s
  group: GRPSERIAL
test_constexpr-initlist2_4508:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist2.C'
    sources:
      binary: constexpr-initlist2.s
  group: GRPSERIAL
test_constexpr-initlist2_4509:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist2.C'
    sources:
      binary: constexpr-initlist2.s
  group: GRPSERIAL
test_constexpr-initlist2_749:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist2.C'
    sources:
      binary: constexpr-initlist2.s
  group: GRPSERIAL
test_constexpr-initlist2_750:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist2.C'
    sources:
      binary: constexpr-initlist2.s
  group: GRPSERIAL
test_constexpr-initlist3_4510:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist3.C'
    sources:
      binary: constexpr-initlist3.s
  group: GRPSERIAL
test_constexpr-initlist3_4511:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist3.C'
    sources:
      binary: constexpr-initlist3.s
  group: GRPSERIAL
test_constexpr-initlist3_751:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist3.C'
    sources:
      binary: constexpr-initlist3.s
  group: GRPSERIAL
test_constexpr-initlist3_752:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist3.C'
    sources:
      binary: constexpr-initlist3.s
  group: GRPSERIAL
test_constexpr-initlist4_4512:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist4.C'
    sources:
      binary: constexpr-initlist4.s
  group: GRPSERIAL
test_constexpr-initlist4_4513:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist4.C'
    sources:
      binary: constexpr-initlist4.s
  group: GRPSERIAL
test_constexpr-initlist4_753:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist4.C'
    sources:
      binary: constexpr-initlist4.s
  group: GRPSERIAL
test_constexpr-initlist4_754:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist4.C'
    sources:
      binary: constexpr-initlist4.s
  group: GRPSERIAL
test_constexpr-initlist5_4514:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist5.C'
    sources:
      binary: constexpr-initlist5.s
  group: GRPSERIAL
test_constexpr-initlist5_4515:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist5.C'
    sources:
      binary: constexpr-initlist5.s
  group: GRPSERIAL
test_constexpr-initlist5_755:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist5.C'
    sources:
      binary: constexpr-initlist5.s
  group: GRPSERIAL
test_constexpr-initlist5_756:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist5.C'
    sources:
      binary: constexpr-initlist5.s
  group: GRPSERIAL
test_constexpr-initlist6_4516:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist6.C'
    sources:
      binary: constexpr-initlist6.s
  group: GRPSERIAL
test_constexpr-initlist6_4517:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist6.C'
    sources:
      binary: constexpr-initlist6.s
  group: GRPSERIAL
test_constexpr-initlist6_757:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist6.C'
    sources:
      binary: constexpr-initlist6.s
  group: GRPSERIAL
test_constexpr-initlist6_758:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist6.C'
    sources:
      binary: constexpr-initlist6.s
  group: GRPSERIAL
test_constexpr-initlist7_4518:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist7.C'
    sources:
      binary: constexpr-initlist7.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-initlist7_4519:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist7.C'
    sources:
      binary: constexpr-initlist7.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-initlist7_759:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist7.C'
    sources:
      binary: constexpr-initlist7.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-initlist7_760:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist7.C'
    sources:
      binary: constexpr-initlist7.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-initlist8_4520:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist8.C'
    sources:
      binary: constexpr-initlist8.s
  group: GRPSERIAL
test_constexpr-initlist8_4521:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist8.C'
    sources:
      binary: constexpr-initlist8.s
  group: GRPSERIAL
test_constexpr-initlist8_761:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist8.C'
    sources:
      binary: constexpr-initlist8.s
  group: GRPSERIAL
test_constexpr-initlist8_762:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist8.C'
    sources:
      binary: constexpr-initlist8.s
  group: GRPSERIAL
test_constexpr-initlist9_4522:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist9.C'
    sources:
      binary: constexpr-initlist9.s
  group: GRPSERIAL
test_constexpr-initlist9_4523:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist9.C'
    sources:
      binary: constexpr-initlist9.s
  group: GRPSERIAL
test_constexpr-initlist9_763:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist9.C'
    sources:
      binary: constexpr-initlist9.s
  group: GRPSERIAL
test_constexpr-initlist9_764:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist9.C'
    sources:
      binary: constexpr-initlist9.s
  group: GRPSERIAL
test_constexpr-initlist_4504:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist.C'
    sources:
      binary: ./constexpr-initlist.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-initlist_4505:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist.C'
    sources:
      binary: ./constexpr-initlist.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-initlist_745:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist.C'
    sources:
      binary: ./constexpr-initlist.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-initlist_746:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-initlist.C'
    sources:
      binary: ./constexpr-initlist.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-inline-1_4524:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -O1 -fdump-tree-optimized\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-inline-1.C'
    sources:
      binary: constexpr-inline-1.s
  group: GRPSERIAL
test_constexpr-inline-1_765:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -O1 -fdump-tree-optimized\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-inline-1.C'
    sources:
      binary: constexpr-inline-1.s
  group: GRPSERIAL
test_constexpr-inline_4525:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -O1 -fdump-tree-optimized\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-inline.C'
    sources:
      binary: constexpr-inline.s
  group: GRPSERIAL
test_constexpr-inline_4526:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -O1 -fdump-tree-optimized\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-inline.C'
    sources:
      binary: constexpr-inline.s
  group: GRPSERIAL
test_constexpr-inline_766:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -O1 -fdump-tree-optimized\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-inline.C'
    sources:
      binary: constexpr-inline.s
  group: GRPSERIAL
test_constexpr-inline_767:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -O1 -fdump-tree-optimized\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-inline.C'
    sources:
      binary: constexpr-inline.s
  group: GRPSERIAL
test_constexpr-invisiref1_4527:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-invisiref1.C'
    sources:
      binary: constexpr-invisiref1.s
  group: GRPSERIAL
test_constexpr-invisiref1_4528:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-invisiref1.C'
    sources:
      binary: constexpr-invisiref1.s
  group: GRPSERIAL
test_constexpr-invisiref1_768:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-invisiref1.C'
    sources:
      binary: constexpr-invisiref1.s
  group: GRPSERIAL
test_constexpr-invisiref1_769:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-invisiref1.C'
    sources:
      binary: constexpr-invisiref1.s
  group: GRPSERIAL
test_constexpr-is_literal_4529:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-is_literal.C'
    sources:
      binary: constexpr-is_literal.s
  group: GRPSERIAL
test_constexpr-is_literal_4530:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-is_literal.C'
    sources:
      binary: constexpr-is_literal.s
  group: GRPSERIAL
test_constexpr-is_literal_770:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-is_literal.C'
    sources:
      binary: constexpr-is_literal.s
  group: GRPSERIAL
test_constexpr-is_literal_771:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-is_literal.C'
    sources:
      binary: constexpr-is_literal.s
  group: GRPSERIAL
test_constexpr-list1_4531:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-list1.C'
    sources:
      binary: constexpr-list1.s
  group: GRPSERIAL
test_constexpr-list1_4532:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-list1.C'
    sources:
      binary: constexpr-list1.s
  group: GRPSERIAL
test_constexpr-list1_772:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-list1.C'
    sources:
      binary: constexpr-list1.s
  group: GRPSERIAL
test_constexpr-list1_773:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-list1.C'
    sources:
      binary: constexpr-list1.s
  group: GRPSERIAL
test_constexpr-main_4533:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-main.C'
    sources:
      binary: constexpr-main.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-main_4534:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-main.C'
    sources:
      binary: constexpr-main.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-main_774:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-main.C'
    sources:
      binary: constexpr-main.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-main_775:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-main.C'
    sources:
      binary: constexpr-main.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-memchr_4535:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-memchr.C'
    sources:
      binary: constexpr-memchr.s
  group: GRPSERIAL
test_constexpr-memchr_4536:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-memchr.C'
    sources:
      binary: constexpr-memchr.s
  group: GRPSERIAL
test_constexpr-memchr_776:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-memchr.C'
    sources:
      binary: constexpr-memchr.s
  group: GRPSERIAL
test_constexpr-memchr_777:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-memchr.C'
    sources:
      binary: constexpr-memchr.s
  group: GRPSERIAL
test_constexpr-memfn1_4537:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-memfn1.C'
    sources:
      binary: constexpr-memfn1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-memfn1_4538:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-memfn1.C'
    sources:
      binary: constexpr-memfn1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-memfn1_778:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-memfn1.C'
    sources:
      binary: constexpr-memfn1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-memfn1_779:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-memfn1.C'
    sources:
      binary: constexpr-memfn1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-missing_4539:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-missing.C'
    sources:
      binary: constexpr-missing.s
  group: GRPSERIAL
test_constexpr-missing_4540:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-missing.C'
    sources:
      binary: constexpr-missing.s
  group: GRPSERIAL
test_constexpr-missing_780:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-missing.C'
    sources:
      binary: constexpr-missing.s
  group: GRPSERIAL
test_constexpr-missing_781:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-missing.C'
    sources:
      binary: constexpr-missing.s
  group: GRPSERIAL
test_constexpr-mutable1_4541:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-mutable1.C'
    sources:
      binary: constexpr-mutable1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mutable")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mutable")[^\n]*\n?)+'
test_constexpr-mutable1_4542:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-mutable1.C'
    sources:
      binary: constexpr-mutable1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mutable")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mutable")[^\n]*\n?)+'
test_constexpr-mutable1_782:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-mutable1.C'
    sources:
      binary: constexpr-mutable1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mutable")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mutable")[^\n]*\n?)+'
test_constexpr-mutable1_783:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-mutable1.C'
    sources:
      binary: constexpr-mutable1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mutable")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mutable")[^\n]*\n?)+'
test_constexpr-mutable2_4543:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-mutable2.C'
    sources:
      binary: constexpr-mutable2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mutable")[^\n]*\n?)+'
test_constexpr-mutable2_4544:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-mutable2.C'
    sources:
      binary: constexpr-mutable2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mutable")[^\n]*\n?)+'
test_constexpr-mutable2_784:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-mutable2.C'
    sources:
      binary: constexpr-mutable2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mutable")[^\n]*\n?)+'
test_constexpr-mutable2_785:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-mutable2.C'
    sources:
      binary: constexpr-mutable2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mutable")[^\n]*\n?)+'
test_constexpr-neg1_4545:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-neg1.C'
    sources:
      binary: constexpr-neg1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("square")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("definition")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("-- x")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("body of constexpr
          function")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a literal
          type")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-neg1_4546:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-neg1.C'
    sources:
      binary: constexpr-neg1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("square")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("definition")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("-- x")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("body of constexpr
          function")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a literal
          type")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-neg1_786:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-neg1.C'
    sources:
      binary: constexpr-neg1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("square")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("definition")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("-- x")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("body of constexpr
          function")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a literal
          type")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-neg1_787:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-neg1.C'
    sources:
      binary: constexpr-neg1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("square")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("definition")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("-- x")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("body of constexpr
          function")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a literal
          type")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-neg2_4547:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-neg2.C'
    sources:
      binary: constexpr-neg2.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nonconst_func")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nonconst_func")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nonconst_func")[^\n]*\n?)+'
test_constexpr-neg2_4548:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-neg2.C'
    sources:
      binary: constexpr-neg2.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nonconst_func")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nonconst_func")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nonconst_func")[^\n]*\n?)+'
test_constexpr-neg2_788:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-neg2.C'
    sources:
      binary: constexpr-neg2.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nonconst_func")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nonconst_func")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nonconst_func")[^\n]*\n?)+'
test_constexpr-neg2_789:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-neg2.C'
    sources:
      binary: constexpr-neg2.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nonconst_func")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nonconst_func")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nonconst_func")[^\n]*\n?)+'
test_constexpr-neg3_4549:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-neg3.C'
    sources:
      binary: constexpr-neg3.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("foo")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("bar")[^\n]*\n?)+'
test_constexpr-neg3_4550:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-neg3.C'
    sources:
      binary: constexpr-neg3.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("foo")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("bar")[^\n]*\n?)+'
test_constexpr-neg3_790:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-neg3.C'
    sources:
      binary: constexpr-neg3.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("foo")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("bar")[^\n]*\n?)+'
test_constexpr-neg3_791:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-neg3.C'
    sources:
      binary: constexpr-neg3.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("foo")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("bar")[^\n]*\n?)+'
test_constexpr-noexcept2_4553:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept2.C'
    sources:
      binary: constexpr-noexcept2.s
  group: GRPSERIAL
test_constexpr-noexcept2_4554:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept2.C'
    sources:
      binary: constexpr-noexcept2.s
  group: GRPSERIAL
test_constexpr-noexcept2_794:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept2.C'
    sources:
      binary: constexpr-noexcept2.s
  group: GRPSERIAL
test_constexpr-noexcept2_795:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept2.C'
    sources:
      binary: constexpr-noexcept2.s
  group: GRPSERIAL
test_constexpr-noexcept3_4555:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept3.C'
    sources:
      binary: constexpr-noexcept3.s
  group: GRPSERIAL
test_constexpr-noexcept3_4556:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept3.C'
    sources:
      binary: constexpr-noexcept3.s
  group: GRPSERIAL
test_constexpr-noexcept3_796:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept3.C'
    sources:
      binary: constexpr-noexcept3.s
  group: GRPSERIAL
test_constexpr-noexcept3_797:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept3.C'
    sources:
      binary: constexpr-noexcept3.s
  group: GRPSERIAL
test_constexpr-noexcept4_4557:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept4.C'
    sources:
      binary: constexpr-noexcept4.s
  group: GRPSERIAL
test_constexpr-noexcept4_4558:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept4.C'
    sources:
      binary: constexpr-noexcept4.s
  group: GRPSERIAL
test_constexpr-noexcept4_798:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept4.C'
    sources:
      binary: constexpr-noexcept4.s
  group: GRPSERIAL
test_constexpr-noexcept4_799:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept4.C'
    sources:
      binary: constexpr-noexcept4.s
  group: GRPSERIAL
test_constexpr-noexcept5_4559:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept5.C'
    sources:
      binary: constexpr-noexcept5.s
  group: GRPSERIAL
test_constexpr-noexcept5_4560:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept5.C'
    sources:
      binary: constexpr-noexcept5.s
  group: GRPSERIAL
test_constexpr-noexcept5_800:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept5.C'
    sources:
      binary: constexpr-noexcept5.s
  group: GRPSERIAL
test_constexpr-noexcept5_801:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept5.C'
    sources:
      binary: constexpr-noexcept5.s
  group: GRPSERIAL
test_constexpr-noexcept6_4561:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept6.C'
    sources:
      binary: constexpr-noexcept6.s
  group: GRPSERIAL
test_constexpr-noexcept6_4562:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept6.C'
    sources:
      binary: constexpr-noexcept6.s
  group: GRPSERIAL
test_constexpr-noexcept6_802:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept6.C'
    sources:
      binary: constexpr-noexcept6.s
  group: GRPSERIAL
test_constexpr-noexcept6_803:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept6.C'
    sources:
      binary: constexpr-noexcept6.s
  group: GRPSERIAL
test_constexpr-noexcept7_4563:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept7.C'
    sources:
      binary: constexpr-noexcept7.s
  group: GRPSERIAL
test_constexpr-noexcept7_4564:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept7.C'
    sources:
      binary: constexpr-noexcept7.s
  group: GRPSERIAL
test_constexpr-noexcept7_804:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept7.C'
    sources:
      binary: constexpr-noexcept7.s
  group: GRPSERIAL
test_constexpr-noexcept7_805:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept7.C'
    sources:
      binary: constexpr-noexcept7.s
  group: GRPSERIAL
test_constexpr-noexcept_4551:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept.C'
    sources:
      binary: constexpr-noexcept.s
  group: GRPSERIAL
test_constexpr-noexcept_4552:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept.C'
    sources:
      binary: constexpr-noexcept.s
  group: GRPSERIAL
test_constexpr-noexcept_792:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept.C'
    sources:
      binary: constexpr-noexcept.s
  group: GRPSERIAL
test_constexpr-noexcept_793:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-noexcept.C'
    sources:
      binary: constexpr-noexcept.s
  group: GRPSERIAL
test_constexpr-non-const-arg2_4567:
  build:
    cflags: "-std=gnu++11 -w\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-non-const-arg2.C'
    sources:
      binary: constexpr-non-const-arg2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant|before
          its definition")[^\n]*\n?)+'
test_constexpr-non-const-arg2_4568:
  build:
    cflags: "-std=gnu++14 -w\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-non-const-arg2.C'
    sources:
      binary: constexpr-non-const-arg2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant|before
          its definition")[^\n]*\n?)+'
test_constexpr-non-const-arg2_808:
  build:
    cflags: "-std=gnu++11 -w\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-non-const-arg2.C'
    sources:
      binary: constexpr-non-const-arg2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant|before
          its definition")[^\n]*\n?)+'
test_constexpr-non-const-arg2_809:
  build:
    cflags: "-std=gnu++14 -w\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-non-const-arg2.C'
    sources:
      binary: constexpr-non-const-arg2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant|before
          its definition")[^\n]*\n?)+'
test_constexpr-non-const-arg3_4569:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-non-const-arg3.C'
    sources:
      binary: ./constexpr-non-const-arg3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-non-const-arg3_4570:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-non-const-arg3.C'
    sources:
      binary: ./constexpr-non-const-arg3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-non-const-arg3_810:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-non-const-arg3.C'
    sources:
      binary: ./constexpr-non-const-arg3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-non-const-arg3_811:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-non-const-arg3.C'
    sources:
      binary: ./constexpr-non-const-arg3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-non-const-arg_4565:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-non-const-arg.C'
    sources:
      binary: constexpr-non-const-arg.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("global|argument")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("global")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("global")[^\n]*\n?)+'
test_constexpr-non-const-arg_4566:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-non-const-arg.C'
    sources:
      binary: constexpr-non-const-arg.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("global|argument")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("global")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("global")[^\n]*\n?)+'
test_constexpr-non-const-arg_806:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-non-const-arg.C'
    sources:
      binary: constexpr-non-const-arg.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("global|argument")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("global")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("global")[^\n]*\n?)+'
test_constexpr-non-const-arg_807:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-non-const-arg.C'
    sources:
      binary: constexpr-non-const-arg.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("global|argument")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("global")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("global")[^\n]*\n?)+'
test_constexpr-nonlit2_4573:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nonlit2.C'
    sources:
      binary: constexpr-nonlit2.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-nonlit2_4574:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nonlit2.C'
    sources:
      binary: constexpr-nonlit2.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-nonlit2_814:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nonlit2.C'
    sources:
      binary: constexpr-nonlit2.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-nonlit2_815:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nonlit2.C'
    sources:
      binary: constexpr-nonlit2.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-nonlit_4571:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nonlit.C'
    sources:
      binary: constexpr-nonlit.s
  group: GRPSERIAL
test_constexpr-nonlit_4572:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nonlit.C'
    sources:
      binary: constexpr-nonlit.s
  group: GRPSERIAL
test_constexpr-nonlit_812:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nonlit.C'
    sources:
      binary: constexpr-nonlit.s
  group: GRPSERIAL
test_constexpr-nonlit_813:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nonlit.C'
    sources:
      binary: constexpr-nonlit.s
  group: GRPSERIAL
test_constexpr-nonstatic_4575:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nonstatic.C'
    sources:
      binary: constexpr-nonstatic.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-nonstatic_4576:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nonstatic.C'
    sources:
      binary: constexpr-nonstatic.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-nonstatic_816:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nonstatic.C'
    sources:
      binary: constexpr-nonstatic.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-nonstatic_817:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nonstatic.C'
    sources:
      binary: constexpr-nonstatic.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-nullptr-1_4577:
  build:
    cflags: "-std=gnu++11 -fdelete-null-pointer-checks -fdump-tree-optimized -ffat-lto-objects\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nullptr-1.C'
    sources:
      binary: constexpr-nullptr-1.s
  group: GRPSERIAL
test_constexpr-nullptr-1_4578:
  build:
    cflags: "-std=gnu++14 -fdelete-null-pointer-checks -fdump-tree-optimized -ffat-lto-objects\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nullptr-1.C'
    sources:
      binary: constexpr-nullptr-1.s
  group: GRPSERIAL
test_constexpr-nullptr-1_818:
  build:
    cflags: "-std=gnu++11 -fdelete-null-pointer-checks -fdump-tree-optimized -ffat-lto-objects\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nullptr-1.C'
    sources:
      binary: constexpr-nullptr-1.s
  group: GRPSERIAL
test_constexpr-nullptr-1_819:
  build:
    cflags: "-std=gnu++14 -fdelete-null-pointer-checks -fdump-tree-optimized -ffat-lto-objects\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nullptr-1.C'
    sources:
      binary: constexpr-nullptr-1.s
  group: GRPSERIAL
test_constexpr-nullptr-2_4579:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -Wno-pointer-arith\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nullptr-2.C'
    sources:
      binary: constexpr-nullptr-2.s
  group: GRPSERIAL
  validate:
    match:
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of incomplete type")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of incomplete type")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of incomplete type")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+:164:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+:199:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L202:
        expect: true
        expr: '(^|\n)([^\n]+:202:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+:203:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("inaccessible")[^\n]*\n?)+'
      L227:
        expect: true
        expr: '(^|\n)([^\n]+:227:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous base")[^\n]*\n?)+'
      L228:
        expect: true
        expr: '(^|\n)([^\n]+:228:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous base")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+:231:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+:233:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+:234:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous base|invalid
          conversion")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inaccessible
          base of")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|cannot
          convert from pointer to base class")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L269:
        expect: true
        expr: '(^|\n)([^\n]+:269:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L277:
        expect: true
        expr: '(^|\n)([^\n]+:277:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+:279:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dereferencing
          a null pointer")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|constant
          expression")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
test_constexpr-nullptr-2_4580:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -Wno-pointer-arith\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nullptr-2.C'
    sources:
      binary: constexpr-nullptr-2.s
  group: GRPSERIAL
  validate:
    match:
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of incomplete type")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of incomplete type")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of incomplete type")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+:164:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+:199:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L202:
        expect: true
        expr: '(^|\n)([^\n]+:202:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+:203:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("inaccessible")[^\n]*\n?)+'
      L227:
        expect: true
        expr: '(^|\n)([^\n]+:227:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous base")[^\n]*\n?)+'
      L228:
        expect: true
        expr: '(^|\n)([^\n]+:228:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous base")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+:231:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+:233:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+:234:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous base|invalid
          conversion")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inaccessible
          base of")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|cannot
          convert from pointer to base class")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L269:
        expect: true
        expr: '(^|\n)([^\n]+:269:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L277:
        expect: true
        expr: '(^|\n)([^\n]+:277:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+:279:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dereferencing
          a null pointer")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|constant
          expression")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
test_constexpr-nullptr-2_820:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -Wno-pointer-arith\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nullptr-2.C'
    sources:
      binary: constexpr-nullptr-2.s
  group: GRPSERIAL
  validate:
    match:
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of incomplete type")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of incomplete type")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of incomplete type")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+:164:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+:199:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L202:
        expect: true
        expr: '(^|\n)([^\n]+:202:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+:203:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("inaccessible")[^\n]*\n?)+'
      L227:
        expect: true
        expr: '(^|\n)([^\n]+:227:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous base")[^\n]*\n?)+'
      L228:
        expect: true
        expr: '(^|\n)([^\n]+:228:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous base")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+:231:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+:233:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+:234:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous base|invalid
          conversion")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inaccessible
          base of")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|cannot
          convert from pointer to base class")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L269:
        expect: true
        expr: '(^|\n)([^\n]+:269:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L277:
        expect: true
        expr: '(^|\n)([^\n]+:277:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+:279:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dereferencing
          a null pointer")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|constant
          expression")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
test_constexpr-nullptr-2_821:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -Wno-pointer-arith\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nullptr-2.C'
    sources:
      binary: constexpr-nullptr-2.s
  group: GRPSERIAL
  validate:
    match:
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of incomplete type")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of incomplete type")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use
          of incomplete type")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+:164:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+:199:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L202:
        expect: true
        expr: '(^|\n)([^\n]+:202:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+:203:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("inaccessible")[^\n]*\n?)+'
      L227:
        expect: true
        expr: '(^|\n)([^\n]+:227:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous base")[^\n]*\n?)+'
      L228:
        expect: true
        expr: '(^|\n)([^\n]+:228:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous base")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+:231:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a constant
          expression")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+:233:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|not
          a constant expression")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+:234:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous base|invalid
          conversion")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inaccessible
          base of")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion|cannot
          convert from pointer to base class")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L269:
        expect: true
        expr: '(^|\n)([^\n]+:269:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L277:
        expect: true
        expr: '(^|\n)([^\n]+:277:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+:279:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dereferencing
          a null pointer")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|constant
          expression")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("null pointer|not
          a constant")[^\n]*\n?)+'
test_constexpr-nullptr_4581:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nullptr.C'
    sources:
      binary: constexpr-nullptr.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int")[^\n]*\n?)+'
test_constexpr-nullptr_4582:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nullptr.C'
    sources:
      binary: constexpr-nullptr.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int")[^\n]*\n?)+'
test_constexpr-nullptr_822:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nullptr.C'
    sources:
      binary: constexpr-nullptr.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int")[^\n]*\n?)+'
test_constexpr-nullptr_823:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-nullptr.C'
    sources:
      binary: constexpr-nullptr.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int")[^\n]*\n?)+'
test_constexpr-object1_4583:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-object1.C'
    sources:
      binary: constexpr-object1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("definition")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be used
          for type declarations")[^\n]*\n?)+'
test_constexpr-object1_4584:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-object1.C'
    sources:
      binary: constexpr-object1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("definition")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be used
          for type declarations")[^\n]*\n?)+'
test_constexpr-object1_824:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-object1.C'
    sources:
      binary: constexpr-object1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("definition")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be used
          for type declarations")[^\n]*\n?)+'
test_constexpr-object1_825:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-object1.C'
    sources:
      binary: constexpr-object1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("definition")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be used
          for type declarations")[^\n]*\n?)+'
test_constexpr-object2_4585:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-object2.C'
    sources:
      binary: constexpr-object2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mass")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-object2_4586:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-object2.C'
    sources:
      binary: constexpr-object2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mass")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-object2_826:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-object2.C'
    sources:
      binary: constexpr-object2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mass")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-object2_827:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-object2.C'
    sources:
      binary: constexpr-object2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mass")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-overflow2_4589:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-overflow2.C'
    sources:
      binary: constexpr-overflow2.s
  group: GRPSERIAL
test_constexpr-overflow2_4590:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-overflow2.C'
    sources:
      binary: constexpr-overflow2.s
  group: GRPSERIAL
test_constexpr-overflow2_830:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-overflow2.C'
    sources:
      binary: constexpr-overflow2.s
  group: GRPSERIAL
test_constexpr-overflow2_831:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-overflow2.C'
    sources:
      binary: constexpr-overflow2.s
  group: GRPSERIAL
test_constexpr-overflow_4587:
  build:
    cflags: "-std=gnu++11 -w -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-overflow.C'
    sources:
      binary: constexpr-overflow.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-overflow_4588:
  build:
    cflags: "-std=gnu++14 -w -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-overflow.C'
    sources:
      binary: constexpr-overflow.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-overflow_828:
  build:
    cflags: "-std=gnu++11 -w -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-overflow.C'
    sources:
      binary: constexpr-overflow.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-overflow_829:
  build:
    cflags: "-std=gnu++14 -w -ftrack-macro-expansion=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-overflow.C'
    sources:
      binary: constexpr-overflow.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-pedantic_4591:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pedantic.C'
    sources:
      binary: constexpr-pedantic.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("constexpr")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-pedantic_4592:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pedantic.C'
    sources:
      binary: constexpr-pedantic.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("constexpr")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-pedantic_832:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pedantic.C'
    sources:
      binary: constexpr-pedantic.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("constexpr")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-pedantic_833:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pedantic.C'
    sources:
      binary: constexpr-pedantic.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("constexpr")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-pmf1_4593:
  build:
    cflags: "-std=gnu++98 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pmf1.C'
    sources:
      binary: constexpr-pmf1.s
  group: GRPSERIAL
test_constexpr-pmf1_4594:
  build:
    cflags: "-std=gnu++11 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pmf1.C'
    sources:
      binary: constexpr-pmf1.s
  group: GRPSERIAL
test_constexpr-pmf1_4595:
  build:
    cflags: "-std=gnu++14 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pmf1.C'
    sources:
      binary: constexpr-pmf1.s
  group: GRPSERIAL
test_constexpr-pmf1_834:
  build:
    cflags: "-std=gnu++98 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pmf1.C'
    sources:
      binary: constexpr-pmf1.s
  group: GRPSERIAL
test_constexpr-pmf1_835:
  build:
    cflags: "-std=gnu++11 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pmf1.C'
    sources:
      binary: constexpr-pmf1.s
  group: GRPSERIAL
test_constexpr-pmf1_836:
  build:
    cflags: "-std=gnu++14 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pmf1.C'
    sources:
      binary: constexpr-pmf1.s
  group: GRPSERIAL
test_constexpr-pos1_4596:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pos1.C'
    sources:
      binary: constexpr-pos1.s
  group: GRPSERIAL
test_constexpr-pos1_4597:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pos1.C'
    sources:
      binary: constexpr-pos1.s
  group: GRPSERIAL
test_constexpr-pos1_837:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pos1.C'
    sources:
      binary: constexpr-pos1.s
  group: GRPSERIAL
test_constexpr-pos1_838:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pos1.C'
    sources:
      binary: constexpr-pos1.s
  group: GRPSERIAL
test_constexpr-potential1_4598:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-potential1.C'
    sources:
      binary: constexpr-potential1.s
  group: GRPSERIAL
test_constexpr-potential1_4599:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-potential1.C'
    sources:
      binary: constexpr-potential1.s
  group: GRPSERIAL
test_constexpr-potential1_839:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-potential1.C'
    sources:
      binary: constexpr-potential1.s
  group: GRPSERIAL
test_constexpr-potential1_840:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-potential1.C'
    sources:
      binary: constexpr-potential1.s
  group: GRPSERIAL
test_constexpr-ptrcomp1_4600:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrcomp1.C'
    sources:
      binary: constexpr-ptrcomp1.s
  group: GRPSERIAL
test_constexpr-ptrcomp1_4601:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrcomp1.C'
    sources:
      binary: constexpr-ptrcomp1.s
  group: GRPSERIAL
test_constexpr-ptrcomp1_841:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrcomp1.C'
    sources:
      binary: constexpr-ptrcomp1.s
  group: GRPSERIAL
test_constexpr-ptrcomp1_842:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrcomp1.C'
    sources:
      binary: constexpr-ptrcomp1.s
  group: GRPSERIAL
test_constexpr-ptrmem2_4604:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem2.C'
    sources:
      binary: constexpr-ptrmem2.s
  group: GRPSERIAL
test_constexpr-ptrmem2_4605:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem2.C'
    sources:
      binary: constexpr-ptrmem2.s
  group: GRPSERIAL
test_constexpr-ptrmem2_845:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem2.C'
    sources:
      binary: constexpr-ptrmem2.s
  group: GRPSERIAL
test_constexpr-ptrmem2_846:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem2.C'
    sources:
      binary: constexpr-ptrmem2.s
  group: GRPSERIAL
test_constexpr-ptrmem3_4606:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem3.C'
    sources:
      binary: constexpr-ptrmem3.s
  group: GRPSERIAL
test_constexpr-ptrmem3_4607:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem3.C'
    sources:
      binary: constexpr-ptrmem3.s
  group: GRPSERIAL
test_constexpr-ptrmem3_847:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem3.C'
    sources:
      binary: constexpr-ptrmem3.s
  group: GRPSERIAL
test_constexpr-ptrmem3_848:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem3.C'
    sources:
      binary: constexpr-ptrmem3.s
  group: GRPSERIAL
test_constexpr-ptrmem4_4608:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem4.C'
    sources:
      binary: constexpr-ptrmem4.s
  group: GRPSERIAL
test_constexpr-ptrmem4_4609:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem4.C'
    sources:
      binary: constexpr-ptrmem4.s
  group: GRPSERIAL
test_constexpr-ptrmem4_849:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem4.C'
    sources:
      binary: constexpr-ptrmem4.s
  group: GRPSERIAL
test_constexpr-ptrmem4_850:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem4.C'
    sources:
      binary: constexpr-ptrmem4.s
  group: GRPSERIAL
test_constexpr-ptrmem5_4610:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem5.C'
    sources:
      binary: constexpr-ptrmem5.s
  group: GRPSERIAL
test_constexpr-ptrmem5_4611:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem5.C'
    sources:
      binary: constexpr-ptrmem5.s
  group: GRPSERIAL
test_constexpr-ptrmem5_851:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem5.C'
    sources:
      binary: constexpr-ptrmem5.s
  group: GRPSERIAL
test_constexpr-ptrmem5_852:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem5.C'
    sources:
      binary: constexpr-ptrmem5.s
  group: GRPSERIAL
test_constexpr-ptrmem6_4612:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem6.C'
    sources:
      binary: constexpr-ptrmem6.s
  group: GRPSERIAL
test_constexpr-ptrmem6_4613:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem6.C'
    sources:
      binary: constexpr-ptrmem6.s
  group: GRPSERIAL
test_constexpr-ptrmem6_853:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem6.C'
    sources:
      binary: constexpr-ptrmem6.s
  group: GRPSERIAL
test_constexpr-ptrmem6_854:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem6.C'
    sources:
      binary: constexpr-ptrmem6.s
  group: GRPSERIAL
test_constexpr-ptrmem_4602:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem.C'
    sources:
      binary: constexpr-ptrmem.s
  group: GRPSERIAL
test_constexpr-ptrmem_4603:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem.C'
    sources:
      binary: constexpr-ptrmem.s
  group: GRPSERIAL
test_constexpr-ptrmem_843:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem.C'
    sources:
      binary: constexpr-ptrmem.s
  group: GRPSERIAL
test_constexpr-ptrmem_844:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrmem.C'
    sources:
      binary: constexpr-ptrmem.s
  group: GRPSERIAL
test_constexpr-ptrsub_4614:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrsub.C'
    sources:
      binary: constexpr-ptrsub.s
  group: GRPSERIAL
test_constexpr-ptrsub_4615:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrsub.C'
    sources:
      binary: constexpr-ptrsub.s
  group: GRPSERIAL
test_constexpr-ptrsub_855:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrsub.C'
    sources:
      binary: constexpr-ptrsub.s
  group: GRPSERIAL
test_constexpr-ptrsub_856:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ptrsub.C'
    sources:
      binary: constexpr-ptrsub.s
  group: GRPSERIAL
test_constexpr-pure_4616:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pure.C'
    sources:
      binary: constexpr-pure.s
  group: GRPSERIAL
test_constexpr-pure_4617:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pure.C'
    sources:
      binary: constexpr-pure.s
  group: GRPSERIAL
test_constexpr-pure_857:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pure.C'
    sources:
      binary: constexpr-pure.s
  group: GRPSERIAL
test_constexpr-pure_858:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-pure.C'
    sources:
      binary: constexpr-pure.s
  group: GRPSERIAL
test_constexpr-recursion2_4620:
  build:
    cflags: "-std=gnu++11 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-recursion2.C'
    sources:
      binary: constexpr-recursion2.s
  group: GRPSERIAL
test_constexpr-recursion2_4621:
  build:
    cflags: "-std=gnu++14 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-recursion2.C'
    sources:
      binary: constexpr-recursion2.s
  group: GRPSERIAL
test_constexpr-recursion2_861:
  build:
    cflags: "-std=gnu++11 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-recursion2.C'
    sources:
      binary: constexpr-recursion2.s
  group: GRPSERIAL
test_constexpr-recursion2_862:
  build:
    cflags: "-std=gnu++14 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-recursion2.C'
    sources:
      binary: constexpr-recursion2.s
  group: GRPSERIAL
test_constexpr-recursion3_4622:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-recursion3.C'
    sources:
      binary: constexpr-recursion3.s
  group: GRPSERIAL
test_constexpr-recursion3_4623:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-recursion3.C'
    sources:
      binary: constexpr-recursion3.s
  group: GRPSERIAL
test_constexpr-recursion3_863:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-recursion3.C'
    sources:
      binary: constexpr-recursion3.s
  group: GRPSERIAL
test_constexpr-recursion3_864:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-recursion3.C'
    sources:
      binary: constexpr-recursion3.s
  group: GRPSERIAL
test_constexpr-recursion_4618:
  build:
    cflags: "-std=gnu++11 -fconstexpr-depth=5\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-recursion.C'
    sources:
      binary: constexpr-recursion.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr evaluation
          depth")[^\n]*\n?)+'
test_constexpr-recursion_4619:
  build:
    cflags: "-std=gnu++14 -fconstexpr-depth=5\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-recursion.C'
    sources:
      binary: constexpr-recursion.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr evaluation
          depth")[^\n]*\n?)+'
test_constexpr-recursion_859:
  build:
    cflags: "-std=gnu++11 -fconstexpr-depth=5\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-recursion.C'
    sources:
      binary: constexpr-recursion.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr evaluation
          depth")[^\n]*\n?)+'
test_constexpr-recursion_860:
  build:
    cflags: "-std=gnu++14 -fconstexpr-depth=5\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-recursion.C'
    sources:
      binary: constexpr-recursion.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr evaluation
          depth")[^\n]*\n?)+'
test_constexpr-redeclaration1_4624:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-redeclaration1.C'
    sources:
      binary: constexpr-redeclaration1.s
  group: GRPSERIAL
test_constexpr-redeclaration1_4625:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-redeclaration1.C'
    sources:
      binary: constexpr-redeclaration1.s
  group: GRPSERIAL
test_constexpr-redeclaration1_865:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-redeclaration1.C'
    sources:
      binary: constexpr-redeclaration1.s
  group: GRPSERIAL
test_constexpr-redeclaration1_866:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-redeclaration1.C'
    sources:
      binary: constexpr-redeclaration1.s
  group: GRPSERIAL
test_constexpr-ref10_4628:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref10.C'
    sources:
      binary: constexpr-ref10.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("temporary")[^\n]*\n?)+'
test_constexpr-ref10_4629:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref10.C'
    sources:
      binary: constexpr-ref10.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("temporary")[^\n]*\n?)+'
test_constexpr-ref10_869:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref10.C'
    sources:
      binary: constexpr-ref10.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("temporary")[^\n]*\n?)+'
test_constexpr-ref10_870:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref10.C'
    sources:
      binary: constexpr-ref10.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("temporary")[^\n]*\n?)+'
test_constexpr-ref11_4630:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref11.C'
    sources:
      binary: constexpr-ref11.s
  group: GRPSERIAL
test_constexpr-ref11_4631:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref11.C'
    sources:
      binary: constexpr-ref11.s
  group: GRPSERIAL
test_constexpr-ref11_871:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref11.C'
    sources:
      binary: constexpr-ref11.s
  group: GRPSERIAL
test_constexpr-ref11_872:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref11.C'
    sources:
      binary: constexpr-ref11.s
  group: GRPSERIAL
test_constexpr-ref1_4626:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref1.C'
    sources:
      binary: constexpr-ref1.s
  group: GRPSERIAL
test_constexpr-ref1_4627:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref1.C'
    sources:
      binary: constexpr-ref1.s
  group: GRPSERIAL
test_constexpr-ref1_867:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref1.C'
    sources:
      binary: constexpr-ref1.s
  group: GRPSERIAL
test_constexpr-ref1_868:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref1.C'
    sources:
      binary: constexpr-ref1.s
  group: GRPSERIAL
test_constexpr-ref2_4632:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref2.C'
    sources:
      binary: constexpr-ref2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("p")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a definition")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("er")[^\n]*\n?)+'
test_constexpr-ref2_4633:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref2.C'
    sources:
      binary: constexpr-ref2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("p")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a definition")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("er")[^\n]*\n?)+'
test_constexpr-ref2_873:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref2.C'
    sources:
      binary: constexpr-ref2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("p")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a definition")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("er")[^\n]*\n?)+'
test_constexpr-ref2_874:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref2.C'
    sources:
      binary: constexpr-ref2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("p")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a definition")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("er")[^\n]*\n?)+'
test_constexpr-ref3_4634:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref3.C'
    sources:
      binary: constexpr-ref3.s
  group: GRPSERIAL
test_constexpr-ref3_4635:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref3.C'
    sources:
      binary: constexpr-ref3.s
  group: GRPSERIAL
test_constexpr-ref3_875:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref3.C'
    sources:
      binary: constexpr-ref3.s
  group: GRPSERIAL
test_constexpr-ref3_876:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref3.C'
    sources:
      binary: constexpr-ref3.s
  group: GRPSERIAL
test_constexpr-ref4_4636:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref4.C'
    sources:
      binary: constexpr-ref4.s
  group: GRPSERIAL
test_constexpr-ref4_4637:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref4.C'
    sources:
      binary: constexpr-ref4.s
  group: GRPSERIAL
test_constexpr-ref4_877:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref4.C'
    sources:
      binary: constexpr-ref4.s
  group: GRPSERIAL
test_constexpr-ref4_878:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref4.C'
    sources:
      binary: constexpr-ref4.s
  group: GRPSERIAL
test_constexpr-ref5_4638:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref5.C'
    sources:
      binary: constexpr-ref5.s
  group: GRPSERIAL
test_constexpr-ref5_4639:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref5.C'
    sources:
      binary: constexpr-ref5.s
  group: GRPSERIAL
test_constexpr-ref5_879:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref5.C'
    sources:
      binary: constexpr-ref5.s
  group: GRPSERIAL
test_constexpr-ref5_880:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref5.C'
    sources:
      binary: constexpr-ref5.s
  group: GRPSERIAL
test_constexpr-ref6_4640:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref6.C'
    sources:
      binary: constexpr-ref6.s
  group: GRPSERIAL
test_constexpr-ref6_4641:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref6.C'
    sources:
      binary: constexpr-ref6.s
  group: GRPSERIAL
test_constexpr-ref6_881:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref6.C'
    sources:
      binary: constexpr-ref6.s
  group: GRPSERIAL
test_constexpr-ref6_882:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref6.C'
    sources:
      binary: constexpr-ref6.s
  group: GRPSERIAL
test_constexpr-ref7_4642:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref7.C'
    sources:
      binary: constexpr-ref7.s
  group: GRPSERIAL
test_constexpr-ref7_4643:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref7.C'
    sources:
      binary: constexpr-ref7.s
  group: GRPSERIAL
test_constexpr-ref7_883:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref7.C'
    sources:
      binary: constexpr-ref7.s
  group: GRPSERIAL
test_constexpr-ref7_884:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref7.C'
    sources:
      binary: constexpr-ref7.s
  group: GRPSERIAL
test_constexpr-ref8_4644:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref8.C'
    sources:
      binary: constexpr-ref8.s
  group: GRPSERIAL
test_constexpr-ref8_4645:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref8.C'
    sources:
      binary: constexpr-ref8.s
  group: GRPSERIAL
test_constexpr-ref8_885:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref8.C'
    sources:
      binary: constexpr-ref8.s
  group: GRPSERIAL
test_constexpr-ref8_886:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref8.C'
    sources:
      binary: constexpr-ref8.s
  group: GRPSERIAL
test_constexpr-ref9_4646:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref9.C'
    sources:
      binary: constexpr-ref9.s
  group: GRPSERIAL
test_constexpr-ref9_4647:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref9.C'
    sources:
      binary: constexpr-ref9.s
  group: GRPSERIAL
test_constexpr-ref9_887:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref9.C'
    sources:
      binary: constexpr-ref9.s
  group: GRPSERIAL
test_constexpr-ref9_888:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-ref9.C'
    sources:
      binary: constexpr-ref9.s
  group: GRPSERIAL
test_constexpr-reinterpret1_4648:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-reinterpret1.C'
    sources:
      binary: constexpr-reinterpret1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reinterpret_cast")[^\n]*\n?)+'
test_constexpr-reinterpret1_4649:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-reinterpret1.C'
    sources:
      binary: constexpr-reinterpret1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reinterpret_cast")[^\n]*\n?)+'
test_constexpr-reinterpret1_889:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-reinterpret1.C'
    sources:
      binary: constexpr-reinterpret1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reinterpret_cast")[^\n]*\n?)+'
test_constexpr-reinterpret1_890:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-reinterpret1.C'
    sources:
      binary: constexpr-reinterpret1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reinterpret_cast")[^\n]*\n?)+'
test_constexpr-rom_4650:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-rom.C'
    sources:
      binary: constexpr-rom.s
  group: GRPSERIAL
test_constexpr-rom_4651:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-rom.C'
    sources:
      binary: constexpr-rom.s
  group: GRPSERIAL
test_constexpr-rom_891:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-rom.C'
    sources:
      binary: constexpr-rom.s
  group: GRPSERIAL
test_constexpr-rom_892:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-rom.C'
    sources:
      binary: constexpr-rom.s
  group: GRPSERIAL
test_constexpr-sassert_4652:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-sassert.C'
    sources:
      binary: constexpr-sassert.s
  group: GRPSERIAL
test_constexpr-sassert_4653:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-sassert.C'
    sources:
      binary: constexpr-sassert.s
  group: GRPSERIAL
test_constexpr-sassert_893:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-sassert.C'
    sources:
      binary: constexpr-sassert.s
  group: GRPSERIAL
test_constexpr-sassert_894:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-sassert.C'
    sources:
      binary: constexpr-sassert.s
  group: GRPSERIAL
test_constexpr-shift1_4654:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-shift1.C'
    sources:
      binary: constexpr-shift1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is >= than the
          precision of the left operand")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is negative")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflows")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is >= than the
          precision of the left operand")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is negative")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is negative")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is >= than the
          precision of the left operand")[^\n]*\n?)+'
test_constexpr-shift1_4655:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-shift1.C'
    sources:
      binary: constexpr-shift1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is >= than the
          precision of the left operand")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is negative")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflows")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is >= than the
          precision of the left operand")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is negative")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is negative")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is >= than the
          precision of the left operand")[^\n]*\n?)+'
test_constexpr-shift1_895:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-shift1.C'
    sources:
      binary: constexpr-shift1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is >= than the
          precision of the left operand")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is negative")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflows")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is >= than the
          precision of the left operand")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is negative")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is negative")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is >= than the
          precision of the left operand")[^\n]*\n?)+'
test_constexpr-shift1_896:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-shift1.C'
    sources:
      binary: constexpr-shift1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is >= than the
          precision of the left operand")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is negative")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflows")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is >= than the
          precision of the left operand")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is negative")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is negative")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is >= than the
          precision of the left operand")[^\n]*\n?)+'
test_constexpr-sizeof1_4656:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-sizeof1.C'
    sources:
      binary: constexpr-sizeof1.s
  group: GRPSERIAL
test_constexpr-sizeof1_4657:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-sizeof1.C'
    sources:
      binary: constexpr-sizeof1.s
  group: GRPSERIAL
test_constexpr-sizeof1_897:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-sizeof1.C'
    sources:
      binary: constexpr-sizeof1.s
  group: GRPSERIAL
test_constexpr-sizeof1_898:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-sizeof1.C'
    sources:
      binary: constexpr-sizeof1.s
  group: GRPSERIAL
test_constexpr-specialization_4658:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-specialization.C'
    sources:
      binary: constexpr-specialization.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          \''int bar")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          \''constexpr int foo")[^\n]*\n?)+'
test_constexpr-specialization_4659:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-specialization.C'
    sources:
      binary: constexpr-specialization.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          \''int bar")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          \''constexpr int foo")[^\n]*\n?)+'
test_constexpr-specialization_899:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-specialization.C'
    sources:
      binary: constexpr-specialization.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          \''int bar")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          \''constexpr int foo")[^\n]*\n?)+'
test_constexpr-specialization_900:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-specialization.C'
    sources:
      binary: constexpr-specialization.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          \''int bar")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          \''constexpr int foo")[^\n]*\n?)+'
test_constexpr-static10_4662:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static10.C'
    sources:
      binary: constexpr-static10.s
  group: GRPSERIAL
test_constexpr-static10_4663:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static10.C'
    sources:
      binary: constexpr-static10.s
  group: GRPSERIAL
test_constexpr-static10_903:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static10.C'
    sources:
      binary: constexpr-static10.s
  group: GRPSERIAL
test_constexpr-static10_904:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static10.C'
    sources:
      binary: constexpr-static10.s
  group: GRPSERIAL
test_constexpr-static11_4664:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static11.C'
    sources:
      binary: constexpr-static11.s
  group: GRPSERIAL
test_constexpr-static11_4665:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static11.C'
    sources:
      binary: constexpr-static11.s
  group: GRPSERIAL
test_constexpr-static11_905:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static11.C'
    sources:
      binary: constexpr-static11.s
  group: GRPSERIAL
test_constexpr-static11_906:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static11.C'
    sources:
      binary: constexpr-static11.s
  group: GRPSERIAL
test_constexpr-static12_4666:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static12.C'
    sources:
      binary: constexpr-static12.s
  group: GRPSERIAL
test_constexpr-static12_4667:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static12.C'
    sources:
      binary: constexpr-static12.s
  group: GRPSERIAL
test_constexpr-static12_907:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static12.C'
    sources:
      binary: constexpr-static12.s
  group: GRPSERIAL
test_constexpr-static12_908:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static12.C'
    sources:
      binary: constexpr-static12.s
  group: GRPSERIAL
test_constexpr-static2_4668:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static2.C'
    sources:
      binary: constexpr-static2.s
  group: GRPSERIAL
test_constexpr-static2_4669:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static2.C'
    sources:
      binary: constexpr-static2.s
  group: GRPSERIAL
test_constexpr-static2_909:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static2.C'
    sources:
      binary: constexpr-static2.s
  group: GRPSERIAL
test_constexpr-static2_910:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static2.C'
    sources:
      binary: constexpr-static2.s
  group: GRPSERIAL
test_constexpr-static3_4670:
  build:
    cflags: -std=gnu++11 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static3.C'
    sources:
      binary: ./constexpr-static3.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_constexpr-static3_4671:
  build:
    cflags: -std=gnu++14 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static3.C'
    sources:
      binary: ./constexpr-static3.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_constexpr-static3_911:
  build:
    cflags: -std=gnu++11 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static3.C'
    sources:
      binary: ./constexpr-static3.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_constexpr-static3_912:
  build:
    cflags: -std=gnu++14 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static3.C'
    sources:
      binary: ./constexpr-static3.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_constexpr-static4_4672:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static4.C'
    sources:
      binary: ./constexpr-static4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-static4_4673:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static4.C'
    sources:
      binary: ./constexpr-static4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-static4_913:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static4.C'
    sources:
      binary: ./constexpr-static4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-static4_914:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static4.C'
    sources:
      binary: ./constexpr-static4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-static5_4674:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static5.C'
    sources:
      binary: constexpr-static5.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
test_constexpr-static5_4675:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static5.C'
    sources:
      binary: constexpr-static5.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
test_constexpr-static5_915:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static5.C'
    sources:
      binary: constexpr-static5.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
test_constexpr-static5_916:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static5.C'
    sources:
      binary: constexpr-static5.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
test_constexpr-static6_4676:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static6.C'
    sources:
      binary: constexpr-static6.s
  group: GRPSERIAL
test_constexpr-static6_4677:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static6.C'
    sources:
      binary: constexpr-static6.s
  group: GRPSERIAL
test_constexpr-static6_917:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static6.C'
    sources:
      binary: constexpr-static6.s
  group: GRPSERIAL
test_constexpr-static6_918:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static6.C'
    sources:
      binary: constexpr-static6.s
  group: GRPSERIAL
test_constexpr-static7_4678:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static7.C'
    sources:
      binary: constexpr-static7.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'
test_constexpr-static7_4679:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static7.C'
    sources:
      binary: constexpr-static7.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'
test_constexpr-static7_919:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static7.C'
    sources:
      binary: constexpr-static7.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'
test_constexpr-static7_920:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static7.C'
    sources:
      binary: constexpr-static7.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'
test_constexpr-static8_4680:
  build:
    cflags: "-std=gnu++11 -fpermissive\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static8.C'
    sources:
      binary: constexpr-static8.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("23:\''constexpr\''
          needed")[^\n]*\n?)+'
test_constexpr-static8_4681:
  build:
    cflags: "-std=gnu++14 -fpermissive\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static8.C'
    sources:
      binary: constexpr-static8.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("23:\''constexpr\''
          needed")[^\n]*\n?)+'
test_constexpr-static8_921:
  build:
    cflags: "-std=gnu++11 -fpermissive\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static8.C'
    sources:
      binary: constexpr-static8.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("23:\''constexpr\''
          needed")[^\n]*\n?)+'
test_constexpr-static8_922:
  build:
    cflags: "-std=gnu++14 -fpermissive\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static8.C'
    sources:
      binary: constexpr-static8.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("23:\''constexpr\''
          needed")[^\n]*\n?)+'
test_constexpr-static_4660:
  build:
    cflags: -std=gnu++11 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static.C'
    sources:
      binary: ./constexpr-static.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_constexpr-static_4661:
  build:
    cflags: -std=gnu++14 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static.C'
    sources:
      binary: ./constexpr-static.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_constexpr-static_901:
  build:
    cflags: -std=gnu++11 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static.C'
    sources:
      binary: ./constexpr-static.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_constexpr-static_902:
  build:
    cflags: -std=gnu++14 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-static.C'
    sources:
      binary: ./constexpr-static.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_constexpr-stmtexpr2_4684:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-stmtexpr2.C'
    sources:
      binary: constexpr-stmtexpr2.s
  group: GRPSERIAL
test_constexpr-stmtexpr2_4685:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-stmtexpr2.C'
    sources:
      binary: constexpr-stmtexpr2.s
  group: GRPSERIAL
test_constexpr-stmtexpr2_925:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-stmtexpr2.C'
    sources:
      binary: constexpr-stmtexpr2.s
  group: GRPSERIAL
test_constexpr-stmtexpr2_926:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-stmtexpr2.C'
    sources:
      binary: constexpr-stmtexpr2.s
  group: GRPSERIAL
test_constexpr-stmtexpr_4682:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-stmtexpr.C'
    sources:
      binary: constexpr-stmtexpr.s
  group: GRPSERIAL
test_constexpr-stmtexpr_4683:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-stmtexpr.C'
    sources:
      binary: constexpr-stmtexpr.s
  group: GRPSERIAL
test_constexpr-stmtexpr_923:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-stmtexpr.C'
    sources:
      binary: constexpr-stmtexpr.s
  group: GRPSERIAL
test_constexpr-stmtexpr_924:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-stmtexpr.C'
    sources:
      binary: constexpr-stmtexpr.s
  group: GRPSERIAL
test_constexpr-strchr_4686:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-strchr.C'
    sources:
      binary: constexpr-strchr.s
  group: GRPSERIAL
test_constexpr-strchr_4687:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-strchr.C'
    sources:
      binary: constexpr-strchr.s
  group: GRPSERIAL
test_constexpr-strchr_927:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-strchr.C'
    sources:
      binary: constexpr-strchr.s
  group: GRPSERIAL
test_constexpr-strchr_928:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-strchr.C'
    sources:
      binary: constexpr-strchr.s
  group: GRPSERIAL
test_constexpr-string_4688:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-string.C'
    sources:
      binary: constexpr-string.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-string_4689:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-string.C'
    sources:
      binary: constexpr-string.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-string_929:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-string.C'
    sources:
      binary: constexpr-string.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-string_930:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-string.C'
    sources:
      binary: constexpr-string.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-strstr_4690:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-strstr.C'
    sources:
      binary: constexpr-strstr.s
  group: GRPSERIAL
test_constexpr-strstr_4691:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-strstr.C'
    sources:
      binary: constexpr-strstr.s
  group: GRPSERIAL
test_constexpr-strstr_931:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-strstr.C'
    sources:
      binary: constexpr-strstr.s
  group: GRPSERIAL
test_constexpr-strstr_932:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-strstr.C'
    sources:
      binary: constexpr-strstr.s
  group: GRPSERIAL
test_constexpr-switch2_4694:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-switch2.C'
    sources:
      binary: constexpr-switch2.s
  group: GRPSERIAL
test_constexpr-switch2_4695:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-switch2.C'
    sources:
      binary: constexpr-switch2.s
  group: GRPSERIAL
test_constexpr-switch2_935:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-switch2.C'
    sources:
      binary: constexpr-switch2.s
  group: GRPSERIAL
test_constexpr-switch2_936:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-switch2.C'
    sources:
      binary: constexpr-switch2.s
  group: GRPSERIAL
test_constexpr-switch_4692:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-switch.C'
    sources:
      binary: constexpr-switch.s
  group: GRPSERIAL
test_constexpr-switch_4693:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-switch.C'
    sources:
      binary: constexpr-switch.s
  group: GRPSERIAL
test_constexpr-switch_933:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-switch.C'
    sources:
      binary: constexpr-switch.s
  group: GRPSERIAL
test_constexpr-switch_934:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-switch.C'
    sources:
      binary: constexpr-switch.s
  group: GRPSERIAL
test_constexpr-synth1_4696:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-synth1.C'
    sources:
      binary: constexpr-synth1.s
  group: GRPSERIAL
test_constexpr-synth1_4697:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-synth1.C'
    sources:
      binary: constexpr-synth1.s
  group: GRPSERIAL
test_constexpr-synth1_937:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-synth1.C'
    sources:
      binary: constexpr-synth1.s
  group: GRPSERIAL
test_constexpr-synth1_938:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-synth1.C'
    sources:
      binary: constexpr-synth1.s
  group: GRPSERIAL
test_constexpr-targ2_4700:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-targ2.C'
    sources:
      binary: constexpr-targ2.s
  group: GRPSERIAL
test_constexpr-targ2_4701:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-targ2.C'
    sources:
      binary: constexpr-targ2.s
  group: GRPSERIAL
test_constexpr-targ2_941:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-targ2.C'
    sources:
      binary: constexpr-targ2.s
  group: GRPSERIAL
test_constexpr-targ2_942:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-targ2.C'
    sources:
      binary: constexpr-targ2.s
  group: GRPSERIAL
test_constexpr-targ3_4702:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-targ3.C'
    sources:
      binary: constexpr-targ3.s
  group: GRPSERIAL
test_constexpr-targ3_4703:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-targ3.C'
    sources:
      binary: constexpr-targ3.s
  group: GRPSERIAL
test_constexpr-targ3_943:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-targ3.C'
    sources:
      binary: constexpr-targ3.s
  group: GRPSERIAL
test_constexpr-targ3_944:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-targ3.C'
    sources:
      binary: constexpr-targ3.s
  group: GRPSERIAL
test_constexpr-targ_4698:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-targ.C'
    sources:
      binary: constexpr-targ.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template argument|invalid
          type")[^\n]*\n?)+'
test_constexpr-targ_4699:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-targ.C'
    sources:
      binary: constexpr-targ.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template argument|invalid
          type")[^\n]*\n?)+'
test_constexpr-targ_939:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-targ.C'
    sources:
      binary: constexpr-targ.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template argument|invalid
          type")[^\n]*\n?)+'
test_constexpr-targ_940:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-targ.C'
    sources:
      binary: constexpr-targ.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template argument|invalid
          type")[^\n]*\n?)+'
test_constexpr-temp1_4704:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-temp1.C'
    sources:
      binary: constexpr-temp1.s
  group: GRPSERIAL
test_constexpr-temp1_4705:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-temp1.C'
    sources:
      binary: constexpr-temp1.s
  group: GRPSERIAL
test_constexpr-temp1_945:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-temp1.C'
    sources:
      binary: constexpr-temp1.s
  group: GRPSERIAL
test_constexpr-temp1_946:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-temp1.C'
    sources:
      binary: constexpr-temp1.s
  group: GRPSERIAL
test_constexpr-template10_4708:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template10.C'
    sources:
      binary: constexpr-template10.s
  group: GRPSERIAL
test_constexpr-template10_4709:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template10.C'
    sources:
      binary: constexpr-template10.s
  group: GRPSERIAL
test_constexpr-template10_949:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template10.C'
    sources:
      binary: constexpr-template10.s
  group: GRPSERIAL
test_constexpr-template10_950:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template10.C'
    sources:
      binary: constexpr-template10.s
  group: GRPSERIAL
test_constexpr-template1_4706:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template1.C'
    sources:
      binary: constexpr-template1.s
  group: GRPSERIAL
test_constexpr-template1_4707:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template1.C'
    sources:
      binary: constexpr-template1.s
  group: GRPSERIAL
test_constexpr-template1_947:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template1.C'
    sources:
      binary: constexpr-template1.s
  group: GRPSERIAL
test_constexpr-template1_948:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template1.C'
    sources:
      binary: constexpr-template1.s
  group: GRPSERIAL
test_constexpr-template2_4710:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template2.C'
    sources:
      binary: constexpr-template2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A()")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("::t")[^\n]*\n?)+'
test_constexpr-template2_4711:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template2.C'
    sources:
      binary: constexpr-template2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A()")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("::t")[^\n]*\n?)+'
test_constexpr-template2_951:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template2.C'
    sources:
      binary: constexpr-template2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A()")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("::t")[^\n]*\n?)+'
test_constexpr-template2_952:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template2.C'
    sources:
      binary: constexpr-template2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("A()")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("::t")[^\n]*\n?)+'
test_constexpr-template3_4712:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template3.C'
    sources:
      binary: constexpr-template3.s
  group: GRPSERIAL
test_constexpr-template3_4713:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template3.C'
    sources:
      binary: constexpr-template3.s
  group: GRPSERIAL
test_constexpr-template3_953:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template3.C'
    sources:
      binary: constexpr-template3.s
  group: GRPSERIAL
test_constexpr-template3_954:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template3.C'
    sources:
      binary: constexpr-template3.s
  group: GRPSERIAL
test_constexpr-template4_4714:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template4.C'
    sources:
      binary: constexpr-template4.s
  group: GRPSERIAL
test_constexpr-template4_4715:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template4.C'
    sources:
      binary: constexpr-template4.s
  group: GRPSERIAL
test_constexpr-template4_955:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template4.C'
    sources:
      binary: constexpr-template4.s
  group: GRPSERIAL
test_constexpr-template4_956:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template4.C'
    sources:
      binary: constexpr-template4.s
  group: GRPSERIAL
test_constexpr-template5_4716:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template5.C'
    sources:
      binary: constexpr-template5.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-template5_4717:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template5.C'
    sources:
      binary: constexpr-template5.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-template5_957:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template5.C'
    sources:
      binary: constexpr-template5.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-template5_958:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template5.C'
    sources:
      binary: constexpr-template5.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-template6_4718:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template6.C'
    sources:
      binary: constexpr-template6.s
  group: GRPSERIAL
test_constexpr-template6_4719:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template6.C'
    sources:
      binary: constexpr-template6.s
  group: GRPSERIAL
test_constexpr-template6_959:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template6.C'
    sources:
      binary: constexpr-template6.s
  group: GRPSERIAL
test_constexpr-template6_960:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template6.C'
    sources:
      binary: constexpr-template6.s
  group: GRPSERIAL
test_constexpr-template7_4720:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template7.C'
    sources:
      binary: constexpr-template7.s
  group: GRPSERIAL
test_constexpr-template7_4721:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template7.C'
    sources:
      binary: constexpr-template7.s
  group: GRPSERIAL
test_constexpr-template7_961:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template7.C'
    sources:
      binary: constexpr-template7.s
  group: GRPSERIAL
test_constexpr-template7_962:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template7.C'
    sources:
      binary: constexpr-template7.s
  group: GRPSERIAL
test_constexpr-template8_4722:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template8.C'
    sources:
      binary: constexpr-template8.s
  group: GRPSERIAL
test_constexpr-template8_4723:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template8.C'
    sources:
      binary: constexpr-template8.s
  group: GRPSERIAL
test_constexpr-template8_963:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template8.C'
    sources:
      binary: constexpr-template8.s
  group: GRPSERIAL
test_constexpr-template8_964:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template8.C'
    sources:
      binary: constexpr-template8.s
  group: GRPSERIAL
test_constexpr-template9_4724:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template9.C'
    sources:
      binary: constexpr-template9.s
  group: GRPSERIAL
test_constexpr-template9_4725:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template9.C'
    sources:
      binary: constexpr-template9.s
  group: GRPSERIAL
test_constexpr-template9_965:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template9.C'
    sources:
      binary: constexpr-template9.s
  group: GRPSERIAL
test_constexpr-template9_966:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-template9.C'
    sources:
      binary: constexpr-template9.s
  group: GRPSERIAL
test_constexpr-throw_4726:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-throw.C'
    sources:
      binary: constexpr-throw.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("throw")[^\n]*\n?)+'
test_constexpr-throw_4727:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-throw.C'
    sources:
      binary: constexpr-throw.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("throw")[^\n]*\n?)+'
test_constexpr-throw_967:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-throw.C'
    sources:
      binary: constexpr-throw.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("throw")[^\n]*\n?)+'
test_constexpr-throw_968:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-throw.C'
    sources:
      binary: constexpr-throw.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("throw")[^\n]*\n?)+'
test_constexpr-trivial1_4728:
  build:
    cflags: "-std=gnu++11 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-trivial1.C'
    sources:
      binary: constexpr-trivial1.s
  group: GRPSERIAL
test_constexpr-trivial1_4729:
  build:
    cflags: "-std=gnu++14 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-trivial1.C'
    sources:
      binary: constexpr-trivial1.s
  group: GRPSERIAL
test_constexpr-trivial1_969:
  build:
    cflags: "-std=gnu++11 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-trivial1.C'
    sources:
      binary: constexpr-trivial1.s
  group: GRPSERIAL
test_constexpr-trivial1_970:
  build:
    cflags: "-std=gnu++14 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-trivial1.C'
    sources:
      binary: constexpr-trivial1.s
  group: GRPSERIAL
test_constexpr-trivial2_4730:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-trivial2.C'
    sources:
      binary: constexpr-trivial2.s
  group: GRPSERIAL
test_constexpr-trivial2_4731:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-trivial2.C'
    sources:
      binary: constexpr-trivial2.s
  group: GRPSERIAL
test_constexpr-trivial2_971:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-trivial2.C'
    sources:
      binary: constexpr-trivial2.s
  group: GRPSERIAL
test_constexpr-trivial2_972:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-trivial2.C'
    sources:
      binary: constexpr-trivial2.s
  group: GRPSERIAL
test_constexpr-trivial3_4732:
  build:
    cflags: "-std=gnu++11 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-trivial3.C'
    sources:
      binary: constexpr-trivial3.s
  group: GRPSERIAL
test_constexpr-trivial3_4733:
  build:
    cflags: "-std=gnu++14 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-trivial3.C'
    sources:
      binary: constexpr-trivial3.s
  group: GRPSERIAL
test_constexpr-trivial3_973:
  build:
    cflags: "-std=gnu++11 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-trivial3.C'
    sources:
      binary: constexpr-trivial3.s
  group: GRPSERIAL
test_constexpr-trivial3_974:
  build:
    cflags: "-std=gnu++14 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-trivial3.C'
    sources:
      binary: constexpr-trivial3.s
  group: GRPSERIAL
test_constexpr-tuple2_4736:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-tuple2.C'
    sources:
      binary: constexpr-tuple2.s
  group: GRPSERIAL
test_constexpr-tuple2_4737:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-tuple2.C'
    sources:
      binary: constexpr-tuple2.s
  group: GRPSERIAL
test_constexpr-tuple2_977:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-tuple2.C'
    sources:
      binary: constexpr-tuple2.s
  group: GRPSERIAL
test_constexpr-tuple2_978:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-tuple2.C'
    sources:
      binary: constexpr-tuple2.s
  group: GRPSERIAL
test_constexpr-tuple_4734:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-tuple.C'
    sources:
      binary: ./constexpr-tuple.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-tuple_4735:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-tuple.C'
    sources:
      binary: ./constexpr-tuple.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-tuple_975:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-tuple.C'
    sources:
      binary: ./constexpr-tuple.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-tuple_976:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-tuple.C'
    sources:
      binary: ./constexpr-tuple.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-type-decl1_4738:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-type-decl1.C'
    sources:
      binary: constexpr-type-decl1.s
  group: GRPSERIAL
test_constexpr-type-decl1_4739:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-type-decl1.C'
    sources:
      binary: constexpr-type-decl1.s
  group: GRPSERIAL
test_constexpr-type-decl1_979:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-type-decl1.C'
    sources:
      binary: constexpr-type-decl1.s
  group: GRPSERIAL
test_constexpr-type-decl1_980:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-type-decl1.C'
    sources:
      binary: constexpr-type-decl1.s
  group: GRPSERIAL
test_constexpr-type-def1_4740:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-type-def1.C'
    sources:
      binary: constexpr-type-def1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
test_constexpr-type-def1_4741:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-type-def1.C'
    sources:
      binary: constexpr-type-def1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
test_constexpr-type-def1_981:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-type-def1.C'
    sources:
      binary: constexpr-type-def1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
test_constexpr-type-def1_982:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-type-def1.C'
    sources:
      binary: constexpr-type-def1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not have
          empty body")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a return-statement")[^\n]*\n?)+'
test_constexpr-typedef1_4742:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-typedef1.C'
    sources:
      binary: constexpr-typedef1.s
  group: GRPSERIAL
test_constexpr-typedef1_4743:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-typedef1.C'
    sources:
      binary: constexpr-typedef1.s
  group: GRPSERIAL
test_constexpr-typedef1_983:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-typedef1.C'
    sources:
      binary: constexpr-typedef1.s
  group: GRPSERIAL
test_constexpr-typedef1_984:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-typedef1.C'
    sources:
      binary: constexpr-typedef1.s
  group: GRPSERIAL
test_constexpr-typeid_4744:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-typeid.C'
    sources:
      binary: constexpr-typeid.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-typeid_4745:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-typeid.C'
    sources:
      binary: constexpr-typeid.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-typeid_985:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-typeid.C'
    sources:
      binary: constexpr-typeid.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-typeid_986:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-typeid.C'
    sources:
      binary: constexpr-typeid.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_constexpr-union2_4748:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union2.C'
    sources:
      binary: constexpr-union2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-union2_4749:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union2.C'
    sources:
      binary: constexpr-union2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-union2_989:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union2.C'
    sources:
      binary: constexpr-union2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-union2_990:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union2.C'
    sources:
      binary: constexpr-union2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constexpr")[^\n]*\n?)+'
test_constexpr-union3_4750:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union3.C'
    sources:
      binary: constexpr-union3.s
  group: GRPSERIAL
test_constexpr-union3_4751:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union3.C'
    sources:
      binary: constexpr-union3.s
  group: GRPSERIAL
test_constexpr-union3_991:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union3.C'
    sources:
      binary: constexpr-union3.s
  group: GRPSERIAL
test_constexpr-union3_992:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union3.C'
    sources:
      binary: constexpr-union3.s
  group: GRPSERIAL
test_constexpr-union4_4752:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union4.C'
    sources:
      binary: constexpr-union4.s
  group: GRPSERIAL
test_constexpr-union4_4753:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union4.C'
    sources:
      binary: constexpr-union4.s
  group: GRPSERIAL
test_constexpr-union4_993:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union4.C'
    sources:
      binary: constexpr-union4.s
  group: GRPSERIAL
test_constexpr-union4_994:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union4.C'
    sources:
      binary: constexpr-union4.s
  group: GRPSERIAL
test_constexpr-union5_4754:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union5.C'
    sources:
      binary: constexpr-union5.s
  group: GRPSERIAL
  validate:
    match:
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("anonymous struct")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("anonymous struct")[^\n]*\n?)+'
test_constexpr-union5_4755:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union5.C'
    sources:
      binary: constexpr-union5.s
  group: GRPSERIAL
  validate:
    match:
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("anonymous struct")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("anonymous struct")[^\n]*\n?)+'
test_constexpr-union5_995:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union5.C'
    sources:
      binary: constexpr-union5.s
  group: GRPSERIAL
  validate:
    match:
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("anonymous struct")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("anonymous struct")[^\n]*\n?)+'
test_constexpr-union5_996:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union5.C'
    sources:
      binary: constexpr-union5.s
  group: GRPSERIAL
  validate:
    match:
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("anonymous struct")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("anonymous struct")[^\n]*\n?)+'
test_constexpr-union6_4756:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union6.C'
    sources:
      binary: constexpr-union6.s
  group: GRPSERIAL
test_constexpr-union6_4757:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union6.C'
    sources:
      binary: constexpr-union6.s
  group: GRPSERIAL
test_constexpr-union6_997:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union6.C'
    sources:
      binary: constexpr-union6.s
  group: GRPSERIAL
test_constexpr-union6_998:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union6.C'
    sources:
      binary: constexpr-union6.s
  group: GRPSERIAL
test_constexpr-union_4746:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union.C'
    sources:
      binary: constexpr-union.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("U::ca")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("char. glvalue")[^\n]*\n?)+'
test_constexpr-union_4747:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union.C'
    sources:
      binary: constexpr-union.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("U::ca")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("char. glvalue")[^\n]*\n?)+'
test_constexpr-union_987:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union.C'
    sources:
      binary: constexpr-union.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("U::ca")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("char. glvalue")[^\n]*\n?)+'
test_constexpr-union_988:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-union.C'
    sources:
      binary: constexpr-union.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("U::ca")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("char. glvalue")[^\n]*\n?)+'
test_constexpr-using2_1001:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-using2.C'
    sources:
      binary: constexpr-using2.s
  group: GRPSERIAL
test_constexpr-using2_1002:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-using2.C'
    sources:
      binary: constexpr-using2.s
  group: GRPSERIAL
test_constexpr-using2_4760:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-using2.C'
    sources:
      binary: constexpr-using2.s
  group: GRPSERIAL
test_constexpr-using2_4761:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-using2.C'
    sources:
      binary: constexpr-using2.s
  group: GRPSERIAL
test_constexpr-using3_1003:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-using3.C'
    sources:
      binary: constexpr-using3.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
test_constexpr-using3_1004:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-using3.C'
    sources:
      binary: constexpr-using3.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
test_constexpr-using3_4762:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-using3.C'
    sources:
      binary: constexpr-using3.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
test_constexpr-using3_4763:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-using3.C'
    sources:
      binary: constexpr-using3.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("compound-statement")[^\n]*\n?)+'
test_constexpr-using_1000:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-using.C'
    sources:
      binary: constexpr-using.s
  group: GRPSERIAL
test_constexpr-using_4758:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-using.C'
    sources:
      binary: constexpr-using.s
  group: GRPSERIAL
test_constexpr-using_4759:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-using.C'
    sources:
      binary: constexpr-using.s
  group: GRPSERIAL
test_constexpr-using_999:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-using.C'
    sources:
      binary: constexpr-using.s
  group: GRPSERIAL
test_constexpr-value2_1007:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value2.C'
    sources:
      binary: constexpr-value2.s
  group: GRPSERIAL
test_constexpr-value2_1008:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value2.C'
    sources:
      binary: constexpr-value2.s
  group: GRPSERIAL
test_constexpr-value2_4766:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value2.C'
    sources:
      binary: constexpr-value2.s
  group: GRPSERIAL
test_constexpr-value2_4767:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value2.C'
    sources:
      binary: constexpr-value2.s
  group: GRPSERIAL
test_constexpr-value3_1009:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value3.C'
    sources:
      binary: constexpr-value3.s
  group: GRPSERIAL
test_constexpr-value3_1010:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value3.C'
    sources:
      binary: constexpr-value3.s
  group: GRPSERIAL
test_constexpr-value3_4768:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value3.C'
    sources:
      binary: constexpr-value3.s
  group: GRPSERIAL
test_constexpr-value3_4769:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value3.C'
    sources:
      binary: constexpr-value3.s
  group: GRPSERIAL
test_constexpr-value4_1011:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value4.C'
    sources:
      binary: constexpr-value4.s
  group: GRPSERIAL
test_constexpr-value4_1012:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value4.C'
    sources:
      binary: constexpr-value4.s
  group: GRPSERIAL
test_constexpr-value4_4770:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value4.C'
    sources:
      binary: constexpr-value4.s
  group: GRPSERIAL
test_constexpr-value4_4771:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value4.C'
    sources:
      binary: constexpr-value4.s
  group: GRPSERIAL
test_constexpr-value5_1013:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value5.C'
    sources:
      binary: constexpr-value5.s
  group: GRPSERIAL
test_constexpr-value5_1014:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value5.C'
    sources:
      binary: constexpr-value5.s
  group: GRPSERIAL
test_constexpr-value5_4772:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value5.C'
    sources:
      binary: constexpr-value5.s
  group: GRPSERIAL
test_constexpr-value5_4773:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value5.C'
    sources:
      binary: constexpr-value5.s
  group: GRPSERIAL
test_constexpr-value_1005:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value.C'
    sources:
      binary: constexpr-value.s
  group: GRPSERIAL
test_constexpr-value_1006:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value.C'
    sources:
      binary: constexpr-value.s
  group: GRPSERIAL
test_constexpr-value_4764:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value.C'
    sources:
      binary: constexpr-value.s
  group: GRPSERIAL
test_constexpr-value_4765:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-value.C'
    sources:
      binary: constexpr-value.s
  group: GRPSERIAL
test_constexpr-variadic_1015:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-variadic.C'
    sources:
      binary: constexpr-variadic.s
  group: GRPSERIAL
test_constexpr-variadic_1016:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-variadic.C'
    sources:
      binary: constexpr-variadic.s
  group: GRPSERIAL
test_constexpr-variadic_4774:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-variadic.C'
    sources:
      binary: constexpr-variadic.s
  group: GRPSERIAL
test_constexpr-variadic_4775:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-variadic.C'
    sources:
      binary: constexpr-variadic.s
  group: GRPSERIAL
test_constexpr-virtual2_1019:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual2.C'
    sources:
      binary: constexpr-virtual2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("used but never defined")[^\n]*\n?)+'
test_constexpr-virtual2_1020:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual2.C'
    sources:
      binary: constexpr-virtual2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("used but never defined")[^\n]*\n?)+'
test_constexpr-virtual2_4778:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual2.C'
    sources:
      binary: constexpr-virtual2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("used but never defined")[^\n]*\n?)+'
test_constexpr-virtual2_4779:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual2.C'
    sources:
      binary: constexpr-virtual2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("used but never defined")[^\n]*\n?)+'
test_constexpr-virtual3_1021:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual3.C'
    sources:
      binary: constexpr-virtual3.s
  group: GRPSERIAL
test_constexpr-virtual3_1022:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual3.C'
    sources:
      binary: constexpr-virtual3.s
  group: GRPSERIAL
test_constexpr-virtual3_4780:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual3.C'
    sources:
      binary: constexpr-virtual3.s
  group: GRPSERIAL
test_constexpr-virtual3_4781:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual3.C'
    sources:
      binary: constexpr-virtual3.s
  group: GRPSERIAL
test_constexpr-virtual4_1023:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual4.C'
    sources:
      binary: constexpr-virtual4.s
  group: GRPSERIAL
test_constexpr-virtual4_1024:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual4.C'
    sources:
      binary: constexpr-virtual4.s
  group: GRPSERIAL
test_constexpr-virtual4_4782:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual4.C'
    sources:
      binary: constexpr-virtual4.s
  group: GRPSERIAL
test_constexpr-virtual4_4783:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual4.C'
    sources:
      binary: constexpr-virtual4.s
  group: GRPSERIAL
test_constexpr-virtual5_1025:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual5.C'
    sources:
      binary: constexpr-virtual5.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("both \''virtual\''
          and \''constexpr\''")[^\n]*\n?)+'
test_constexpr-virtual5_1026:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual5.C'
    sources:
      binary: constexpr-virtual5.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("both \''virtual\''
          and \''constexpr\''")[^\n]*\n?)+'
test_constexpr-virtual5_4784:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual5.C'
    sources:
      binary: constexpr-virtual5.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("both \''virtual\''
          and \''constexpr\''")[^\n]*\n?)+'
test_constexpr-virtual5_4785:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual5.C'
    sources:
      binary: constexpr-virtual5.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("both \''virtual\''
          and \''constexpr\''")[^\n]*\n?)+'
test_constexpr-virtual6_1027:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual6.C'
    sources:
      binary: ./constexpr-virtual6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-virtual6_1028:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual6.C'
    sources:
      binary: ./constexpr-virtual6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-virtual6_4786:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual6.C'
    sources:
      binary: ./constexpr-virtual6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-virtual6_4787:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual6.C'
    sources:
      binary: ./constexpr-virtual6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-virtual_1017:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual.C'
    sources:
      binary: constexpr-virtual.s
  group: GRPSERIAL
test_constexpr-virtual_1018:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual.C'
    sources:
      binary: constexpr-virtual.s
  group: GRPSERIAL
test_constexpr-virtual_4776:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual.C'
    sources:
      binary: constexpr-virtual.s
  group: GRPSERIAL
test_constexpr-virtual_4777:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-virtual.C'
    sources:
      binary: constexpr-virtual.s
  group: GRPSERIAL
test_constexpr-volatile_1029:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-volatile.C'
    sources:
      binary: constexpr-volatile.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
test_constexpr-volatile_1030:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-volatile.C'
    sources:
      binary: constexpr-volatile.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
test_constexpr-volatile_4788:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-volatile.C'
    sources:
      binary: constexpr-volatile.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
test_constexpr-volatile_4789:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-volatile.C'
    sources:
      binary: constexpr-volatile.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
test_constexpr-wstring1_1031:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-wstring1.C'
    sources:
      binary: ./constexpr-wstring1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-wstring1_1032:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-wstring1.C'
    sources:
      binary: ./constexpr-wstring1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-wstring1_4790:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-wstring1.C'
    sources:
      binary: ./constexpr-wstring1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-wstring1_4791:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-wstring1.C'
    sources:
      binary: ./constexpr-wstring1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_constexpr-wstring2_1033:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-wstring2.C'
    sources:
      binary: constexpr-wstring2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-wstring2_1034:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-wstring2.C'
    sources:
      binary: constexpr-wstring2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-wstring2_4792:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-wstring2.C'
    sources:
      binary: constexpr-wstring2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_constexpr-wstring2_4793:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/constexpr-wstring2.C'
    sources:
      binary: constexpr-wstring2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_conv-tmpl1_1035:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/conv-tmpl1.C'
    sources:
      binary: conv-tmpl1.s
  group: GRPSERIAL
test_conv-tmpl1_1036:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/conv-tmpl1.C'
    sources:
      binary: conv-tmpl1.s
  group: GRPSERIAL
test_conv-tmpl1_4794:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/conv-tmpl1.C'
    sources:
      binary: conv-tmpl1.s
  group: GRPSERIAL
test_conv-tmpl1_4795:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/conv-tmpl1.C'
    sources:
      binary: conv-tmpl1.s
  group: GRPSERIAL
test_cplusplus_0x_1038:
  build:
    cflags: "-std=c++0x\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/cplusplus_0x.C'
    sources:
      binary: cplusplus_0x.s
  group: GRPSERIAL
test_cplusplus_0x_4797:
  build:
    cflags: "-std=c++0x\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/cplusplus_0x.C'
    sources:
      binary: cplusplus_0x.s
  group: GRPSERIAL
test_cplusplus_1037:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/cplusplus.C'
    sources:
      binary: cplusplus.s
  group: GRPSERIAL
test_cplusplus_4796:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/cplusplus.C'
    sources:
      binary: cplusplus.s
  group: GRPSERIAL
test_dc1_1039:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc1.C'
    sources:
      binary: dc1.s
  group: GRPSERIAL
test_dc1_1040:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc1.C'
    sources:
      binary: dc1.s
  group: GRPSERIAL
test_dc1_4798:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc1.C'
    sources:
      binary: dc1.s
  group: GRPSERIAL
test_dc1_4799:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc1.C'
    sources:
      binary: dc1.s
  group: GRPSERIAL
test_dc2_1041:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc2.C'
    sources:
      binary: dc2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
test_dc2_1042:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc2.C'
    sources:
      binary: dc2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
test_dc2_4800:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc2.C'
    sources:
      binary: dc2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
test_dc2_4801:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc2.C'
    sources:
      binary: dc2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor delegation")[^\n]*\n?)+'
test_dc3_1043:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc3.C'
    sources:
      binary: dc3.s
  group: GRPSERIAL
test_dc3_1044:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc3.C'
    sources:
      binary: dc3.s
  group: GRPSERIAL
test_dc3_4802:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc3.C'
    sources:
      binary: dc3.s
  group: GRPSERIAL
test_dc3_4803:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc3.C'
    sources:
      binary: dc3.s
  group: GRPSERIAL
test_dc4_1045:
  build:
    cflags: "--std=c++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc4.C'
    sources:
      binary: dc4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("delegating constructors")[^\n]*\n?)+'
test_dc4_4804:
  build:
    cflags: "--std=c++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc4.C'
    sources:
      binary: dc4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("delegating constructors")[^\n]*\n?)+'
test_dc5_1046:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc5.C'
    sources:
      binary: ./dc5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dc5_1047:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc5.C'
    sources:
      binary: ./dc5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dc5_4805:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc5.C'
    sources:
      binary: ./dc5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dc5_4806:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc5.C'
    sources:
      binary: ./dc5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dc6_1048:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc6.C'
    sources:
      binary: ./dc6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dc6_1049:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc6.C'
    sources:
      binary: ./dc6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dc6_4807:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc6.C'
    sources:
      binary: ./dc6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dc6_4808:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc6.C'
    sources:
      binary: ./dc6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dc7_1050:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc7.C'
    sources:
      binary: dc7.s
  group: GRPSERIAL
test_dc7_1051:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc7.C'
    sources:
      binary: dc7.s
  group: GRPSERIAL
test_dc7_4809:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc7.C'
    sources:
      binary: dc7.s
  group: GRPSERIAL
test_dc7_4810:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc7.C'
    sources:
      binary: dc7.s
  group: GRPSERIAL
test_dc8_1052:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc8.C'
    sources:
      binary: dc8.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to itself")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to itself")[^\n]*\n?)+'
test_dc8_1053:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc8.C'
    sources:
      binary: dc8.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to itself")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to itself")[^\n]*\n?)+'
test_dc8_4811:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc8.C'
    sources:
      binary: dc8.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to itself")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to itself")[^\n]*\n?)+'
test_dc8_4812:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dc8.C'
    sources:
      binary: dc8.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to
          itself")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to itself")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("delegates to itself")[^\n]*\n?)+'
test_decl-loc1_1054:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decl-loc1.C'
    sources:
      binary: decl-loc1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''__restrict\''")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''__thread\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("1:\''typedef\''")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''constexpr\''")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''inline\''")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''virtual\''")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''friend\''")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:a storage class")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''const\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''volatile\''")[^\n]*\n?)+'
test_decl-loc1_1055:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decl-loc1.C'
    sources:
      binary: decl-loc1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''__restrict\''")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''__thread\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("1:\''typedef\''")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''constexpr\''")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''inline\''")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''virtual\''")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''friend\''")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:a storage class")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''const\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''volatile\''")[^\n]*\n?)+'
test_decl-loc1_4813:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decl-loc1.C'
    sources:
      binary: decl-loc1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''__restrict\''")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''__thread\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("1:\''typedef\''")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''constexpr\''")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''inline\''")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''virtual\''")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''friend\''")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:a storage class")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''const\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''volatile\''")[^\n]*\n?)+'
test_decl-loc1_4814:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decl-loc1.C'
    sources:
      binary: decl-loc1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''__restrict\''")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''__thread\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("1:\''typedef\''")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''constexpr\''")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''inline\''")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''virtual\''")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''friend\''")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:a storage class")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''const\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''volatile\''")[^\n]*\n?)+'
test_decltype-1212_1056:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-1212.C'
    sources:
      binary: decltype-1212.s
  group: GRPSERIAL
test_decltype-1212_1057:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-1212.C'
    sources:
      binary: decltype-1212.s
  group: GRPSERIAL
test_decltype-1212_4815:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-1212.C'
    sources:
      binary: decltype-1212.s
  group: GRPSERIAL
test_decltype-1212_4816:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-1212.C'
    sources:
      binary: decltype-1212.s
  group: GRPSERIAL
test_decltype-33837_1058:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-33837.C'
    sources:
      binary: decltype-33837.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared|expected")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared")[^\n]*\n?)+'
test_decltype-33837_1059:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-33837.C'
    sources:
      binary: decltype-33837.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared|expected")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared")[^\n]*\n?)+'
test_decltype-33837_4817:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-33837.C'
    sources:
      binary: decltype-33837.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared|expected")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared")[^\n]*\n?)+'
test_decltype-33837_4818:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-33837.C'
    sources:
      binary: decltype-33837.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared|expected")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared")[^\n]*\n?)+'
test_decltype-33838_1060:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-33838.C'
    sources:
      binary: decltype-33838.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|no arguments|accept")[^\n]*\n?)+'
test_decltype-33838_1061:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-33838.C'
    sources:
      binary: decltype-33838.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|no arguments|accept")[^\n]*\n?)+'
test_decltype-33838_4819:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-33838.C'
    sources:
      binary: decltype-33838.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|no arguments|accept")[^\n]*\n?)+'
test_decltype-33838_4820:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-33838.C'
    sources:
      binary: decltype-33838.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|no arguments|accept")[^\n]*\n?)+'
test_decltype-38655_1062:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-38655.C'
    sources:
      binary: decltype-38655.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not supported|invalid")[^\n]*\n?)+'
test_decltype-38655_1063:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-38655.C'
    sources:
      binary: decltype-38655.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not supported|invalid")[^\n]*\n?)+'
test_decltype-38655_1064:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-38655.C'
    sources:
      binary: decltype-38655.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not supported|invalid")[^\n]*\n?)+'
test_decltype-38655_4821:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-38655.C'
    sources:
      binary: decltype-38655.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not supported|invalid")[^\n]*\n?)+'
test_decltype-38655_4822:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-38655.C'
    sources:
      binary: decltype-38655.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not supported|invalid")[^\n]*\n?)+'
test_decltype-38655_4823:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-38655.C'
    sources:
      binary: decltype-38655.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not supported|invalid")[^\n]*\n?)+'
test_decltype-54581_1065:
  build:
    cflags: "-std=gnu++11 -Wall -Wno-tautological-compare\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-54581.C'
    sources:
      binary: decltype-54581.s
  group: GRPSERIAL
test_decltype-54581_1066:
  build:
    cflags: "-std=gnu++14 -Wall -Wno-tautological-compare\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-54581.C'
    sources:
      binary: decltype-54581.s
  group: GRPSERIAL
test_decltype-54581_4824:
  build:
    cflags: "-std=gnu++11 -Wall -Wno-tautological-compare\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-54581.C'
    sources:
      binary: decltype-54581.s
  group: GRPSERIAL
test_decltype-54581_4825:
  build:
    cflags: "-std=gnu++14 -Wall -Wno-tautological-compare\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-54581.C'
    sources:
      binary: decltype-54581.s
  group: GRPSERIAL
test_decltype-77338_1067:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-77338.C'
    sources:
      binary: decltype-77338.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match for call
          to")[^\n]*\n?)+'
test_decltype-77338_1068:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-77338.C'
    sources:
      binary: decltype-77338.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match for call
          to")[^\n]*\n?)+'
test_decltype-77338_4826:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-77338.C'
    sources:
      binary: decltype-77338.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match for call
          to")[^\n]*\n?)+'
test_decltype-77338_4827:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-77338.C'
    sources:
      binary: decltype-77338.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match for call
          to")[^\n]*\n?)+'
test_decltype-call1_1069:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call1.C'
    sources:
      binary: decltype-call1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_decltype-call1_1070:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call1.C'
    sources:
      binary: decltype-call1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_decltype-call1_4828:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call1.C'
    sources:
      binary: decltype-call1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_decltype-call1_4829:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call1.C'
    sources:
      binary: decltype-call1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_decltype-call2_1071:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call2.C'
    sources:
      binary: decltype-call2.s
  group: GRPSERIAL
test_decltype-call2_1072:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call2.C'
    sources:
      binary: decltype-call2.s
  group: GRPSERIAL
test_decltype-call2_4830:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call2.C'
    sources:
      binary: decltype-call2.s
  group: GRPSERIAL
test_decltype-call2_4831:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call2.C'
    sources:
      binary: decltype-call2.s
  group: GRPSERIAL
test_decltype-call3_1073:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call3.C'
    sources:
      binary: decltype-call3.s
  group: GRPSERIAL
test_decltype-call3_1074:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call3.C'
    sources:
      binary: decltype-call3.s
  group: GRPSERIAL
test_decltype-call3_4832:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call3.C'
    sources:
      binary: decltype-call3.s
  group: GRPSERIAL
test_decltype-call3_4833:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call3.C'
    sources:
      binary: decltype-call3.s
  group: GRPSERIAL
test_decltype-call4_1075:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call4.C'
    sources:
      binary: decltype-call4.s
  group: GRPSERIAL
test_decltype-call4_1076:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call4.C'
    sources:
      binary: decltype-call4.s
  group: GRPSERIAL
test_decltype-call4_4834:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call4.C'
    sources:
      binary: decltype-call4.s
  group: GRPSERIAL
test_decltype-call4_4835:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-call4.C'
    sources:
      binary: decltype-call4.s
  group: GRPSERIAL
test_decltype-incomplete1_1077:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-incomplete1.C'
    sources:
      binary: decltype-incomplete1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_decltype-incomplete1_1078:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-incomplete1.C'
    sources:
      binary: decltype-incomplete1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_decltype-incomplete1_4836:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-incomplete1.C'
    sources:
      binary: decltype-incomplete1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_decltype-incomplete1_4837:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-incomplete1.C'
    sources:
      binary: decltype-incomplete1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_decltype-mem-initializer1_1079:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-mem-initializer1.C'
    sources:
      binary: decltype-mem-initializer1.s
  group: GRPSERIAL
test_decltype-mem-initializer1_1080:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-mem-initializer1.C'
    sources:
      binary: decltype-mem-initializer1.s
  group: GRPSERIAL
test_decltype-mem-initializer1_4838:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-mem-initializer1.C'
    sources:
      binary: decltype-mem-initializer1.s
  group: GRPSERIAL
test_decltype-mem-initializer1_4839:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-mem-initializer1.C'
    sources:
      binary: decltype-mem-initializer1.s
  group: GRPSERIAL
test_decltype-refbug_1081:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-refbug.C'
    sources:
      binary: decltype-refbug.s
  group: GRPSERIAL
test_decltype-refbug_1082:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-refbug.C'
    sources:
      binary: decltype-refbug.s
  group: GRPSERIAL
test_decltype-refbug_4840:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-refbug.C'
    sources:
      binary: decltype-refbug.s
  group: GRPSERIAL
test_decltype-refbug_4841:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype-refbug.C'
    sources:
      binary: decltype-refbug.s
  group: GRPSERIAL
test_decltype10_1085:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype10.C'
    sources:
      binary: decltype10.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected primary-expression
          before")[^\n]*\n?)+'
test_decltype10_1086:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype10.C'
    sources:
      binary: decltype10.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected primary-expression
          before")[^\n]*\n?)+'
test_decltype10_4844:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype10.C'
    sources:
      binary: decltype10.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected primary-expression
          before")[^\n]*\n?)+'
test_decltype10_4845:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype10.C'
    sources:
      binary: decltype10.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected primary-expression
          before")[^\n]*\n?)+'
test_decltype11_1087:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype11.C'
    sources:
      binary: decltype11.s
  group: GRPSERIAL
test_decltype11_1088:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype11.C'
    sources:
      binary: decltype11.s
  group: GRPSERIAL
test_decltype11_4846:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype11.C'
    sources:
      binary: decltype11.s
  group: GRPSERIAL
test_decltype11_4847:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype11.C'
    sources:
      binary: decltype11.s
  group: GRPSERIAL
test_decltype12_1089:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype12.C'
    sources:
      binary: decltype12.s
  group: GRPSERIAL
test_decltype12_1090:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype12.C'
    sources:
      binary: decltype12.s
  group: GRPSERIAL
test_decltype12_4848:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype12.C'
    sources:
      binary: decltype12.s
  group: GRPSERIAL
test_decltype12_4849:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype12.C'
    sources:
      binary: decltype12.s
  group: GRPSERIAL
test_decltype13_1091:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype13.C'
    sources:
      binary: decltype13.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_decltype13_1092:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype13.C'
    sources:
      binary: decltype13.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_decltype13_1093:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype13.C'
    sources:
      binary: decltype13.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_decltype13_4850:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype13.C'
    sources:
      binary: decltype13.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_decltype13_4851:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype13.C'
    sources:
      binary: decltype13.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_decltype13_4852:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype13.C'
    sources:
      binary: decltype13.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_decltype14_1094:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype14.C'
    sources:
      binary: decltype14.s
  group: GRPSERIAL
test_decltype14_1095:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype14.C'
    sources:
      binary: decltype14.s
  group: GRPSERIAL
test_decltype14_1096:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype14.C'
    sources:
      binary: decltype14.s
  group: GRPSERIAL
test_decltype14_4853:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype14.C'
    sources:
      binary: decltype14.s
  group: GRPSERIAL
test_decltype14_4854:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype14.C'
    sources:
      binary: decltype14.s
  group: GRPSERIAL
test_decltype14_4855:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype14.C'
    sources:
      binary: decltype14.s
  group: GRPSERIAL
test_decltype15_1097:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype15.C'
    sources:
      binary: decltype15.s
  group: GRPSERIAL
test_decltype15_1098:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype15.C'
    sources:
      binary: decltype15.s
  group: GRPSERIAL
test_decltype15_4856:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype15.C'
    sources:
      binary: decltype15.s
  group: GRPSERIAL
test_decltype15_4857:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype15.C'
    sources:
      binary: decltype15.s
  group: GRPSERIAL
test_decltype16_1099:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype16.C'
    sources:
      binary: decltype16.s
  group: GRPSERIAL
test_decltype16_1100:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype16.C'
    sources:
      binary: decltype16.s
  group: GRPSERIAL
test_decltype16_4858:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype16.C'
    sources:
      binary: decltype16.s
  group: GRPSERIAL
test_decltype16_4859:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype16.C'
    sources:
      binary: decltype16.s
  group: GRPSERIAL
test_decltype17_1101:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype17.C'
    sources:
      binary: ./decltype17.exe
  group: GRPSERIAL
  run:
    cwd: .
test_decltype17_1102:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype17.C'
    sources:
      binary: ./decltype17.exe
  group: GRPSERIAL
  run:
    cwd: .
test_decltype17_4860:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype17.C'
    sources:
      binary: ./decltype17.exe
  group: GRPSERIAL
  run:
    cwd: .
test_decltype17_4861:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype17.C'
    sources:
      binary: ./decltype17.exe
  group: GRPSERIAL
  run:
    cwd: .
test_decltype18_1103:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype18.C'
    sources:
      binary: decltype18.s
  group: GRPSERIAL
test_decltype18_1104:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype18.C'
    sources:
      binary: decltype18.s
  group: GRPSERIAL
test_decltype18_4862:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype18.C'
    sources:
      binary: decltype18.s
  group: GRPSERIAL
test_decltype18_4863:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype18.C'
    sources:
      binary: decltype18.s
  group: GRPSERIAL
test_decltype19_1105:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype19.C'
    sources:
      binary: decltype19.s
  group: GRPSERIAL
test_decltype19_1106:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype19.C'
    sources:
      binary: decltype19.s
  group: GRPSERIAL
test_decltype19_1107:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype19.C'
    sources:
      binary: decltype19.s
  group: GRPSERIAL
test_decltype19_4864:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype19.C'
    sources:
      binary: decltype19.s
  group: GRPSERIAL
test_decltype19_4865:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype19.C'
    sources:
      binary: decltype19.s
  group: GRPSERIAL
test_decltype19_4866:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype19.C'
    sources:
      binary: decltype19.s
  group: GRPSERIAL
test_decltype1_1083:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype1.C'
    sources:
      binary: decltype1.s
  group: GRPSERIAL
test_decltype1_1084:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype1.C'
    sources:
      binary: decltype1.s
  group: GRPSERIAL
test_decltype1_4842:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype1.C'
    sources:
      binary: decltype1.s
  group: GRPSERIAL
test_decltype1_4843:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype1.C'
    sources:
      binary: decltype1.s
  group: GRPSERIAL
test_decltype20_1110:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype20.C'
    sources:
      binary: decltype20.s
  group: GRPSERIAL
test_decltype20_1111:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype20.C'
    sources:
      binary: decltype20.s
  group: GRPSERIAL
test_decltype20_4869:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype20.C'
    sources:
      binary: decltype20.s
  group: GRPSERIAL
test_decltype20_4870:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype20.C'
    sources:
      binary: decltype20.s
  group: GRPSERIAL
test_decltype21_1112:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype21.C'
    sources:
      binary: decltype21.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_decltype21_1113:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype21.C'
    sources:
      binary: decltype21.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_decltype21_4871:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype21.C'
    sources:
      binary: decltype21.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_decltype21_4872:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype21.C'
    sources:
      binary: decltype21.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_decltype22_1114:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype22.C'
    sources:
      binary: decltype22.s
  group: GRPSERIAL
test_decltype22_1115:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype22.C'
    sources:
      binary: decltype22.s
  group: GRPSERIAL
test_decltype22_4873:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype22.C'
    sources:
      binary: decltype22.s
  group: GRPSERIAL
test_decltype22_4874:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype22.C'
    sources:
      binary: decltype22.s
  group: GRPSERIAL
test_decltype23_1116:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype23.C'
    sources:
      binary: decltype23.s
  group: GRPSERIAL
test_decltype23_1117:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype23.C'
    sources:
      binary: decltype23.s
  group: GRPSERIAL
test_decltype23_4875:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype23.C'
    sources:
      binary: decltype23.s
  group: GRPSERIAL
test_decltype23_4876:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype23.C'
    sources:
      binary: decltype23.s
  group: GRPSERIAL
test_decltype24_1118:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype24.C'
    sources:
      binary: decltype24.s
  group: GRPSERIAL
test_decltype24_1119:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype24.C'
    sources:
      binary: decltype24.s
  group: GRPSERIAL
test_decltype24_4877:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype24.C'
    sources:
      binary: decltype24.s
  group: GRPSERIAL
test_decltype24_4878:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype24.C'
    sources:
      binary: decltype24.s
  group: GRPSERIAL
test_decltype25_1120:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype25.C'
    sources:
      binary: decltype25.s
  group: GRPSERIAL
test_decltype25_1121:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype25.C'
    sources:
      binary: decltype25.s
  group: GRPSERIAL
test_decltype25_4879:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype25.C'
    sources:
      binary: decltype25.s
  group: GRPSERIAL
test_decltype25_4880:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype25.C'
    sources:
      binary: decltype25.s
  group: GRPSERIAL
test_decltype26_1122:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype26.C'
    sources:
      binary: decltype26.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype26_1123:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype26.C'
    sources:
      binary: decltype26.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype26_4881:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype26.C'
    sources:
      binary: decltype26.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype26_4882:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype26.C'
    sources:
      binary: decltype26.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype27_1124:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype27.C'
    sources:
      binary: decltype27.s
  group: GRPSERIAL
test_decltype27_1125:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype27.C'
    sources:
      binary: decltype27.s
  group: GRPSERIAL
test_decltype27_4883:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype27.C'
    sources:
      binary: decltype27.s
  group: GRPSERIAL
test_decltype27_4884:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype27.C'
    sources:
      binary: decltype27.s
  group: GRPSERIAL
test_decltype28_1126:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype28.C'
    sources:
      binary: decltype28.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype28_1127:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype28.C'
    sources:
      binary: decltype28.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype28_4885:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype28.C'
    sources:
      binary: decltype28.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype28_4886:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype28.C'
    sources:
      binary: decltype28.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype29_1128:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype29.C'
    sources:
      binary: decltype29.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype29_1129:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype29.C'
    sources:
      binary: decltype29.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype29_4887:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype29.C'
    sources:
      binary: decltype29.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype29_4888:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype29.C'
    sources:
      binary: decltype29.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype2_1108:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype2.C'
    sources:
      binary: decltype2.s
  group: GRPSERIAL
  validate:
    match:
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overload")[^\n]*\n?)+'
test_decltype2_1109:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype2.C'
    sources:
      binary: decltype2.s
  group: GRPSERIAL
  validate:
    match:
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overload")[^\n]*\n?)+'
test_decltype2_4867:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype2.C'
    sources:
      binary: decltype2.s
  group: GRPSERIAL
  validate:
    match:
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overload")[^\n]*\n?)+'
test_decltype2_4868:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype2.C'
    sources:
      binary: decltype2.s
  group: GRPSERIAL
  validate:
    match:
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overload")[^\n]*\n?)+'
test_decltype30_1132:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype30.C'
    sources:
      binary: decltype30.s
  group: GRPSERIAL
test_decltype30_1133:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype30.C'
    sources:
      binary: decltype30.s
  group: GRPSERIAL
test_decltype30_4891:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype30.C'
    sources:
      binary: decltype30.s
  group: GRPSERIAL
test_decltype30_4892:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype30.C'
    sources:
      binary: decltype30.s
  group: GRPSERIAL
test_decltype31_1134:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype31.C'
    sources:
      binary: decltype31.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member function")[^\n]*\n?)+'
test_decltype31_1135:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype31.C'
    sources:
      binary: decltype31.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member function")[^\n]*\n?)+'
test_decltype31_4893:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype31.C'
    sources:
      binary: decltype31.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member function")[^\n]*\n?)+'
test_decltype31_4894:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype31.C'
    sources:
      binary: decltype31.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member function")[^\n]*\n?)+'
test_decltype32_1136:
  build:
    cflags: "-std=gnu++11 -ftemplate-depth=10\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype32.C'
    sources:
      binary: decltype32.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared|no
          matching|depth")[^\n]*\n?)+'
test_decltype32_1137:
  build:
    cflags: "-std=gnu++14 -ftemplate-depth=10\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype32.C'
    sources:
      binary: decltype32.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared|no
          matching|depth")[^\n]*\n?)+'
test_decltype32_4895:
  build:
    cflags: "-std=gnu++11 -ftemplate-depth=10\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype32.C'
    sources:
      binary: decltype32.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared|no
          matching|depth")[^\n]*\n?)+'
test_decltype32_4896:
  build:
    cflags: "-std=gnu++14 -ftemplate-depth=10\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype32.C'
    sources:
      binary: decltype32.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared|no
          matching|depth")[^\n]*\n?)+'
test_decltype33_1138:
  build:
    cflags: "-std=gnu++11 -fno-inline -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype33.C'
    sources:
      binary: decltype33.s
  group: GRPSERIAL
test_decltype33_1139:
  build:
    cflags: "-std=gnu++14 -fno-inline -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype33.C'
    sources:
      binary: decltype33.s
  group: GRPSERIAL
test_decltype33_4897:
  build:
    cflags: "-std=gnu++11 -fno-inline -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype33.C'
    sources:
      binary: decltype33.s
  group: GRPSERIAL
test_decltype33_4898:
  build:
    cflags: "-std=gnu++14 -fno-inline -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype33.C'
    sources:
      binary: decltype33.s
  group: GRPSERIAL
test_decltype34_1140:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype34.C'
    sources:
      binary: decltype34.s
  group: GRPSERIAL
test_decltype34_1141:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype34.C'
    sources:
      binary: decltype34.s
  group: GRPSERIAL
test_decltype34_4899:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype34.C'
    sources:
      binary: decltype34.s
  group: GRPSERIAL
test_decltype34_4900:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype34.C'
    sources:
      binary: decltype34.s
  group: GRPSERIAL
test_decltype35_1142:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype35.C'
    sources:
      binary: decltype35.s
  group: GRPSERIAL
test_decltype35_1143:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype35.C'
    sources:
      binary: decltype35.s
  group: GRPSERIAL
test_decltype35_4901:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype35.C'
    sources:
      binary: decltype35.s
  group: GRPSERIAL
test_decltype35_4902:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype35.C'
    sources:
      binary: decltype35.s
  group: GRPSERIAL
test_decltype36_1144:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype36.C'
    sources:
      binary: decltype36.s
  group: GRPSERIAL
test_decltype36_1145:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype36.C'
    sources:
      binary: decltype36.s
  group: GRPSERIAL
test_decltype36_4903:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype36.C'
    sources:
      binary: decltype36.s
  group: GRPSERIAL
test_decltype36_4904:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype36.C'
    sources:
      binary: decltype36.s
  group: GRPSERIAL
test_decltype37_1146:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype37.C'
    sources:
      binary: decltype37.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a base")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("class type")[^\n]*\n?)+'
test_decltype37_1147:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype37.C'
    sources:
      binary: decltype37.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a base")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("class type")[^\n]*\n?)+'
test_decltype37_4905:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype37.C'
    sources:
      binary: decltype37.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a base")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("class type")[^\n]*\n?)+'
test_decltype37_4906:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype37.C'
    sources:
      binary: decltype37.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a base")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("class type")[^\n]*\n?)+'
test_decltype38_1148:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype38.C'
    sources:
      binary: decltype38.s
  group: GRPSERIAL
test_decltype38_1149:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype38.C'
    sources:
      binary: decltype38.s
  group: GRPSERIAL
test_decltype38_4907:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype38.C'
    sources:
      binary: decltype38.s
  group: GRPSERIAL
test_decltype38_4908:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype38.C'
    sources:
      binary: decltype38.s
  group: GRPSERIAL
test_decltype39_1150:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype39.C'
    sources:
      binary: decltype39.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without object")[^\n]*\n?)+'
test_decltype39_1151:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype39.C'
    sources:
      binary: decltype39.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without object")[^\n]*\n?)+'
test_decltype39_4909:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype39.C'
    sources:
      binary: decltype39.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without object")[^\n]*\n?)+'
test_decltype39_4910:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype39.C'
    sources:
      binary: decltype39.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without object")[^\n]*\n?)+'
test_decltype3_1130:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype3.C'
    sources:
      binary: decltype3.s
  group: GRPSERIAL
  validate:
    match:
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot create
          pointer to reference member")[^\n]*\n?)+'
test_decltype3_1131:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype3.C'
    sources:
      binary: decltype3.s
  group: GRPSERIAL
  validate:
    match:
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot create
          pointer to reference member")[^\n]*\n?)+'
test_decltype3_4889:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype3.C'
    sources:
      binary: decltype3.s
  group: GRPSERIAL
  validate:
    match:
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot create
          pointer to reference member")[^\n]*\n?)+'
test_decltype3_4890:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype3.C'
    sources:
      binary: decltype3.s
  group: GRPSERIAL
  validate:
    match:
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot create
          pointer to reference member")[^\n]*\n?)+'
test_decltype40_1154:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype40.C'
    sources:
      binary: decltype40.s
  group: GRPSERIAL
test_decltype40_1155:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype40.C'
    sources:
      binary: decltype40.s
  group: GRPSERIAL
test_decltype40_4913:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype40.C'
    sources:
      binary: decltype40.s
  group: GRPSERIAL
test_decltype40_4914:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype40.C'
    sources:
      binary: decltype40.s
  group: GRPSERIAL
test_decltype41_1156:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype41.C'
    sources:
      binary: decltype41.s
  group: GRPSERIAL
test_decltype41_1157:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype41.C'
    sources:
      binary: decltype41.s
  group: GRPSERIAL
test_decltype41_4915:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype41.C'
    sources:
      binary: decltype41.s
  group: GRPSERIAL
test_decltype41_4916:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype41.C'
    sources:
      binary: decltype41.s
  group: GRPSERIAL
test_decltype42_1158:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype42.C'
    sources:
      binary: decltype42.s
  group: GRPSERIAL
test_decltype42_1159:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype42.C'
    sources:
      binary: decltype42.s
  group: GRPSERIAL
test_decltype42_4917:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype42.C'
    sources:
      binary: decltype42.s
  group: GRPSERIAL
test_decltype42_4918:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype42.C'
    sources:
      binary: decltype42.s
  group: GRPSERIAL
test_decltype43_1160:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype43.C'
    sources:
      binary: decltype43.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template argument")[^\n]*\n?)+'
test_decltype43_1161:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype43.C'
    sources:
      binary: decltype43.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template argument")[^\n]*\n?)+'
test_decltype43_4919:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype43.C'
    sources:
      binary: decltype43.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template argument")[^\n]*\n?)+'
test_decltype43_4920:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype43.C'
    sources:
      binary: decltype43.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template argument")[^\n]*\n?)+'
test_decltype44_1162:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype44.C'
    sources:
      binary: decltype44.s
  group: GRPSERIAL
test_decltype44_1163:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype44.C'
    sources:
      binary: decltype44.s
  group: GRPSERIAL
test_decltype44_4921:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype44.C'
    sources:
      binary: decltype44.s
  group: GRPSERIAL
test_decltype44_4922:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype44.C'
    sources:
      binary: decltype44.s
  group: GRPSERIAL
test_decltype45_1164:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype45.C'
    sources:
      binary: decltype45.s
  group: GRPSERIAL
test_decltype45_1165:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype45.C'
    sources:
      binary: decltype45.s
  group: GRPSERIAL
test_decltype45_4923:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype45.C'
    sources:
      binary: decltype45.s
  group: GRPSERIAL
test_decltype45_4924:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype45.C'
    sources:
      binary: decltype45.s
  group: GRPSERIAL
test_decltype46_1166:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype46.C'
    sources:
      binary: decltype46.s
  group: GRPSERIAL
test_decltype46_1167:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype46.C'
    sources:
      binary: decltype46.s
  group: GRPSERIAL
test_decltype46_4925:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype46.C'
    sources:
      binary: decltype46.s
  group: GRPSERIAL
test_decltype46_4926:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype46.C'
    sources:
      binary: decltype46.s
  group: GRPSERIAL
test_decltype47_1168:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype47.C'
    sources:
      binary: decltype47.s
  group: GRPSERIAL
test_decltype47_1169:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype47.C'
    sources:
      binary: decltype47.s
  group: GRPSERIAL
test_decltype47_4927:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype47.C'
    sources:
      binary: decltype47.s
  group: GRPSERIAL
test_decltype47_4928:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype47.C'
    sources:
      binary: decltype47.s
  group: GRPSERIAL
test_decltype48_1170:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype48.C'
    sources:
      binary: decltype48.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_decltype48_1171:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype48.C'
    sources:
      binary: decltype48.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_decltype48_4929:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype48.C'
    sources:
      binary: decltype48.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_decltype48_4930:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype48.C'
    sources:
      binary: decltype48.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_decltype49_1172:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype49.C'
    sources:
      binary: decltype49.s
  group: GRPSERIAL
test_decltype49_1173:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype49.C'
    sources:
      binary: decltype49.s
  group: GRPSERIAL
test_decltype49_4931:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype49.C'
    sources:
      binary: decltype49.s
  group: GRPSERIAL
test_decltype49_4932:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype49.C'
    sources:
      binary: decltype49.s
  group: GRPSERIAL
test_decltype4_1152:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype4.C'
    sources:
      binary: decltype4.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot create
          pointer to reference member|invalid type")[^\n]*\n?)+'
test_decltype4_1153:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype4.C'
    sources:
      binary: decltype4.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot create
          pointer to reference member|invalid type")[^\n]*\n?)+'
test_decltype4_4911:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype4.C'
    sources:
      binary: decltype4.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot create
          pointer to reference member|invalid type")[^\n]*\n?)+'
test_decltype4_4912:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype4.C'
    sources:
      binary: decltype4.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot create
          pointer to reference member|invalid type")[^\n]*\n?)+'
test_decltype50_1176:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype50.C'
    sources:
      binary: decltype50.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
test_decltype50_1177:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype50.C'
    sources:
      binary: decltype50.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
test_decltype50_4935:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype50.C'
    sources:
      binary: decltype50.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
test_decltype50_4936:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype50.C'
    sources:
      binary: decltype50.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          non-static member function")[^\n]*\n?)+'
test_decltype51_1178:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype51.C'
    sources:
      binary: decltype51.s
  group: GRPSERIAL
test_decltype51_1179:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype51.C'
    sources:
      binary: decltype51.s
  group: GRPSERIAL
test_decltype51_4937:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype51.C'
    sources:
      binary: decltype51.s
  group: GRPSERIAL
test_decltype51_4938:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype51.C'
    sources:
      binary: decltype51.s
  group: GRPSERIAL
test_decltype52_1180:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype52.C'
    sources:
      binary: decltype52.s
  group: GRPSERIAL
test_decltype52_1181:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype52.C'
    sources:
      binary: decltype52.s
  group: GRPSERIAL
test_decltype52_4939:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype52.C'
    sources:
      binary: decltype52.s
  group: GRPSERIAL
test_decltype52_4940:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype52.C'
    sources:
      binary: decltype52.s
  group: GRPSERIAL
test_decltype53_1182:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype53.C'
    sources:
      binary: decltype53.s
  group: GRPSERIAL
test_decltype53_1183:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype53.C'
    sources:
      binary: decltype53.s
  group: GRPSERIAL
test_decltype53_4941:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype53.C'
    sources:
      binary: decltype53.s
  group: GRPSERIAL
test_decltype53_4942:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype53.C'
    sources:
      binary: decltype53.s
  group: GRPSERIAL
test_decltype54_1184:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype54.C'
    sources:
      binary: decltype54.s
  group: GRPSERIAL
test_decltype54_1185:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype54.C'
    sources:
      binary: decltype54.s
  group: GRPSERIAL
test_decltype54_4943:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype54.C'
    sources:
      binary: decltype54.s
  group: GRPSERIAL
test_decltype54_4944:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype54.C'
    sources:
      binary: decltype54.s
  group: GRPSERIAL
test_decltype55_1186:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype55.C'
    sources:
      binary: decltype55.s
  group: GRPSERIAL
test_decltype55_1187:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype55.C'
    sources:
      binary: decltype55.s
  group: GRPSERIAL
test_decltype55_4945:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype55.C'
    sources:
      binary: decltype55.s
  group: GRPSERIAL
test_decltype55_4946:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype55.C'
    sources:
      binary: decltype55.s
  group: GRPSERIAL
test_decltype56_1188:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype56.C'
    sources:
      binary: decltype56.s
  group: GRPSERIAL
test_decltype56_1189:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype56.C'
    sources:
      binary: decltype56.s
  group: GRPSERIAL
test_decltype56_4947:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype56.C'
    sources:
      binary: decltype56.s
  group: GRPSERIAL
test_decltype56_4948:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype56.C'
    sources:
      binary: decltype56.s
  group: GRPSERIAL
test_decltype57_1190:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype57.C'
    sources:
      binary: decltype57.s
  group: GRPSERIAL
test_decltype57_1191:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype57.C'
    sources:
      binary: decltype57.s
  group: GRPSERIAL
test_decltype57_4949:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype57.C'
    sources:
      binary: decltype57.s
  group: GRPSERIAL
test_decltype57_4950:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype57.C'
    sources:
      binary: decltype57.s
  group: GRPSERIAL
test_decltype58_1192:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype58.C'
    sources:
      binary: decltype58.s
  group: GRPSERIAL
test_decltype58_1193:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype58.C'
    sources:
      binary: decltype58.s
  group: GRPSERIAL
test_decltype58_4951:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype58.C'
    sources:
      binary: decltype58.s
  group: GRPSERIAL
test_decltype58_4952:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype58.C'
    sources:
      binary: decltype58.s
  group: GRPSERIAL
test_decltype59_1194:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype59.C'
    sources:
      binary: decltype59.s
  group: GRPSERIAL
test_decltype59_1195:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype59.C'
    sources:
      binary: decltype59.s
  group: GRPSERIAL
test_decltype59_4953:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype59.C'
    sources:
      binary: decltype59.s
  group: GRPSERIAL
test_decltype59_4954:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype59.C'
    sources:
      binary: decltype59.s
  group: GRPSERIAL
test_decltype5_1174:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype5.C'
    sources:
      binary: decltype5.s
  group: GRPSERIAL
test_decltype5_1175:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype5.C'
    sources:
      binary: decltype5.s
  group: GRPSERIAL
test_decltype5_4933:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype5.C'
    sources:
      binary: decltype5.s
  group: GRPSERIAL
test_decltype5_4934:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype5.C'
    sources:
      binary: decltype5.s
  group: GRPSERIAL
test_decltype60_1198:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype60.C'
    sources:
      binary: decltype60.s
  group: GRPSERIAL
test_decltype60_1199:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype60.C'
    sources:
      binary: decltype60.s
  group: GRPSERIAL
test_decltype60_4957:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype60.C'
    sources:
      binary: decltype60.s
  group: GRPSERIAL
test_decltype60_4958:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype60.C'
    sources:
      binary: decltype60.s
  group: GRPSERIAL
test_decltype61_1200:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype61.C'
    sources:
      binary: decltype61.s
  group: GRPSERIAL
test_decltype61_1201:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype61.C'
    sources:
      binary: decltype61.s
  group: GRPSERIAL
test_decltype61_4959:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype61.C'
    sources:
      binary: decltype61.s
  group: GRPSERIAL
test_decltype61_4960:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype61.C'
    sources:
      binary: decltype61.s
  group: GRPSERIAL
test_decltype62_1202:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype62.C'
    sources:
      binary: decltype62.s
  group: GRPSERIAL
test_decltype62_1203:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype62.C'
    sources:
      binary: decltype62.s
  group: GRPSERIAL
test_decltype62_4961:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype62.C'
    sources:
      binary: decltype62.s
  group: GRPSERIAL
test_decltype62_4962:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype62.C'
    sources:
      binary: decltype62.s
  group: GRPSERIAL
test_decltype63_1204:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype63.C'
    sources:
      binary: decltype63.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_decltype63_1205:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype63.C'
    sources:
      binary: decltype63.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_decltype63_4963:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype63.C'
    sources:
      binary: decltype63.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_decltype63_4964:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype63.C'
    sources:
      binary: decltype63.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_decltype64_1206:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype64.C'
    sources:
      binary: decltype64.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype64_1207:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype64.C'
    sources:
      binary: decltype64.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype64_4965:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype64.C'
    sources:
      binary: decltype64.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype64_4966:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype64.C'
    sources:
      binary: decltype64.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_decltype65_1208:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype65.C'
    sources:
      binary: decltype65.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("decltype")[^\n]*\n?)+'
test_decltype65_1209:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype65.C'
    sources:
      binary: decltype65.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("decltype")[^\n]*\n?)+'
test_decltype65_4967:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype65.C'
    sources:
      binary: decltype65.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("decltype")[^\n]*\n?)+'
test_decltype65_4968:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype65.C'
    sources:
      binary: decltype65.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("decltype")[^\n]*\n?)+'
test_decltype66_1210:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype66.C'
    sources:
      binary: decltype66.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_decltype66_1211:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype66.C'
    sources:
      binary: decltype66.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_decltype66_4969:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype66.C'
    sources:
      binary: decltype66.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_decltype66_4970:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype66.C'
    sources:
      binary: decltype66.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_decltype6_1196:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype6.C'
    sources:
      binary: decltype6.s
  group: GRPSERIAL
test_decltype6_1197:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype6.C'
    sources:
      binary: decltype6.s
  group: GRPSERIAL
test_decltype6_4955:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype6.C'
    sources:
      binary: decltype6.s
  group: GRPSERIAL
test_decltype6_4956:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype6.C'
    sources:
      binary: decltype6.s
  group: GRPSERIAL
test_decltype7_1212:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype7.C'
    sources:
      binary: decltype7.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected primary-expression")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_decltype7_1213:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype7.C'
    sources:
      binary: decltype7.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected primary-expression")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_decltype7_1214:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype7.C'
    sources:
      binary: decltype7.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected primary-expression")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_decltype7_4971:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype7.C'
    sources:
      binary: decltype7.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected primary-expression")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_decltype7_4972:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype7.C'
    sources:
      binary: decltype7.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected primary-expression")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_decltype7_4973:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype7.C'
    sources:
      binary: decltype7.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected primary-expression")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_decltype8_1215:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype8.C'
    sources:
      binary: decltype8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_decltype8_1216:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype8.C'
    sources:
      binary: decltype8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_decltype8_1217:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype8.C'
    sources:
      binary: decltype8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_decltype8_4974:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype8.C'
    sources:
      binary: decltype8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_decltype8_4975:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype8.C'
    sources:
      binary: decltype8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_decltype8_4976:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype8.C'
    sources:
      binary: decltype8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_decltype9_1218:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype9.C'
    sources:
      binary: decltype9.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member function|must
          be an expression")[^\n]*\n?)+'
test_decltype9_1219:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype9.C'
    sources:
      binary: decltype9.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member function|must
          be an expression")[^\n]*\n?)+'
test_decltype9_4977:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype9.C'
    sources:
      binary: decltype9.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member function|must
          be an expression")[^\n]*\n?)+'
test_decltype9_4978:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/decltype9.C'
    sources:
      binary: decltype9.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member function|must
          be an expression")[^\n]*\n?)+'
test_deduce_1220:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deduce.C'
    sources:
      binary: deduce.s
  group: GRPSERIAL
test_deduce_1221:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deduce.C'
    sources:
      binary: deduce.s
  group: GRPSERIAL
test_deduce_4979:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deduce.C'
    sources:
      binary: deduce.s
  group: GRPSERIAL
test_deduce_4980:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deduce.C'
    sources:
      binary: deduce.s
  group: GRPSERIAL
test_defaulted10_1224:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted10.C'
    sources:
      binary: defaulted10.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously|declared")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_defaulted10_1225:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted10.C'
    sources:
      binary: defaulted10.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously|declared")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_defaulted10_4983:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted10.C'
    sources:
      binary: defaulted10.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously|declared")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_defaulted10_4984:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted10.C'
    sources:
      binary: defaulted10.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("previously|declared")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_defaulted11_1226:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted11.C'
    sources:
      binary: defaulted11.s
  group: GRPSERIAL
test_defaulted11_1227:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted11.C'
    sources:
      binary: defaulted11.s
  group: GRPSERIAL
test_defaulted11_4985:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted11.C'
    sources:
      binary: defaulted11.s
  group: GRPSERIAL
test_defaulted11_4986:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted11.C'
    sources:
      binary: defaulted11.s
  group: GRPSERIAL
test_defaulted13_1228:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted13.C'
    sources:
      binary: defaulted13.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
test_defaulted13_1229:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted13.C'
    sources:
      binary: defaulted13.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
test_defaulted13_4987:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted13.C'
    sources:
      binary: defaulted13.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
test_defaulted13_4988:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted13.C'
    sources:
      binary: defaulted13.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
test_defaulted14_1230:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted14.C'
    sources:
      binary: defaulted14.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_defaulted14_1231:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted14.C'
    sources:
      binary: defaulted14.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_defaulted14_4989:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted14.C'
    sources:
      binary: defaulted14.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_defaulted14_4990:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted14.C'
    sources:
      binary: defaulted14.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_defaulted15_1232:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted15.C'
    sources:
      binary: defaulted15.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted|match")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default argument")[^\n]*\n?)+'
test_defaulted15_1233:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted15.C'
    sources:
      binary: defaulted15.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted|match")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default argument")[^\n]*\n?)+'
test_defaulted15_4991:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted15.C'
    sources:
      binary: defaulted15.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted|match")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default argument")[^\n]*\n?)+'
test_defaulted15_4992:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted15.C'
    sources:
      binary: defaulted15.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted|match")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default argument")[^\n]*\n?)+'
test_defaulted16_1234:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted16.C'
    sources:
      binary: defaulted16.s
  group: GRPSERIAL
test_defaulted16_1235:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted16.C'
    sources:
      binary: defaulted16.s
  group: GRPSERIAL
test_defaulted16_4993:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted16.C'
    sources:
      binary: defaulted16.s
  group: GRPSERIAL
test_defaulted16_4994:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted16.C'
    sources:
      binary: defaulted16.s
  group: GRPSERIAL
test_defaulted17_1236:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted17.C'
    sources:
      binary: defaulted17.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const|operator=")[^\n]*\n?)+'
test_defaulted17_1237:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted17.C'
    sources:
      binary: defaulted17.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const|operator=")[^\n]*\n?)+'
test_defaulted17_4995:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted17.C'
    sources:
      binary: defaulted17.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const|operator=")[^\n]*\n?)+'
test_defaulted17_4996:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted17.C'
    sources:
      binary: defaulted17.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const|operator=")[^\n]*\n?)+'
test_defaulted18_1238:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted18.C'
    sources:
      binary: defaulted18.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_defaulted18_1239:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted18.C'
    sources:
      binary: defaulted18.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_defaulted18_4997:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted18.C'
    sources:
      binary: defaulted18.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_defaulted18_4998:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted18.C'
    sources:
      binary: defaulted18.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_defaulted19_1240:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted19.C'
    sources:
      binary: ./defaulted19.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted19_1241:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted19.C'
    sources:
      binary: ./defaulted19.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted19_4999:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted19.C'
    sources:
      binary: ./defaulted19.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted19_5000:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted19.C'
    sources:
      binary: ./defaulted19.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted19a_1242:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted19a.C'
    sources:
      binary: ./defaulted19a.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted19a_1243:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted19a.C'
    sources:
      binary: ./defaulted19a.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted19a_5001:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted19a.C'
    sources:
      binary: ./defaulted19a.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted19a_5002:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted19a.C'
    sources:
      binary: ./defaulted19a.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted1_1222:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted1.C'
    sources:
      binary: ./defaulted1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted1_1223:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted1.C'
    sources:
      binary: ./defaulted1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted1_4981:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted1.C'
    sources:
      binary: ./defaulted1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted1_4982:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted1.C'
    sources:
      binary: ./defaulted1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted20_1246:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted20.C'
    sources:
      binary: defaulted20.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly deleted|use
          of deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted20_1247:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted20.C'
    sources:
      binary: defaulted20.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly deleted|use
          of deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted20_5005:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted20.C'
    sources:
      binary: defaulted20.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly deleted|use
          of deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted20_5006:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted20.C'
    sources:
      binary: defaulted20.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly deleted|use
          of deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted21_1248:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted21.C'
    sources:
      binary: defaulted21.s
  group: GRPSERIAL
test_defaulted21_1249:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted21.C'
    sources:
      binary: defaulted21.s
  group: GRPSERIAL
test_defaulted21_5007:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted21.C'
    sources:
      binary: defaulted21.s
  group: GRPSERIAL
test_defaulted21_5008:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted21.C'
    sources:
      binary: defaulted21.s
  group: GRPSERIAL
test_defaulted22_1250:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted22.C'
    sources:
      binary: ./defaulted22.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted22_1251:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted22.C'
    sources:
      binary: ./defaulted22.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted22_5009:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted22.C'
    sources:
      binary: ./defaulted22.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted22_5010:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted22.C'
    sources:
      binary: ./defaulted22.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted23_1252:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted23.C'
    sources:
      binary: defaulted23.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_defaulted23_1253:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted23.C'
    sources:
      binary: defaulted23.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_defaulted23_5011:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted23.C'
    sources:
      binary: defaulted23.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_defaulted23_5012:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted23.C'
    sources:
      binary: defaulted23.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_defaulted24_1254:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted24.C'
    sources:
      binary: defaulted24.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_defaulted24_1255:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted24.C'
    sources:
      binary: defaulted24.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_defaulted24_5013:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted24.C'
    sources:
      binary: defaulted24.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_defaulted24_5014:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted24.C'
    sources:
      binary: defaulted24.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_defaulted25_1256:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted25.C'
    sources:
      binary: defaulted25.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_defaulted25_1257:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted25.C'
    sources:
      binary: defaulted25.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_defaulted25_5015:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted25.C'
    sources:
      binary: defaulted25.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_defaulted25_5016:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted25.C'
    sources:
      binary: defaulted25.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_defaulted26_1258:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted26.C'
    sources:
      binary: defaulted26.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted26_1259:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted26.C'
    sources:
      binary: defaulted26.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted26_5017:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted26.C'
    sources:
      binary: defaulted26.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted26_5018:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted26.C'
    sources:
      binary: defaulted26.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted27_1260:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted27.C'
    sources:
      binary: defaulted27.s
  group: GRPSERIAL
test_defaulted27_1261:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted27.C'
    sources:
      binary: defaulted27.s
  group: GRPSERIAL
test_defaulted27_5019:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted27.C'
    sources:
      binary: defaulted27.s
  group: GRPSERIAL
test_defaulted27_5020:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted27.C'
    sources:
      binary: defaulted27.s
  group: GRPSERIAL
test_defaulted28_1262:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted28.C'
    sources:
      binary: defaulted28.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_defaulted28_1263:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted28.C'
    sources:
      binary: defaulted28.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_defaulted28_5021:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted28.C'
    sources:
      binary: defaulted28.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_defaulted28_5022:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted28.C'
    sources:
      binary: defaulted28.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_defaulted29_1264:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted29.C'
    sources:
      binary: defaulted29.s
  group: GRPSERIAL
test_defaulted29_1265:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted29.C'
    sources:
      binary: defaulted29.s
  group: GRPSERIAL
test_defaulted29_5023:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted29.C'
    sources:
      binary: defaulted29.s
  group: GRPSERIAL
test_defaulted29_5024:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted29.C'
    sources:
      binary: defaulted29.s
  group: GRPSERIAL
test_defaulted2_1244:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted2.C'
    sources:
      binary: defaulted2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding deleted")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-deleted function")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union member.*non-trivial")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted2_1245:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted2.C'
    sources:
      binary: defaulted2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding deleted")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-deleted function")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union member.*non-trivial")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted2_5003:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted2.C'
    sources:
      binary: defaulted2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding deleted")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-deleted function")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union member.*non-trivial")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted2_5004:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted2.C'
    sources:
      binary: defaulted2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding deleted")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-deleted function")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union member.*non-trivial")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted30_1268:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted30.C'
    sources:
      binary: defaulted30.s
  group: GRPSERIAL
test_defaulted30_1269:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted30.C'
    sources:
      binary: defaulted30.s
  group: GRPSERIAL
test_defaulted30_5027:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted30.C'
    sources:
      binary: defaulted30.s
  group: GRPSERIAL
test_defaulted30_5028:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted30.C'
    sources:
      binary: defaulted30.s
  group: GRPSERIAL
test_defaulted31_1270:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted31.C'
    sources:
      binary: defaulted31.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted")[^\n]*\n?)+'
test_defaulted31_1271:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted31.C'
    sources:
      binary: defaulted31.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted")[^\n]*\n?)+'
test_defaulted31_5029:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted31.C'
    sources:
      binary: defaulted31.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted")[^\n]*\n?)+'
test_defaulted31_5030:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted31.C'
    sources:
      binary: defaulted31.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted")[^\n]*\n?)+'
test_defaulted32_1272:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted32.C'
    sources:
      binary: defaulted32.s
  group: GRPSERIAL
test_defaulted32_1273:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted32.C'
    sources:
      binary: defaulted32.s
  group: GRPSERIAL
test_defaulted32_5031:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted32.C'
    sources:
      binary: defaulted32.s
  group: GRPSERIAL
test_defaulted32_5032:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted32.C'
    sources:
      binary: defaulted32.s
  group: GRPSERIAL
test_defaulted33_1274:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted33.C'
    sources:
      binary: defaulted33.s
  group: GRPSERIAL
test_defaulted33_1275:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted33.C'
    sources:
      binary: defaulted33.s
  group: GRPSERIAL
test_defaulted33_5033:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted33.C'
    sources:
      binary: defaulted33.s
  group: GRPSERIAL
test_defaulted33_5034:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted33.C'
    sources:
      binary: defaulted33.s
  group: GRPSERIAL
test_defaulted34_1276:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted34.C'
    sources:
      binary: defaulted34.s
  group: GRPSERIAL
test_defaulted34_1277:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted34.C'
    sources:
      binary: defaulted34.s
  group: GRPSERIAL
test_defaulted34_5035:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted34.C'
    sources:
      binary: defaulted34.s
  group: GRPSERIAL
test_defaulted34_5036:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted34.C'
    sources:
      binary: defaulted34.s
  group: GRPSERIAL
test_defaulted35_1278:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted35.C'
    sources:
      binary: defaulted35.s
  group: GRPSERIAL
test_defaulted35_1279:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted35.C'
    sources:
      binary: defaulted35.s
  group: GRPSERIAL
test_defaulted35_5037:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted35.C'
    sources:
      binary: defaulted35.s
  group: GRPSERIAL
test_defaulted35_5038:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted35.C'
    sources:
      binary: defaulted35.s
  group: GRPSERIAL
test_defaulted36_1280:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted36.C'
    sources:
      binary: defaulted36.s
  group: GRPSERIAL
test_defaulted36_1281:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted36.C'
    sources:
      binary: defaulted36.s
  group: GRPSERIAL
test_defaulted36_5039:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted36.C'
    sources:
      binary: defaulted36.s
  group: GRPSERIAL
test_defaulted36_5040:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted36.C'
    sources:
      binary: defaulted36.s
  group: GRPSERIAL
test_defaulted37_1282:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted37.C'
    sources:
      binary: defaulted37.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("virtual base")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("virtual base")[^\n]*\n?)+'
test_defaulted37_1283:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted37.C'
    sources:
      binary: defaulted37.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("virtual base")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("virtual base")[^\n]*\n?)+'
test_defaulted37_5041:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted37.C'
    sources:
      binary: defaulted37.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("virtual base")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("virtual base")[^\n]*\n?)+'
test_defaulted37_5042:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted37.C'
    sources:
      binary: defaulted37.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("virtual base")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("virtual base")[^\n]*\n?)+'
test_defaulted38_1284:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted38.C'
    sources:
      binary: defaulted38.s
  group: GRPSERIAL
test_defaulted38_1285:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted38.C'
    sources:
      binary: defaulted38.s
  group: GRPSERIAL
test_defaulted38_5043:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted38.C'
    sources:
      binary: defaulted38.s
  group: GRPSERIAL
test_defaulted38_5044:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted38.C'
    sources:
      binary: defaulted38.s
  group: GRPSERIAL
test_defaulted39_1286:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted39.C'
    sources:
      binary: defaulted39.s
  group: GRPSERIAL
test_defaulted39_1287:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted39.C'
    sources:
      binary: defaulted39.s
  group: GRPSERIAL
test_defaulted39_5045:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted39.C'
    sources:
      binary: defaulted39.s
  group: GRPSERIAL
test_defaulted39_5046:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted39.C'
    sources:
      binary: defaulted39.s
  group: GRPSERIAL
test_defaulted3_1266:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted3.C'
    sources:
      binary: defaulted3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
test_defaulted3_1267:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted3.C'
    sources:
      binary: defaulted3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
test_defaulted3_5025:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted3.C'
    sources:
      binary: defaulted3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
test_defaulted3_5026:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted3.C'
    sources:
      binary: defaulted3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
test_defaulted40_1290:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted40.C'
    sources:
      binary: defaulted40.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted40_1291:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted40.C'
    sources:
      binary: defaulted40.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted40_5049:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted40.C'
    sources:
      binary: defaulted40.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted40_5050:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted40.C'
    sources:
      binary: defaulted40.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted41_1292:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted41.C'
    sources:
      binary: defaulted41.s
  group: GRPSERIAL
test_defaulted41_1293:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted41.C'
    sources:
      binary: defaulted41.s
  group: GRPSERIAL
test_defaulted41_5051:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted41.C'
    sources:
      binary: defaulted41.s
  group: GRPSERIAL
test_defaulted41_5052:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted41.C'
    sources:
      binary: defaulted41.s
  group: GRPSERIAL
test_defaulted42_1294:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted42.C'
    sources:
      binary: defaulted42.s
  group: GRPSERIAL
test_defaulted42_1295:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted42.C'
    sources:
      binary: defaulted42.s
  group: GRPSERIAL
test_defaulted42_5053:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted42.C'
    sources:
      binary: defaulted42.s
  group: GRPSERIAL
test_defaulted42_5054:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted42.C'
    sources:
      binary: defaulted42.s
  group: GRPSERIAL
test_defaulted43_1296:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted43.C'
    sources:
      binary: defaulted43.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted43_1297:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted43.C'
    sources:
      binary: defaulted43.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted43_5055:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted43.C'
    sources:
      binary: defaulted43.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted43_5056:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted43.C'
    sources:
      binary: defaulted43.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defaulted")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_defaulted44_1298:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted44.C'
    sources:
      binary: defaulted44.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("move assignment")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("move assignment")[^\n]*\n?)+'
test_defaulted44_1299:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted44.C'
    sources:
      binary: defaulted44.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("move assignment")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("move assignment")[^\n]*\n?)+'
test_defaulted44_5057:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted44.C'
    sources:
      binary: defaulted44.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("move assignment")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("move assignment")[^\n]*\n?)+'
test_defaulted44_5058:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted44.C'
    sources:
      binary: defaulted44.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("move assignment")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("move assignment")[^\n]*\n?)+'
test_defaulted45_1300:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted45.C'
    sources:
      binary: ./defaulted45.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted45_1301:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted45.C'
    sources:
      binary: ./defaulted45.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted45_5059:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted45.C'
    sources:
      binary: ./defaulted45.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted45_5060:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted45.C'
    sources:
      binary: ./defaulted45.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted46_1302:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted46.C'
    sources:
      binary: defaulted46.s
  group: GRPSERIAL
test_defaulted46_1303:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted46.C'
    sources:
      binary: defaulted46.s
  group: GRPSERIAL
test_defaulted46_5061:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted46.C'
    sources:
      binary: defaulted46.s
  group: GRPSERIAL
test_defaulted46_5062:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted46.C'
    sources:
      binary: defaulted46.s
  group: GRPSERIAL
test_defaulted47_1304:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted47.C'
    sources:
      binary: defaulted47.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("context")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("context")[^\n]*\n?)+'
test_defaulted47_1305:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted47.C'
    sources:
      binary: defaulted47.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("context")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("context")[^\n]*\n?)+'
test_defaulted47_5063:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted47.C'
    sources:
      binary: defaulted47.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("context")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("context")[^\n]*\n?)+'
test_defaulted47_5064:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted47.C'
    sources:
      binary: defaulted47.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("context")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("context")[^\n]*\n?)+'
test_defaulted48_1306:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted48.C'
    sources:
      binary: defaulted48.s
  group: GRPSERIAL
test_defaulted48_1307:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted48.C'
    sources:
      binary: defaulted48.s
  group: GRPSERIAL
test_defaulted48_5065:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted48.C'
    sources:
      binary: defaulted48.s
  group: GRPSERIAL
test_defaulted48_5066:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted48.C'
    sources:
      binary: defaulted48.s
  group: GRPSERIAL
test_defaulted49_1308:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted49.C'
    sources:
      binary: defaulted49.s
  group: GRPSERIAL
test_defaulted49_1309:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted49.C'
    sources:
      binary: defaulted49.s
  group: GRPSERIAL
test_defaulted49_5067:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted49.C'
    sources:
      binary: defaulted49.s
  group: GRPSERIAL
test_defaulted49_5068:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted49.C'
    sources:
      binary: defaulted49.s
  group: GRPSERIAL
test_defaulted4_1288:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted4.C'
    sources:
      binary: defaulted4.s
  group: GRPSERIAL
test_defaulted4_1289:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted4.C'
    sources:
      binary: defaulted4.s
  group: GRPSERIAL
test_defaulted4_5047:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted4.C'
    sources:
      binary: defaulted4.s
  group: GRPSERIAL
test_defaulted4_5048:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted4.C'
    sources:
      binary: defaulted4.s
  group: GRPSERIAL
test_defaulted50_1312:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted50.C'
    sources:
      binary: defaulted50.s
  group: GRPSERIAL
test_defaulted50_1313:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted50.C'
    sources:
      binary: defaulted50.s
  group: GRPSERIAL
test_defaulted50_5071:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted50.C'
    sources:
      binary: defaulted50.s
  group: GRPSERIAL
test_defaulted50_5072:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted50.C'
    sources:
      binary: defaulted50.s
  group: GRPSERIAL
test_defaulted5_1310:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted5.C'
    sources:
      binary: defaulted5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted5_1311:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted5.C'
    sources:
      binary: defaulted5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted5_5069:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted5.C'
    sources:
      binary: defaulted5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted5_5070:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted5.C'
    sources:
      binary: defaulted5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_defaulted6_1314:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted6.C'
    sources:
      binary: defaulted6.s
  group: GRPSERIAL
test_defaulted6_1315:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted6.C'
    sources:
      binary: defaulted6.s
  group: GRPSERIAL
test_defaulted6_5073:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted6.C'
    sources:
      binary: defaulted6.s
  group: GRPSERIAL
test_defaulted6_5074:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted6.C'
    sources:
      binary: defaulted6.s
  group: GRPSERIAL
test_defaulted7_1316:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted7.C'
    sources:
      binary: defaulted7.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
test_defaulted7_1317:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted7.C'
    sources:
      binary: defaulted7.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
test_defaulted7_5075:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted7.C'
    sources:
      binary: defaulted7.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
test_defaulted7_5076:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted7.C'
    sources:
      binary: defaulted7.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
test_defaulted8_1318:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted8.C'
    sources:
      binary: defaulted8.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
test_defaulted8_1319:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted8.C'
    sources:
      binary: defaulted8.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
test_defaulted8_5077:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted8.C'
    sources:
      binary: defaulted8.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
test_defaulted8_5078:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted8.C'
    sources:
      binary: defaulted8.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
test_defaulted9_1320:
  build:
    cflags: "-std=gnu++11 -fno-inline\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted9.C'
    sources:
      binary: defaulted9.s
  group: GRPSERIAL
test_defaulted9_1321:
  build:
    cflags: "-std=gnu++14 -fno-inline\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted9.C'
    sources:
      binary: defaulted9.s
  group: GRPSERIAL
test_defaulted9_5079:
  build:
    cflags: "-std=gnu++11 -fno-inline\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted9.C'
    sources:
      binary: defaulted9.s
  group: GRPSERIAL
test_defaulted9_5080:
  build:
    cflags: "-std=gnu++14 -fno-inline\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/defaulted9.C'
    sources:
      binary: defaulted9.s
  group: GRPSERIAL
test_deleted10_1324:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted10.C'
    sources:
      binary: deleted10.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted10_1325:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted10.C'
    sources:
      binary: deleted10.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted10_5083:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted10.C'
    sources:
      binary: deleted10.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted10_5084:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted10.C'
    sources:
      binary: deleted10.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted11_1326:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted11.C'
    sources:
      binary: deleted11.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted11_1327:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted11.C'
    sources:
      binary: deleted11.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted11_5085:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted11.C'
    sources:
      binary: deleted11.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted11_5086:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted11.C'
    sources:
      binary: deleted11.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted12_1328:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted12.C'
    sources:
      binary: deleted12.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted12_1329:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted12.C'
    sources:
      binary: deleted12.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted12_5087:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted12.C'
    sources:
      binary: deleted12.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted12_5088:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted12.C'
    sources:
      binary: deleted12.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted13_1330:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted13.C'
    sources:
      binary: deleted13.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_deleted13_1331:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted13.C'
    sources:
      binary: deleted13.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_deleted13_5089:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted13.C'
    sources:
      binary: deleted13.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_deleted13_5090:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted13.C'
    sources:
      binary: deleted13.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_deleted1_1322:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted1.C'
    sources:
      binary: deleted1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted1_1323:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted1.C'
    sources:
      binary: deleted1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted1_5081:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted1.C'
    sources:
      binary: deleted1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted1_5082:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted1.C'
    sources:
      binary: deleted1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_deleted2_1332:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted2.C'
    sources:
      binary: deleted2.s
  group: GRPSERIAL
test_deleted2_1333:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted2.C'
    sources:
      binary: deleted2.s
  group: GRPSERIAL
test_deleted2_5091:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted2.C'
    sources:
      binary: deleted2.s
  group: GRPSERIAL
test_deleted2_5092:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted2.C'
    sources:
      binary: deleted2.s
  group: GRPSERIAL
test_deleted3_1334:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted3.C'
    sources:
      binary: deleted3.s
  group: GRPSERIAL
test_deleted3_1335:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted3.C'
    sources:
      binary: deleted3.s
  group: GRPSERIAL
test_deleted3_5093:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted3.C'
    sources:
      binary: deleted3.s
  group: GRPSERIAL
test_deleted3_5094:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted3.C'
    sources:
      binary: deleted3.s
  group: GRPSERIAL
test_deleted4_1336:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted4.C'
    sources:
      binary: deleted4.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_deleted4_1337:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted4.C'
    sources:
      binary: deleted4.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_deleted4_5095:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted4.C'
    sources:
      binary: deleted4.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_deleted4_5096:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted4.C'
    sources:
      binary: deleted4.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_deleted5_1338:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted5.C'
    sources:
      binary: deleted5.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_deleted5_1339:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted5.C'
    sources:
      binary: deleted5.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_deleted5_5097:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted5.C'
    sources:
      binary: deleted5.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_deleted5_5098:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted5.C'
    sources:
      binary: deleted5.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_deleted6_1340:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted6.C'
    sources:
      binary: deleted6.s
  group: GRPSERIAL
test_deleted6_1341:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted6.C'
    sources:
      binary: deleted6.s
  group: GRPSERIAL
test_deleted6_5099:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted6.C'
    sources:
      binary: deleted6.s
  group: GRPSERIAL
test_deleted6_5100:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted6.C'
    sources:
      binary: deleted6.s
  group: GRPSERIAL
test_deleted7_1342:
  build:
    cflags: "-std=gnu++11 -Wreturn-type\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted7.C'
    sources:
      binary: deleted7.s
  group: GRPSERIAL
test_deleted7_1343:
  build:
    cflags: "-std=gnu++14 -Wreturn-type\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted7.C'
    sources:
      binary: deleted7.s
  group: GRPSERIAL
test_deleted7_5101:
  build:
    cflags: "-std=gnu++11 -Wreturn-type\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted7.C'
    sources:
      binary: deleted7.s
  group: GRPSERIAL
test_deleted7_5102:
  build:
    cflags: "-std=gnu++14 -Wreturn-type\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted7.C'
    sources:
      binary: deleted7.s
  group: GRPSERIAL
test_deleted8_1344:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted8.C'
    sources:
      binary: deleted8.s
  group: GRPSERIAL
test_deleted8_1345:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted8.C'
    sources:
      binary: deleted8.s
  group: GRPSERIAL
test_deleted8_5103:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted8.C'
    sources:
      binary: deleted8.s
  group: GRPSERIAL
test_deleted8_5104:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted8.C'
    sources:
      binary: deleted8.s
  group: GRPSERIAL
test_deleted9_1346:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted9.C'
    sources:
      binary: deleted9.s
  group: GRPSERIAL
test_deleted9_1347:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted9.C'
    sources:
      binary: deleted9.s
  group: GRPSERIAL
test_deleted9_5105:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted9.C'
    sources:
      binary: deleted9.s
  group: GRPSERIAL
test_deleted9_5106:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/deleted9.C'
    sources:
      binary: deleted9.s
  group: GRPSERIAL
test_dependent1_1348:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dependent1.C'
    sources:
      binary: dependent1.s
  group: GRPSERIAL
test_dependent1_1349:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dependent1.C'
    sources:
      binary: dependent1.s
  group: GRPSERIAL
test_dependent1_5107:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dependent1.C'
    sources:
      binary: dependent1.s
  group: GRPSERIAL
test_dependent1_5108:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dependent1.C'
    sources:
      binary: dependent1.s
  group: GRPSERIAL
test_desig1_1350:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/desig1.C'
    sources:
      binary: desig1.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral constant-expression")[^\n]*\n?)+'
test_desig1_1351:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/desig1.C'
    sources:
      binary: desig1.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral constant-expression")[^\n]*\n?)+'
test_desig1_5109:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/desig1.C'
    sources:
      binary: desig1.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral constant-expression")[^\n]*\n?)+'
test_desig1_5110:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/desig1.C'
    sources:
      binary: desig1.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral constant-expression")[^\n]*\n?)+'
test_diag1_1352:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/diag1.C'
    sources:
      binary: diag1.s
  group: GRPSERIAL
  validate:
    match:
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_diag1_1353:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/diag1.C'
    sources:
      binary: diag1.s
  group: GRPSERIAL
  validate:
    match:
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_diag1_5111:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/diag1.C'
    sources:
      binary: diag1.s
  group: GRPSERIAL
  validate:
    match:
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_diag1_5112:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/diag1.C'
    sources:
      binary: diag1.s
  group: GRPSERIAL
  validate:
    match:
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_diag2_1354:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/diag2.C'
    sources:
      binary: diag2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("qualifiers")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("qualifiers")[^\n]*\n?)+'
test_diag2_1355:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/diag2.C'
    sources:
      binary: diag2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("qualifiers")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("qualifiers")[^\n]*\n?)+'
test_diag2_5113:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/diag2.C'
    sources:
      binary: diag2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("qualifiers")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("qualifiers")[^\n]*\n?)+'
test_diag2_5114:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/diag2.C'
    sources:
      binary: diag2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("qualifiers")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("qualifiers")[^\n]*\n?)+'
test_dyncast1_1356:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dyncast1.C'
    sources:
      binary: dyncast1.s
  group: GRPSERIAL
test_dyncast1_1357:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dyncast1.C'
    sources:
      binary: dyncast1.s
  group: GRPSERIAL
test_dyncast1_5115:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dyncast1.C'
    sources:
      binary: dyncast1.s
  group: GRPSERIAL
test_dyncast1_5116:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/dyncast1.C'
    sources:
      binary: dyncast1.s
  group: GRPSERIAL
test_elision2_1360:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision2.C'
    sources:
      binary: elision2.s
  group: GRPSERIAL
test_elision2_1361:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision2.C'
    sources:
      binary: elision2.s
  group: GRPSERIAL
test_elision2_5119:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision2.C'
    sources:
      binary: elision2.s
  group: GRPSERIAL
test_elision2_5120:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision2.C'
    sources:
      binary: elision2.s
  group: GRPSERIAL
test_elision_1358:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision.C'
    sources:
      binary: elision.s
  group: GRPSERIAL
test_elision_1359:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision.C'
    sources:
      binary: elision.s
  group: GRPSERIAL
test_elision_5117:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision.C'
    sources:
      binary: elision.s
  group: GRPSERIAL
test_elision_5118:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision.C'
    sources:
      binary: elision.s
  group: GRPSERIAL
test_elision_conv_1362:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision_conv.C'
    sources:
      binary: elision_conv.s
  group: GRPSERIAL
test_elision_conv_1363:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision_conv.C'
    sources:
      binary: elision_conv.s
  group: GRPSERIAL
test_elision_conv_5121:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision_conv.C'
    sources:
      binary: elision_conv.s
  group: GRPSERIAL
test_elision_conv_5122:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision_conv.C'
    sources:
      binary: elision_conv.s
  group: GRPSERIAL
test_elision_neg_1364:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision_neg.C'
    sources:
      binary: elision_neg.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this context")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this context")[^\n]*\n?)+'
test_elision_neg_1365:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision_neg.C'
    sources:
      binary: elision_neg.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this context")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this context")[^\n]*\n?)+'
test_elision_neg_5123:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision_neg.C'
    sources:
      binary: elision_neg.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this context")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this context")[^\n]*\n?)+'
test_elision_neg_5124:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision_neg.C'
    sources:
      binary: elision_neg.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this context")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this context")[^\n]*\n?)+'
test_elision_weak_1366:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision_weak.C'
    sources:
      binary: elision_weak.s
  group: GRPSERIAL
test_elision_weak_1367:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision_weak.C'
    sources:
      binary: elision_weak.s
  group: GRPSERIAL
test_elision_weak_1368:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision_weak.C'
    sources:
      binary: elision_weak.s
  group: GRPSERIAL
test_elision_weak_5125:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision_weak.C'
    sources:
      binary: elision_weak.s
  group: GRPSERIAL
test_elision_weak_5126:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision_weak.C'
    sources:
      binary: elision_weak.s
  group: GRPSERIAL
test_elision_weak_5127:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/elision_weak.C'
    sources:
      binary: elision_weak.s
  group: GRPSERIAL
test_enum10_1371:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum10.C'
    sources:
      binary: enum10.s
  group: GRPSERIAL
test_enum10_1372:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum10.C'
    sources:
      binary: enum10.s
  group: GRPSERIAL
test_enum10_5130:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum10.C'
    sources:
      binary: enum10.s
  group: GRPSERIAL
test_enum10_5131:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum10.C'
    sources:
      binary: enum10.s
  group: GRPSERIAL
test_enum11_1373:
  build:
    cflags: "-std=gnu++11 -ftemplate-depth=10\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum11.C'
    sources:
      binary: enum11.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_enum11_1374:
  build:
    cflags: "-std=gnu++14 -ftemplate-depth=10\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum11.C'
    sources:
      binary: enum11.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_enum11_5132:
  build:
    cflags: "-std=gnu++11 -ftemplate-depth=10\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum11.C'
    sources:
      binary: enum11.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_enum11_5133:
  build:
    cflags: "-std=gnu++14 -ftemplate-depth=10\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum11.C'
    sources:
      binary: enum11.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("depth")[^\n]*\n?)+'
test_enum12_1375:
  build:
    cflags: "-std=gnu++11 -fabi-version=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum12.C'
    sources:
      binary: enum12.s
  group: GRPSERIAL
test_enum12_1376:
  build:
    cflags: "-std=gnu++14 -fabi-version=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum12.C'
    sources:
      binary: enum12.s
  group: GRPSERIAL
test_enum12_5134:
  build:
    cflags: "-std=gnu++11 -fabi-version=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum12.C'
    sources:
      binary: enum12.s
  group: GRPSERIAL
test_enum12_5135:
  build:
    cflags: "-std=gnu++14 -fabi-version=0\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum12.C'
    sources:
      binary: enum12.s
  group: GRPSERIAL
test_enum13_1377:
  build:
    cflags: "-std=gnu++11 -fabi-version=5 -Wabi\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum13.C'
    sources:
      binary: enum13.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("scoped|promote")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("scoped")[^\n]*\n?)+'
test_enum13_1378:
  build:
    cflags: "-std=gnu++14 -fabi-version=5 -Wabi\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum13.C'
    sources:
      binary: enum13.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("scoped|promote")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("scoped")[^\n]*\n?)+'
test_enum13_5136:
  build:
    cflags: "-std=gnu++11 -fabi-version=5 -Wabi\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum13.C'
    sources:
      binary: enum13.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("scoped|promote")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("scoped")[^\n]*\n?)+'
test_enum13_5137:
  build:
    cflags: "-std=gnu++14 -fabi-version=5 -Wabi\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum13.C'
    sources:
      binary: enum13.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("scoped|promote")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("scoped")[^\n]*\n?)+'
test_enum14_1379:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum14.C'
    sources:
      binary: enum14.s
  group: GRPSERIAL
test_enum14_1380:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum14.C'
    sources:
      binary: enum14.s
  group: GRPSERIAL
test_enum14_5138:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum14.C'
    sources:
      binary: enum14.s
  group: GRPSERIAL
test_enum14_5139:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum14.C'
    sources:
      binary: enum14.s
  group: GRPSERIAL
test_enum15_1381:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum15.C'
    sources:
      binary: enum15.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_enum15_1382:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum15.C'
    sources:
      binary: enum15.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_enum15_5140:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum15.C'
    sources:
      binary: enum15.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_enum15_5141:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum15.C'
    sources:
      binary: enum15.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_enum16_1383:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum16.C'
    sources:
      binary: enum16.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not name
          a type")[^\n]*\n?)+'
test_enum16_1384:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum16.C'
    sources:
      binary: enum16.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not name
          a type")[^\n]*\n?)+'
test_enum16_5142:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum16.C'
    sources:
      binary: enum16.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not name
          a type")[^\n]*\n?)+'
test_enum16_5143:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum16.C'
    sources:
      binary: enum16.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not name
          a type")[^\n]*\n?)+'
test_enum17_1385:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum17.C'
    sources:
      binary: enum17.s
  group: GRPSERIAL
test_enum17_1386:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum17.C'
    sources:
      binary: enum17.s
  group: GRPSERIAL
test_enum17_5144:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum17.C'
    sources:
      binary: enum17.s
  group: GRPSERIAL
test_enum17_5145:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum17.C'
    sources:
      binary: enum17.s
  group: GRPSERIAL
test_enum18_1387:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum18.C'
    sources:
      binary: enum18.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("e_u. has not been
          declared")[^\n]*\n?)+'
test_enum18_1388:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum18.C'
    sources:
      binary: enum18.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("e_u. has not been
          declared")[^\n]*\n?)+'
test_enum18_5146:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum18.C'
    sources:
      binary: enum18.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("e_u. has not been
          declared")[^\n]*\n?)+'
test_enum18_5147:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum18.C'
    sources:
      binary: enum18.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("e_u. has not been
          declared")[^\n]*\n?)+'
test_enum19_1389:
  build:
    cflags: "-std=gnu++11 -fabi-version=5 -Wabi\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum19.C'
    sources:
      binary: enum19.s
  group: GRPSERIAL
test_enum19_1390:
  build:
    cflags: "-std=gnu++14 -fabi-version=5 -Wabi\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum19.C'
    sources:
      binary: enum19.s
  group: GRPSERIAL
test_enum19_5148:
  build:
    cflags: "-std=gnu++11 -fabi-version=5 -Wabi\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum19.C'
    sources:
      binary: enum19.s
  group: GRPSERIAL
test_enum19_5149:
  build:
    cflags: "-std=gnu++14 -fabi-version=5 -Wabi\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum19.C'
    sources:
      binary: enum19.s
  group: GRPSERIAL
test_enum1_1369:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum1.C'
    sources:
      binary: enum1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_enum1_1370:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum1.C'
    sources:
      binary: enum1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_enum1_5128:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum1.C'
    sources:
      binary: enum1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_enum1_5129:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum1.C'
    sources:
      binary: enum1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_enum20_1393:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum20.C'
    sources:
      binary: enum20.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_enum20_1394:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum20.C'
    sources:
      binary: enum20.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_enum20_5152:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum20.C'
    sources:
      binary: enum20.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_enum20_5153:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum20.C'
    sources:
      binary: enum20.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_enum21a_1395:
  build:
    cflags: "-pedantic -std=c++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum21a.C'
    sources:
      binary: enum21a.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("comma at end of enumerator
          list")[^\n]*\n?)+'
test_enum21a_5154:
  build:
    cflags: "-pedantic -std=c++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum21a.C'
    sources:
      binary: enum21a.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("comma at end of enumerator
          list")[^\n]*\n?)+'
test_enum21b_1396:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum21b.C'
    sources:
      binary: enum21b.s
  group: GRPSERIAL
test_enum21b_1397:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum21b.C'
    sources:
      binary: enum21b.s
  group: GRPSERIAL
test_enum21b_5155:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum21b.C'
    sources:
      binary: enum21b.s
  group: GRPSERIAL
test_enum21b_5156:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum21b.C'
    sources:
      binary: enum21b.s
  group: GRPSERIAL
test_enum22_1398:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum22.C'
    sources:
      binary: enum22.s
  group: GRPSERIAL
test_enum22_1399:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum22.C'
    sources:
      binary: enum22.s
  group: GRPSERIAL
test_enum22_5157:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum22.C'
    sources:
      binary: enum22.s
  group: GRPSERIAL
test_enum22_5158:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum22.C'
    sources:
      binary: enum22.s
  group: GRPSERIAL
test_enum23_1400:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum23.C'
    sources:
      binary: enum23.s
  group: GRPSERIAL
test_enum23_1401:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum23.C'
    sources:
      binary: enum23.s
  group: GRPSERIAL
test_enum23_5159:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum23.C'
    sources:
      binary: enum23.s
  group: GRPSERIAL
test_enum23_5160:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum23.C'
    sources:
      binary: enum23.s
  group: GRPSERIAL
test_enum24_1402:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum24.C'
    sources:
      binary: enum24.s
  group: GRPSERIAL
test_enum24_1403:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum24.C'
    sources:
      binary: enum24.s
  group: GRPSERIAL
test_enum24_5161:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum24.C'
    sources:
      binary: enum24.s
  group: GRPSERIAL
test_enum24_5162:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum24.C'
    sources:
      binary: enum24.s
  group: GRPSERIAL
test_enum25_1404:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum25.C'
    sources:
      binary: enum25.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a member")[^\n]*\n?)+'
test_enum25_1405:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum25.C'
    sources:
      binary: enum25.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a member")[^\n]*\n?)+'
test_enum25_5163:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum25.C'
    sources:
      binary: enum25.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a member")[^\n]*\n?)+'
test_enum25_5164:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum25.C'
    sources:
      binary: enum25.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a member")[^\n]*\n?)+'
test_enum26_1406:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum26.C'
    sources:
      binary: enum26.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty unnamed")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unnamed")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unnamed")[^\n]*\n?)+'
test_enum26_1407:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum26.C'
    sources:
      binary: enum26.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty unnamed")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unnamed")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unnamed")[^\n]*\n?)+'
test_enum26_5165:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum26.C'
    sources:
      binary: enum26.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty unnamed")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unnamed")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unnamed")[^\n]*\n?)+'
test_enum26_5166:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum26.C'
    sources:
      binary: enum26.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty unnamed")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unnamed")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unnamed")[^\n]*\n?)+'
test_enum27_1408:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum27.C'
    sources:
      binary: enum27.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("outside the range")[^\n]*\n?)+'
test_enum27_1409:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum27.C'
    sources:
      binary: enum27.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("outside the range")[^\n]*\n?)+'
test_enum27_5167:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum27.C'
    sources:
      binary: enum27.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("outside the range")[^\n]*\n?)+'
test_enum27_5168:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum27.C'
    sources:
      binary: enum27.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("outside the range")[^\n]*\n?)+'
test_enum28_1410:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum28.C'
    sources:
      binary: enum28.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_enum28_1411:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum28.C'
    sources:
      binary: enum28.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_enum28_5169:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum28.C'
    sources:
      binary: enum28.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_enum28_5170:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum28.C'
    sources:
      binary: enum28.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_enum29_1412:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum29.C'
    sources:
      binary: enum29.s
  group: GRPSERIAL
  validate:
    match:
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_enum29_1413:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum29.C'
    sources:
      binary: enum29.s
  group: GRPSERIAL
  validate:
    match:
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_enum29_5171:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum29.C'
    sources:
      binary: enum29.s
  group: GRPSERIAL
  validate:
    match:
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_enum29_5172:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum29.C'
    sources:
      binary: enum29.s
  group: GRPSERIAL
  validate:
    match:
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_enum2_1391:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum2.C'
    sources:
      binary: enum2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration|expected")[^\n]*\n?)+'
test_enum2_1392:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum2.C'
    sources:
      binary: enum2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration|expected")[^\n]*\n?)+'
test_enum2_5150:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum2.C'
    sources:
      binary: enum2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration|expected")[^\n]*\n?)+'
test_enum2_5151:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum2.C'
    sources:
      binary: enum2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration|expected")[^\n]*\n?)+'
test_enum30_1416:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum30.C'
    sources:
      binary: enum30.s
  group: GRPSERIAL
test_enum30_1417:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum30.C'
    sources:
      binary: enum30.s
  group: GRPSERIAL
test_enum30_5175:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum30.C'
    sources:
      binary: enum30.s
  group: GRPSERIAL
test_enum30_5176:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum30.C'
    sources:
      binary: enum30.s
  group: GRPSERIAL
test_enum31_1418:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum31.C'
    sources:
      binary: enum31.s
  group: GRPSERIAL
test_enum31_1419:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum31.C'
    sources:
      binary: enum31.s
  group: GRPSERIAL
test_enum31_5177:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum31.C'
    sources:
      binary: enum31.s
  group: GRPSERIAL
test_enum31_5178:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum31.C'
    sources:
      binary: enum31.s
  group: GRPSERIAL
test_enum32_1420:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum32.C'
    sources:
      binary: enum32.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("private")[^\n]*\n?)+'
test_enum32_1421:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum32.C'
    sources:
      binary: enum32.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("private")[^\n]*\n?)+'
test_enum32_5179:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum32.C'
    sources:
      binary: enum32.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("private")[^\n]*\n?)+'
test_enum32_5180:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum32.C'
    sources:
      binary: enum32.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("private")[^\n]*\n?)+'
test_enum33_1422:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum33.C'
    sources:
      binary: enum33.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different access")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different access")[^\n]*\n?)+'
test_enum33_1423:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum33.C'
    sources:
      binary: enum33.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different access")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different access")[^\n]*\n?)+'
test_enum33_5181:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum33.C'
    sources:
      binary: enum33.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different access")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different access")[^\n]*\n?)+'
test_enum33_5182:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum33.C'
    sources:
      binary: enum33.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different access")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different access")[^\n]*\n?)+'
test_enum3_1414:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum3.C'
    sources:
      binary: ./enum3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_enum3_1415:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum3.C'
    sources:
      binary: ./enum3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_enum3_5173:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum3.C'
    sources:
      binary: ./enum3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_enum3_5174:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum3.C'
    sources:
      binary: ./enum3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_enum4_1424:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum4.C'
    sources:
      binary: enum4.s
  group: GRPSERIAL
test_enum4_1425:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum4.C'
    sources:
      binary: enum4.s
  group: GRPSERIAL
test_enum4_5183:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum4.C'
    sources:
      binary: enum4.s
  group: GRPSERIAL
test_enum4_5184:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum4.C'
    sources:
      binary: enum4.s
  group: GRPSERIAL
test_enum5_1426:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum5.C'
    sources:
      binary: enum5.s
  group: GRPSERIAL
test_enum5_1427:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum5.C'
    sources:
      binary: enum5.s
  group: GRPSERIAL
test_enum5_5185:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum5.C'
    sources:
      binary: enum5.s
  group: GRPSERIAL
test_enum5_5186:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum5.C'
    sources:
      binary: enum5.s
  group: GRPSERIAL
test_enum6_1428:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum6.C'
    sources:
      binary: enum6.s
  group: GRPSERIAL
test_enum6_1429:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum6.C'
    sources:
      binary: enum6.s
  group: GRPSERIAL
test_enum6_5187:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum6.C'
    sources:
      binary: enum6.s
  group: GRPSERIAL
test_enum6_5188:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum6.C'
    sources:
      binary: enum6.s
  group: GRPSERIAL
test_enum7_1430:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum7.C'
    sources:
      binary: enum7.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_enum7_1431:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum7.C'
    sources:
      binary: enum7.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_enum7_5189:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum7.C'
    sources:
      binary: enum7.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_enum7_5190:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum7.C'
    sources:
      binary: enum7.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_enum8_1432:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum8.C'
    sources:
      binary: enum8.s
  group: GRPSERIAL
test_enum8_1433:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum8.C'
    sources:
      binary: enum8.s
  group: GRPSERIAL
test_enum8_5191:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum8.C'
    sources:
      binary: enum8.s
  group: GRPSERIAL
test_enum8_5192:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum8.C'
    sources:
      binary: enum8.s
  group: GRPSERIAL
test_enum9_1434:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum9.C'
    sources:
      binary: enum9.s
  group: GRPSERIAL
test_enum9_1435:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum9.C'
    sources:
      binary: enum9.s
  group: GRPSERIAL
test_enum9_5193:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum9.C'
    sources:
      binary: enum9.s
  group: GRPSERIAL
test_enum9_5194:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum9.C'
    sources:
      binary: enum9.s
  group: GRPSERIAL
test_enum_base2_1438:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base2.C'
    sources:
      binary: enum_base2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
test_enum_base2_1439:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base2.C'
    sources:
      binary: enum_base2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
test_enum_base2_5197:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base2.C'
    sources:
      binary: enum_base2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
test_enum_base2_5198:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base2.C'
    sources:
      binary: enum_base2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
test_enum_base3_1440:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base3.C'
    sources:
      binary: enum_base3.s
  group: GRPSERIAL
test_enum_base3_1441:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base3.C'
    sources:
      binary: enum_base3.s
  group: GRPSERIAL
test_enum_base3_5199:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base3.C'
    sources:
      binary: enum_base3.s
  group: GRPSERIAL
test_enum_base3_5200:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base3.C'
    sources:
      binary: enum_base3.s
  group: GRPSERIAL
test_enum_base_1436:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base.C'
    sources:
      binary: enum_base.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("outside the range")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an integral
          type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("outside the range")[^\n]*\n?)+'
test_enum_base_1437:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base.C'
    sources:
      binary: enum_base.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("outside the range")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an integral
          type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("outside the range")[^\n]*\n?)+'
test_enum_base_5195:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base.C'
    sources:
      binary: enum_base.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("outside the range")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an integral
          type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("outside the range")[^\n]*\n?)+'
test_enum_base_5196:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base.C'
    sources:
      binary: enum_base.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("outside the range")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an integral
          type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("outside the range")[^\n]*\n?)+'
test_enum_base_warn_1442:
  build:
    cflags: -std=gnu++11 -O2 -Wtype-limits
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base_warn.C'
    sources:
      binary: ./enum_base_warn.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("always false due")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("always false due")[^\n]*\n?)+'
test_enum_base_warn_1443:
  build:
    cflags: -std=gnu++14 -O2 -Wtype-limits
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base_warn.C'
    sources:
      binary: ./enum_base_warn.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("always false due")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("always false due")[^\n]*\n?)+'
test_enum_base_warn_5201:
  build:
    cflags: -std=gnu++11 -O2 -Wtype-limits
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base_warn.C'
    sources:
      binary: ./enum_base_warn.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("always false due")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("always false due")[^\n]*\n?)+'
test_enum_base_warn_5202:
  build:
    cflags: -std=gnu++14 -O2 -Wtype-limits
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/enum_base_warn.C'
    sources:
      binary: ./enum_base_warn.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("always false due")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("always false due")[^\n]*\n?)+'
test_error1_1444:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error1.C'
    sources:
      binary: error1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of parameter
          from containing function")[^\n]*\n?)+'
test_error1_1445:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error1.C'
    sources:
      binary: error1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of parameter
          from containing function")[^\n]*\n?)+'
test_error1_5203:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error1.C'
    sources:
      binary: error1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of parameter
          from containing function")[^\n]*\n?)+'
test_error1_5204:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error1.C'
    sources:
      binary: error1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of parameter
          from containing function")[^\n]*\n?)+'
test_error2_1446:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error2.C'
    sources:
      binary: error2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pattern \''\\\\(foo\\\\<0\\\\>\\\\)\\\\(\\\\)=0\''")[^\n]*\n?)+'
test_error2_1447:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error2.C'
    sources:
      binary: error2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pattern \''\\\\(foo\\\\<0\\\\>\\\\)\\\\(\\\\)=0\''")[^\n]*\n?)+'
test_error2_5205:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error2.C'
    sources:
      binary: error2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pattern \''\\\\(foo\\\\<0\\\\>\\\\)\\\\(\\\\)=0\''")[^\n]*\n?)+'
test_error2_5206:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error2.C'
    sources:
      binary: error2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pattern \''\\\\(foo\\\\<0\\\\>\\\\)\\\\(\\\\)=0\''")[^\n]*\n?)+'
test_error3_1448:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error3.C'
    sources:
      binary: error3.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_error3_1449:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error3.C'
    sources:
      binary: error3.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_error3_5207:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error3.C'
    sources:
      binary: error3.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_error3_5208:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error3.C'
    sources:
      binary: error3.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_error4_1450:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error4.C'
    sources:
      binary: error4.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operator*")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_error4_1451:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error4.C'
    sources:
      binary: error4.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operator*")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_error4_5209:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error4.C'
    sources:
      binary: error4.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operator*")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_error4_5210:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error4.C'
    sources:
      binary: error4.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operator*")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_error5_1452:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error5.C'
    sources:
      binary: error5.s
  group: GRPSERIAL
  validate:
    match:
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_error5_1453:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error5.C'
    sources:
      binary: error5.s
  group: GRPSERIAL
  validate:
    match:
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_error5_5211:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error5.C'
    sources:
      binary: error5.s
  group: GRPSERIAL
  validate:
    match:
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_error5_5212:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error5.C'
    sources:
      binary: error5.s
  group: GRPSERIAL
  validate:
    match:
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_error6_1454:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error6.C'
    sources:
      binary: error6.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("decltype .c\\\\.f")[^\n]*\n?)+'
test_error6_1455:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error6.C'
    sources:
      binary: error6.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("decltype .c\\\\.f")[^\n]*\n?)+'
test_error6_5213:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error6.C'
    sources:
      binary: error6.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("decltype .c\\\\.f")[^\n]*\n?)+'
test_error6_5214:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error6.C'
    sources:
      binary: error6.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("decltype .c\\\\.f")[^\n]*\n?)+'
test_error7_1456:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error7.C'
    sources:
      binary: error7.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_error7_1457:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error7.C'
    sources:
      binary: error7.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_error7_5215:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error7.C'
    sources:
      binary: error7.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_error7_5216:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error7.C'
    sources:
      binary: error7.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_error8_1458:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error8.C'
    sources:
      binary: error8.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("16:foo. does not
          name a type")[^\n]*\n?)+'
test_error8_1459:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error8.C'
    sources:
      binary: error8.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("16:foo. does not
          name a type")[^\n]*\n?)+'
test_error8_5217:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error8.C'
    sources:
      binary: error8.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("16:foo. does not
          name a type")[^\n]*\n?)+'
test_error8_5218:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/error8.C'
    sources:
      binary: error8.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("16:foo. does not
          name a type")[^\n]*\n?)+'
test_explicit-inst1_1460:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit-inst1.C'
    sources:
      binary: explicit-inst1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit-inst1_1461:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit-inst1.C'
    sources:
      binary: explicit-inst1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit-inst1_1462:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit-inst1.C'
    sources:
      binary: explicit-inst1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit-inst1_5219:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit-inst1.C'
    sources:
      binary: explicit-inst1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit-inst1_5220:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit-inst1.C'
    sources:
      binary: explicit-inst1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit-inst1_5221:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit-inst1.C'
    sources:
      binary: explicit-inst1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit10_1465:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit10.C'
    sources:
      binary: explicit10.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit10_1466:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit10.C'
    sources:
      binary: explicit10.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit10_5224:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit10.C'
    sources:
      binary: explicit10.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit10_5225:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit10.C'
    sources:
      binary: explicit10.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit11_1467:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit11.C'
    sources:
      binary: explicit11.s
  group: GRPSERIAL
test_explicit11_1468:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit11.C'
    sources:
      binary: explicit11.s
  group: GRPSERIAL
test_explicit11_5226:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit11.C'
    sources:
      binary: explicit11.s
  group: GRPSERIAL
test_explicit11_5227:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit11.C'
    sources:
      binary: explicit11.s
  group: GRPSERIAL
test_explicit12_1469:
  build:
    cflags: -std=gnu++11 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit12.C'
    sources:
      binary: explicit12.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_explicit12_1470:
  build:
    cflags: -std=gnu++14 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit12.C'
    sources:
      binary: explicit12.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_explicit12_5228:
  build:
    cflags: -std=gnu++11 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit12.C'
    sources:
      binary: explicit12.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_explicit12_5229:
  build:
    cflags: -std=gnu++14 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit12.C'
    sources:
      binary: explicit12.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_explicit1_1463:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit1.C'
    sources:
      binary: explicit1.s
  group: GRPSERIAL
  validate:
    match:
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit1_1464:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit1.C'
    sources:
      binary: explicit1.s
  group: GRPSERIAL
  validate:
    match:
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit1_5222:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit1.C'
    sources:
      binary: explicit1.s
  group: GRPSERIAL
  validate:
    match:
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit1_5223:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit1.C'
    sources:
      binary: explicit1.s
  group: GRPSERIAL
  validate:
    match:
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit2_1471:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit2.C'
    sources:
      binary: explicit2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit2_1472:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit2.C'
    sources:
      binary: explicit2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit2_5230:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit2.C'
    sources:
      binary: explicit2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit2_5231:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit2.C'
    sources:
      binary: explicit2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit3_1473:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit3.C'
    sources:
      binary: explicit3.s
  group: GRPSERIAL
  validate:
    match:
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:no match")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:?:")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:?:")[^\n]*\n?)+'
test_explicit3_1474:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit3.C'
    sources:
      binary: explicit3.s
  group: GRPSERIAL
  validate:
    match:
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:no match")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:?:")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:?:")[^\n]*\n?)+'
test_explicit3_5232:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit3.C'
    sources:
      binary: explicit3.s
  group: GRPSERIAL
  validate:
    match:
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:no match")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:?:")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:?:")[^\n]*\n?)+'
test_explicit3_5233:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit3.C'
    sources:
      binary: explicit3.s
  group: GRPSERIAL
  validate:
    match:
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:no match")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:?:")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:?:")[^\n]*\n?)+'
test_explicit4_1475:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit4.C'
    sources:
      binary: explicit4.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_explicit4_1476:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit4.C'
    sources:
      binary: explicit4.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_explicit4_5234:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit4.C'
    sources:
      binary: explicit4.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_explicit4_5235:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit4.C'
    sources:
      binary: explicit4.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_explicit5_1477:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit5.C'
    sources:
      binary: ./explicit5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_explicit5_1478:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit5.C'
    sources:
      binary: ./explicit5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_explicit5_5236:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit5.C'
    sources:
      binary: ./explicit5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_explicit5_5237:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit5.C'
    sources:
      binary: ./explicit5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_explicit6_1479:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit6.C'
    sources:
      binary: explicit6.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid user-defined")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit6_1480:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit6.C'
    sources:
      binary: explicit6.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid user-defined")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit6_5238:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit6.C'
    sources:
      binary: explicit6.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid user-defined")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit6_5239:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit6.C'
    sources:
      binary: explicit6.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid user-defined")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit7_1481:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit7.C'
    sources:
      binary: explicit7.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit7_1482:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit7.C'
    sources:
      binary: explicit7.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit7_5240:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit7.C'
    sources:
      binary: explicit7.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit7_5241:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit7.C'
    sources:
      binary: explicit7.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_explicit8_1483:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit8.C'
    sources:
      binary: explicit8.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:only declarations
          of constructors and conversion operators can be \''explicit\''")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''
          outside class declaration")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:\''explicit\''
          in friend declaration")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''
          outside class declaration")[^\n]*\n?)+'
test_explicit8_1484:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit8.C'
    sources:
      binary: explicit8.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:only declarations
          of constructors and conversion operators can be \''explicit\''")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''
          outside class declaration")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:\''explicit\''
          in friend declaration")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''
          outside class declaration")[^\n]*\n?)+'
test_explicit8_5242:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit8.C'
    sources:
      binary: explicit8.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:only declarations
          of constructors and conversion operators can be \''explicit\''")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''
          outside class declaration")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:\''explicit\''
          in friend declaration")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''
          outside class declaration")[^\n]*\n?)+'
test_explicit8_5243:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit8.C'
    sources:
      binary: explicit8.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:only declarations
          of constructors and conversion operators can be \''explicit\''")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''
          outside class declaration")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:\''explicit\''
          in friend declaration")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''
          outside class declaration")[^\n]*\n?)+'
test_explicit9_1485:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit9.C'
    sources:
      binary: explicit9.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''
          outside class declaration")[^\n]*\n?)+'
test_explicit9_1486:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit9.C'
    sources:
      binary: explicit9.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''
          outside class declaration")[^\n]*\n?)+'
test_explicit9_5244:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit9.C'
    sources:
      binary: explicit9.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''
          outside class declaration")[^\n]*\n?)+'
test_explicit9_5245:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/explicit9.C'
    sources:
      binary: explicit9.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("1:\''explicit\''
          outside class declaration")[^\n]*\n?)+'
test_extern_template-1_1487:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/extern_template-1.C'
    sources:
      binary: extern_template-1.s
  group: GRPSERIAL
test_extern_template-1_1488:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/extern_template-1.C'
    sources:
      binary: extern_template-1.s
  group: GRPSERIAL
test_extern_template-1_5246:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/extern_template-1.C'
    sources:
      binary: extern_template-1.s
  group: GRPSERIAL
test_extern_template-1_5247:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/extern_template-1.C'
    sources:
      binary: extern_template-1.s
  group: GRPSERIAL
test_extern_template-2_1489:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/extern_template-2.C'
    sources:
      binary: extern_template-2.s
  group: GRPSERIAL
test_extern_template-2_1490:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/extern_template-2.C'
    sources:
      binary: extern_template-2.s
  group: GRPSERIAL
test_extern_template-2_5248:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/extern_template-2.C'
    sources:
      binary: extern_template-2.s
  group: GRPSERIAL
test_extern_template-2_5249:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/extern_template-2.C'
    sources:
      binary: extern_template-2.s
  group: GRPSERIAL
test_extern_template-3_1491:
  build:
    cflags: "-std=gnu++98 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/extern_template-3.C'
    sources:
      binary: extern_template-3.s
  group: GRPSERIAL
test_extern_template-3_1492:
  build:
    cflags: "-std=gnu++11 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/extern_template-3.C'
    sources:
      binary: extern_template-3.s
  group: GRPSERIAL
test_extern_template-3_1493:
  build:
    cflags: "-std=gnu++14 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/extern_template-3.C'
    sources:
      binary: extern_template-3.s
  group: GRPSERIAL
test_extern_template-3_5250:
  build:
    cflags: "-std=gnu++98 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/extern_template-3.C'
    sources:
      binary: extern_template-3.s
  group: GRPSERIAL
test_extern_template-3_5251:
  build:
    cflags: "-std=gnu++11 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/extern_template-3.C'
    sources:
      binary: extern_template-3.s
  group: GRPSERIAL
test_extern_template-3_5252:
  build:
    cflags: "-std=gnu++14 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/extern_template-3.C'
    sources:
      binary: extern_template-3.s
  group: GRPSERIAL
test_fallthrough1_1494:
  build:
    cflags: "-std=gnu++11 -Wextra -Wall -Wpedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fallthrough1.C'
    sources:
      binary: fallthrough1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("statement will never")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("statement may fall
          through")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not preceding")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("statement may fall
          through")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("statement may fall
          through")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("attribute ignored")[^\n]*\n?)+'
test_fallthrough1_1495:
  build:
    cflags: "-std=gnu++14 -Wextra -Wall -Wpedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fallthrough1.C'
    sources:
      binary: fallthrough1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("statement will never")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("statement may fall
          through")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not preceding")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("statement may fall
          through")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("statement may fall
          through")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("attribute ignored")[^\n]*\n?)+'
test_fallthrough1_5253:
  build:
    cflags: "-std=gnu++11 -Wextra -Wall -Wpedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fallthrough1.C'
    sources:
      binary: fallthrough1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("statement will never")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("statement may fall
          through")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not preceding")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("statement may fall
          through")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("statement may fall
          through")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("attribute ignored")[^\n]*\n?)+'
test_fallthrough1_5254:
  build:
    cflags: "-std=gnu++14 -Wextra -Wall -Wpedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fallthrough1.C'
    sources:
      binary: fallthrough1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("statement will never")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("statement may fall
          through")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not preceding")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("statement may fall
          through")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("statement may fall
          through")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("attribute ignored")[^\n]*\n?)+'
test_fallthrough2_1496:
  build:
    cflags: "-std=gnu++11 -Wextra -Wall -Wpedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fallthrough2.C'
    sources:
      binary: fallthrough2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*(".fallthrough. attribute
          specified multiple times")[^\n]*\n?)+'
test_fallthrough2_1497:
  build:
    cflags: "-std=gnu++14 -Wextra -Wall -Wpedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fallthrough2.C'
    sources:
      binary: fallthrough2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*(".fallthrough. attribute
          specified multiple times")[^\n]*\n?)+'
test_fallthrough2_5255:
  build:
    cflags: "-std=gnu++11 -Wextra -Wall -Wpedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fallthrough2.C'
    sources:
      binary: fallthrough2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*(".fallthrough. attribute
          specified multiple times")[^\n]*\n?)+'
test_fallthrough2_5256:
  build:
    cflags: "-std=gnu++14 -Wextra -Wall -Wpedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fallthrough2.C'
    sources:
      binary: fallthrough2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*(".fallthrough. attribute
          specified multiple times")[^\n]*\n?)+'
test_fntmpdefarg1_1498:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg1.C'
    sources:
      binary: fntmpdefarg1.s
  group: GRPSERIAL
test_fntmpdefarg1_1499:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg1.C'
    sources:
      binary: fntmpdefarg1.s
  group: GRPSERIAL
test_fntmpdefarg1_5257:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg1.C'
    sources:
      binary: fntmpdefarg1.s
  group: GRPSERIAL
test_fntmpdefarg1_5258:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg1.C'
    sources:
      binary: fntmpdefarg1.s
  group: GRPSERIAL
test_fntmpdefarg2_1500:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg2.C'
    sources:
      binary: fntmpdefarg2.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_fntmpdefarg2_1501:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg2.C'
    sources:
      binary: fntmpdefarg2.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_fntmpdefarg2_5259:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg2.C'
    sources:
      binary: fntmpdefarg2.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_fntmpdefarg2_5260:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg2.C'
    sources:
      binary: fntmpdefarg2.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_fntmpdefarg3_1502:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg3.C'
    sources:
      binary: fntmpdefarg3.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_fntmpdefarg3_1503:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg3.C'
    sources:
      binary: fntmpdefarg3.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_fntmpdefarg3_5261:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg3.C'
    sources:
      binary: fntmpdefarg3.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_fntmpdefarg3_5262:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg3.C'
    sources:
      binary: fntmpdefarg3.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_fntmpdefarg4_1504:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg4.C'
    sources:
      binary: fntmpdefarg4.s
  group: GRPSERIAL
test_fntmpdefarg4_1505:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg4.C'
    sources:
      binary: fntmpdefarg4.s
  group: GRPSERIAL
test_fntmpdefarg4_5263:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg4.C'
    sources:
      binary: fntmpdefarg4.s
  group: GRPSERIAL
test_fntmpdefarg4_5264:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg4.C'
    sources:
      binary: fntmpdefarg4.s
  group: GRPSERIAL
test_fntmpdefarg5_1506:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg5.C'
    sources:
      binary: fntmpdefarg5.s
  group: GRPSERIAL
test_fntmpdefarg5_1507:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg5.C'
    sources:
      binary: fntmpdefarg5.s
  group: GRPSERIAL
test_fntmpdefarg5_5265:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg5.C'
    sources:
      binary: fntmpdefarg5.s
  group: GRPSERIAL
test_fntmpdefarg5_5266:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg5.C'
    sources:
      binary: fntmpdefarg5.s
  group: GRPSERIAL
test_fntmpdefarg6_1508:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg6.C'
    sources:
      binary: fntmpdefarg6.s
  group: GRPSERIAL
test_fntmpdefarg6_1509:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg6.C'
    sources:
      binary: fntmpdefarg6.s
  group: GRPSERIAL
test_fntmpdefarg6_5267:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg6.C'
    sources:
      binary: fntmpdefarg6.s
  group: GRPSERIAL
test_fntmpdefarg6_5268:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/fntmpdefarg6.C'
    sources:
      binary: fntmpdefarg6.s
  group: GRPSERIAL
test_forw_enum10_1512:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum10.C'
    sources:
      binary: forw_enum10.s
  group: GRPSERIAL
  validate:
    match:
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
test_forw_enum10_1513:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum10.C'
    sources:
      binary: forw_enum10.s
  group: GRPSERIAL
  validate:
    match:
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
test_forw_enum10_5271:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum10.C'
    sources:
      binary: forw_enum10.s
  group: GRPSERIAL
  validate:
    match:
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
test_forw_enum10_5272:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum10.C'
    sources:
      binary: forw_enum10.s
  group: GRPSERIAL
  validate:
    match:
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
test_forw_enum11_1514:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum11.C'
    sources:
      binary: forw_enum11.s
  group: GRPSERIAL
test_forw_enum11_1515:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum11.C'
    sources:
      binary: forw_enum11.s
  group: GRPSERIAL
test_forw_enum11_5273:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum11.C'
    sources:
      binary: forw_enum11.s
  group: GRPSERIAL
test_forw_enum11_5274:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum11.C'
    sources:
      binary: forw_enum11.s
  group: GRPSERIAL
test_forw_enum12_1516:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum12.C'
    sources:
      binary: forw_enum12.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
test_forw_enum12_1517:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum12.C'
    sources:
      binary: forw_enum12.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
test_forw_enum12_5275:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum12.C'
    sources:
      binary: forw_enum12.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
test_forw_enum12_5276:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum12.C'
    sources:
      binary: forw_enum12.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
test_forw_enum13_1518:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum13.C'
    sources:
      binary: forw_enum13.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
test_forw_enum13_1519:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum13.C'
    sources:
      binary: forw_enum13.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
test_forw_enum13_5277:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum13.C'
    sources:
      binary: forw_enum13.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
test_forw_enum13_5278:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum13.C'
    sources:
      binary: forw_enum13.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra qualification
          not allowed")[^\n]*\n?)+'
test_forw_enum1_1510:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum1.C'
    sources:
      binary: forw_enum1.s
  group: GRPSERIAL
test_forw_enum1_1511:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum1.C'
    sources:
      binary: forw_enum1.s
  group: GRPSERIAL
test_forw_enum1_5269:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum1.C'
    sources:
      binary: forw_enum1.s
  group: GRPSERIAL
test_forw_enum1_5270:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum1.C'
    sources:
      binary: forw_enum1.s
  group: GRPSERIAL
test_forw_enum2_1520:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum2.C'
    sources:
      binary: forw_enum2.s
  group: GRPSERIAL
test_forw_enum2_1521:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum2.C'
    sources:
      binary: forw_enum2.s
  group: GRPSERIAL
test_forw_enum2_5279:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum2.C'
    sources:
      binary: forw_enum2.s
  group: GRPSERIAL
test_forw_enum2_5280:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum2.C'
    sources:
      binary: forw_enum2.s
  group: GRPSERIAL
test_forw_enum3_1522:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum3.C'
    sources:
      binary: forw_enum3.s
  group: GRPSERIAL
test_forw_enum3_1523:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum3.C'
    sources:
      binary: forw_enum3.s
  group: GRPSERIAL
test_forw_enum3_5281:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum3.C'
    sources:
      binary: forw_enum3.s
  group: GRPSERIAL
test_forw_enum3_5282:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum3.C'
    sources:
      binary: forw_enum3.s
  group: GRPSERIAL
test_forw_enum4_1524:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum4.C'
    sources:
      binary: forw_enum4.s
  group: GRPSERIAL
test_forw_enum4_1525:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum4.C'
    sources:
      binary: forw_enum4.s
  group: GRPSERIAL
test_forw_enum4_5283:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum4.C'
    sources:
      binary: forw_enum4.s
  group: GRPSERIAL
test_forw_enum4_5284:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum4.C'
    sources:
      binary: forw_enum4.s
  group: GRPSERIAL
test_forw_enum5_1526:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum5.C'
    sources:
      binary: forw_enum5.s
  group: GRPSERIAL
test_forw_enum5_1527:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum5.C'
    sources:
      binary: forw_enum5.s
  group: GRPSERIAL
test_forw_enum5_5285:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum5.C'
    sources:
      binary: forw_enum5.s
  group: GRPSERIAL
test_forw_enum5_5286:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum5.C'
    sources:
      binary: forw_enum5.s
  group: GRPSERIAL
test_forw_enum6_1528:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum6.C'
    sources:
      binary: forw_enum6.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped enum must
          not use")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped enum must
          not use")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|invalid
          type")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple definition")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple definition")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped/unscoped
          mismatch")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must use a simple
          identifier")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must use a simple
          identifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped/unscoped
          mismatch")[^\n]*\n?)+'
test_forw_enum6_1529:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum6.C'
    sources:
      binary: forw_enum6.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped enum must
          not use")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped enum must
          not use")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|invalid
          type")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple definition")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple definition")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped/unscoped
          mismatch")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must use a simple
          identifier")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must use a simple
          identifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped/unscoped
          mismatch")[^\n]*\n?)+'
test_forw_enum6_5287:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum6.C'
    sources:
      binary: forw_enum6.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped enum must
          not use")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped enum must
          not use")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|invalid
          type")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple definition")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple definition")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped/unscoped
          mismatch")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must use a simple
          identifier")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must use a simple
          identifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped/unscoped
          mismatch")[^\n]*\n?)+'
test_forw_enum6_5288:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum6.C'
    sources:
      binary: forw_enum6.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped enum must
          not use")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped enum must
          not use")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|invalid
          type")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple definition")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple definition")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped/unscoped
          mismatch")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must use a simple
          identifier")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must use a simple
          identifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not enclose")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("scoped/unscoped
          mismatch")[^\n]*\n?)+'
test_forw_enum7_1530:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum7.C'
    sources:
      binary: forw_enum7.s
  group: GRPSERIAL
test_forw_enum7_1531:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum7.C'
    sources:
      binary: forw_enum7.s
  group: GRPSERIAL
test_forw_enum7_5289:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum7.C'
    sources:
      binary: forw_enum7.s
  group: GRPSERIAL
test_forw_enum7_5290:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum7.C'
    sources:
      binary: forw_enum7.s
  group: GRPSERIAL
test_forw_enum8_1532:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum8.C'
    sources:
      binary: forw_enum8.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
test_forw_enum8_1533:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum8.C'
    sources:
      binary: forw_enum8.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
test_forw_enum8_5291:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum8.C'
    sources:
      binary: forw_enum8.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
test_forw_enum8_5292:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum8.C'
    sources:
      binary: forw_enum8.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different underlying
          type")[^\n]*\n?)+'
test_forw_enum9_1534:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum9.C'
    sources:
      binary: forw_enum9.s
  group: GRPSERIAL
test_forw_enum9_1535:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum9.C'
    sources:
      binary: forw_enum9.s
  group: GRPSERIAL
test_forw_enum9_5293:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum9.C'
    sources:
      binary: forw_enum9.s
  group: GRPSERIAL
test_forw_enum9_5294:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/forw_enum9.C'
    sources:
      binary: forw_enum9.s
  group: GRPSERIAL
test_friend1_1536:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/friend1.C'
    sources:
      binary: friend1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_friend1_1537:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/friend1.C'
    sources:
      binary: friend1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_friend1_5295:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/friend1.C'
    sources:
      binary: friend1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_friend1_5296:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/friend1.C'
    sources:
      binary: friend1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_friend2_1538:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/friend2.C'
    sources:
      binary: friend2.s
  group: GRPSERIAL
test_friend2_1539:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/friend2.C'
    sources:
      binary: friend2.s
  group: GRPSERIAL
test_friend2_5297:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/friend2.C'
    sources:
      binary: friend2.s
  group: GRPSERIAL
test_friend2_5298:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/friend2.C'
    sources:
      binary: friend2.s
  group: GRPSERIAL
test_gen-attrs-10_1542:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-10.C'
    sources:
      binary: gen-attrs-10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-10_1543:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-10.C'
    sources:
      binary: gen-attrs-10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-10_5301:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-10.C'
    sources:
      binary: gen-attrs-10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-10_5302:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-10.C'
    sources:
      binary: gen-attrs-10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-11_1544:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-11.C'
    sources:
      binary: gen-attrs-11.s
  group: GRPSERIAL
test_gen-attrs-11_1545:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-11.C'
    sources:
      binary: gen-attrs-11.s
  group: GRPSERIAL
test_gen-attrs-11_5303:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-11.C'
    sources:
      binary: gen-attrs-11.s
  group: GRPSERIAL
test_gen-attrs-11_5304:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-11.C'
    sources:
      binary: gen-attrs-11.s
  group: GRPSERIAL
test_gen-attrs-12_1546:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-12.C'
    sources:
      binary: gen-attrs-12.s
  group: GRPSERIAL
test_gen-attrs-12_1547:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-12.C'
    sources:
      binary: gen-attrs-12.s
  group: GRPSERIAL
test_gen-attrs-12_5305:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-12.C'
    sources:
      binary: gen-attrs-12.s
  group: GRPSERIAL
test_gen-attrs-12_5306:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-12.C'
    sources:
      binary: gen-attrs-12.s
  group: GRPSERIAL
test_gen-attrs-13_1548:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-13.C'
    sources:
      binary: gen-attrs-13.s
  group: GRPSERIAL
test_gen-attrs-13_1549:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-13.C'
    sources:
      binary: gen-attrs-13.s
  group: GRPSERIAL
test_gen-attrs-13_5307:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-13.C'
    sources:
      binary: gen-attrs-13.s
  group: GRPSERIAL
test_gen-attrs-13_5308:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-13.C'
    sources:
      binary: gen-attrs-13.s
  group: GRPSERIAL
test_gen-attrs-14_1550:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-14.C'
    sources:
      binary: gen-attrs-14.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-14_1551:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-14.C'
    sources:
      binary: gen-attrs-14.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-14_5309:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-14.C'
    sources:
      binary: gen-attrs-14.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-14_5310:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-14.C'
    sources:
      binary: gen-attrs-14.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-15_1552:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-15.C'
    sources:
      binary: gen-attrs-15.s
  group: GRPSERIAL
test_gen-attrs-15_1553:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-15.C'
    sources:
      binary: gen-attrs-15.s
  group: GRPSERIAL
test_gen-attrs-15_5311:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-15.C'
    sources:
      binary: gen-attrs-15.s
  group: GRPSERIAL
test_gen-attrs-15_5312:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-15.C'
    sources:
      binary: gen-attrs-15.s
  group: GRPSERIAL
test_gen-attrs-16_1554:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-16.C'
    sources:
      binary: gen-attrs-16.s
  group: GRPSERIAL
test_gen-attrs-16_1555:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-16.C'
    sources:
      binary: gen-attrs-16.s
  group: GRPSERIAL
test_gen-attrs-16_5313:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-16.C'
    sources:
      binary: gen-attrs-16.s
  group: GRPSERIAL
test_gen-attrs-16_5314:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-16.C'
    sources:
      binary: gen-attrs-16.s
  group: GRPSERIAL
test_gen-attrs-17.2_1556:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-17.2.C'
    sources:
      binary: gen-attrs-17.2.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type
          and cannot be defined")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_gen-attrs-17.2_1557:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-17.2.C'
    sources:
      binary: gen-attrs-17.2.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type
          and cannot be defined")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_gen-attrs-17.2_5315:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-17.2.C'
    sources:
      binary: gen-attrs-17.2.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type
          and cannot be defined")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_gen-attrs-17.2_5316:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-17.2.C'
    sources:
      binary: gen-attrs-17.2.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type
          and cannot be defined")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_gen-attrs-17_1558:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-17.C'
    sources:
      binary: gen-attrs-17.s
  group: GRPSERIAL
test_gen-attrs-17_1559:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-17.C'
    sources:
      binary: gen-attrs-17.s
  group: GRPSERIAL
test_gen-attrs-17_5317:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-17.C'
    sources:
      binary: gen-attrs-17.s
  group: GRPSERIAL
test_gen-attrs-17_5318:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-17.C'
    sources:
      binary: gen-attrs-17.s
  group: GRPSERIAL
test_gen-attrs-18_1560:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-18.C'
    sources:
      binary: gen-attrs-18.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'
test_gen-attrs-18_1561:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-18.C'
    sources:
      binary: gen-attrs-18.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'
test_gen-attrs-18_5319:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-18.C'
    sources:
      binary: gen-attrs-18.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'
test_gen-attrs-18_5320:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-18.C'
    sources:
      binary: gen-attrs-18.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'
test_gen-attrs-19_1562:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-19.C'
    sources:
      binary: gen-attrs-19.s
  group: GRPSERIAL
test_gen-attrs-19_1563:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-19.C'
    sources:
      binary: gen-attrs-19.s
  group: GRPSERIAL
test_gen-attrs-19_5321:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-19.C'
    sources:
      binary: gen-attrs-19.s
  group: GRPSERIAL
test_gen-attrs-19_5322:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-19.C'
    sources:
      binary: gen-attrs-19.s
  group: GRPSERIAL
test_gen-attrs-1_1540:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-1.C'
    sources:
      binary: gen-attrs-1.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-1_1541:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-1.C'
    sources:
      binary: gen-attrs-1.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-1_5299:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-1.C'
    sources:
      binary: gen-attrs-1.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-1_5300:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-1.C'
    sources:
      binary: gen-attrs-1.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-2-1_1564:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-2-1.C'
    sources:
      binary: gen-attrs-2-1.s
  group: GRPSERIAL
test_gen-attrs-2-1_1565:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-2-1.C'
    sources:
      binary: gen-attrs-2-1.s
  group: GRPSERIAL
test_gen-attrs-2-1_5323:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-2-1.C'
    sources:
      binary: gen-attrs-2-1.s
  group: GRPSERIAL
test_gen-attrs-2-1_5324:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-2-1.C'
    sources:
      binary: gen-attrs-2-1.s
  group: GRPSERIAL
test_gen-attrs-20_1568:
  build:
    cflags: "-std=gnu++11 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-20.C'
    sources:
      binary: gen-attrs-20.s
  group: GRPSERIAL
test_gen-attrs-20_1569:
  build:
    cflags: "-std=gnu++14 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-20.C'
    sources:
      binary: gen-attrs-20.s
  group: GRPSERIAL
test_gen-attrs-20_5327:
  build:
    cflags: "-std=gnu++11 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-20.C'
    sources:
      binary: gen-attrs-20.s
  group: GRPSERIAL
test_gen-attrs-20_5328:
  build:
    cflags: "-std=gnu++14 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-20.C'
    sources:
      binary: gen-attrs-20.s
  group: GRPSERIAL
test_gen-attrs-21_1570:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-21.C'
    sources:
      binary: gen-attrs-21.s
  group: GRPSERIAL
test_gen-attrs-21_1571:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-21.C'
    sources:
      binary: gen-attrs-21.s
  group: GRPSERIAL
test_gen-attrs-21_5329:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-21.C'
    sources:
      binary: gen-attrs-21.s
  group: GRPSERIAL
test_gen-attrs-21_5330:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-21.C'
    sources:
      binary: gen-attrs-21.s
  group: GRPSERIAL
test_gen-attrs-22_1572:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-22.C'
    sources:
      binary: gen-attrs-22.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-22_1573:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-22.C'
    sources:
      binary: gen-attrs-22.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-22_5331:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-22.C'
    sources:
      binary: gen-attrs-22.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-22_5332:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-22.C'
    sources:
      binary: gen-attrs-22.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-23_1574:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-23.C'
    sources:
      binary: gen-attrs-23.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
test_gen-attrs-23_1575:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-23.C'
    sources:
      binary: gen-attrs-23.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
test_gen-attrs-23_5333:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-23.C'
    sources:
      binary: gen-attrs-23.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
test_gen-attrs-23_5334:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-23.C'
    sources:
      binary: gen-attrs-23.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'
test_gen-attrs-24_1576:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-24.C'
    sources:
      binary: gen-attrs-24.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without previous
          declaration")[^\n]*\n?)+'
test_gen-attrs-24_1577:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-24.C'
    sources:
      binary: gen-attrs-24.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without previous
          declaration")[^\n]*\n?)+'
test_gen-attrs-24_5335:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-24.C'
    sources:
      binary: gen-attrs-24.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without previous
          declaration")[^\n]*\n?)+'
test_gen-attrs-24_5336:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-24.C'
    sources:
      binary: gen-attrs-24.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without previous
          declaration")[^\n]*\n?)+'
test_gen-attrs-25_1578:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-25.C'
    sources:
      binary: gen-attrs-25.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("uninstantiated")[^\n]*\n?)+'
test_gen-attrs-25_1579:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-25.C'
    sources:
      binary: gen-attrs-25.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("uninstantiated")[^\n]*\n?)+'
test_gen-attrs-25_5337:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-25.C'
    sources:
      binary: gen-attrs-25.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("uninstantiated")[^\n]*\n?)+'
test_gen-attrs-25_5338:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-25.C'
    sources:
      binary: gen-attrs-25.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("uninstantiated")[^\n]*\n?)+'
test_gen-attrs-26_1580:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-26.C'
    sources:
      binary: gen-attrs-26.s
  group: GRPSERIAL
test_gen-attrs-26_1581:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-26.C'
    sources:
      binary: gen-attrs-26.s
  group: GRPSERIAL
test_gen-attrs-26_5339:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-26.C'
    sources:
      binary: gen-attrs-26.s
  group: GRPSERIAL
test_gen-attrs-26_5340:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-26.C'
    sources:
      binary: gen-attrs-26.s
  group: GRPSERIAL
test_gen-attrs-27_1582:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-27.C'
    sources:
      binary: gen-attrs-27.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typedef-name")[^\n]*\n?)+'
test_gen-attrs-27_1583:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-27.C'
    sources:
      binary: gen-attrs-27.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typedef-name")[^\n]*\n?)+'
test_gen-attrs-27_5341:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-27.C'
    sources:
      binary: gen-attrs-27.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typedef-name")[^\n]*\n?)+'
test_gen-attrs-27_5342:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-27.C'
    sources:
      binary: gen-attrs-27.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typedef-name")[^\n]*\n?)+'
test_gen-attrs-28_1584:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-28.C'
    sources:
      binary: gen-attrs-28.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'
test_gen-attrs-28_1585:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-28.C'
    sources:
      binary: gen-attrs-28.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'
test_gen-attrs-28_5343:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-28.C'
    sources:
      binary: gen-attrs-28.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'
test_gen-attrs-28_5344:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-28.C'
    sources:
      binary: gen-attrs-28.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'
test_gen-attrs-29_1586:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-29.C'
    sources:
      binary: gen-attrs-29.s
  group: GRPSERIAL
test_gen-attrs-29_1587:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-29.C'
    sources:
      binary: gen-attrs-29.s
  group: GRPSERIAL
test_gen-attrs-29_5345:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-29.C'
    sources:
      binary: gen-attrs-29.s
  group: GRPSERIAL
test_gen-attrs-29_5346:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-29.C'
    sources:
      binary: gen-attrs-29.s
  group: GRPSERIAL
test_gen-attrs-2_1566:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-2.C'
    sources:
      binary: gen-attrs-2.s
  group: GRPSERIAL
test_gen-attrs-2_1567:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-2.C'
    sources:
      binary: gen-attrs-2.s
  group: GRPSERIAL
test_gen-attrs-2_5325:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-2.C'
    sources:
      binary: gen-attrs-2.s
  group: GRPSERIAL
test_gen-attrs-2_5326:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-2.C'
    sources:
      binary: gen-attrs-2.s
  group: GRPSERIAL
test_gen-attrs-30_1590:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-30.C'
    sources:
      binary: gen-attrs-30.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-30_1591:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-30.C'
    sources:
      binary: gen-attrs-30.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-30_5349:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-30.C'
    sources:
      binary: gen-attrs-30.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-30_5350:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-30.C'
    sources:
      binary: gen-attrs-30.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-31_1592:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-31.C'
    sources:
      binary: gen-attrs-31.s
  group: GRPSERIAL
test_gen-attrs-31_1593:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-31.C'
    sources:
      binary: gen-attrs-31.s
  group: GRPSERIAL
test_gen-attrs-31_5351:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-31.C'
    sources:
      binary: gen-attrs-31.s
  group: GRPSERIAL
test_gen-attrs-31_5352:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-31.C'
    sources:
      binary: gen-attrs-31.s
  group: GRPSERIAL
test_gen-attrs-32_1594:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-32.C'
    sources:
      binary: gen-attrs-32.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-32_1595:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-32.C'
    sources:
      binary: gen-attrs-32.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-32_5353:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-32.C'
    sources:
      binary: gen-attrs-32.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-32_5354:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-32.C'
    sources:
      binary: gen-attrs-32.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-33_1596:
  build:
    cflags: "-std=gnu++11 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-33.C'
    sources:
      binary: gen-attrs-33.s
  group: GRPSERIAL
test_gen-attrs-33_1597:
  build:
    cflags: "-std=gnu++14 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-33.C'
    sources:
      binary: gen-attrs-33.s
  group: GRPSERIAL
test_gen-attrs-33_5355:
  build:
    cflags: "-std=gnu++11 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-33.C'
    sources:
      binary: gen-attrs-33.s
  group: GRPSERIAL
test_gen-attrs-33_5356:
  build:
    cflags: "-std=gnu++14 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-33.C'
    sources:
      binary: gen-attrs-33.s
  group: GRPSERIAL
test_gen-attrs-34_1598:
  build:
    cflags: "-std=gnu++11 -O2 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-34.C'
    sources:
      binary: gen-attrs-34.s
  group: GRPSERIAL
test_gen-attrs-34_1599:
  build:
    cflags: "-std=gnu++14 -O2 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-34.C'
    sources:
      binary: gen-attrs-34.s
  group: GRPSERIAL
test_gen-attrs-34_5357:
  build:
    cflags: "-std=gnu++11 -O2 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-34.C'
    sources:
      binary: gen-attrs-34.s
  group: GRPSERIAL
test_gen-attrs-34_5358:
  build:
    cflags: "-std=gnu++14 -O2 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-34.C'
    sources:
      binary: gen-attrs-34.s
  group: GRPSERIAL
test_gen-attrs-35_1600:
  build:
    cflags: "-std=gnu++11 -O3 -msse2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-35.C'
    sources:
      binary: gen-attrs-35.s
  group: GRPSERIAL
test_gen-attrs-35_1601:
  build:
    cflags: "-std=gnu++14 -O3 -msse2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-35.C'
    sources:
      binary: gen-attrs-35.s
  group: GRPSERIAL
test_gen-attrs-35_5359:
  build:
    cflags: "-std=gnu++11 -O3 -msse2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-35.C'
    sources:
      binary: gen-attrs-35.s
  group: GRPSERIAL
test_gen-attrs-35_5360:
  build:
    cflags: "-std=gnu++14 -O3 -msse2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-35.C'
    sources:
      binary: gen-attrs-35.s
  group: GRPSERIAL
test_gen-attrs-36-1_1602:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-36-1.C'
    sources:
      binary: gen-attrs-36-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-36-1_1603:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-36-1.C'
    sources:
      binary: gen-attrs-36-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-36-1_5361:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-36-1.C'
    sources:
      binary: gen-attrs-36-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-36-1_5362:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-36-1.C'
    sources:
      binary: gen-attrs-36-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-36_1604:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-36.C'
    sources:
      binary: gen-attrs-36.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-36_1605:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-36.C'
    sources:
      binary: gen-attrs-36.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-36_5363:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-36.C'
    sources:
      binary: gen-attrs-36.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-36_5364:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-36.C'
    sources:
      binary: gen-attrs-36.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-37_1606:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-37.C'
    sources:
      binary: gen-attrs-37.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-37_1607:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-37.C'
    sources:
      binary: gen-attrs-37.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-37_5365:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-37.C'
    sources:
      binary: gen-attrs-37.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-37_5366:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-37.C'
    sources:
      binary: gen-attrs-37.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-38_1608:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-38.C'
    sources:
      binary: gen-attrs-38.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-38_1609:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-38.C'
    sources:
      binary: gen-attrs-38.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-38_5367:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-38.C'
    sources:
      binary: gen-attrs-38.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-38_5368:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-38.C'
    sources:
      binary: gen-attrs-38.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-39-1_1610:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-39-1.C'
    sources:
      binary: gen-attrs-39-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-39-1_1611:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-39-1.C'
    sources:
      binary: gen-attrs-39-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-39-1_5369:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-39-1.C'
    sources:
      binary: gen-attrs-39-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-39-1_5370:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-39-1.C'
    sources:
      binary: gen-attrs-39-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-39_1612:
  build:
    cflags: "-std=gnu++11 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-39.C'
    sources:
      binary: gen-attrs-39.s
  group: GRPSERIAL
test_gen-attrs-39_1613:
  build:
    cflags: "-std=gnu++14 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-39.C'
    sources:
      binary: gen-attrs-39.s
  group: GRPSERIAL
test_gen-attrs-39_5371:
  build:
    cflags: "-std=gnu++11 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-39.C'
    sources:
      binary: gen-attrs-39.s
  group: GRPSERIAL
test_gen-attrs-39_5372:
  build:
    cflags: "-std=gnu++14 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-39.C'
    sources:
      binary: gen-attrs-39.s
  group: GRPSERIAL
test_gen-attrs-3_1588:
  build:
    cflags: -std=gnu++11 -O -ftrack-macro-expansion=0
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-3.C'
    sources:
      binary: ./gen-attrs-3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_gen-attrs-3_1589:
  build:
    cflags: -std=gnu++14 -O -ftrack-macro-expansion=0
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-3.C'
    sources:
      binary: ./gen-attrs-3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_gen-attrs-3_5347:
  build:
    cflags: -std=gnu++11 -O -ftrack-macro-expansion=0
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-3.C'
    sources:
      binary: ./gen-attrs-3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_gen-attrs-3_5348:
  build:
    cflags: -std=gnu++14 -O -ftrack-macro-expansion=0
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-3.C'
    sources:
      binary: ./gen-attrs-3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_gen-attrs-40_1616:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-40.C'
    sources:
      binary: gen-attrs-40.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-40_1617:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-40.C'
    sources:
      binary: gen-attrs-40.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-40_5375:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-40.C'
    sources:
      binary: gen-attrs-40.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-40_5376:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-40.C'
    sources:
      binary: gen-attrs-40.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-41_1618:
  build:
    cflags: "-std=gnu++11 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-41.C'
    sources:
      binary: gen-attrs-41.s
  group: GRPSERIAL
test_gen-attrs-41_1619:
  build:
    cflags: "-std=gnu++14 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-41.C'
    sources:
      binary: gen-attrs-41.s
  group: GRPSERIAL
test_gen-attrs-41_5377:
  build:
    cflags: "-std=gnu++11 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-41.C'
    sources:
      binary: gen-attrs-41.s
  group: GRPSERIAL
test_gen-attrs-41_5378:
  build:
    cflags: "-std=gnu++14 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-41.C'
    sources:
      binary: gen-attrs-41.s
  group: GRPSERIAL
test_gen-attrs-42_1620:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-42.C'
    sources:
      binary: gen-attrs-42.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_gen-attrs-42_1621:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-42.C'
    sources:
      binary: gen-attrs-42.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_gen-attrs-42_5379:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-42.C'
    sources:
      binary: gen-attrs-42.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_gen-attrs-42_5380:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-42.C'
    sources:
      binary: gen-attrs-42.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_gen-attrs-43_1622:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-43.C'
    sources:
      binary: gen-attrs-43.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ignored in explicit
          instantiation")[^\n]*\n?)+'
test_gen-attrs-43_1623:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-43.C'
    sources:
      binary: gen-attrs-43.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ignored in explicit
          instantiation")[^\n]*\n?)+'
test_gen-attrs-43_5381:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-43.C'
    sources:
      binary: gen-attrs-43.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ignored in explicit
          instantiation")[^\n]*\n?)+'
test_gen-attrs-43_5382:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-43.C'
    sources:
      binary: gen-attrs-43.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ignored in explicit
          instantiation")[^\n]*\n?)+'
test_gen-attrs-44_1624:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-44.C'
    sources:
      binary: gen-attrs-44.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("ignored in declaration")[^\n]*\n?)+'
test_gen-attrs-44_1625:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-44.C'
    sources:
      binary: gen-attrs-44.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("ignored in declaration")[^\n]*\n?)+'
test_gen-attrs-44_5383:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-44.C'
    sources:
      binary: gen-attrs-44.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("ignored in declaration")[^\n]*\n?)+'
test_gen-attrs-44_5384:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-44.C'
    sources:
      binary: gen-attrs-44.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("ignored in declaration")[^\n]*\n?)+'
test_gen-attrs-45_1626:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-45.C'
    sources:
      binary: gen-attrs-45.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
test_gen-attrs-45_1627:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-45.C'
    sources:
      binary: gen-attrs-45.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
test_gen-attrs-45_5385:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-45.C'
    sources:
      binary: gen-attrs-45.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
test_gen-attrs-45_5386:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-45.C'
    sources:
      binary: gen-attrs-45.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
test_gen-attrs-46_1628:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-46.C'
    sources:
      binary: gen-attrs-46.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_gen-attrs-46_1629:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-46.C'
    sources:
      binary: gen-attrs-46.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_gen-attrs-46_5387:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-46.C'
    sources:
      binary: gen-attrs-46.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_gen-attrs-46_5388:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-46.C'
    sources:
      binary: gen-attrs-46.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_gen-attrs-47-1_1630:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-47-1.C'
    sources:
      binary: gen-attrs-47-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-47-1_1631:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-47-1.C'
    sources:
      binary: gen-attrs-47-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-47-1_5389:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-47-1.C'
    sources:
      binary: gen-attrs-47-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-47-1_5390:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-47-1.C'
    sources:
      binary: gen-attrs-47-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-47_1632:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-47.C'
    sources:
      binary: gen-attrs-47.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|consecutive")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|consecutive")[^\n]*\n?)+'
test_gen-attrs-47_1633:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-47.C'
    sources:
      binary: gen-attrs-47.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|consecutive")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|consecutive")[^\n]*\n?)+'
test_gen-attrs-47_5391:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-47.C'
    sources:
      binary: gen-attrs-47.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|consecutive")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|consecutive")[^\n]*\n?)+'
test_gen-attrs-47_5392:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-47.C'
    sources:
      binary: gen-attrs-47.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|consecutive")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|consecutive")[^\n]*\n?)+'
test_gen-attrs-48-2_1634:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-48-2.C'
    sources:
      binary: gen-attrs-48-2.s
  group: GRPSERIAL
test_gen-attrs-48-2_1635:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-48-2.C'
    sources:
      binary: gen-attrs-48-2.s
  group: GRPSERIAL
test_gen-attrs-48-2_5393:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-48-2.C'
    sources:
      binary: gen-attrs-48-2.s
  group: GRPSERIAL
test_gen-attrs-48-2_5394:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-48-2.C'
    sources:
      binary: gen-attrs-48-2.s
  group: GRPSERIAL
test_gen-attrs-48_1636:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-48.C'
    sources:
      binary: gen-attrs-48.s
  group: GRPSERIAL
test_gen-attrs-48_1637:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-48.C'
    sources:
      binary: gen-attrs-48.s
  group: GRPSERIAL
test_gen-attrs-48_5395:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-48.C'
    sources:
      binary: gen-attrs-48.s
  group: GRPSERIAL
test_gen-attrs-48_5396:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-48.C'
    sources:
      binary: gen-attrs-48.s
  group: GRPSERIAL
test_gen-attrs-49_1638:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-49.C'
    sources:
      binary: gen-attrs-49.s
  group: GRPSERIAL
test_gen-attrs-49_1639:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-49.C'
    sources:
      binary: gen-attrs-49.s
  group: GRPSERIAL
test_gen-attrs-49_5397:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-49.C'
    sources:
      binary: gen-attrs-49.s
  group: GRPSERIAL
test_gen-attrs-49_5398:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-49.C'
    sources:
      binary: gen-attrs-49.s
  group: GRPSERIAL
test_gen-attrs-4_1614:
  build:
    cflags: "-std=gnu++11 -Wunused -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-4.C'
    sources:
      binary: gen-attrs-4.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-4_1615:
  build:
    cflags: "-std=gnu++14 -Wunused -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-4.C'
    sources:
      binary: gen-attrs-4.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-4_5373:
  build:
    cflags: "-std=gnu++11 -Wunused -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-4.C'
    sources:
      binary: gen-attrs-4.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-4_5374:
  build:
    cflags: "-std=gnu++14 -Wunused -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-4.C'
    sources:
      binary: gen-attrs-4.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-50_1642:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-50.C'
    sources:
      binary: gen-attrs-50.s
  group: GRPSERIAL
test_gen-attrs-50_1643:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-50.C'
    sources:
      binary: gen-attrs-50.s
  group: GRPSERIAL
test_gen-attrs-50_5401:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-50.C'
    sources:
      binary: gen-attrs-50.s
  group: GRPSERIAL
test_gen-attrs-50_5402:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-50.C'
    sources:
      binary: gen-attrs-50.s
  group: GRPSERIAL
test_gen-attrs-51_1644:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-51.C'
    sources:
      binary: gen-attrs-51.s
  group: GRPSERIAL
test_gen-attrs-51_1645:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-51.C'
    sources:
      binary: gen-attrs-51.s
  group: GRPSERIAL
test_gen-attrs-51_5403:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-51.C'
    sources:
      binary: gen-attrs-51.s
  group: GRPSERIAL
test_gen-attrs-51_5404:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-51.C'
    sources:
      binary: gen-attrs-51.s
  group: GRPSERIAL
test_gen-attrs-52_1646:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-52.C'
    sources:
      binary: gen-attrs-52.s
  group: GRPSERIAL
test_gen-attrs-52_1647:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-52.C'
    sources:
      binary: gen-attrs-52.s
  group: GRPSERIAL
test_gen-attrs-52_5405:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-52.C'
    sources:
      binary: gen-attrs-52.s
  group: GRPSERIAL
test_gen-attrs-52_5406:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-52.C'
    sources:
      binary: gen-attrs-52.s
  group: GRPSERIAL
test_gen-attrs-53_1648:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-53.C'
    sources:
      binary: gen-attrs-53.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("attributes at the
          beginning of statement are ignored")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("attributes at the
          beginning of statement are ignored")[^\n]*\n?)+'
test_gen-attrs-53_1649:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-53.C'
    sources:
      binary: gen-attrs-53.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("attributes at the
          beginning of statement are ignored")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("attributes at the
          beginning of statement are ignored")[^\n]*\n?)+'
test_gen-attrs-53_5407:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-53.C'
    sources:
      binary: gen-attrs-53.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("attributes at the
          beginning of statement are ignored")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("attributes at the
          beginning of statement are ignored")[^\n]*\n?)+'
test_gen-attrs-53_5408:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-53.C'
    sources:
      binary: gen-attrs-53.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("attributes at the
          beginning of statement are ignored")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("attributes at the
          beginning of statement are ignored")[^\n]*\n?)+'
test_gen-attrs-54_1650:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-54.C'
    sources:
      binary: gen-attrs-54.s
  group: GRPSERIAL
test_gen-attrs-54_1651:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-54.C'
    sources:
      binary: gen-attrs-54.s
  group: GRPSERIAL
test_gen-attrs-54_5409:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-54.C'
    sources:
      binary: gen-attrs-54.s
  group: GRPSERIAL
test_gen-attrs-54_5410:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-54.C'
    sources:
      binary: gen-attrs-54.s
  group: GRPSERIAL
test_gen-attrs-55_1652:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-55.C'
    sources:
      binary: gen-attrs-55.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("17:invalid use
          of \''this\''")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("17:invalid use
          of \''this\''")[^\n]*\n?)+'
test_gen-attrs-55_1653:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-55.C'
    sources:
      binary: gen-attrs-55.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("17:invalid use
          of \''this\''")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("17:invalid use
          of \''this\''")[^\n]*\n?)+'
test_gen-attrs-55_5411:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-55.C'
    sources:
      binary: gen-attrs-55.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("17:invalid use
          of \''this\''")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("17:invalid use
          of \''this\''")[^\n]*\n?)+'
test_gen-attrs-55_5412:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-55.C'
    sources:
      binary: gen-attrs-55.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("17:invalid use
          of \''this\''")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("17:invalid use
          of \''this\''")[^\n]*\n?)+'
test_gen-attrs-56_1654:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-56.C'
    sources:
      binary: gen-attrs-56.s
  group: GRPSERIAL
test_gen-attrs-56_1655:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-56.C'
    sources:
      binary: gen-attrs-56.s
  group: GRPSERIAL
test_gen-attrs-56_5413:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-56.C'
    sources:
      binary: gen-attrs-56.s
  group: GRPSERIAL
test_gen-attrs-56_5414:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-56.C'
    sources:
      binary: gen-attrs-56.s
  group: GRPSERIAL
test_gen-attrs-57_1656:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-57.C'
    sources:
      binary: gen-attrs-57.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-57_1657:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-57.C'
    sources:
      binary: gen-attrs-57.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-57_5415:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-57.C'
    sources:
      binary: gen-attrs-57.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-57_5416:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-57.C'
    sources:
      binary: gen-attrs-57.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-58_1658:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-58.C'
    sources:
      binary: gen-attrs-58.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-58_1659:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-58.C'
    sources:
      binary: gen-attrs-58.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-58_5417:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-58.C'
    sources:
      binary: gen-attrs-58.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-58_5418:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-58.C'
    sources:
      binary: gen-attrs-58.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-59_1660:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-59.C'
    sources:
      binary: gen-attrs-59.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared")[^\n]*\n?)+'
test_gen-attrs-59_1661:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-59.C'
    sources:
      binary: gen-attrs-59.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared")[^\n]*\n?)+'
test_gen-attrs-59_5419:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-59.C'
    sources:
      binary: gen-attrs-59.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared")[^\n]*\n?)+'
test_gen-attrs-59_5420:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-59.C'
    sources:
      binary: gen-attrs-59.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared")[^\n]*\n?)+'
test_gen-attrs-5_1640:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-5.C'
    sources:
      binary: gen-attrs-5.s
  group: GRPSERIAL
test_gen-attrs-5_1641:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-5.C'
    sources:
      binary: gen-attrs-5.s
  group: GRPSERIAL
test_gen-attrs-5_5399:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-5.C'
    sources:
      binary: gen-attrs-5.s
  group: GRPSERIAL
test_gen-attrs-5_5400:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-5.C'
    sources:
      binary: gen-attrs-5.s
  group: GRPSERIAL
test_gen-attrs-60_1664:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-60.C'
    sources:
      binary: gen-attrs-60.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("at most once")[^\n]*\n?)+'
test_gen-attrs-60_1665:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-60.C'
    sources:
      binary: gen-attrs-60.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("at most once")[^\n]*\n?)+'
test_gen-attrs-60_5423:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-60.C'
    sources:
      binary: gen-attrs-60.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("at most once")[^\n]*\n?)+'
test_gen-attrs-60_5424:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-60.C'
    sources:
      binary: gen-attrs-60.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("at most once")[^\n]*\n?)+'
test_gen-attrs-61_1666:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-61.C'
    sources:
      binary: gen-attrs-61.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-61_1667:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-61.C'
    sources:
      binary: gen-attrs-61.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-61_5425:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-61.C'
    sources:
      binary: gen-attrs-61.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-61_5426:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-61.C'
    sources:
      binary: gen-attrs-61.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-62_1668:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-62.C'
    sources:
      binary: gen-attrs-62.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected attribute
          before \''...\''")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected attribute
          before \''...\''")[^\n]*\n?)+'
test_gen-attrs-62_1669:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-62.C'
    sources:
      binary: gen-attrs-62.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected attribute
          before \''...\''")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected attribute
          before \''...\''")[^\n]*\n?)+'
test_gen-attrs-62_5427:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-62.C'
    sources:
      binary: gen-attrs-62.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected attribute
          before \''...\''")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected attribute
          before \''...\''")[^\n]*\n?)+'
test_gen-attrs-62_5428:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-62.C'
    sources:
      binary: gen-attrs-62.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected attribute
          before \''...\''")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected attribute
          before \''...\''")[^\n]*\n?)+'
test_gen-attrs-63_1670:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-63.C'
    sources:
      binary: gen-attrs-63.s
  group: GRPSERIAL
test_gen-attrs-63_1671:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-63.C'
    sources:
      binary: gen-attrs-63.s
  group: GRPSERIAL
test_gen-attrs-63_5429:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-63.C'
    sources:
      binary: gen-attrs-63.s
  group: GRPSERIAL
test_gen-attrs-63_5430:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-63.C'
    sources:
      binary: gen-attrs-63.s
  group: GRPSERIAL
test_gen-attrs-6_1662:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-6.C'
    sources:
      binary: gen-attrs-6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_gen-attrs-6_1663:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-6.C'
    sources:
      binary: gen-attrs-6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_gen-attrs-6_5421:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-6.C'
    sources:
      binary: gen-attrs-6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_gen-attrs-6_5422:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-6.C'
    sources:
      binary: gen-attrs-6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_gen-attrs-7_1672:
  build:
    cflags: "-std=gnu++11 -Wunused-parameter\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-7.C'
    sources:
      binary: gen-attrs-7.s
  group: GRPSERIAL
test_gen-attrs-7_1673:
  build:
    cflags: "-std=gnu++14 -Wunused-parameter\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-7.C'
    sources:
      binary: gen-attrs-7.s
  group: GRPSERIAL
test_gen-attrs-7_5431:
  build:
    cflags: "-std=gnu++11 -Wunused-parameter\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-7.C'
    sources:
      binary: gen-attrs-7.s
  group: GRPSERIAL
test_gen-attrs-7_5432:
  build:
    cflags: "-std=gnu++14 -Wunused-parameter\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-7.C'
    sources:
      binary: gen-attrs-7.s
  group: GRPSERIAL
test_gen-attrs-8_1674:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-8.C'
    sources:
      binary: gen-attrs-8.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-8_1675:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-8.C'
    sources:
      binary: gen-attrs-8.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-8_5433:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-8.C'
    sources:
      binary: gen-attrs-8.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-8_5434:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-8.C'
    sources:
      binary: gen-attrs-8.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
test_gen-attrs-9_1676:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-9.C'
    sources:
      binary: gen-attrs-9.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("already defined")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'
test_gen-attrs-9_1677:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-9.C'
    sources:
      binary: gen-attrs-9.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("already defined")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'
test_gen-attrs-9_5435:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-9.C'
    sources:
      binary: gen-attrs-9.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("already defined")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'
test_gen-attrs-9_5436:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gen-attrs-9.C'
    sources:
      binary: gen-attrs-9.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("already defined")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'
test_gnu_fext-numeric-literals_1678:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gnu_fext-numeric-literals.C'
    sources:
      binary: gnu_fext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
test_gnu_fext-numeric-literals_1679:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gnu_fext-numeric-literals.C'
    sources:
      binary: gnu_fext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
test_gnu_fext-numeric-literals_5437:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gnu_fext-numeric-literals.C'
    sources:
      binary: gnu_fext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
test_gnu_fext-numeric-literals_5438:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gnu_fext-numeric-literals.C'
    sources:
      binary: gnu_fext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
test_gnu_fno-ext-numeric-literals_1680:
  build:
    cflags: "-std=gnu++11 -fno-ext-numeric-literals\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gnu_fno-ext-numeric-literals.C'
    sources:
      binary: gnu_fno-ext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
test_gnu_fno-ext-numeric-literals_1681:
  build:
    cflags: "-std=gnu++14 -fno-ext-numeric-literals\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gnu_fno-ext-numeric-literals.C'
    sources:
      binary: gnu_fno-ext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
test_gnu_fno-ext-numeric-literals_5439:
  build:
    cflags: "-std=gnu++11 -fno-ext-numeric-literals\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gnu_fno-ext-numeric-literals.C'
    sources:
      binary: gnu_fno-ext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
test_gnu_fno-ext-numeric-literals_5440:
  build:
    cflags: "-std=gnu++14 -fno-ext-numeric-literals\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/gnu_fno-ext-numeric-literals.C'
    sources:
      binary: gnu_fno-ext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
test_implicit-copy_1682:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit-copy.C'
    sources:
      binary: implicit-copy.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit-copy_1683:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit-copy.C'
    sources:
      binary: implicit-copy.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit-copy_5441:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit-copy.C'
    sources:
      binary: implicit-copy.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit-copy_5442:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit-copy.C'
    sources:
      binary: implicit-copy.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit-trivial1_1684:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit-trivial1.C'
    sources:
      binary: implicit-trivial1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly deleted|this
          context")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit-trivial1_1685:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit-trivial1.C'
    sources:
      binary: implicit-trivial1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly deleted|this
          context")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit-trivial1_5443:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit-trivial1.C'
    sources:
      binary: implicit-trivial1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly deleted|this
          context")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit-trivial1_5444:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit-trivial1.C'
    sources:
      binary: implicit-trivial1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly deleted|this
          context")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit10_1688:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit10.C'
    sources:
      binary: implicit10.s
  group: GRPSERIAL
test_implicit10_1689:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit10.C'
    sources:
      binary: implicit10.s
  group: GRPSERIAL
test_implicit10_5447:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit10.C'
    sources:
      binary: implicit10.s
  group: GRPSERIAL
test_implicit10_5448:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit10.C'
    sources:
      binary: implicit10.s
  group: GRPSERIAL
test_implicit11_1690:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit11.C'
    sources:
      binary: implicit11.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
test_implicit11_1691:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit11.C'
    sources:
      binary: implicit11.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
test_implicit11_5449:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit11.C'
    sources:
      binary: implicit11.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
test_implicit11_5450:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit11.C'
    sources:
      binary: implicit11.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
test_implicit12_1692:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit12.C'
    sources:
      binary: implicit12.s
  group: GRPSERIAL
  validate:
    match:
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit12_1693:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit12.C'
    sources:
      binary: implicit12.s
  group: GRPSERIAL
  validate:
    match:
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit12_5451:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit12.C'
    sources:
      binary: implicit12.s
  group: GRPSERIAL
  validate:
    match:
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit12_5452:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit12.C'
    sources:
      binary: implicit12.s
  group: GRPSERIAL
  validate:
    match:
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit13_1694:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit13.C'
    sources:
      binary: implicit13.s
  group: GRPSERIAL
test_implicit13_1695:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit13.C'
    sources:
      binary: implicit13.s
  group: GRPSERIAL
test_implicit13_5453:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit13.C'
    sources:
      binary: implicit13.s
  group: GRPSERIAL
test_implicit13_5454:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit13.C'
    sources:
      binary: implicit13.s
  group: GRPSERIAL
test_implicit14_1696:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit14.C'
    sources:
      binary: implicit14.s
  group: GRPSERIAL
test_implicit14_1697:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit14.C'
    sources:
      binary: implicit14.s
  group: GRPSERIAL
test_implicit14_5455:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit14.C'
    sources:
      binary: implicit14.s
  group: GRPSERIAL
test_implicit14_5456:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit14.C'
    sources:
      binary: implicit14.s
  group: GRPSERIAL
test_implicit1_1686:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit1.C'
    sources:
      binary: implicit1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit1_1687:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit1.C'
    sources:
      binary: implicit1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit1_5445:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit1.C'
    sources:
      binary: implicit1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit1_5446:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit1.C'
    sources:
      binary: implicit1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit2_1698:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit2.C'
    sources:
      binary: ./implicit2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_implicit2_1699:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit2.C'
    sources:
      binary: ./implicit2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_implicit2_5457:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit2.C'
    sources:
      binary: ./implicit2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_implicit2_5458:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit2.C'
    sources:
      binary: ./implicit2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_implicit3_1700:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit3.C'
    sources:
      binary: ./implicit3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_implicit3_1701:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit3.C'
    sources:
      binary: ./implicit3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_implicit3_5459:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit3.C'
    sources:
      binary: ./implicit3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_implicit3_5460:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit3.C'
    sources:
      binary: ./implicit3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_implicit4_1702:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit4.C'
    sources:
      binary: implicit4.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted function
          .B::B.const")[^\n]*\n?)+'
test_implicit4_1703:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit4.C'
    sources:
      binary: implicit4.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted function
          .B::B.const")[^\n]*\n?)+'
test_implicit4_5461:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit4.C'
    sources:
      binary: implicit4.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted function
          .B::B.const")[^\n]*\n?)+'
test_implicit4_5462:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit4.C'
    sources:
      binary: implicit4.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted function
          .B::B.const")[^\n]*\n?)+'
test_implicit5_1704:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit5.C'
    sources:
      binary: implicit5.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly|use
          of deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit5_1705:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit5.C'
    sources:
      binary: implicit5.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly|use
          of deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit5_5463:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit5.C'
    sources:
      binary: implicit5.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly|use
          of deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit5_5464:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit5.C'
    sources:
      binary: implicit5.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly|use
          of deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit6_1706:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit6.C'
    sources:
      binary: implicit6.s
  group: GRPSERIAL
test_implicit6_1707:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit6.C'
    sources:
      binary: implicit6.s
  group: GRPSERIAL
test_implicit6_5465:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit6.C'
    sources:
      binary: implicit6.s
  group: GRPSERIAL
test_implicit6_5466:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit6.C'
    sources:
      binary: implicit6.s
  group: GRPSERIAL
test_implicit7_1708:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit7.C'
    sources:
      binary: implicit7.s
  group: GRPSERIAL
test_implicit7_1709:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit7.C'
    sources:
      binary: implicit7.s
  group: GRPSERIAL
test_implicit7_5467:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit7.C'
    sources:
      binary: implicit7.s
  group: GRPSERIAL
test_implicit7_5468:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit7.C'
    sources:
      binary: implicit7.s
  group: GRPSERIAL
test_implicit8_1710:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit8.C'
    sources:
      binary: implicit8.s
  group: GRPSERIAL
  validate:
    match:
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit8_1711:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit8.C'
    sources:
      binary: implicit8.s
  group: GRPSERIAL
  validate:
    match:
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit8_5469:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit8.C'
    sources:
      binary: implicit8.s
  group: GRPSERIAL
  validate:
    match:
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit8_5470:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit8.C'
    sources:
      binary: implicit8.s
  group: GRPSERIAL
  validate:
    match:
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit9_1712:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit9.C'
    sources:
      binary: implicit9.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly deleted|context")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit9_1713:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit9.C'
    sources:
      binary: implicit9.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly deleted|context")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit9_5471:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit9.C'
    sources:
      binary: implicit9.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly deleted|context")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_implicit9_5472:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/implicit9.C'
    sources:
      binary: implicit9.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicitly deleted|context")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_inh-ctor10_1716:
  build:
    cflags: "-std=gnu++11 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor10.C'
    sources:
      binary: inh-ctor10.s
  group: GRPSERIAL
test_inh-ctor10_1717:
  build:
    cflags: "-std=gnu++14 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor10.C'
    sources:
      binary: inh-ctor10.s
  group: GRPSERIAL
test_inh-ctor10_5475:
  build:
    cflags: "-std=gnu++11 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor10.C'
    sources:
      binary: inh-ctor10.s
  group: GRPSERIAL
test_inh-ctor10_5476:
  build:
    cflags: "-std=gnu++14 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor10.C'
    sources:
      binary: inh-ctor10.s
  group: GRPSERIAL
test_inh-ctor11_1718:
  build:
    cflags: "-std=gnu++11 -fno-new-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor11.C'
    sources:
      binary: inh-ctor11.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ellipsis")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_inh-ctor11_1719:
  build:
    cflags: "-std=gnu++14 -fno-new-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor11.C'
    sources:
      binary: inh-ctor11.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ellipsis")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_inh-ctor11_5477:
  build:
    cflags: "-std=gnu++11 -fno-new-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor11.C'
    sources:
      binary: inh-ctor11.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ellipsis")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_inh-ctor11_5478:
  build:
    cflags: "-std=gnu++14 -fno-new-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor11.C'
    sources:
      binary: inh-ctor11.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ellipsis")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_inh-ctor11a_1720:
  build:
    cflags: "-std=gnu++11 -fnew-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor11a.C'
    sources:
      binary: inh-ctor11a.s
  group: GRPSERIAL
test_inh-ctor11a_1721:
  build:
    cflags: "-std=gnu++14 -fnew-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor11a.C'
    sources:
      binary: inh-ctor11a.s
  group: GRPSERIAL
test_inh-ctor11a_5479:
  build:
    cflags: "-std=gnu++11 -fnew-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor11a.C'
    sources:
      binary: inh-ctor11a.s
  group: GRPSERIAL
test_inh-ctor11a_5480:
  build:
    cflags: "-std=gnu++14 -fnew-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor11a.C'
    sources:
      binary: inh-ctor11a.s
  group: GRPSERIAL
test_inh-ctor12_1722:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor12.C'
    sources:
      binary: ./inh-ctor12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_inh-ctor12_1723:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor12.C'
    sources:
      binary: ./inh-ctor12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_inh-ctor12_5481:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor12.C'
    sources:
      binary: ./inh-ctor12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_inh-ctor12_5482:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor12.C'
    sources:
      binary: ./inh-ctor12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_inh-ctor13_1724:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor13.C'
    sources:
      binary: inh-ctor13.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B")[^\n]*\n?)+'
test_inh-ctor13_1725:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor13.C'
    sources:
      binary: inh-ctor13.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B")[^\n]*\n?)+'
test_inh-ctor13_5483:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor13.C'
    sources:
      binary: inh-ctor13.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B")[^\n]*\n?)+'
test_inh-ctor13_5484:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor13.C'
    sources:
      binary: inh-ctor13.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B")[^\n]*\n?)+'
test_inh-ctor14_1726:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor14.C'
    sources:
      binary: inh-ctor14.s
  group: GRPSERIAL
test_inh-ctor14_1727:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor14.C'
    sources:
      binary: inh-ctor14.s
  group: GRPSERIAL
test_inh-ctor14_5485:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor14.C'
    sources:
      binary: inh-ctor14.s
  group: GRPSERIAL
test_inh-ctor14_5486:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor14.C'
    sources:
      binary: inh-ctor14.s
  group: GRPSERIAL
test_inh-ctor15_1728:
  build:
    cflags: "-std=gnu++11 -fno-new-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor15.C'
    sources:
      binary: inh-ctor15.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_inh-ctor15_1729:
  build:
    cflags: "-std=gnu++14 -fno-new-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor15.C'
    sources:
      binary: inh-ctor15.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_inh-ctor15_5487:
  build:
    cflags: "-std=gnu++11 -fno-new-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor15.C'
    sources:
      binary: inh-ctor15.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_inh-ctor15_5488:
  build:
    cflags: "-std=gnu++14 -fno-new-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor15.C'
    sources:
      binary: inh-ctor15.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_inh-ctor16_1730:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor16.C'
    sources:
      binary: inh-ctor16.s
  group: GRPSERIAL
test_inh-ctor16_1731:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor16.C'
    sources:
      binary: inh-ctor16.s
  group: GRPSERIAL
test_inh-ctor16_5489:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor16.C'
    sources:
      binary: inh-ctor16.s
  group: GRPSERIAL
test_inh-ctor16_5490:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor16.C'
    sources:
      binary: inh-ctor16.s
  group: GRPSERIAL
test_inh-ctor17_1732:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor17.C'
    sources:
      binary: inh-ctor17.s
  group: GRPSERIAL
test_inh-ctor17_1733:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor17.C'
    sources:
      binary: inh-ctor17.s
  group: GRPSERIAL
test_inh-ctor17_5491:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor17.C'
    sources:
      binary: inh-ctor17.s
  group: GRPSERIAL
test_inh-ctor17_5492:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor17.C'
    sources:
      binary: inh-ctor17.s
  group: GRPSERIAL
test_inh-ctor18_1734:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor18.C'
    sources:
      binary: inh-ctor18.s
  group: GRPSERIAL
test_inh-ctor18_1735:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor18.C'
    sources:
      binary: inh-ctor18.s
  group: GRPSERIAL
test_inh-ctor18_5493:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor18.C'
    sources:
      binary: inh-ctor18.s
  group: GRPSERIAL
test_inh-ctor18_5494:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor18.C'
    sources:
      binary: inh-ctor18.s
  group: GRPSERIAL
test_inh-ctor19_1736:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor19.C'
    sources:
      binary: inh-ctor19.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
test_inh-ctor19_1737:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor19.C'
    sources:
      binary: inh-ctor19.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
test_inh-ctor19_5495:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor19.C'
    sources:
      binary: inh-ctor19.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
test_inh-ctor19_5496:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor19.C'
    sources:
      binary: inh-ctor19.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal")[^\n]*\n?)+'
test_inh-ctor1_1714:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor1.C'
    sources:
      binary: inh-ctor1.s
  group: GRPSERIAL
test_inh-ctor1_1715:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor1.C'
    sources:
      binary: inh-ctor1.s
  group: GRPSERIAL
test_inh-ctor1_5473:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor1.C'
    sources:
      binary: inh-ctor1.s
  group: GRPSERIAL
test_inh-ctor1_5474:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor1.C'
    sources:
      binary: inh-ctor1.s
  group: GRPSERIAL
test_inh-ctor20_1740:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor20.C'
    sources:
      binary: inh-ctor20.s
  group: GRPSERIAL
test_inh-ctor20_1741:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor20.C'
    sources:
      binary: inh-ctor20.s
  group: GRPSERIAL
test_inh-ctor20_5499:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor20.C'
    sources:
      binary: inh-ctor20.s
  group: GRPSERIAL
test_inh-ctor20_5500:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor20.C'
    sources:
      binary: inh-ctor20.s
  group: GRPSERIAL
test_inh-ctor21_1742:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor21.C'
    sources:
      binary: ./inh-ctor21.exe
  group: GRPSERIAL
  run:
    cwd: .
test_inh-ctor21_1743:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor21.C'
    sources:
      binary: ./inh-ctor21.exe
  group: GRPSERIAL
  run:
    cwd: .
test_inh-ctor21_5501:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor21.C'
    sources:
      binary: ./inh-ctor21.exe
  group: GRPSERIAL
  run:
    cwd: .
test_inh-ctor21_5502:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor21.C'
    sources:
      binary: ./inh-ctor21.exe
  group: GRPSERIAL
  run:
    cwd: .
test_inh-ctor22_1744:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor22.C'
    sources:
      binary: inh-ctor22.s
  group: GRPSERIAL
test_inh-ctor22_1745:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor22.C'
    sources:
      binary: inh-ctor22.s
  group: GRPSERIAL
test_inh-ctor22_5503:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor22.C'
    sources:
      binary: inh-ctor22.s
  group: GRPSERIAL
test_inh-ctor22_5504:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor22.C'
    sources:
      binary: inh-ctor22.s
  group: GRPSERIAL
test_inh-ctor23_1746:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor23.C'
    sources:
      binary: inh-ctor23.s
  group: GRPSERIAL
test_inh-ctor23_1747:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor23.C'
    sources:
      binary: inh-ctor23.s
  group: GRPSERIAL
test_inh-ctor23_5505:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor23.C'
    sources:
      binary: inh-ctor23.s
  group: GRPSERIAL
test_inh-ctor23_5506:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor23.C'
    sources:
      binary: inh-ctor23.s
  group: GRPSERIAL
test_inh-ctor24_1748:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor24.C'
    sources:
      binary: inh-ctor24.s
  group: GRPSERIAL
test_inh-ctor24_1749:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor24.C'
    sources:
      binary: inh-ctor24.s
  group: GRPSERIAL
test_inh-ctor24_5507:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor24.C'
    sources:
      binary: inh-ctor24.s
  group: GRPSERIAL
test_inh-ctor24_5508:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor24.C'
    sources:
      binary: inh-ctor24.s
  group: GRPSERIAL
test_inh-ctor25_1750:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor25.C'
    sources:
      binary: inh-ctor25.s
  group: GRPSERIAL
test_inh-ctor25_1751:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor25.C'
    sources:
      binary: inh-ctor25.s
  group: GRPSERIAL
test_inh-ctor25_5509:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor25.C'
    sources:
      binary: inh-ctor25.s
  group: GRPSERIAL
test_inh-ctor25_5510:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor25.C'
    sources:
      binary: inh-ctor25.s
  group: GRPSERIAL
test_inh-ctor26_1752:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor26.C'
    sources:
      binary: inh-ctor26.s
  group: GRPSERIAL
test_inh-ctor26_1753:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor26.C'
    sources:
      binary: inh-ctor26.s
  group: GRPSERIAL
test_inh-ctor26_5511:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor26.C'
    sources:
      binary: inh-ctor26.s
  group: GRPSERIAL
test_inh-ctor26_5512:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor26.C'
    sources:
      binary: inh-ctor26.s
  group: GRPSERIAL
test_inh-ctor27_1754:
  build:
    cflags: "-std=gnu++11 -Wuseless-cast\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor27.C'
    sources:
      binary: inh-ctor27.s
  group: GRPSERIAL
test_inh-ctor27_1755:
  build:
    cflags: "-std=gnu++14 -Wuseless-cast\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor27.C'
    sources:
      binary: inh-ctor27.s
  group: GRPSERIAL
test_inh-ctor27_5513:
  build:
    cflags: "-std=gnu++11 -Wuseless-cast\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor27.C'
    sources:
      binary: inh-ctor27.s
  group: GRPSERIAL
test_inh-ctor27_5514:
  build:
    cflags: "-std=gnu++14 -Wuseless-cast\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor27.C'
    sources:
      binary: inh-ctor27.s
  group: GRPSERIAL
test_inh-ctor28_1756:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor28.C'
    sources:
      binary: inh-ctor28.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("indirect")[^\n]*\n?)+'
test_inh-ctor28_1757:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor28.C'
    sources:
      binary: inh-ctor28.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("indirect")[^\n]*\n?)+'
test_inh-ctor28_5515:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor28.C'
    sources:
      binary: inh-ctor28.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("indirect")[^\n]*\n?)+'
test_inh-ctor28_5516:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor28.C'
    sources:
      binary: inh-ctor28.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("indirect")[^\n]*\n?)+'
test_inh-ctor29_1758:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor29.C'
    sources:
      binary: inh-ctor29.s
  group: GRPSERIAL
test_inh-ctor29_1759:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor29.C'
    sources:
      binary: inh-ctor29.s
  group: GRPSERIAL
test_inh-ctor29_5517:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor29.C'
    sources:
      binary: inh-ctor29.s
  group: GRPSERIAL
test_inh-ctor29_5518:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor29.C'
    sources:
      binary: inh-ctor29.s
  group: GRPSERIAL
test_inh-ctor2_1738:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor2.C'
    sources:
      binary: inh-ctor2.s
  group: GRPSERIAL
test_inh-ctor2_1739:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor2.C'
    sources:
      binary: inh-ctor2.s
  group: GRPSERIAL
test_inh-ctor2_5497:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor2.C'
    sources:
      binary: inh-ctor2.s
  group: GRPSERIAL
test_inh-ctor2_5498:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor2.C'
    sources:
      binary: inh-ctor2.s
  group: GRPSERIAL
test_inh-ctor3_1760:
  build:
    cflags: "-std=gnu++11 -fno-new-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor3.C'
    sources:
      binary: inh-ctor3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inherited")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inherited")[^\n]*\n?)+'
test_inh-ctor3_1761:
  build:
    cflags: "-std=gnu++14 -fno-new-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor3.C'
    sources:
      binary: inh-ctor3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inherited")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inherited")[^\n]*\n?)+'
test_inh-ctor3_5519:
  build:
    cflags: "-std=gnu++11 -fno-new-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor3.C'
    sources:
      binary: inh-ctor3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inherited")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inherited")[^\n]*\n?)+'
test_inh-ctor3_5520:
  build:
    cflags: "-std=gnu++14 -fno-new-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor3.C'
    sources:
      binary: inh-ctor3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inherited")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inherited")[^\n]*\n?)+'
test_inh-ctor3a_1762:
  build:
    cflags: "-std=gnu++11 -fnew-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor3a.C'
    sources:
      binary: inh-ctor3a.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_inh-ctor3a_1763:
  build:
    cflags: "-std=gnu++14 -fnew-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor3a.C'
    sources:
      binary: inh-ctor3a.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_inh-ctor3a_5521:
  build:
    cflags: "-std=gnu++11 -fnew-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor3a.C'
    sources:
      binary: inh-ctor3a.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_inh-ctor3a_5522:
  build:
    cflags: "-std=gnu++14 -fnew-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor3a.C'
    sources:
      binary: inh-ctor3a.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_inh-ctor4_1764:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor4.C'
    sources:
      binary: inh-ctor4.s
  group: GRPSERIAL
test_inh-ctor4_1765:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor4.C'
    sources:
      binary: inh-ctor4.s
  group: GRPSERIAL
test_inh-ctor4_5523:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor4.C'
    sources:
      binary: inh-ctor4.s
  group: GRPSERIAL
test_inh-ctor4_5524:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor4.C'
    sources:
      binary: inh-ctor4.s
  group: GRPSERIAL
test_inh-ctor5_1766:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor5.C'
    sources:
      binary: inh-ctor5.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B1::B1")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_inh-ctor5_1767:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor5.C'
    sources:
      binary: inh-ctor5.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B1::B1")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_inh-ctor5_5525:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor5.C'
    sources:
      binary: inh-ctor5.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B1::B1")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_inh-ctor5_5526:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor5.C'
    sources:
      binary: inh-ctor5.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B1::B1")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_inh-ctor6_1768:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor6.C'
    sources:
      binary: inh-ctor6.s
  group: GRPSERIAL
test_inh-ctor6_1769:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor6.C'
    sources:
      binary: inh-ctor6.s
  group: GRPSERIAL
test_inh-ctor6_5527:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor6.C'
    sources:
      binary: inh-ctor6.s
  group: GRPSERIAL
test_inh-ctor6_5528:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor6.C'
    sources:
      binary: inh-ctor6.s
  group: GRPSERIAL
test_inh-ctor7_1770:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor7.C'
    sources:
      binary: inh-ctor7.s
  group: GRPSERIAL
test_inh-ctor7_1771:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor7.C'
    sources:
      binary: inh-ctor7.s
  group: GRPSERIAL
test_inh-ctor7_5529:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor7.C'
    sources:
      binary: inh-ctor7.s
  group: GRPSERIAL
test_inh-ctor7_5530:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor7.C'
    sources:
      binary: inh-ctor7.s
  group: GRPSERIAL
test_inh-ctor8_1772:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor8.C'
    sources:
      binary: inh-ctor8.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_inh-ctor8_1773:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor8.C'
    sources:
      binary: inh-ctor8.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_inh-ctor8_5531:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor8.C'
    sources:
      binary: inh-ctor8.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_inh-ctor8_5532:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor8.C'
    sources:
      binary: inh-ctor8.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_inh-ctor9_1774:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor9.C'
    sources:
      binary: inh-ctor9.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_inh-ctor9_1775:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor9.C'
    sources:
      binary: inh-ctor9.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_inh-ctor9_5533:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor9.C'
    sources:
      binary: inh-ctor9.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_inh-ctor9_5534:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inh-ctor9.C'
    sources:
      binary: inh-ctor9.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("this context")[^\n]*\n?)+'
test_initlist-array2_1776:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array2.C'
    sources:
      binary: initlist-array2.s
  group: GRPSERIAL
test_initlist-array2_1777:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array2.C'
    sources:
      binary: initlist-array2.s
  group: GRPSERIAL
test_initlist-array2_5535:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array2.C'
    sources:
      binary: initlist-array2.s
  group: GRPSERIAL
test_initlist-array2_5536:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array2.C'
    sources:
      binary: initlist-array2.s
  group: GRPSERIAL
test_initlist-array3_1778:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array3.C'
    sources:
      binary: initlist-array3.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_initlist-array3_1779:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array3.C'
    sources:
      binary: initlist-array3.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_initlist-array3_5537:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array3.C'
    sources:
      binary: initlist-array3.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_initlist-array3_5538:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array3.C'
    sources:
      binary: initlist-array3.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_initlist-array4_1780:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array4.C'
    sources:
      binary: initlist-array4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer to reference")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("std::initializer_list")[^\n]*\n?)+'
test_initlist-array4_1781:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array4.C'
    sources:
      binary: initlist-array4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer to reference")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("std::initializer_list")[^\n]*\n?)+'
test_initlist-array4_5539:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array4.C'
    sources:
      binary: initlist-array4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer to reference")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("std::initializer_list")[^\n]*\n?)+'
test_initlist-array4_5540:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array4.C'
    sources:
      binary: initlist-array4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer to reference")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("std::initializer_list")[^\n]*\n?)+'
test_initlist-array5_1782:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array5.C'
    sources:
      binary: initlist-array5.s
  group: GRPSERIAL
test_initlist-array5_1783:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array5.C'
    sources:
      binary: initlist-array5.s
  group: GRPSERIAL
test_initlist-array5_5541:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array5.C'
    sources:
      binary: initlist-array5.s
  group: GRPSERIAL
test_initlist-array5_5542:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-array5.C'
    sources:
      binary: initlist-array5.s
  group: GRPSERIAL
test_initlist-arrray1_1784:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-arrray1.C'
    sources:
      binary: initlist-arrray1.s
  group: GRPSERIAL
test_initlist-arrray1_1785:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-arrray1.C'
    sources:
      binary: initlist-arrray1.s
  group: GRPSERIAL
test_initlist-arrray1_5543:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-arrray1.C'
    sources:
      binary: initlist-arrray1.s
  group: GRPSERIAL
test_initlist-arrray1_5544:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-arrray1.C'
    sources:
      binary: initlist-arrray1.s
  group: GRPSERIAL
test_initlist-base1_1786:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-base1.C'
    sources:
      binary: initlist-base1.s
  group: GRPSERIAL
test_initlist-base1_1787:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-base1.C'
    sources:
      binary: initlist-base1.s
  group: GRPSERIAL
test_initlist-base1_5545:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-base1.C'
    sources:
      binary: initlist-base1.s
  group: GRPSERIAL
test_initlist-base1_5546:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-base1.C'
    sources:
      binary: initlist-base1.s
  group: GRPSERIAL
test_initlist-base2_1788:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-base2.C'
    sources:
      binary: ./initlist-base2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-base2_1789:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-base2.C'
    sources:
      binary: ./initlist-base2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-base2_5547:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-base2.C'
    sources:
      binary: ./initlist-base2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-base2_5548:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-base2.C'
    sources:
      binary: ./initlist-base2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-base3_1790:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-base3.C'
    sources:
      binary: initlist-base3.s
  group: GRPSERIAL
test_initlist-base3_1791:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-base3.C'
    sources:
      binary: initlist-base3.s
  group: GRPSERIAL
test_initlist-base3_5549:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-base3.C'
    sources:
      binary: initlist-base3.s
  group: GRPSERIAL
test_initlist-base3_5550:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-base3.C'
    sources:
      binary: initlist-base3.s
  group: GRPSERIAL
test_initlist-ctor1_1792:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-ctor1.C'
    sources:
      binary: initlist-ctor1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist-ctor1_1793:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-ctor1.C'
    sources:
      binary: initlist-ctor1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist-ctor1_5551:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-ctor1.C'
    sources:
      binary: initlist-ctor1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist-ctor1_5552:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-ctor1.C'
    sources:
      binary: initlist-ctor1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist-deduce_1794:
  build:
    cflags: -std=gnu++11 -fdeduce-init-list
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-deduce.C'
    sources:
      binary: ./initlist-deduce.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("call")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("deduc")[^\n]*\n?)+'
test_initlist-deduce_1795:
  build:
    cflags: -std=gnu++14 -fdeduce-init-list
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-deduce.C'
    sources:
      binary: ./initlist-deduce.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("call")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("deduc")[^\n]*\n?)+'
test_initlist-deduce_5553:
  build:
    cflags: -std=gnu++11 -fdeduce-init-list
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-deduce.C'
    sources:
      binary: ./initlist-deduce.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("call")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("deduc")[^\n]*\n?)+'
test_initlist-deduce_5554:
  build:
    cflags: -std=gnu++14 -fdeduce-init-list
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-deduce.C'
    sources:
      binary: ./initlist-deduce.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("call")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("deduc")[^\n]*\n?)+'
test_initlist-defarg1_1796:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-defarg1.C'
    sources:
      binary: initlist-defarg1.s
  group: GRPSERIAL
test_initlist-defarg1_1797:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-defarg1.C'
    sources:
      binary: initlist-defarg1.s
  group: GRPSERIAL
test_initlist-defarg1_5555:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-defarg1.C'
    sources:
      binary: initlist-defarg1.s
  group: GRPSERIAL
test_initlist-defarg1_5556:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-defarg1.C'
    sources:
      binary: initlist-defarg1.s
  group: GRPSERIAL
test_initlist-dr1518_1798:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-dr1518.C'
    sources:
      binary: initlist-dr1518.s
  group: GRPSERIAL
test_initlist-dr1518_1799:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-dr1518.C'
    sources:
      binary: initlist-dr1518.s
  group: GRPSERIAL
test_initlist-dr1518_5557:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-dr1518.C'
    sources:
      binary: initlist-dr1518.s
  group: GRPSERIAL
test_initlist-dr1518_5558:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-dr1518.C'
    sources:
      binary: initlist-dr1518.s
  group: GRPSERIAL
test_initlist-explicit-sfinae_1800:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-explicit-sfinae.C'
    sources:
      binary: initlist-explicit-sfinae.s
  group: GRPSERIAL
test_initlist-explicit-sfinae_1801:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-explicit-sfinae.C'
    sources:
      binary: initlist-explicit-sfinae.s
  group: GRPSERIAL
test_initlist-explicit-sfinae_5559:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-explicit-sfinae.C'
    sources:
      binary: initlist-explicit-sfinae.s
  group: GRPSERIAL
test_initlist-explicit-sfinae_5560:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-explicit-sfinae.C'
    sources:
      binary: initlist-explicit-sfinae.s
  group: GRPSERIAL
test_initlist-explicit1_1802:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-explicit1.C'
    sources:
      binary: initlist-explicit1.s
  group: GRPSERIAL
test_initlist-explicit1_1803:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-explicit1.C'
    sources:
      binary: initlist-explicit1.s
  group: GRPSERIAL
test_initlist-explicit1_5561:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-explicit1.C'
    sources:
      binary: initlist-explicit1.s
  group: GRPSERIAL
test_initlist-explicit1_5562:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-explicit1.C'
    sources:
      binary: initlist-explicit1.s
  group: GRPSERIAL
test_initlist-lifetime1_1804:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-lifetime1.C'
    sources:
      binary: ./initlist-lifetime1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-lifetime1_1805:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-lifetime1.C'
    sources:
      binary: ./initlist-lifetime1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-lifetime1_5563:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-lifetime1.C'
    sources:
      binary: ./initlist-lifetime1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-lifetime1_5564:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-lifetime1.C'
    sources:
      binary: ./initlist-lifetime1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-lifetime2_1806:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-lifetime2.C'
    sources:
      binary: ./initlist-lifetime2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-lifetime2_1807:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-lifetime2.C'
    sources:
      binary: ./initlist-lifetime2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-lifetime2_5565:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-lifetime2.C'
    sources:
      binary: ./initlist-lifetime2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-lifetime2_5566:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-lifetime2.C'
    sources:
      binary: ./initlist-lifetime2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-n3922_1808:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-n3922.C'
    sources:
      binary: initlist-n3922.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer_list")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("one element")[^\n]*\n?)+'
test_initlist-n3922_1809:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-n3922.C'
    sources:
      binary: initlist-n3922.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer_list")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("one element")[^\n]*\n?)+'
test_initlist-n3922_5567:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-n3922.C'
    sources:
      binary: initlist-n3922.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer_list")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("one element")[^\n]*\n?)+'
test_initlist-n3922_5568:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-n3922.C'
    sources:
      binary: initlist-n3922.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer_list")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("one element")[^\n]*\n?)+'
test_initlist-new1_1810:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-new1.C'
    sources:
      binary: initlist-new1.s
  group: GRPSERIAL
test_initlist-new1_1811:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-new1.C'
    sources:
      binary: initlist-new1.s
  group: GRPSERIAL
test_initlist-new1_5569:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-new1.C'
    sources:
      binary: initlist-new1.s
  group: GRPSERIAL
test_initlist-new1_5570:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-new1.C'
    sources:
      binary: initlist-new1.s
  group: GRPSERIAL
test_initlist-opt_1812:
  build:
    cflags: "-std=gnu++11 -O2 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-opt.C'
    sources:
      binary: initlist-opt.s
  group: GRPSERIAL
test_initlist-opt_1813:
  build:
    cflags: "-std=gnu++14 -O2 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-opt.C'
    sources:
      binary: initlist-opt.s
  group: GRPSERIAL
test_initlist-opt_5571:
  build:
    cflags: "-std=gnu++11 -O2 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-opt.C'
    sources:
      binary: initlist-opt.s
  group: GRPSERIAL
test_initlist-opt_5572:
  build:
    cflags: "-std=gnu++14 -O2 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-opt.C'
    sources:
      binary: initlist-opt.s
  group: GRPSERIAL
test_initlist-postfix-open-square_1814:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-postfix-open-square.C'
    sources:
      binary: initlist-postfix-open-square.s
  group: GRPSERIAL
test_initlist-postfix-open-square_1815:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-postfix-open-square.C'
    sources:
      binary: initlist-postfix-open-square.s
  group: GRPSERIAL
test_initlist-postfix-open-square_5573:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-postfix-open-square.C'
    sources:
      binary: initlist-postfix-open-square.s
  group: GRPSERIAL
test_initlist-postfix-open-square_5574:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-postfix-open-square.C'
    sources:
      binary: initlist-postfix-open-square.s
  group: GRPSERIAL
test_initlist-protected_1816:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-protected.C'
    sources:
      binary: initlist-protected.s
  group: GRPSERIAL
test_initlist-protected_1817:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-protected.C'
    sources:
      binary: initlist-protected.s
  group: GRPSERIAL
test_initlist-protected_5575:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-protected.C'
    sources:
      binary: initlist-protected.s
  group: GRPSERIAL
test_initlist-protected_5576:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-protected.C'
    sources:
      binary: initlist-protected.s
  group: GRPSERIAL
test_initlist-pure_1818:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-pure.C'
    sources:
      binary: initlist-pure.s
  group: GRPSERIAL
test_initlist-pure_1819:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-pure.C'
    sources:
      binary: initlist-pure.s
  group: GRPSERIAL
test_initlist-pure_5577:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-pure.C'
    sources:
      binary: initlist-pure.s
  group: GRPSERIAL
test_initlist-pure_5578:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-pure.C'
    sources:
      binary: initlist-pure.s
  group: GRPSERIAL
test_initlist-template1_1820:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-template1.C'
    sources:
      binary: initlist-template1.s
  group: GRPSERIAL
test_initlist-template1_1821:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-template1.C'
    sources:
      binary: initlist-template1.s
  group: GRPSERIAL
test_initlist-template1_5579:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-template1.C'
    sources:
      binary: initlist-template1.s
  group: GRPSERIAL
test_initlist-template1_5580:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-template1.C'
    sources:
      binary: initlist-template1.s
  group: GRPSERIAL
test_initlist-template2_1822:
  build:
    cflags: "-std=gnu++11 -ftemplate-depth=20\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-template2.C'
    sources:
      binary: initlist-template2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist-template2_1823:
  build:
    cflags: "-std=gnu++14 -ftemplate-depth=20\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-template2.C'
    sources:
      binary: initlist-template2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist-template2_5581:
  build:
    cflags: "-std=gnu++11 -ftemplate-depth=20\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-template2.C'
    sources:
      binary: initlist-template2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist-template2_5582:
  build:
    cflags: "-std=gnu++14 -ftemplate-depth=20\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-template2.C'
    sources:
      binary: initlist-template2.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist-value2_1826:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-value2.C'
    sources:
      binary: ./initlist-value2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-value2_1827:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-value2.C'
    sources:
      binary: ./initlist-value2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-value2_5585:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-value2.C'
    sources:
      binary: ./initlist-value2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-value2_5586:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-value2.C'
    sources:
      binary: ./initlist-value2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-value_1824:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-value.C'
    sources:
      binary: ./initlist-value.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-value_1825:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-value.C'
    sources:
      binary: ./initlist-value.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-value_5583:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-value.C'
    sources:
      binary: ./initlist-value.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-value_5584:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-value.C'
    sources:
      binary: ./initlist-value.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist-vect_1828:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-vect.C'
    sources:
      binary: initlist-vect.s
  group: GRPSERIAL
test_initlist-vect_1829:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-vect.C'
    sources:
      binary: initlist-vect.s
  group: GRPSERIAL
test_initlist-vect_5587:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-vect.C'
    sources:
      binary: initlist-vect.s
  group: GRPSERIAL
test_initlist-vect_5588:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist-vect.C'
    sources:
      binary: initlist-vect.s
  group: GRPSERIAL
test_initlist10_1832:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist10.C'
    sources:
      binary: initlist10.s
  group: GRPSERIAL
test_initlist10_1833:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist10.C'
    sources:
      binary: initlist10.s
  group: GRPSERIAL
test_initlist10_5591:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist10.C'
    sources:
      binary: initlist10.s
  group: GRPSERIAL
test_initlist10_5592:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist10.C'
    sources:
      binary: initlist10.s
  group: GRPSERIAL
test_initlist11_1834:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist11.C'
    sources:
      binary: initlist11.s
  group: GRPSERIAL
test_initlist11_1835:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist11.C'
    sources:
      binary: initlist11.s
  group: GRPSERIAL
test_initlist11_5593:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist11.C'
    sources:
      binary: initlist11.s
  group: GRPSERIAL
test_initlist11_5594:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist11.C'
    sources:
      binary: initlist11.s
  group: GRPSERIAL
test_initlist12_1836:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist12.C'
    sources:
      binary: initlist12.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_initlist12_1837:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist12.C'
    sources:
      binary: initlist12.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_initlist12_5595:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist12.C'
    sources:
      binary: initlist12.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_initlist12_5596:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist12.C'
    sources:
      binary: initlist12.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_initlist13_1838:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist13.C'
    sources:
      binary: initlist13.s
  group: GRPSERIAL
test_initlist13_1839:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist13.C'
    sources:
      binary: initlist13.s
  group: GRPSERIAL
test_initlist13_5597:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist13.C'
    sources:
      binary: initlist13.s
  group: GRPSERIAL
test_initlist13_5598:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist13.C'
    sources:
      binary: initlist13.s
  group: GRPSERIAL
test_initlist14_1840:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist14.C'
    sources:
      binary: initlist14.s
  group: GRPSERIAL
test_initlist14_1841:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist14.C'
    sources:
      binary: initlist14.s
  group: GRPSERIAL
test_initlist14_5599:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist14.C'
    sources:
      binary: initlist14.s
  group: GRPSERIAL
test_initlist14_5600:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist14.C'
    sources:
      binary: initlist14.s
  group: GRPSERIAL
test_initlist15_1842:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist15.C'
    sources:
      binary: initlist15.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist15_1843:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist15.C'
    sources:
      binary: initlist15.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist15_5601:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist15.C'
    sources:
      binary: initlist15.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist15_5602:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist15.C'
    sources:
      binary: initlist15.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist16_1844:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist16.C'
    sources:
      binary: ./initlist16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist16_1845:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist16.C'
    sources:
      binary: ./initlist16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist16_5603:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist16.C'
    sources:
      binary: ./initlist16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist16_5604:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist16.C'
    sources:
      binary: ./initlist16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist17_1846:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist17.C'
    sources:
      binary: initlist17.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist17_1847:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist17.C'
    sources:
      binary: initlist17.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist17_5605:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist17.C'
    sources:
      binary: initlist17.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist17_5606:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist17.C'
    sources:
      binary: initlist17.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist18_1848:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist18.C'
    sources:
      binary: ./initlist18.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist18_1849:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist18.C'
    sources:
      binary: ./initlist18.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist18_5607:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist18.C'
    sources:
      binary: ./initlist18.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist18_5608:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist18.C'
    sources:
      binary: ./initlist18.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist19_1850:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist19.C'
    sources:
      binary: initlist19.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many braces")[^\n]*\n?)+'
test_initlist19_1851:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist19.C'
    sources:
      binary: initlist19.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many braces")[^\n]*\n?)+'
test_initlist19_5609:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist19.C'
    sources:
      binary: initlist19.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many braces")[^\n]*\n?)+'
test_initlist19_5610:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist19.C'
    sources:
      binary: initlist19.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many braces")[^\n]*\n?)+'
test_initlist1_1830:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist1.C'
    sources:
      binary: ./initlist1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist1_1831:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist1.C'
    sources:
      binary: ./initlist1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist1_5589:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist1.C'
    sources:
      binary: ./initlist1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist1_5590:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist1.C'
    sources:
      binary: ./initlist1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist20_1854:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist20.C'
    sources:
      binary: initlist20.s
  group: GRPSERIAL
test_initlist20_1855:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist20.C'
    sources:
      binary: initlist20.s
  group: GRPSERIAL
test_initlist20_5613:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist20.C'
    sources:
      binary: initlist20.s
  group: GRPSERIAL
test_initlist20_5614:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist20.C'
    sources:
      binary: initlist20.s
  group: GRPSERIAL
test_initlist21_1856:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist21.C'
    sources:
      binary: initlist21.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many initializers")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many initializers")[^\n]*\n?)+'
test_initlist21_1857:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist21.C'
    sources:
      binary: initlist21.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many initializers")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many initializers")[^\n]*\n?)+'
test_initlist21_5615:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist21.C'
    sources:
      binary: initlist21.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many initializers")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many initializers")[^\n]*\n?)+'
test_initlist21_5616:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist21.C'
    sources:
      binary: initlist21.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many initializers")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many initializers")[^\n]*\n?)+'
test_initlist22_1858:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist22.C'
    sources:
      binary: initlist22.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist22_1859:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist22.C'
    sources:
      binary: initlist22.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist22_5617:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist22.C'
    sources:
      binary: initlist22.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist22_5618:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist22.C'
    sources:
      binary: initlist22.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist23_1860:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist23.C'
    sources:
      binary: initlist23.s
  group: GRPSERIAL
test_initlist23_1861:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist23.C'
    sources:
      binary: initlist23.s
  group: GRPSERIAL
test_initlist23_5619:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist23.C'
    sources:
      binary: initlist23.s
  group: GRPSERIAL
test_initlist23_5620:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist23.C'
    sources:
      binary: initlist23.s
  group: GRPSERIAL
test_initlist24_1862:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist24.C'
    sources:
      binary: initlist24.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared|could
          not convert")[^\n]*\n?)+'
test_initlist24_1863:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist24.C'
    sources:
      binary: initlist24.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared|could
          not convert")[^\n]*\n?)+'
test_initlist24_5621:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist24.C'
    sources:
      binary: initlist24.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared|could
          not convert")[^\n]*\n?)+'
test_initlist24_5622:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist24.C'
    sources:
      binary: initlist24.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared|could
          not convert")[^\n]*\n?)+'
test_initlist25_1864:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist25.C'
    sources:
      binary: ./initlist25.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist25_1865:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist25.C'
    sources:
      binary: ./initlist25.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist25_5623:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist25.C'
    sources:
      binary: ./initlist25.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist25_5624:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist25.C'
    sources:
      binary: ./initlist25.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist26_1866:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist26.C'
    sources:
      binary: initlist26.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assign")[^\n]*\n?)+'
test_initlist26_1867:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist26.C'
    sources:
      binary: initlist26.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assign")[^\n]*\n?)+'
test_initlist26_5625:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist26.C'
    sources:
      binary: initlist26.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assign")[^\n]*\n?)+'
test_initlist26_5626:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist26.C'
    sources:
      binary: initlist26.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assign")[^\n]*\n?)+'
test_initlist27_1868:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist27.C'
    sources:
      binary: initlist27.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid initialization|was
          not declared")[^\n]*\n?)+'
test_initlist27_1869:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist27.C'
    sources:
      binary: initlist27.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid initialization|was
          not declared")[^\n]*\n?)+'
test_initlist27_5627:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist27.C'
    sources:
      binary: initlist27.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid initialization|was
          not declared")[^\n]*\n?)+'
test_initlist27_5628:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist27.C'
    sources:
      binary: initlist27.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid initialization|was
          not declared")[^\n]*\n?)+'
test_initlist28_1870:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist28.C'
    sources:
      binary: initlist28.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assign")[^\n]*\n?)+'
test_initlist28_1871:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist28.C'
    sources:
      binary: initlist28.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assign")[^\n]*\n?)+'
test_initlist28_5629:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist28.C'
    sources:
      binary: initlist28.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assign")[^\n]*\n?)+'
test_initlist28_5630:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist28.C'
    sources:
      binary: initlist28.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assign")[^\n]*\n?)+'
test_initlist29_1872:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist29.C'
    sources:
      binary: initlist29.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist29_1873:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist29.C'
    sources:
      binary: initlist29.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist29_5631:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist29.C'
    sources:
      binary: initlist29.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist29_5632:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist29.C'
    sources:
      binary: initlist29.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist2_1852:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist2.C'
    sources:
      binary: initlist2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist2_1853:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist2.C'
    sources:
      binary: initlist2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist2_5611:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist2.C'
    sources:
      binary: initlist2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist2_5612:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist2.C'
    sources:
      binary: initlist2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist30_1876:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist30.C'
    sources:
      binary: initlist30.s
  group: GRPSERIAL
test_initlist30_1877:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist30.C'
    sources:
      binary: initlist30.s
  group: GRPSERIAL
test_initlist30_5635:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist30.C'
    sources:
      binary: initlist30.s
  group: GRPSERIAL
test_initlist30_5636:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist30.C'
    sources:
      binary: initlist30.s
  group: GRPSERIAL
test_initlist31_1878:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist31.C'
    sources:
      binary: initlist31.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("12:\''Equation\''
          was not declared")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to deduce")[^\n]*\n?)+'
test_initlist31_1879:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist31.C'
    sources:
      binary: initlist31.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("12:\''Equation\''
          was not declared")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to deduce")[^\n]*\n?)+'
test_initlist31_5637:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist31.C'
    sources:
      binary: initlist31.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("12:\''Equation\''
          was not declared")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to deduce")[^\n]*\n?)+'
test_initlist31_5638:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist31.C'
    sources:
      binary: initlist31.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("12:\''Equation\''
          was not declared")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to deduce")[^\n]*\n?)+'
test_initlist32_1880:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist32.C'
    sources:
      binary: initlist32.s
  group: GRPSERIAL
test_initlist32_1881:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist32.C'
    sources:
      binary: initlist32.s
  group: GRPSERIAL
test_initlist32_5639:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist32.C'
    sources:
      binary: initlist32.s
  group: GRPSERIAL
test_initlist32_5640:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist32.C'
    sources:
      binary: initlist32.s
  group: GRPSERIAL
test_initlist33_1882:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist33.C'
    sources:
      binary: initlist33.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assign")[^\n]*\n?)+'
test_initlist33_1883:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist33.C'
    sources:
      binary: initlist33.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assign")[^\n]*\n?)+'
test_initlist33_5641:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist33.C'
    sources:
      binary: initlist33.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assign")[^\n]*\n?)+'
test_initlist33_5642:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist33.C'
    sources:
      binary: initlist33.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assign")[^\n]*\n?)+'
test_initlist34_1884:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist34.C'
    sources:
      binary: initlist34.s
  group: GRPSERIAL
test_initlist34_1885:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist34.C'
    sources:
      binary: initlist34.s
  group: GRPSERIAL
test_initlist34_5643:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist34.C'
    sources:
      binary: initlist34.s
  group: GRPSERIAL
test_initlist34_5644:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist34.C'
    sources:
      binary: initlist34.s
  group: GRPSERIAL
test_initlist35_1886:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist35.C'
    sources:
      binary: initlist35.s
  group: GRPSERIAL
test_initlist35_1887:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist35.C'
    sources:
      binary: initlist35.s
  group: GRPSERIAL
test_initlist35_5645:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist35.C'
    sources:
      binary: initlist35.s
  group: GRPSERIAL
test_initlist35_5646:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist35.C'
    sources:
      binary: initlist35.s
  group: GRPSERIAL
test_initlist36_1888:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist36.C'
    sources:
      binary: initlist36.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist36_1889:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist36.C'
    sources:
      binary: initlist36.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist36_5647:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist36.C'
    sources:
      binary: initlist36.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist36_5648:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist36.C'
    sources:
      binary: initlist36.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist37_1890:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist37.C'
    sources:
      binary: initlist37.s
  group: GRPSERIAL
test_initlist37_1891:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist37.C'
    sources:
      binary: initlist37.s
  group: GRPSERIAL
test_initlist37_5649:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist37.C'
    sources:
      binary: initlist37.s
  group: GRPSERIAL
test_initlist37_5650:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist37.C'
    sources:
      binary: initlist37.s
  group: GRPSERIAL
test_initlist38_1892:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist38.C'
    sources:
      binary: initlist38.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_initlist38_1893:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist38.C'
    sources:
      binary: initlist38.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_initlist38_5651:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist38.C'
    sources:
      binary: initlist38.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_initlist38_5652:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist38.C'
    sources:
      binary: initlist38.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_initlist39_1894:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist39.C'
    sources:
      binary: initlist39.s
  group: GRPSERIAL
test_initlist39_1895:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist39.C'
    sources:
      binary: initlist39.s
  group: GRPSERIAL
test_initlist39_5653:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist39.C'
    sources:
      binary: initlist39.s
  group: GRPSERIAL
test_initlist39_5654:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist39.C'
    sources:
      binary: initlist39.s
  group: GRPSERIAL
test_initlist3_1874:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist3.C'
    sources:
      binary: initlist3.s
  group: GRPSERIAL
test_initlist3_1875:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist3.C'
    sources:
      binary: initlist3.s
  group: GRPSERIAL
test_initlist3_5633:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist3.C'
    sources:
      binary: initlist3.s
  group: GRPSERIAL
test_initlist3_5634:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist3.C'
    sources:
      binary: initlist3.s
  group: GRPSERIAL
test_initlist40_1898:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist40.C'
    sources:
      binary: initlist40.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
test_initlist40_1899:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist40.C'
    sources:
      binary: initlist40.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
test_initlist40_5657:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist40.C'
    sources:
      binary: initlist40.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
test_initlist40_5658:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist40.C'
    sources:
      binary: initlist40.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
test_initlist41_1900:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist41.C'
    sources:
      binary: initlist41.s
  group: GRPSERIAL
test_initlist41_1901:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist41.C'
    sources:
      binary: initlist41.s
  group: GRPSERIAL
test_initlist41_5659:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist41.C'
    sources:
      binary: initlist41.s
  group: GRPSERIAL
test_initlist41_5660:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist41.C'
    sources:
      binary: initlist41.s
  group: GRPSERIAL
test_initlist42_1902:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist42.C'
    sources:
      binary: initlist42.s
  group: GRPSERIAL
test_initlist42_1903:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist42.C'
    sources:
      binary: initlist42.s
  group: GRPSERIAL
test_initlist42_5661:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist42.C'
    sources:
      binary: initlist42.s
  group: GRPSERIAL
test_initlist42_5662:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist42.C'
    sources:
      binary: initlist42.s
  group: GRPSERIAL
test_initlist43_1904:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist43.C'
    sources:
      binary: initlist43.s
  group: GRPSERIAL
test_initlist43_1905:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist43.C'
    sources:
      binary: initlist43.s
  group: GRPSERIAL
test_initlist43_5663:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist43.C'
    sources:
      binary: initlist43.s
  group: GRPSERIAL
test_initlist43_5664:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist43.C'
    sources:
      binary: initlist43.s
  group: GRPSERIAL
test_initlist44_1906:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist44.C'
    sources:
      binary: initlist44.s
  group: GRPSERIAL
test_initlist44_1907:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist44.C'
    sources:
      binary: initlist44.s
  group: GRPSERIAL
test_initlist44_5665:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist44.C'
    sources:
      binary: initlist44.s
  group: GRPSERIAL
test_initlist44_5666:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist44.C'
    sources:
      binary: initlist44.s
  group: GRPSERIAL
test_initlist45_1908:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist45.C'
    sources:
      binary: initlist45.s
  group: GRPSERIAL
test_initlist45_1909:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist45.C'
    sources:
      binary: initlist45.s
  group: GRPSERIAL
test_initlist45_5667:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist45.C'
    sources:
      binary: initlist45.s
  group: GRPSERIAL
test_initlist45_5668:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist45.C'
    sources:
      binary: initlist45.s
  group: GRPSERIAL
test_initlist46_1910:
  build:
    cflags: -std=gnu++11 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist46.C'
    sources:
      binary: ./initlist46.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist46_1911:
  build:
    cflags: -std=gnu++14 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist46.C'
    sources:
      binary: ./initlist46.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist46_5669:
  build:
    cflags: -std=gnu++11 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist46.C'
    sources:
      binary: ./initlist46.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist46_5670:
  build:
    cflags: -std=gnu++14 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist46.C'
    sources:
      binary: ./initlist46.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist47_1912:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist47.C'
    sources:
      binary: initlist47.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_initlist47_1913:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist47.C'
    sources:
      binary: initlist47.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_initlist47_5671:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist47.C'
    sources:
      binary: initlist47.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_initlist47_5672:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist47.C'
    sources:
      binary: initlist47.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_initlist48_1914:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist48.C'
    sources:
      binary: initlist48.s
  group: GRPSERIAL
test_initlist48_1915:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist48.C'
    sources:
      binary: initlist48.s
  group: GRPSERIAL
test_initlist48_5673:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist48.C'
    sources:
      binary: initlist48.s
  group: GRPSERIAL
test_initlist48_5674:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist48.C'
    sources:
      binary: initlist48.s
  group: GRPSERIAL
test_initlist49_1916:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist49.C'
    sources:
      binary: ./initlist49.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist49_1917:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist49.C'
    sources:
      binary: ./initlist49.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist49_5675:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist49.C'
    sources:
      binary: ./initlist49.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist49_5676:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist49.C'
    sources:
      binary: ./initlist49.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist4_1896:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist4.C'
    sources:
      binary: initlist4.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
test_initlist4_1897:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist4.C'
    sources:
      binary: initlist4.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
test_initlist4_5655:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist4.C'
    sources:
      binary: initlist4.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
test_initlist4_5656:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist4.C'
    sources:
      binary: initlist4.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
test_initlist50_1920:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist50.C'
    sources:
      binary: initlist50.s
  group: GRPSERIAL
test_initlist50_1921:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist50.C'
    sources:
      binary: initlist50.s
  group: GRPSERIAL
test_initlist50_5679:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist50.C'
    sources:
      binary: initlist50.s
  group: GRPSERIAL
test_initlist50_5680:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist50.C'
    sources:
      binary: initlist50.s
  group: GRPSERIAL
test_initlist51_1922:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist51.C'
    sources:
      binary: initlist51.s
  group: GRPSERIAL
test_initlist51_1923:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist51.C'
    sources:
      binary: initlist51.s
  group: GRPSERIAL
test_initlist51_5681:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist51.C'
    sources:
      binary: initlist51.s
  group: GRPSERIAL
test_initlist51_5682:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist51.C'
    sources:
      binary: initlist51.s
  group: GRPSERIAL
test_initlist52_1924:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist52.C'
    sources:
      binary: initlist52.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist52_1925:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist52.C'
    sources:
      binary: initlist52.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist52_5683:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist52.C'
    sources:
      binary: initlist52.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist52_5684:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist52.C'
    sources:
      binary: initlist52.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist53_1926:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist53.C'
    sources:
      binary: ./initlist53.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist53_1927:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist53.C'
    sources:
      binary: ./initlist53.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist53_5685:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist53.C'
    sources:
      binary: ./initlist53.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist53_5686:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist53.C'
    sources:
      binary: ./initlist53.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist54_1928:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist54.C'
    sources:
      binary: initlist54.s
  group: GRPSERIAL
test_initlist54_1929:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist54.C'
    sources:
      binary: initlist54.s
  group: GRPSERIAL
test_initlist54_5687:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist54.C'
    sources:
      binary: initlist54.s
  group: GRPSERIAL
test_initlist54_5688:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist54.C'
    sources:
      binary: initlist54.s
  group: GRPSERIAL
test_initlist55_1930:
  build:
    cflags: "-std=gnu++11 -pedantic-errors -Wno-narrowing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist55.C'
    sources:
      binary: initlist55.s
  group: GRPSERIAL
test_initlist55_1931:
  build:
    cflags: "-std=gnu++14 -pedantic-errors -Wno-narrowing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist55.C'
    sources:
      binary: initlist55.s
  group: GRPSERIAL
test_initlist55_5689:
  build:
    cflags: "-std=gnu++11 -pedantic-errors -Wno-narrowing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist55.C'
    sources:
      binary: initlist55.s
  group: GRPSERIAL
test_initlist55_5690:
  build:
    cflags: "-std=gnu++14 -pedantic-errors -Wno-narrowing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist55.C'
    sources:
      binary: initlist55.s
  group: GRPSERIAL
test_initlist56_1932:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist56.C'
    sources:
      binary: initlist56.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist56_1933:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist56.C'
    sources:
      binary: initlist56.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist56_5691:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist56.C'
    sources:
      binary: initlist56.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist56_5692:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist56.C'
    sources:
      binary: initlist56.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist57_1934:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist57.C'
    sources:
      binary: initlist57.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of references")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer list")[^\n]*\n?)+'
test_initlist57_1935:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist57.C'
    sources:
      binary: initlist57.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of references")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer list")[^\n]*\n?)+'
test_initlist57_5693:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist57.C'
    sources:
      binary: initlist57.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of references")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer list")[^\n]*\n?)+'
test_initlist57_5694:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist57.C'
    sources:
      binary: initlist57.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of references")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer list")[^\n]*\n?)+'
test_initlist58_1936:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist58.C'
    sources:
      binary: initlist58.s
  group: GRPSERIAL
test_initlist58_1937:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist58.C'
    sources:
      binary: initlist58.s
  group: GRPSERIAL
test_initlist58_5695:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist58.C'
    sources:
      binary: initlist58.s
  group: GRPSERIAL
test_initlist58_5696:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist58.C'
    sources:
      binary: initlist58.s
  group: GRPSERIAL
test_initlist59_1938:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist59.C'
    sources:
      binary: initlist59.s
  group: GRPSERIAL
test_initlist59_1939:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist59.C'
    sources:
      binary: initlist59.s
  group: GRPSERIAL
test_initlist59_5697:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist59.C'
    sources:
      binary: initlist59.s
  group: GRPSERIAL
test_initlist59_5698:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist59.C'
    sources:
      binary: initlist59.s
  group: GRPSERIAL
test_initlist5_1918:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist5.C'
    sources:
      binary: initlist5.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion
          of \''d\''")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist5_1919:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist5.C'
    sources:
      binary: initlist5.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion
          of \''d\''")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist5_5677:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist5.C'
    sources:
      binary: initlist5.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion
          of \''d\''")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist5_5678:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist5.C'
    sources:
      binary: initlist5.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing conversion
          of \''d\''")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist61_1942:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist61.C'
    sources:
      binary: initlist61.s
  group: GRPSERIAL
test_initlist61_1943:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist61.C'
    sources:
      binary: initlist61.s
  group: GRPSERIAL
test_initlist61_5701:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist61.C'
    sources:
      binary: initlist61.s
  group: GRPSERIAL
test_initlist61_5702:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist61.C'
    sources:
      binary: initlist61.s
  group: GRPSERIAL
test_initlist62_1944:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist62.C'
    sources:
      binary: initlist62.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_initlist62_1945:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist62.C'
    sources:
      binary: initlist62.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_initlist62_5703:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist62.C'
    sources:
      binary: initlist62.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_initlist62_5704:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist62.C'
    sources:
      binary: initlist62.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_initlist63_1946:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist63.C'
    sources:
      binary: initlist63.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist63_1947:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist63.C'
    sources:
      binary: initlist63.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist63_5705:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist63.C'
    sources:
      binary: initlist63.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist63_5706:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist63.C'
    sources:
      binary: initlist63.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist64_1948:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist64.C'
    sources:
      binary: initlist64.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist64_1949:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist64.C'
    sources:
      binary: initlist64.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist64_5707:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist64.C'
    sources:
      binary: initlist64.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist64_5708:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist64.C'
    sources:
      binary: initlist64.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist65_1950:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist65.C'
    sources:
      binary: initlist65.s
  group: GRPSERIAL
test_initlist65_1951:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist65.C'
    sources:
      binary: initlist65.s
  group: GRPSERIAL
test_initlist65_5709:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist65.C'
    sources:
      binary: initlist65.s
  group: GRPSERIAL
test_initlist65_5710:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist65.C'
    sources:
      binary: initlist65.s
  group: GRPSERIAL
test_initlist66_1952:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist66.C'
    sources:
      binary: initlist66.s
  group: GRPSERIAL
test_initlist66_1953:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist66.C'
    sources:
      binary: initlist66.s
  group: GRPSERIAL
test_initlist66_5711:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist66.C'
    sources:
      binary: initlist66.s
  group: GRPSERIAL
test_initlist66_5712:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist66.C'
    sources:
      binary: initlist66.s
  group: GRPSERIAL
test_initlist67_1954:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist67.C'
    sources:
      binary: initlist67.s
  group: GRPSERIAL
test_initlist67_1955:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist67.C'
    sources:
      binary: initlist67.s
  group: GRPSERIAL
test_initlist67_5713:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist67.C'
    sources:
      binary: initlist67.s
  group: GRPSERIAL
test_initlist67_5714:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist67.C'
    sources:
      binary: initlist67.s
  group: GRPSERIAL
test_initlist68_1956:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist68.C'
    sources:
      binary: initlist68.s
  group: GRPSERIAL
test_initlist68_1957:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist68.C'
    sources:
      binary: initlist68.s
  group: GRPSERIAL
test_initlist68_5715:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist68.C'
    sources:
      binary: initlist68.s
  group: GRPSERIAL
test_initlist68_5716:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist68.C'
    sources:
      binary: initlist68.s
  group: GRPSERIAL
test_initlist69_1958:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist69.C'
    sources:
      binary: initlist69.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("paren")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("paren|invalid")[^\n]*\n?)+'
test_initlist69_1959:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist69.C'
    sources:
      binary: initlist69.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("paren")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("paren|invalid")[^\n]*\n?)+'
test_initlist69_5717:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist69.C'
    sources:
      binary: initlist69.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("paren")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("paren|invalid")[^\n]*\n?)+'
test_initlist69_5718:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist69.C'
    sources:
      binary: initlist69.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("paren")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("paren|invalid")[^\n]*\n?)+'
test_initlist6_1940:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist6.C'
    sources:
      binary: ./initlist6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist6_1941:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist6.C'
    sources:
      binary: ./initlist6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist6_5699:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist6.C'
    sources:
      binary: ./initlist6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist6_5700:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist6.C'
    sources:
      binary: ./initlist6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist70_1962:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist70.C'
    sources:
      binary: initlist70.s
  group: GRPSERIAL
test_initlist70_1963:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist70.C'
    sources:
      binary: initlist70.s
  group: GRPSERIAL
test_initlist70_5721:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist70.C'
    sources:
      binary: initlist70.s
  group: GRPSERIAL
test_initlist70_5722:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist70.C'
    sources:
      binary: initlist70.s
  group: GRPSERIAL
test_initlist71_1964:
  build:
    cflags: "-std=gnu++11 -Wconversion\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist71.C'
    sources:
      binary: initlist71.s
  group: GRPSERIAL
test_initlist71_1965:
  build:
    cflags: "-std=gnu++14 -Wconversion\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist71.C'
    sources:
      binary: initlist71.s
  group: GRPSERIAL
test_initlist71_5723:
  build:
    cflags: "-std=gnu++11 -Wconversion\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist71.C'
    sources:
      binary: initlist71.s
  group: GRPSERIAL
test_initlist71_5724:
  build:
    cflags: "-std=gnu++14 -Wconversion\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist71.C'
    sources:
      binary: initlist71.s
  group: GRPSERIAL
test_initlist72_1966:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist72.C'
    sources:
      binary: initlist72.s
  group: GRPSERIAL
test_initlist72_1967:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist72.C'
    sources:
      binary: initlist72.s
  group: GRPSERIAL
test_initlist72_5725:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist72.C'
    sources:
      binary: initlist72.s
  group: GRPSERIAL
test_initlist72_5726:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist72.C'
    sources:
      binary: initlist72.s
  group: GRPSERIAL
test_initlist73_1968:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist73.C'
    sources:
      binary: initlist73.s
  group: GRPSERIAL
test_initlist73_1969:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist73.C'
    sources:
      binary: initlist73.s
  group: GRPSERIAL
test_initlist73_5727:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist73.C'
    sources:
      binary: initlist73.s
  group: GRPSERIAL
test_initlist73_5728:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist73.C'
    sources:
      binary: initlist73.s
  group: GRPSERIAL
test_initlist74_1970:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist74.C'
    sources:
      binary: initlist74.s
  group: GRPSERIAL
test_initlist74_1971:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist74.C'
    sources:
      binary: initlist74.s
  group: GRPSERIAL
test_initlist74_5729:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist74.C'
    sources:
      binary: initlist74.s
  group: GRPSERIAL
test_initlist74_5730:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist74.C'
    sources:
      binary: initlist74.s
  group: GRPSERIAL
test_initlist75_1972:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist75.C'
    sources:
      binary: initlist75.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|unable to
          deduce")[^\n]*\n?)+'
test_initlist75_1973:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist75.C'
    sources:
      binary: initlist75.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|unable to
          deduce")[^\n]*\n?)+'
test_initlist75_5731:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist75.C'
    sources:
      binary: initlist75.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|unable to
          deduce")[^\n]*\n?)+'
test_initlist75_5732:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist75.C'
    sources:
      binary: initlist75.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("auto|unable to
          deduce")[^\n]*\n?)+'
test_initlist76_1974:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist76.C'
    sources:
      binary: initlist76.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many braces")[^\n]*\n?)+'
test_initlist76_1975:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist76.C'
    sources:
      binary: initlist76.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many braces")[^\n]*\n?)+'
test_initlist76_5733:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist76.C'
    sources:
      binary: initlist76.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many braces")[^\n]*\n?)+'
test_initlist76_5734:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist76.C'
    sources:
      binary: initlist76.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many braces")[^\n]*\n?)+'
test_initlist77_1976:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist77.C'
    sources:
      binary: initlist77.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many braces")[^\n]*\n?)+'
test_initlist77_1977:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist77.C'
    sources:
      binary: initlist77.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many braces")[^\n]*\n?)+'
test_initlist77_5735:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist77.C'
    sources:
      binary: initlist77.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many braces")[^\n]*\n?)+'
test_initlist77_5736:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist77.C'
    sources:
      binary: initlist77.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many braces")[^\n]*\n?)+'
test_initlist78_1978:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist78.C'
    sources:
      binary: initlist78.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist78_1979:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist78.C'
    sources:
      binary: initlist78.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist78_5737:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist78.C'
    sources:
      binary: initlist78.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist78_5738:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist78.C'
    sources:
      binary: initlist78.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist79_1980:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist79.C'
    sources:
      binary: initlist79.s
  group: GRPSERIAL
test_initlist79_1981:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist79.C'
    sources:
      binary: initlist79.s
  group: GRPSERIAL
test_initlist79_5739:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist79.C'
    sources:
      binary: initlist79.s
  group: GRPSERIAL
test_initlist79_5740:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist79.C'
    sources:
      binary: initlist79.s
  group: GRPSERIAL
test_initlist7_1960:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist7.C'
    sources:
      binary: initlist7.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist7_1961:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist7.C'
    sources:
      binary: initlist7.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist7_5719:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist7.C'
    sources:
      binary: initlist7.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist7_5720:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist7.C'
    sources:
      binary: initlist7.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("narrowing")[^\n]*\n?)+'
test_initlist80_1984:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist80.C'
    sources:
      binary: initlist80.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist80_1985:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist80.C'
    sources:
      binary: initlist80.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist80_5743:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist80.C'
    sources:
      binary: initlist80.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist80_5744:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist80.C'
    sources:
      binary: initlist80.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist81_1986:
  build:
    cflags: "-std=gnu++11 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist81.C'
    sources:
      binary: initlist81.s
  group: GRPSERIAL
test_initlist81_1987:
  build:
    cflags: "-std=gnu++14 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist81.C'
    sources:
      binary: initlist81.s
  group: GRPSERIAL
test_initlist81_5745:
  build:
    cflags: "-std=gnu++11 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist81.C'
    sources:
      binary: initlist81.s
  group: GRPSERIAL
test_initlist81_5746:
  build:
    cflags: "-std=gnu++14 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist81.C'
    sources:
      binary: initlist81.s
  group: GRPSERIAL
test_initlist82_1988:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist82.C'
    sources:
      binary: initlist82.s
  group: GRPSERIAL
test_initlist82_1989:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist82.C'
    sources:
      binary: initlist82.s
  group: GRPSERIAL
test_initlist82_5747:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist82.C'
    sources:
      binary: initlist82.s
  group: GRPSERIAL
test_initlist82_5748:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist82.C'
    sources:
      binary: initlist82.s
  group: GRPSERIAL
test_initlist83_1990:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist83.C'
    sources:
      binary: initlist83.s
  group: GRPSERIAL
test_initlist83_1991:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist83.C'
    sources:
      binary: initlist83.s
  group: GRPSERIAL
test_initlist83_5749:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist83.C'
    sources:
      binary: initlist83.s
  group: GRPSERIAL
test_initlist83_5750:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist83.C'
    sources:
      binary: initlist83.s
  group: GRPSERIAL
test_initlist84_1992:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist84.C'
    sources:
      binary: initlist84.s
  group: GRPSERIAL
test_initlist84_1993:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist84.C'
    sources:
      binary: initlist84.s
  group: GRPSERIAL
test_initlist84_5751:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist84.C'
    sources:
      binary: initlist84.s
  group: GRPSERIAL
test_initlist84_5752:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist84.C'
    sources:
      binary: initlist84.s
  group: GRPSERIAL
test_initlist85_1994:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist85.C'
    sources:
      binary: initlist85.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid initialization")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration")[^\n]*\n?)+'
test_initlist85_1995:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist85.C'
    sources:
      binary: initlist85.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid initialization")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration")[^\n]*\n?)+'
test_initlist85_5753:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist85.C'
    sources:
      binary: initlist85.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid initialization")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration")[^\n]*\n?)+'
test_initlist85_5754:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist85.C'
    sources:
      binary: initlist85.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid initialization")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration")[^\n]*\n?)+'
test_initlist86_1996:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist86.C'
    sources:
      binary: ./initlist86.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist86_1997:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist86.C'
    sources:
      binary: ./initlist86.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist86_5755:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist86.C'
    sources:
      binary: ./initlist86.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist86_5756:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist86.C'
    sources:
      binary: ./initlist86.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist87_1998:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist87.C'
    sources:
      binary: initlist87.s
  group: GRPSERIAL
test_initlist87_1999:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist87.C'
    sources:
      binary: initlist87.s
  group: GRPSERIAL
test_initlist87_5757:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist87.C'
    sources:
      binary: initlist87.s
  group: GRPSERIAL
test_initlist87_5758:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist87.C'
    sources:
      binary: initlist87.s
  group: GRPSERIAL
test_initlist88_2000:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist88.C'
    sources:
      binary: initlist88.s
  group: GRPSERIAL
test_initlist88_2001:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist88.C'
    sources:
      binary: initlist88.s
  group: GRPSERIAL
test_initlist88_5759:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist88.C'
    sources:
      binary: initlist88.s
  group: GRPSERIAL
test_initlist88_5760:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist88.C'
    sources:
      binary: initlist88.s
  group: GRPSERIAL
test_initlist89_2002:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist89.C'
    sources:
      binary: initlist89.s
  group: GRPSERIAL
test_initlist89_2003:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist89.C'
    sources:
      binary: initlist89.s
  group: GRPSERIAL
test_initlist89_5761:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist89.C'
    sources:
      binary: initlist89.s
  group: GRPSERIAL
test_initlist89_5762:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist89.C'
    sources:
      binary: initlist89.s
  group: GRPSERIAL
test_initlist8_1982:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist8.C'
    sources:
      binary: initlist8.s
  group: GRPSERIAL
test_initlist8_1983:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist8.C'
    sources:
      binary: initlist8.s
  group: GRPSERIAL
test_initlist8_5741:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist8.C'
    sources:
      binary: initlist8.s
  group: GRPSERIAL
test_initlist8_5742:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist8.C'
    sources:
      binary: initlist8.s
  group: GRPSERIAL
test_initlist90_2006:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist90.C'
    sources:
      binary: ./initlist90.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist90_2007:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist90.C'
    sources:
      binary: ./initlist90.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist90_5765:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist90.C'
    sources:
      binary: ./initlist90.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist90_5766:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist90.C'
    sources:
      binary: ./initlist90.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist91_2008:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist91.C'
    sources:
      binary: initlist91.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist91_2009:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist91.C'
    sources:
      binary: initlist91.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist91_5767:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist91.C'
    sources:
      binary: initlist91.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist91_5768:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist91.C'
    sources:
      binary: initlist91.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_initlist92_2010:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist92.C'
    sources:
      binary: ./initlist92.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist92_2011:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist92.C'
    sources:
      binary: ./initlist92.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist92_5769:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist92.C'
    sources:
      binary: ./initlist92.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist92_5770:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist92.C'
    sources:
      binary: ./initlist92.exe
  group: GRPSERIAL
  run:
    cwd: .
test_initlist93_2012:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist93.C'
    sources:
      binary: initlist93.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("definition of
          std::initializer_list does not match")[^\n]*\n?)+'
test_initlist93_2013:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist93.C'
    sources:
      binary: initlist93.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("definition of
          std::initializer_list does not match")[^\n]*\n?)+'
test_initlist93_5771:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist93.C'
    sources:
      binary: initlist93.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("definition of
          std::initializer_list does not match")[^\n]*\n?)+'
test_initlist93_5772:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist93.C'
    sources:
      binary: initlist93.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("definition of
          std::initializer_list does not match")[^\n]*\n?)+'
test_initlist94_2014:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist94.C'
    sources:
      binary: initlist94.s
  group: GRPSERIAL
test_initlist94_2015:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist94.C'
    sources:
      binary: initlist94.s
  group: GRPSERIAL
test_initlist94_5773:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist94.C'
    sources:
      binary: initlist94.s
  group: GRPSERIAL
test_initlist94_5774:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist94.C'
    sources:
      binary: initlist94.s
  group: GRPSERIAL
test_initlist95_2016:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist95.C'
    sources:
      binary: initlist95.s
  group: GRPSERIAL
test_initlist95_2017:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist95.C'
    sources:
      binary: initlist95.s
  group: GRPSERIAL
test_initlist95_5775:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist95.C'
    sources:
      binary: initlist95.s
  group: GRPSERIAL
test_initlist95_5776:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist95.C'
    sources:
      binary: initlist95.s
  group: GRPSERIAL
test_initlist96_2018:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist96.C'
    sources:
      binary: initlist96.s
  group: GRPSERIAL
test_initlist96_2019:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist96.C'
    sources:
      binary: initlist96.s
  group: GRPSERIAL
test_initlist96_5777:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist96.C'
    sources:
      binary: initlist96.s
  group: GRPSERIAL
test_initlist96_5778:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist96.C'
    sources:
      binary: initlist96.s
  group: GRPSERIAL
test_initlist97_2020:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist97.C'
    sources:
      binary: initlist97.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_initlist97_2021:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist97.C'
    sources:
      binary: initlist97.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_initlist97_5779:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist97.C'
    sources:
      binary: initlist97.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_initlist97_5780:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist97.C'
    sources:
      binary: initlist97.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_initlist9_2004:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist9.C'
    sources:
      binary: initlist9.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
test_initlist9_2005:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist9.C'
    sources:
      binary: initlist9.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
test_initlist9_5763:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist9.C'
    sources:
      binary: initlist9.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
test_initlist9_5764:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/initlist9.C'
    sources:
      binary: initlist9.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use")[^\n]*\n?)+'
test_inline-ns1_2022:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns1.C'
    sources:
      binary: inline-ns1.s
  group: GRPSERIAL
test_inline-ns1_2023:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns1.C'
    sources:
      binary: inline-ns1.s
  group: GRPSERIAL
test_inline-ns1_5781:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns1.C'
    sources:
      binary: inline-ns1.s
  group: GRPSERIAL
test_inline-ns1_5782:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns1.C'
    sources:
      binary: inline-ns1.s
  group: GRPSERIAL
test_inline-ns2_2024:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns2.C'
    sources:
      binary: inline-ns2.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_inline-ns2_2025:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns2.C'
    sources:
      binary: inline-ns2.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_inline-ns2_5783:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns2.C'
    sources:
      binary: inline-ns2.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_inline-ns2_5784:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns2.C'
    sources:
      binary: inline-ns2.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_inline-ns3_2026:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns3.C'
    sources:
      binary: inline-ns3.s
  group: GRPSERIAL
test_inline-ns3_2027:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns3.C'
    sources:
      binary: inline-ns3.s
  group: GRPSERIAL
test_inline-ns3_5785:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns3.C'
    sources:
      binary: inline-ns3.s
  group: GRPSERIAL
test_inline-ns3_5786:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns3.C'
    sources:
      binary: inline-ns3.s
  group: GRPSERIAL
test_inline-ns4_2028:
  build:
    cflags: "-std=gnu++98 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns4.C'
    sources:
      binary: inline-ns4.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("inline namespaces")[^\n]*\n?)+'
test_inline-ns4_5787:
  build:
    cflags: "-std=gnu++98 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns4.C'
    sources:
      binary: inline-ns4.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("inline namespaces")[^\n]*\n?)+'
test_inline-ns5_2029:
  build:
    cflags: "-std=gnu++98 -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns5.C'
    sources:
      binary: inline-ns5.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inline namespaces")[^\n]*\n?)+'
test_inline-ns5_5788:
  build:
    cflags: "-std=gnu++98 -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns5.C'
    sources:
      binary: inline-ns5.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inline namespaces")[^\n]*\n?)+'
test_inline-ns6_2030:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns6.C'
    sources:
      binary: inline-ns6.s
  group: GRPSERIAL
test_inline-ns6_2031:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns6.C'
    sources:
      binary: inline-ns6.s
  group: GRPSERIAL
test_inline-ns6_2032:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns6.C'
    sources:
      binary: inline-ns6.s
  group: GRPSERIAL
test_inline-ns6_5789:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns6.C'
    sources:
      binary: inline-ns6.s
  group: GRPSERIAL
test_inline-ns6_5790:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns6.C'
    sources:
      binary: inline-ns6.s
  group: GRPSERIAL
test_inline-ns6_5791:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns6.C'
    sources:
      binary: inline-ns6.s
  group: GRPSERIAL
test_inline-ns7_2033:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns7.C'
    sources:
      binary: inline-ns7.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("(ambiguous|does
          not name a type)")[^\n]*\n?)+'
test_inline-ns7_2034:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns7.C'
    sources:
      binary: inline-ns7.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("(ambiguous|does
          not name a type)")[^\n]*\n?)+'
test_inline-ns7_2035:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns7.C'
    sources:
      binary: inline-ns7.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("(ambiguous|does
          not name a type)")[^\n]*\n?)+'
test_inline-ns7_5792:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns7.C'
    sources:
      binary: inline-ns7.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("(ambiguous|does
          not name a type)")[^\n]*\n?)+'
test_inline-ns7_5793:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns7.C'
    sources:
      binary: inline-ns7.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("(ambiguous|does
          not name a type)")[^\n]*\n?)+'
test_inline-ns7_5794:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns7.C'
    sources:
      binary: inline-ns7.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("(ambiguous|does
          not name a type)")[^\n]*\n?)+'
test_inline-ns8_2036:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns8.C'
    sources:
      binary: inline-ns8.s
  group: GRPSERIAL
test_inline-ns8_2037:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns8.C'
    sources:
      binary: inline-ns8.s
  group: GRPSERIAL
test_inline-ns8_2038:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns8.C'
    sources:
      binary: inline-ns8.s
  group: GRPSERIAL
test_inline-ns8_5795:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns8.C'
    sources:
      binary: inline-ns8.s
  group: GRPSERIAL
test_inline-ns8_5796:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns8.C'
    sources:
      binary: inline-ns8.s
  group: GRPSERIAL
test_inline-ns8_5797:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns8.C'
    sources:
      binary: inline-ns8.s
  group: GRPSERIAL
test_inline-ns9_2039:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns9.C'
    sources:
      binary: inline-ns9.s
  group: GRPSERIAL
test_inline-ns9_2040:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns9.C'
    sources:
      binary: inline-ns9.s
  group: GRPSERIAL
test_inline-ns9_2041:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns9.C'
    sources:
      binary: inline-ns9.s
  group: GRPSERIAL
test_inline-ns9_5798:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns9.C'
    sources:
      binary: inline-ns9.s
  group: GRPSERIAL
test_inline-ns9_5799:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns9.C'
    sources:
      binary: inline-ns9.s
  group: GRPSERIAL
test_inline-ns9_5800:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/inline-ns9.C'
    sources:
      binary: inline-ns9.s
  group: GRPSERIAL
test_iop_2042:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/iop.C'
    sources:
      binary: iop.s
  group: GRPSERIAL
test_iop_2043:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/iop.C'
    sources:
      binary: iop.s
  group: GRPSERIAL
test_iop_5801:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/iop.C'
    sources:
      binary: iop.s
  group: GRPSERIAL
test_iop_5802:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/iop.C'
    sources:
      binary: iop.s
  group: GRPSERIAL
test_linkage2_2044:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/linkage2.C'
    sources:
      binary: linkage2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
test_linkage2_2045:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/linkage2.C'
    sources:
      binary: linkage2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
test_linkage2_5803:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/linkage2.C'
    sources:
      binary: linkage2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
test_linkage2_5804:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/linkage2.C'
    sources:
      binary: linkage2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
test_local-targ1_2046:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/local-targ1.C'
    sources:
      binary: local-targ1.s
  group: GRPSERIAL
test_local-targ1_2047:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/local-targ1.C'
    sources:
      binary: local-targ1.s
  group: GRPSERIAL
test_local-targ1_5805:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/local-targ1.C'
    sources:
      binary: local-targ1.s
  group: GRPSERIAL
test_local-targ1_5806:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/local-targ1.C'
    sources:
      binary: local-targ1.s
  group: GRPSERIAL
test_local-type1_2048:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/local-type1.C'
    sources:
      binary: local-type1.s
  group: GRPSERIAL
test_local-type1_2049:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/local-type1.C'
    sources:
      binary: local-type1.s
  group: GRPSERIAL
test_local-type1_5807:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/local-type1.C'
    sources:
      binary: local-type1.s
  group: GRPSERIAL
test_local-type1_5808:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/local-type1.C'
    sources:
      binary: local-type1.s
  group: GRPSERIAL
test_long_long_2050:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/long_long.C'
    sources:
      binary: long_long.s
  group: GRPSERIAL
test_long_long_2051:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/long_long.C'
    sources:
      binary: long_long.s
  group: GRPSERIAL
test_long_long_5809:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/long_long.C'
    sources:
      binary: long_long.s
  group: GRPSERIAL
test_long_long_5810:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/long_long.C'
    sources:
      binary: long_long.s
  group: GRPSERIAL
test_mem-init-aggr1_2052:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/mem-init-aggr1.C'
    sources:
      binary: mem-init-aggr1.s
  group: GRPSERIAL
test_mem-init-aggr1_2053:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/mem-init-aggr1.C'
    sources:
      binary: mem-init-aggr1.s
  group: GRPSERIAL
test_mem-init-aggr1_5811:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/mem-init-aggr1.C'
    sources:
      binary: mem-init-aggr1.s
  group: GRPSERIAL
test_mem-init-aggr1_5812:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/mem-init-aggr1.C'
    sources:
      binary: mem-init-aggr1.s
  group: GRPSERIAL
test_move1_2054:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/move1.C'
    sources:
      binary: move1.s
  group: GRPSERIAL
test_move1_2055:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/move1.C'
    sources:
      binary: move1.s
  group: GRPSERIAL
test_move1_5813:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/move1.C'
    sources:
      binary: move1.s
  group: GRPSERIAL
test_move1_5814:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/move1.C'
    sources:
      binary: move1.s
  group: GRPSERIAL
test_mutable1_2056:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/mutable1.C'
    sources:
      binary: ./mutable1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_mutable1_2057:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/mutable1.C'
    sources:
      binary: ./mutable1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_mutable1_5815:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/mutable1.C'
    sources:
      binary: ./mutable1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_mutable1_5816:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/mutable1.C'
    sources:
      binary: ./mutable1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_named_2058:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/named.C'
    sources:
      binary: named.exe
  group: GRPSERIAL
  run:
    cwd: .
test_named_2059:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/named.C'
    sources:
      binary: named.exe
  group: GRPSERIAL
  run:
    cwd: .
test_named_5817:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/named.C'
    sources:
      binary: named.exe
  group: GRPSERIAL
  run:
    cwd: .
test_named_5818:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/named.C'
    sources:
      binary: named.exe
  group: GRPSERIAL
  run:
    cwd: .
test_named_refs_2060:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/named_refs.C'
    sources:
      binary: named_refs.s
  group: GRPSERIAL
test_named_refs_2061:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/named_refs.C'
    sources:
      binary: named_refs.s
  group: GRPSERIAL
test_named_refs_5819:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/named_refs.C'
    sources:
      binary: named_refs.s
  group: GRPSERIAL
test_named_refs_5820:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/named_refs.C'
    sources:
      binary: named_refs.s
  group: GRPSERIAL
test_new-auto1_2062:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/new-auto1.C'
    sources:
      binary: new-auto1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:initialization
          of new-expression for type \''auto\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:initialization
          of new-expression for type \''auto\''")[^\n]*\n?)+'
test_new-auto1_2063:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/new-auto1.C'
    sources:
      binary: new-auto1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:initialization
          of new-expression for type \''auto\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:initialization
          of new-expression for type \''auto\''")[^\n]*\n?)+'
test_new-auto1_5821:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/new-auto1.C'
    sources:
      binary: new-auto1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:initialization
          of new-expression for type \''auto\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:initialization
          of new-expression for type \''auto\''")[^\n]*\n?)+'
test_new-auto1_5822:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/new-auto1.C'
    sources:
      binary: new-auto1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:initialization
          of new-expression for type \''auto\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("22:initialization
          of new-expression for type \''auto\''")[^\n]*\n?)+'
test_new1_2064:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/new1.C'
    sources:
      binary: new1.s
  group: GRPSERIAL
test_new1_2065:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/new1.C'
    sources:
      binary: new1.s
  group: GRPSERIAL
test_new1_5823:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/new1.C'
    sources:
      binary: new1.s
  group: GRPSERIAL
test_new1_5824:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/new1.C'
    sources:
      binary: new1.s
  group: GRPSERIAL
test_no-weak1_2066:
  build:
    cflags: "-std=gnu++11 -fno-weak\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/no-weak1.C'
    sources:
      binary: no-weak1.s
  group: GRPSERIAL
test_no-weak1_2067:
  build:
    cflags: "-std=gnu++14 -fno-weak\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/no-weak1.C'
    sources:
      binary: no-weak1.s
  group: GRPSERIAL
test_no-weak1_5825:
  build:
    cflags: "-std=gnu++11 -fno-weak\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/no-weak1.C'
    sources:
      binary: no-weak1.s
  group: GRPSERIAL
test_no-weak1_5826:
  build:
    cflags: "-std=gnu++14 -fno-weak\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/no-weak1.C'
    sources:
      binary: no-weak1.s
  group: GRPSERIAL
test_noexcept01_2068:
  build:
    cflags: "-std=gnu++11 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept01.C'
    sources:
      binary: noexcept01.s
  group: GRPSERIAL
test_noexcept01_2069:
  build:
    cflags: "-std=gnu++14 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept01.C'
    sources:
      binary: noexcept01.s
  group: GRPSERIAL
test_noexcept01_5827:
  build:
    cflags: "-std=gnu++11 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept01.C'
    sources:
      binary: noexcept01.s
  group: GRPSERIAL
test_noexcept01_5828:
  build:
    cflags: "-std=gnu++14 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept01.C'
    sources:
      binary: noexcept01.s
  group: GRPSERIAL
test_noexcept02_2070:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept02.C'
    sources:
      binary: noexcept02.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception")[^\n]*\n?)+'
test_noexcept02_2071:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept02.C'
    sources:
      binary: noexcept02.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception")[^\n]*\n?)+'
test_noexcept02_5829:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept02.C'
    sources:
      binary: noexcept02.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception")[^\n]*\n?)+'
test_noexcept02_5830:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept02.C'
    sources:
      binary: noexcept02.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception")[^\n]*\n?)+'
test_noexcept03_2072:
  build:
    cflags: -std=gnu++11 -Wnoexcept
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept03.C'
    sources:
      binary: ./noexcept03.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("false")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("does not throw")[^\n]*\n?)+'
test_noexcept03_2073:
  build:
    cflags: -std=gnu++14 -Wnoexcept
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept03.C'
    sources:
      binary: ./noexcept03.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("false")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("does not throw")[^\n]*\n?)+'
test_noexcept03_5831:
  build:
    cflags: -std=gnu++11 -Wnoexcept
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept03.C'
    sources:
      binary: ./noexcept03.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("false")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("does not throw")[^\n]*\n?)+'
test_noexcept03_5832:
  build:
    cflags: -std=gnu++14 -Wnoexcept
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept03.C'
    sources:
      binary: ./noexcept03.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("false")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("does not throw")[^\n]*\n?)+'
test_noexcept04_2074:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept04.C'
    sources:
      binary: ./noexcept04.exe
  group: GRPSERIAL
  run:
    cwd: .
test_noexcept04_2075:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept04.C'
    sources:
      binary: ./noexcept04.exe
  group: GRPSERIAL
  run:
    cwd: .
test_noexcept04_5833:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept04.C'
    sources:
      binary: ./noexcept04.exe
  group: GRPSERIAL
  run:
    cwd: .
test_noexcept04_5834:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept04.C'
    sources:
      binary: ./noexcept04.exe
  group: GRPSERIAL
  run:
    cwd: .
test_noexcept05_2076:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept05.C'
    sources:
      binary: noexcept05.s
  group: GRPSERIAL
test_noexcept05_2077:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept05.C'
    sources:
      binary: noexcept05.s
  group: GRPSERIAL
test_noexcept05_5835:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept05.C'
    sources:
      binary: noexcept05.s
  group: GRPSERIAL
test_noexcept05_5836:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept05.C'
    sources:
      binary: noexcept05.s
  group: GRPSERIAL
test_noexcept06_2078:
  build:
    cflags: -std=gnu++11 -Wno-terminate
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept06.C'
    sources:
      binary: ./noexcept06.exe
  group: GRPSERIAL
  run:
    cwd: .
test_noexcept06_2079:
  build:
    cflags: -std=gnu++14 -Wno-terminate
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept06.C'
    sources:
      binary: ./noexcept06.exe
  group: GRPSERIAL
  run:
    cwd: .
test_noexcept06_5837:
  build:
    cflags: -std=gnu++11 -Wno-terminate
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept06.C'
    sources:
      binary: ./noexcept06.exe
  group: GRPSERIAL
  run:
    cwd: .
test_noexcept06_5838:
  build:
    cflags: -std=gnu++14 -Wno-terminate
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept06.C'
    sources:
      binary: ./noexcept06.exe
  group: GRPSERIAL
  run:
    cwd: .
test_noexcept07_2080:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept07.C'
    sources:
      binary: ./noexcept07.exe
  group: GRPSERIAL
  run:
    cwd: .
test_noexcept07_2081:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept07.C'
    sources:
      binary: ./noexcept07.exe
  group: GRPSERIAL
  run:
    cwd: .
test_noexcept07_5839:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept07.C'
    sources:
      binary: ./noexcept07.exe
  group: GRPSERIAL
  run:
    cwd: .
test_noexcept07_5840:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept07.C'
    sources:
      binary: ./noexcept07.exe
  group: GRPSERIAL
  run:
    cwd: .
test_noexcept08_2082:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept08.C'
    sources:
      binary: noexcept08.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
test_noexcept08_2083:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept08.C'
    sources:
      binary: noexcept08.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
test_noexcept08_5841:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept08.C'
    sources:
      binary: noexcept08.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
test_noexcept08_5842:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept08.C'
    sources:
      binary: noexcept08.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("looser")[^\n]*\n?)+'
test_noexcept09_2084:
  build:
    cflags: "-std=gnu++11 -Wnoexcept\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept09.C'
    sources:
      binary: noexcept09.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("noexcept")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("does not throw")[^\n]*\n?)+'
test_noexcept09_2085:
  build:
    cflags: "-std=gnu++14 -Wnoexcept\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept09.C'
    sources:
      binary: noexcept09.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("noexcept")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("does not throw")[^\n]*\n?)+'
test_noexcept09_5843:
  build:
    cflags: "-std=gnu++11 -Wnoexcept\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept09.C'
    sources:
      binary: noexcept09.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("noexcept")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("does not throw")[^\n]*\n?)+'
test_noexcept09_5844:
  build:
    cflags: "-std=gnu++14 -Wnoexcept\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept09.C'
    sources:
      binary: noexcept09.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("noexcept")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("does not throw")[^\n]*\n?)+'
test_noexcept10_2086:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept10.C'
    sources:
      binary: noexcept10.s
  group: GRPSERIAL
test_noexcept10_2087:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept10.C'
    sources:
      binary: noexcept10.s
  group: GRPSERIAL
test_noexcept10_5845:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept10.C'
    sources:
      binary: noexcept10.s
  group: GRPSERIAL
test_noexcept10_5846:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept10.C'
    sources:
      binary: noexcept10.s
  group: GRPSERIAL
test_noexcept11_2088:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept11.C'
    sources:
      binary: noexcept11.s
  group: GRPSERIAL
test_noexcept11_2089:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept11.C'
    sources:
      binary: noexcept11.s
  group: GRPSERIAL
test_noexcept11_5847:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept11.C'
    sources:
      binary: noexcept11.s
  group: GRPSERIAL
test_noexcept11_5848:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept11.C'
    sources:
      binary: noexcept11.s
  group: GRPSERIAL
test_noexcept12_2090:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept12.C'
    sources:
      binary: noexcept12.s
  group: GRPSERIAL
test_noexcept12_2091:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept12.C'
    sources:
      binary: noexcept12.s
  group: GRPSERIAL
test_noexcept12_5849:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept12.C'
    sources:
      binary: noexcept12.s
  group: GRPSERIAL
test_noexcept12_5850:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept12.C'
    sources:
      binary: noexcept12.s
  group: GRPSERIAL
test_noexcept13_2092:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept13.C'
    sources:
      binary: noexcept13.s
  group: GRPSERIAL
test_noexcept13_2093:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept13.C'
    sources:
      binary: noexcept13.s
  group: GRPSERIAL
test_noexcept13_5851:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept13.C'
    sources:
      binary: noexcept13.s
  group: GRPSERIAL
test_noexcept13_5852:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept13.C'
    sources:
      binary: noexcept13.s
  group: GRPSERIAL
test_noexcept14_2094:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept14.C'
    sources:
      binary: noexcept14.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_noexcept14_2095:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept14.C'
    sources:
      binary: noexcept14.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_noexcept14_5853:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept14.C'
    sources:
      binary: noexcept14.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_noexcept14_5854:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept14.C'
    sources:
      binary: noexcept14.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_noexcept15_2096:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept15.C'
    sources:
      binary: noexcept15.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_noexcept15_2097:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept15.C'
    sources:
      binary: noexcept15.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_noexcept15_5855:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept15.C'
    sources:
      binary: noexcept15.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_noexcept15_5856:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept15.C'
    sources:
      binary: noexcept15.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_noexcept16_2098:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept16.C'
    sources:
      binary: noexcept16.s
  group: GRPSERIAL
test_noexcept16_2099:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept16.C'
    sources:
      binary: noexcept16.s
  group: GRPSERIAL
test_noexcept16_5857:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept16.C'
    sources:
      binary: noexcept16.s
  group: GRPSERIAL
test_noexcept16_5858:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept16.C'
    sources:
      binary: noexcept16.s
  group: GRPSERIAL
test_noexcept17_2100:
  build:
    cflags: "-std=gnu++11 -Wno-terminate\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept17.C'
    sources:
      binary: noexcept17.s
  group: GRPSERIAL
test_noexcept17_2101:
  build:
    cflags: "-std=gnu++14 -Wno-terminate\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept17.C'
    sources:
      binary: noexcept17.s
  group: GRPSERIAL
test_noexcept17_5859:
  build:
    cflags: "-std=gnu++11 -Wno-terminate\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept17.C'
    sources:
      binary: noexcept17.s
  group: GRPSERIAL
test_noexcept17_5860:
  build:
    cflags: "-std=gnu++14 -Wno-terminate\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept17.C'
    sources:
      binary: noexcept17.s
  group: GRPSERIAL
test_noexcept18_2102:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept18.C'
    sources:
      binary: noexcept18.s
  group: GRPSERIAL
test_noexcept18_2103:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept18.C'
    sources:
      binary: noexcept18.s
  group: GRPSERIAL
test_noexcept18_5861:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept18.C'
    sources:
      binary: noexcept18.s
  group: GRPSERIAL
test_noexcept18_5862:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept18.C'
    sources:
      binary: noexcept18.s
  group: GRPSERIAL
test_noexcept19_2104:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept19.C'
    sources:
      binary: noexcept19.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_noexcept19_2105:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept19.C'
    sources:
      binary: noexcept19.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_noexcept19_5863:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept19.C'
    sources:
      binary: noexcept19.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_noexcept19_5864:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept19.C'
    sources:
      binary: noexcept19.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_noexcept20_2106:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept20.C'
    sources:
      binary: noexcept20.s
  group: GRPSERIAL
test_noexcept20_2107:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept20.C'
    sources:
      binary: noexcept20.s
  group: GRPSERIAL
test_noexcept20_5865:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept20.C'
    sources:
      binary: noexcept20.s
  group: GRPSERIAL
test_noexcept20_5866:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept20.C'
    sources:
      binary: noexcept20.s
  group: GRPSERIAL
test_noexcept21_2108:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept21.C'
    sources:
      binary: noexcept21.s
  group: GRPSERIAL
test_noexcept21_2109:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept21.C'
    sources:
      binary: noexcept21.s
  group: GRPSERIAL
test_noexcept21_5867:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept21.C'
    sources:
      binary: noexcept21.s
  group: GRPSERIAL
test_noexcept21_5868:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept21.C'
    sources:
      binary: noexcept21.s
  group: GRPSERIAL
test_noexcept22_2110:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept22.C'
    sources:
      binary: noexcept22.s
  group: GRPSERIAL
test_noexcept22_2111:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept22.C'
    sources:
      binary: noexcept22.s
  group: GRPSERIAL
test_noexcept22_5869:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept22.C'
    sources:
      binary: noexcept22.s
  group: GRPSERIAL
test_noexcept22_5870:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept22.C'
    sources:
      binary: noexcept22.s
  group: GRPSERIAL
test_noexcept23_2112:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept23.C'
    sources:
      binary: noexcept23.s
  group: GRPSERIAL
test_noexcept23_2113:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept23.C'
    sources:
      binary: noexcept23.s
  group: GRPSERIAL
test_noexcept23_5871:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept23.C'
    sources:
      binary: noexcept23.s
  group: GRPSERIAL
test_noexcept23_5872:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept23.C'
    sources:
      binary: noexcept23.s
  group: GRPSERIAL
test_noexcept24_2114:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept24.C'
    sources:
      binary: noexcept24.s
  group: GRPSERIAL
test_noexcept24_2115:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept24.C'
    sources:
      binary: noexcept24.s
  group: GRPSERIAL
test_noexcept24_5873:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept24.C'
    sources:
      binary: noexcept24.s
  group: GRPSERIAL
test_noexcept24_5874:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept24.C'
    sources:
      binary: noexcept24.s
  group: GRPSERIAL
test_noexcept25_2116:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept25.C'
    sources:
      binary: noexcept25.s
  group: GRPSERIAL
test_noexcept25_2117:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept25.C'
    sources:
      binary: noexcept25.s
  group: GRPSERIAL
test_noexcept25_5875:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept25.C'
    sources:
      binary: noexcept25.s
  group: GRPSERIAL
test_noexcept25_5876:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept25.C'
    sources:
      binary: noexcept25.s
  group: GRPSERIAL
test_noexcept26_2118:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept26.C'
    sources:
      binary: noexcept26.s
  group: GRPSERIAL
test_noexcept26_2119:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept26.C'
    sources:
      binary: noexcept26.s
  group: GRPSERIAL
test_noexcept26_5877:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept26.C'
    sources:
      binary: noexcept26.s
  group: GRPSERIAL
test_noexcept26_5878:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept26.C'
    sources:
      binary: noexcept26.s
  group: GRPSERIAL
test_noexcept27_2120:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept27.C'
    sources:
      binary: noexcept27.s
  group: GRPSERIAL
test_noexcept27_2121:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept27.C'
    sources:
      binary: noexcept27.s
  group: GRPSERIAL
test_noexcept27_5879:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept27.C'
    sources:
      binary: noexcept27.s
  group: GRPSERIAL
test_noexcept27_5880:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept27.C'
    sources:
      binary: noexcept27.s
  group: GRPSERIAL
test_noexcept28_2122:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept28.C'
    sources:
      binary: noexcept28.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception")[^\n]*\n?)+'
test_noexcept28_2123:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept28.C'
    sources:
      binary: noexcept28.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception")[^\n]*\n?)+'
test_noexcept28_5881:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept28.C'
    sources:
      binary: noexcept28.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception")[^\n]*\n?)+'
test_noexcept28_5882:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept28.C'
    sources:
      binary: noexcept28.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception")[^\n]*\n?)+'
test_noexcept29_2124:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -fno-exceptions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept29.C'
    sources:
      binary: noexcept29.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception
          specifier")[^\n]*\n?)+'
test_noexcept29_2125:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -fno-exceptions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept29.C'
    sources:
      binary: noexcept29.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception
          specifier")[^\n]*\n?)+'
test_noexcept29_5883:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -fno-exceptions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept29.C'
    sources:
      binary: noexcept29.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception
          specifier")[^\n]*\n?)+'
test_noexcept29_5884:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -fno-exceptions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/noexcept29.C'
    sources:
      binary: noexcept29.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("different exception
          specifier")[^\n]*\n?)+'
test_nolinkage1_2126:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nolinkage1.C'
    sources:
      binary: nolinkage1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nolinkage1_2127:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nolinkage1.C'
    sources:
      binary: nolinkage1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nolinkage1_5885:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nolinkage1.C'
    sources:
      binary: nolinkage1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nolinkage1_5886:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nolinkage1.C'
    sources:
      binary: nolinkage1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nontype1_2128:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nontype1.C'
    sources:
      binary: nontype1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_nontype1_2129:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nontype1.C'
    sources:
      binary: nontype1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_nontype1_5887:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nontype1.C'
    sources:
      binary: nontype1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_nontype1_5888:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nontype1.C'
    sources:
      binary: nontype1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_not_special_2130:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/not_special.C'
    sources:
      binary: not_special.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_not_special_2131:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/not_special.C'
    sources:
      binary: not_special.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_not_special_5889:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/not_special.C'
    sources:
      binary: not_special.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_not_special_5890:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/not_special.C'
    sources:
      binary: not_special.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_nsdmi-aggr1_2132:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-aggr1.C'
    sources:
      binary: nsdmi-aggr1.s
  group: GRPSERIAL
test_nsdmi-aggr1_2133:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-aggr1.C'
    sources:
      binary: nsdmi-aggr1.s
  group: GRPSERIAL
test_nsdmi-aggr1_5891:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-aggr1.C'
    sources:
      binary: nsdmi-aggr1.s
  group: GRPSERIAL
test_nsdmi-aggr1_5892:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-aggr1.C'
    sources:
      binary: nsdmi-aggr1.s
  group: GRPSERIAL
test_nsdmi-anon-struct1_2134:
  build:
    cflags: "-std=gnu++11 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-anon-struct1.C'
    sources:
      binary: nsdmi-anon-struct1.s
  group: GRPSERIAL
  validate:
    match:
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple fields")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple fields")[^\n]*\n?)+'
test_nsdmi-anon-struct1_2135:
  build:
    cflags: "-std=gnu++14 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-anon-struct1.C'
    sources:
      binary: nsdmi-anon-struct1.s
  group: GRPSERIAL
  validate:
    match:
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple fields")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple fields")[^\n]*\n?)+'
test_nsdmi-anon-struct1_5893:
  build:
    cflags: "-std=gnu++11 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-anon-struct1.C'
    sources:
      binary: nsdmi-anon-struct1.s
  group: GRPSERIAL
  validate:
    match:
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple fields")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple fields")[^\n]*\n?)+'
test_nsdmi-anon-struct1_5894:
  build:
    cflags: "-std=gnu++14 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-anon-struct1.C'
    sources:
      binary: nsdmi-anon-struct1.s
  group: GRPSERIAL
  validate:
    match:
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple fields")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple fields")[^\n]*\n?)+'
test_nsdmi-const1_2136:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-const1.C'
    sources:
      binary: nsdmi-const1.s
  group: GRPSERIAL
test_nsdmi-const1_2137:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-const1.C'
    sources:
      binary: nsdmi-const1.s
  group: GRPSERIAL
test_nsdmi-const1_5895:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-const1.C'
    sources:
      binary: nsdmi-const1.s
  group: GRPSERIAL
test_nsdmi-const1_5896:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-const1.C'
    sources:
      binary: nsdmi-const1.s
  group: GRPSERIAL
test_nsdmi-defer1_2138:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer1.C'
    sources:
      binary: nsdmi-defer1.s
  group: GRPSERIAL
test_nsdmi-defer1_2139:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer1.C'
    sources:
      binary: nsdmi-defer1.s
  group: GRPSERIAL
test_nsdmi-defer1_5897:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer1.C'
    sources:
      binary: nsdmi-defer1.s
  group: GRPSERIAL
test_nsdmi-defer1_5898:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer1.C'
    sources:
      binary: nsdmi-defer1.s
  group: GRPSERIAL
test_nsdmi-defer2_2140:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer2.C'
    sources:
      binary: nsdmi-defer2.s
  group: GRPSERIAL
test_nsdmi-defer2_2141:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer2.C'
    sources:
      binary: nsdmi-defer2.s
  group: GRPSERIAL
test_nsdmi-defer2_5899:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer2.C'
    sources:
      binary: nsdmi-defer2.s
  group: GRPSERIAL
test_nsdmi-defer2_5900:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer2.C'
    sources:
      binary: nsdmi-defer2.s
  group: GRPSERIAL
test_nsdmi-defer3_2142:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer3.C'
    sources:
      binary: nsdmi-defer3.s
  group: GRPSERIAL
test_nsdmi-defer3_2143:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer3.C'
    sources:
      binary: nsdmi-defer3.s
  group: GRPSERIAL
test_nsdmi-defer3_5901:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer3.C'
    sources:
      binary: nsdmi-defer3.s
  group: GRPSERIAL
test_nsdmi-defer3_5902:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer3.C'
    sources:
      binary: nsdmi-defer3.s
  group: GRPSERIAL
test_nsdmi-defer4_2144:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer4.C'
    sources:
      binary: ./nsdmi-defer4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-defer4_2145:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer4.C'
    sources:
      binary: ./nsdmi-defer4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-defer4_5903:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer4.C'
    sources:
      binary: ./nsdmi-defer4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-defer4_5904:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer4.C'
    sources:
      binary: ./nsdmi-defer4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-defer5_2146:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer5.C'
    sources:
      binary: nsdmi-defer5.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_nsdmi-defer5_2147:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer5.C'
    sources:
      binary: nsdmi-defer5.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_nsdmi-defer5_5905:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer5.C'
    sources:
      binary: nsdmi-defer5.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_nsdmi-defer5_5906:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer5.C'
    sources:
      binary: nsdmi-defer5.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_nsdmi-defer6_2148:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer6.C'
    sources:
      binary: nsdmi-defer6.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor required")[^\n]*\n?)+'
test_nsdmi-defer6_2149:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer6.C'
    sources:
      binary: nsdmi-defer6.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor required")[^\n]*\n?)+'
test_nsdmi-defer6_5907:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer6.C'
    sources:
      binary: nsdmi-defer6.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor required")[^\n]*\n?)+'
test_nsdmi-defer6_5908:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-defer6.C'
    sources:
      binary: nsdmi-defer6.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor required")[^\n]*\n?)+'
test_nsdmi-dr1397_2150:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-dr1397.C'
    sources:
      binary: nsdmi-dr1397.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_nsdmi-dr1397_2151:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-dr1397.C'
    sources:
      binary: nsdmi-dr1397.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_nsdmi-dr1397_5909:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-dr1397.C'
    sources:
      binary: nsdmi-dr1397.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_nsdmi-dr1397_5910:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-dr1397.C'
    sources:
      binary: nsdmi-dr1397.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_nsdmi-eh1_2152:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-eh1.C'
    sources:
      binary: ./nsdmi-eh1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-eh1_2153:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-eh1.C'
    sources:
      binary: ./nsdmi-eh1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-eh1_5911:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-eh1.C'
    sources:
      binary: ./nsdmi-eh1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-eh1_5912:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-eh1.C'
    sources:
      binary: ./nsdmi-eh1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-list1_2154:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list1.C'
    sources:
      binary: nsdmi-list1.s
  group: GRPSERIAL
test_nsdmi-list1_2155:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list1.C'
    sources:
      binary: nsdmi-list1.s
  group: GRPSERIAL
test_nsdmi-list1_5913:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list1.C'
    sources:
      binary: nsdmi-list1.s
  group: GRPSERIAL
test_nsdmi-list1_5914:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list1.C'
    sources:
      binary: nsdmi-list1.s
  group: GRPSERIAL
test_nsdmi-list2_2156:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list2.C'
    sources:
      binary: nsdmi-list2.s
  group: GRPSERIAL
test_nsdmi-list2_2157:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list2.C'
    sources:
      binary: nsdmi-list2.s
  group: GRPSERIAL
test_nsdmi-list2_5915:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list2.C'
    sources:
      binary: nsdmi-list2.s
  group: GRPSERIAL
test_nsdmi-list2_5916:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list2.C'
    sources:
      binary: nsdmi-list2.s
  group: GRPSERIAL
test_nsdmi-list3_2158:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list3.C'
    sources:
      binary: nsdmi-list3.s
  group: GRPSERIAL
test_nsdmi-list3_2159:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list3.C'
    sources:
      binary: nsdmi-list3.s
  group: GRPSERIAL
test_nsdmi-list3_5917:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list3.C'
    sources:
      binary: nsdmi-list3.s
  group: GRPSERIAL
test_nsdmi-list3_5918:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list3.C'
    sources:
      binary: nsdmi-list3.s
  group: GRPSERIAL
test_nsdmi-list4_2160:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list4.C'
    sources:
      binary: nsdmi-list4.s
  group: GRPSERIAL
test_nsdmi-list4_2161:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list4.C'
    sources:
      binary: nsdmi-list4.s
  group: GRPSERIAL
test_nsdmi-list4_5919:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list4.C'
    sources:
      binary: nsdmi-list4.s
  group: GRPSERIAL
test_nsdmi-list4_5920:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-list4.C'
    sources:
      binary: nsdmi-list4.s
  group: GRPSERIAL
test_nsdmi-local_2162:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-local.C'
    sources:
      binary: nsdmi-local.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("local variable")[^\n]*\n?)+'
test_nsdmi-local_2163:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-local.C'
    sources:
      binary: nsdmi-local.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("local variable")[^\n]*\n?)+'
test_nsdmi-local_5921:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-local.C'
    sources:
      binary: nsdmi-local.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("local variable")[^\n]*\n?)+'
test_nsdmi-local_5922:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-local.C'
    sources:
      binary: nsdmi-local.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("local variable")[^\n]*\n?)+'
test_nsdmi-sizeof_2164:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-sizeof.C'
    sources:
      binary: nsdmi-sizeof.s
  group: GRPSERIAL
test_nsdmi-sizeof_2165:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-sizeof.C'
    sources:
      binary: nsdmi-sizeof.s
  group: GRPSERIAL
test_nsdmi-sizeof_5923:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-sizeof.C'
    sources:
      binary: nsdmi-sizeof.s
  group: GRPSERIAL
test_nsdmi-sizeof_5924:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-sizeof.C'
    sources:
      binary: nsdmi-sizeof.s
  group: GRPSERIAL
test_nsdmi-template10_2168:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template10.C'
    sources:
      binary: nsdmi-template10.s
  group: GRPSERIAL
test_nsdmi-template10_2169:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template10.C'
    sources:
      binary: nsdmi-template10.s
  group: GRPSERIAL
test_nsdmi-template10_5927:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template10.C'
    sources:
      binary: nsdmi-template10.s
  group: GRPSERIAL
test_nsdmi-template10_5928:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template10.C'
    sources:
      binary: nsdmi-template10.s
  group: GRPSERIAL
test_nsdmi-template11_2170:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template11.C'
    sources:
      binary: nsdmi-template11.s
  group: GRPSERIAL
test_nsdmi-template11_2171:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template11.C'
    sources:
      binary: nsdmi-template11.s
  group: GRPSERIAL
test_nsdmi-template11_5929:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template11.C'
    sources:
      binary: nsdmi-template11.s
  group: GRPSERIAL
test_nsdmi-template11_5930:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template11.C'
    sources:
      binary: nsdmi-template11.s
  group: GRPSERIAL
test_nsdmi-template12_2172:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template12.C'
    sources:
      binary: nsdmi-template12.s
  group: GRPSERIAL
test_nsdmi-template12_2173:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template12.C'
    sources:
      binary: nsdmi-template12.s
  group: GRPSERIAL
test_nsdmi-template12_5931:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template12.C'
    sources:
      binary: nsdmi-template12.s
  group: GRPSERIAL
test_nsdmi-template12_5932:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template12.C'
    sources:
      binary: nsdmi-template12.s
  group: GRPSERIAL
test_nsdmi-template13_2174:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template13.C'
    sources:
      binary: nsdmi-template13.s
  group: GRPSERIAL
test_nsdmi-template13_2175:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template13.C'
    sources:
      binary: nsdmi-template13.s
  group: GRPSERIAL
test_nsdmi-template13_5933:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template13.C'
    sources:
      binary: nsdmi-template13.s
  group: GRPSERIAL
test_nsdmi-template13_5934:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template13.C'
    sources:
      binary: nsdmi-template13.s
  group: GRPSERIAL
test_nsdmi-template14_2176:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template14.C'
    sources:
      binary: nsdmi-template14.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("recursive instantiation
          of non-static data")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("recursive instantiation
          of non-static data")[^\n]*\n?)+'
test_nsdmi-template14_2177:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template14.C'
    sources:
      binary: nsdmi-template14.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("recursive instantiation
          of non-static data")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("recursive instantiation
          of non-static data")[^\n]*\n?)+'
test_nsdmi-template14_5935:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template14.C'
    sources:
      binary: nsdmi-template14.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("recursive instantiation
          of non-static data")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("recursive instantiation
          of non-static data")[^\n]*\n?)+'
test_nsdmi-template14_5936:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template14.C'
    sources:
      binary: nsdmi-template14.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("recursive instantiation
          of non-static data")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("recursive instantiation
          of non-static data")[^\n]*\n?)+'
test_nsdmi-template15_2178:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template15.C'
    sources:
      binary: nsdmi-template15.s
  group: GRPSERIAL
test_nsdmi-template15_2179:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template15.C'
    sources:
      binary: nsdmi-template15.s
  group: GRPSERIAL
test_nsdmi-template15_5937:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template15.C'
    sources:
      binary: nsdmi-template15.s
  group: GRPSERIAL
test_nsdmi-template15_5938:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template15.C'
    sources:
      binary: nsdmi-template15.s
  group: GRPSERIAL
test_nsdmi-template16_2180:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template16.C'
    sources:
      binary: nsdmi-template16.s
  group: GRPSERIAL
test_nsdmi-template16_2181:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template16.C'
    sources:
      binary: nsdmi-template16.s
  group: GRPSERIAL
test_nsdmi-template16_5939:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template16.C'
    sources:
      binary: nsdmi-template16.s
  group: GRPSERIAL
test_nsdmi-template16_5940:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template16.C'
    sources:
      binary: nsdmi-template16.s
  group: GRPSERIAL
test_nsdmi-template1_2166:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template1.C'
    sources:
      binary: ./nsdmi-template1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-template1_2167:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template1.C'
    sources:
      binary: ./nsdmi-template1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-template1_5925:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template1.C'
    sources:
      binary: ./nsdmi-template1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-template1_5926:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template1.C'
    sources:
      binary: ./nsdmi-template1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-template2_2182:
  build:
    cflags: "-std=gnu++11 -fcompare-debug\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template2.C'
    sources:
      binary: nsdmi-template2.s
  group: GRPSERIAL
test_nsdmi-template2_2183:
  build:
    cflags: "-std=gnu++14 -fcompare-debug\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template2.C'
    sources:
      binary: nsdmi-template2.s
  group: GRPSERIAL
test_nsdmi-template2_5941:
  build:
    cflags: "-std=gnu++11 -fcompare-debug\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template2.C'
    sources:
      binary: nsdmi-template2.s
  group: GRPSERIAL
test_nsdmi-template2_5942:
  build:
    cflags: "-std=gnu++14 -fcompare-debug\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template2.C'
    sources:
      binary: nsdmi-template2.s
  group: GRPSERIAL
test_nsdmi-template3_2184:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template3.C'
    sources:
      binary: nsdmi-template3.s
  group: GRPSERIAL
test_nsdmi-template3_2185:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template3.C'
    sources:
      binary: nsdmi-template3.s
  group: GRPSERIAL
test_nsdmi-template3_5943:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template3.C'
    sources:
      binary: nsdmi-template3.s
  group: GRPSERIAL
test_nsdmi-template3_5944:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template3.C'
    sources:
      binary: nsdmi-template3.s
  group: GRPSERIAL
test_nsdmi-template4_2186:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template4.C'
    sources:
      binary: nsdmi-template4.s
  group: GRPSERIAL
test_nsdmi-template4_2187:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template4.C'
    sources:
      binary: nsdmi-template4.s
  group: GRPSERIAL
test_nsdmi-template4_5945:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template4.C'
    sources:
      binary: nsdmi-template4.s
  group: GRPSERIAL
test_nsdmi-template4_5946:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template4.C'
    sources:
      binary: nsdmi-template4.s
  group: GRPSERIAL
test_nsdmi-template5_2188:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template5.C'
    sources:
      binary: nsdmi-template5.s
  group: GRPSERIAL
test_nsdmi-template5_2189:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template5.C'
    sources:
      binary: nsdmi-template5.s
  group: GRPSERIAL
test_nsdmi-template5_5947:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template5.C'
    sources:
      binary: nsdmi-template5.s
  group: GRPSERIAL
test_nsdmi-template5_5948:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template5.C'
    sources:
      binary: nsdmi-template5.s
  group: GRPSERIAL
test_nsdmi-template6_2190:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template6.C'
    sources:
      binary: nsdmi-template6.s
  group: GRPSERIAL
test_nsdmi-template6_2191:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template6.C'
    sources:
      binary: nsdmi-template6.s
  group: GRPSERIAL
test_nsdmi-template6_5949:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template6.C'
    sources:
      binary: nsdmi-template6.s
  group: GRPSERIAL
test_nsdmi-template6_5950:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template6.C'
    sources:
      binary: nsdmi-template6.s
  group: GRPSERIAL
test_nsdmi-template7_2192:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template7.C'
    sources:
      binary: nsdmi-template7.s
  group: GRPSERIAL
test_nsdmi-template7_2193:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template7.C'
    sources:
      binary: nsdmi-template7.s
  group: GRPSERIAL
test_nsdmi-template7_5951:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template7.C'
    sources:
      binary: nsdmi-template7.s
  group: GRPSERIAL
test_nsdmi-template7_5952:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template7.C'
    sources:
      binary: nsdmi-template7.s
  group: GRPSERIAL
test_nsdmi-template8_2194:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template8.C'
    sources:
      binary: nsdmi-template8.s
  group: GRPSERIAL
test_nsdmi-template8_2195:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template8.C'
    sources:
      binary: nsdmi-template8.s
  group: GRPSERIAL
test_nsdmi-template8_5953:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template8.C'
    sources:
      binary: nsdmi-template8.s
  group: GRPSERIAL
test_nsdmi-template8_5954:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template8.C'
    sources:
      binary: nsdmi-template8.s
  group: GRPSERIAL
test_nsdmi-template9_2196:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template9.C'
    sources:
      binary: nsdmi-template9.s
  group: GRPSERIAL
test_nsdmi-template9_2197:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template9.C'
    sources:
      binary: nsdmi-template9.s
  group: GRPSERIAL
test_nsdmi-template9_5955:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template9.C'
    sources:
      binary: nsdmi-template9.s
  group: GRPSERIAL
test_nsdmi-template9_5956:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-template9.C'
    sources:
      binary: nsdmi-template9.s
  group: GRPSERIAL
test_nsdmi-union1_2198:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union1.C'
    sources:
      binary: ./nsdmi-union1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-union1_2199:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union1.C'
    sources:
      binary: ./nsdmi-union1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-union1_5957:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union1.C'
    sources:
      binary: ./nsdmi-union1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-union1_5958:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union1.C'
    sources:
      binary: ./nsdmi-union1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-union2_2200:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union2.C'
    sources:
      binary: nsdmi-union2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
test_nsdmi-union2_2201:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union2.C'
    sources:
      binary: nsdmi-union2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
test_nsdmi-union2_5959:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union2.C'
    sources:
      binary: nsdmi-union2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
test_nsdmi-union2_5960:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union2.C'
    sources:
      binary: nsdmi-union2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
test_nsdmi-union3_2202:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union3.C'
    sources:
      binary: nsdmi-union3.s
  group: GRPSERIAL
test_nsdmi-union3_2203:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union3.C'
    sources:
      binary: nsdmi-union3.s
  group: GRPSERIAL
test_nsdmi-union3_5961:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union3.C'
    sources:
      binary: nsdmi-union3.s
  group: GRPSERIAL
test_nsdmi-union3_5962:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union3.C'
    sources:
      binary: nsdmi-union3.s
  group: GRPSERIAL
test_nsdmi-union4_2204:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union4.C'
    sources:
      binary: nsdmi-union4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference")[^\n]*\n?)+'
test_nsdmi-union4_2205:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union4.C'
    sources:
      binary: nsdmi-union4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference")[^\n]*\n?)+'
test_nsdmi-union4_5963:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union4.C'
    sources:
      binary: nsdmi-union4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference")[^\n]*\n?)+'
test_nsdmi-union4_5964:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union4.C'
    sources:
      binary: nsdmi-union4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference")[^\n]*\n?)+'
test_nsdmi-union5_2206:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union5.C'
    sources:
      binary: ./nsdmi-union5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-union5_2207:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union5.C'
    sources:
      binary: ./nsdmi-union5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-union5_5965:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union5.C'
    sources:
      binary: ./nsdmi-union5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-union5_5966:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union5.C'
    sources:
      binary: ./nsdmi-union5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-union6_2208:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union6.C'
    sources:
      binary: nsdmi-union6.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_nsdmi-union6_2209:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union6.C'
    sources:
      binary: nsdmi-union6.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_nsdmi-union6_5967:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union6.C'
    sources:
      binary: nsdmi-union6.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_nsdmi-union6_5968:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-union6.C'
    sources:
      binary: nsdmi-union6.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_nsdmi-virtual1_2210:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-virtual1.C'
    sources:
      binary: ./nsdmi-virtual1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-virtual1_2211:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-virtual1.C'
    sources:
      binary: ./nsdmi-virtual1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-virtual1_5969:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-virtual1.C'
    sources:
      binary: ./nsdmi-virtual1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-virtual1_5970:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-virtual1.C'
    sources:
      binary: ./nsdmi-virtual1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi-virtual2_2212:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-virtual2.C'
    sources:
      binary: nsdmi-virtual2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("pure virtual")[^\n]*\n?)+'
test_nsdmi-virtual2_2213:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-virtual2.C'
    sources:
      binary: nsdmi-virtual2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("pure virtual")[^\n]*\n?)+'
test_nsdmi-virtual2_5971:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-virtual2.C'
    sources:
      binary: nsdmi-virtual2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("pure virtual")[^\n]*\n?)+'
test_nsdmi-virtual2_5972:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi-virtual2.C'
    sources:
      binary: nsdmi-virtual2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("pure virtual")[^\n]*\n?)+'
test_nsdmi10_2216:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi10.C'
    sources:
      binary: nsdmi10.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor")[^\n]*\n?)+'
test_nsdmi10_2217:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi10.C'
    sources:
      binary: nsdmi10.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor")[^\n]*\n?)+'
test_nsdmi10_5975:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi10.C'
    sources:
      binary: nsdmi10.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor")[^\n]*\n?)+'
test_nsdmi10_5976:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi10.C'
    sources:
      binary: nsdmi10.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor")[^\n]*\n?)+'
test_nsdmi11_2218:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi11.C'
    sources:
      binary: nsdmi11.s
  group: GRPSERIAL
test_nsdmi11_2219:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi11.C'
    sources:
      binary: nsdmi11.s
  group: GRPSERIAL
test_nsdmi11_5977:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi11.C'
    sources:
      binary: nsdmi11.s
  group: GRPSERIAL
test_nsdmi11_5978:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi11.C'
    sources:
      binary: nsdmi11.s
  group: GRPSERIAL
test_nsdmi12_2220:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi12.C'
    sources:
      binary: nsdmi12.s
  group: GRPSERIAL
test_nsdmi12_2221:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi12.C'
    sources:
      binary: nsdmi12.s
  group: GRPSERIAL
test_nsdmi12_5979:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi12.C'
    sources:
      binary: nsdmi12.s
  group: GRPSERIAL
test_nsdmi12_5980:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi12.C'
    sources:
      binary: nsdmi12.s
  group: GRPSERIAL
test_nsdmi13_2222:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi13.C'
    sources:
      binary: nsdmi13.s
  group: GRPSERIAL
test_nsdmi13_2223:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi13.C'
    sources:
      binary: nsdmi13.s
  group: GRPSERIAL
test_nsdmi13_5981:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi13.C'
    sources:
      binary: nsdmi13.s
  group: GRPSERIAL
test_nsdmi13_5982:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi13.C'
    sources:
      binary: nsdmi13.s
  group: GRPSERIAL
test_nsdmi1_2214:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi1.C'
    sources:
      binary: ./nsdmi1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi1_2215:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi1.C'
    sources:
      binary: ./nsdmi1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi1_5973:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi1.C'
    sources:
      binary: ./nsdmi1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi1_5974:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi1.C'
    sources:
      binary: ./nsdmi1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi2_2224:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi2.C'
    sources:
      binary: nsdmi2.s
  group: GRPSERIAL
test_nsdmi2_2225:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi2.C'
    sources:
      binary: nsdmi2.s
  group: GRPSERIAL
test_nsdmi2_5983:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi2.C'
    sources:
      binary: nsdmi2.s
  group: GRPSERIAL
test_nsdmi2_5984:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi2.C'
    sources:
      binary: nsdmi2.s
  group: GRPSERIAL
test_nsdmi3_2226:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi3.C'
    sources:
      binary: nsdmi3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B")[^\n]*\n?)+'
test_nsdmi3_2227:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi3.C'
    sources:
      binary: nsdmi3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B")[^\n]*\n?)+'
test_nsdmi3_5985:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi3.C'
    sources:
      binary: nsdmi3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B")[^\n]*\n?)+'
test_nsdmi3_5986:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi3.C'
    sources:
      binary: nsdmi3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("explicit")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B")[^\n]*\n?)+'
test_nsdmi4_2228:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi4.C'
    sources:
      binary: ./nsdmi4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi4_2229:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi4.C'
    sources:
      binary: ./nsdmi4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi4_5987:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi4.C'
    sources:
      binary: ./nsdmi4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi4_5988:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi4.C'
    sources:
      binary: ./nsdmi4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nsdmi5_2230:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi5.C'
    sources:
      binary: nsdmi5.s
  group: GRPSERIAL
test_nsdmi5_2231:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi5.C'
    sources:
      binary: nsdmi5.s
  group: GRPSERIAL
test_nsdmi5_5989:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi5.C'
    sources:
      binary: nsdmi5.s
  group: GRPSERIAL
test_nsdmi5_5990:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi5.C'
    sources:
      binary: nsdmi5.s
  group: GRPSERIAL
test_nsdmi6_2232:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi6.C'
    sources:
      binary: nsdmi6.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("two or more data
          types in declaration")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type|forward")[^\n]*\n?)+'
test_nsdmi6_2233:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi6.C'
    sources:
      binary: nsdmi6.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("two or more data
          types in declaration")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type|forward")[^\n]*\n?)+'
test_nsdmi6_5991:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi6.C'
    sources:
      binary: nsdmi6.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("two or more data
          types in declaration")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type|forward")[^\n]*\n?)+'
test_nsdmi6_5992:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi6.C'
    sources:
      binary: nsdmi6.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("two or more data
          types in declaration")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type|forward")[^\n]*\n?)+'
test_nsdmi7_2234:
  build:
    cflags: "-std=gnu++11 -Wuninitialized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi7.C'
    sources:
      binary: nsdmi7.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("non-static const member")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("non-static reference")[^\n]*\n?)+'
test_nsdmi7_2235:
  build:
    cflags: "-std=gnu++14 -Wuninitialized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi7.C'
    sources:
      binary: nsdmi7.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("non-static const member")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("non-static reference")[^\n]*\n?)+'
test_nsdmi7_5993:
  build:
    cflags: "-std=gnu++11 -Wuninitialized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi7.C'
    sources:
      binary: nsdmi7.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("non-static const member")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("non-static reference")[^\n]*\n?)+'
test_nsdmi7_5994:
  build:
    cflags: "-std=gnu++14 -Wuninitialized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi7.C'
    sources:
      binary: nsdmi7.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("non-static const member")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("non-static reference")[^\n]*\n?)+'
test_nsdmi8_2236:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi8.C'
    sources:
      binary: nsdmi8.s
  group: GRPSERIAL
test_nsdmi8_2237:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi8.C'
    sources:
      binary: nsdmi8.s
  group: GRPSERIAL
test_nsdmi8_5995:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi8.C'
    sources:
      binary: nsdmi8.s
  group: GRPSERIAL
test_nsdmi8_5996:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi8.C'
    sources:
      binary: nsdmi8.s
  group: GRPSERIAL
test_nsdmi9_2238:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi9.C'
    sources:
      binary: nsdmi9.s
  group: GRPSERIAL
test_nsdmi9_2239:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi9.C'
    sources:
      binary: nsdmi9.s
  group: GRPSERIAL
test_nsdmi9_5997:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi9.C'
    sources:
      binary: nsdmi9.s
  group: GRPSERIAL
test_nsdmi9_5998:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nsdmi9.C'
    sources:
      binary: nsdmi9.s
  group: GRPSERIAL
test_nullptr01_2240:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr01.C'
    sources:
      binary: nullptr01.s
  group: GRPSERIAL
test_nullptr01_2241:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr01.C'
    sources:
      binary: nullptr01.s
  group: GRPSERIAL
test_nullptr01_5999:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr01.C'
    sources:
      binary: nullptr01.s
  group: GRPSERIAL
test_nullptr01_6000:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr01.C'
    sources:
      binary: nullptr01.s
  group: GRPSERIAL
test_nullptr02_2242:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr02.C'
    sources:
      binary: nullptr02.s
  group: GRPSERIAL
test_nullptr02_2243:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr02.C'
    sources:
      binary: nullptr02.s
  group: GRPSERIAL
test_nullptr02_6001:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr02.C'
    sources:
      binary: nullptr02.s
  group: GRPSERIAL
test_nullptr02_6002:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr02.C'
    sources:
      binary: nullptr02.s
  group: GRPSERIAL
test_nullptr03_2244:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr03.C'
    sources:
      binary: nullptr03.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert
          ")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert
          ")[^\n]*\n?)+'
test_nullptr03_2245:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr03.C'
    sources:
      binary: nullptr03.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert
          ")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert
          ")[^\n]*\n?)+'
test_nullptr03_6003:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr03.C'
    sources:
      binary: nullptr03.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert
          ")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert
          ")[^\n]*\n?)+'
test_nullptr03_6004:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr03.C'
    sources:
      binary: nullptr03.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert
          ")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert
          ")[^\n]*\n?)+'
test_nullptr04_2246:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr04.C'
    sources:
      binary: nullptr04.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid static_cast
          ")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("loses precision")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid static_cast
          ")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("loses precision")[^\n]*\n?)+'
test_nullptr04_2247:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr04.C'
    sources:
      binary: nullptr04.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid static_cast
          ")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("loses precision")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid static_cast
          ")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("loses precision")[^\n]*\n?)+'
test_nullptr04_6005:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr04.C'
    sources:
      binary: nullptr04.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid static_cast
          ")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("loses precision")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid static_cast
          ")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("loses precision")[^\n]*\n?)+'
test_nullptr04_6006:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr04.C'
    sources:
      binary: nullptr04.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid static_cast
          ")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("loses precision")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid static_cast
          ")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("loses precision")[^\n]*\n?)+'
test_nullptr05_2248:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr05.C'
    sources:
      binary: nullptr05.s
  group: GRPSERIAL
test_nullptr05_2249:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr05.C'
    sources:
      binary: nullptr05.s
  group: GRPSERIAL
test_nullptr05_6007:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr05.C'
    sources:
      binary: nullptr05.s
  group: GRPSERIAL
test_nullptr05_6008:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr05.C'
    sources:
      binary: nullptr05.s
  group: GRPSERIAL
test_nullptr06_2250:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr06.C'
    sources:
      binary: nullptr06.s
  group: GRPSERIAL
test_nullptr06_2251:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr06.C'
    sources:
      binary: nullptr06.s
  group: GRPSERIAL
test_nullptr06_6009:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr06.C'
    sources:
      binary: nullptr06.s
  group: GRPSERIAL
test_nullptr06_6010:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr06.C'
    sources:
      binary: nullptr06.s
  group: GRPSERIAL
test_nullptr07_2252:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr07.C'
    sources:
      binary: nullptr07.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
test_nullptr07_2253:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr07.C'
    sources:
      binary: nullptr07.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
test_nullptr07_6011:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr07.C'
    sources:
      binary: nullptr07.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
test_nullptr07_6012:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr07.C'
    sources:
      binary: nullptr07.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
test_nullptr08_2254:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr08.C'
    sources:
      binary: nullptr08.s
  group: GRPSERIAL
test_nullptr08_2255:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr08.C'
    sources:
      binary: nullptr08.s
  group: GRPSERIAL
test_nullptr08_6013:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr08.C'
    sources:
      binary: nullptr08.s
  group: GRPSERIAL
test_nullptr08_6014:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr08.C'
    sources:
      binary: nullptr08.s
  group: GRPSERIAL
test_nullptr09_2256:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr09.C'
    sources:
      binary: nullptr09.s
  group: GRPSERIAL
test_nullptr09_2257:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr09.C'
    sources:
      binary: nullptr09.s
  group: GRPSERIAL
test_nullptr09_6015:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr09.C'
    sources:
      binary: nullptr09.s
  group: GRPSERIAL
test_nullptr09_6016:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr09.C'
    sources:
      binary: nullptr09.s
  group: GRPSERIAL
test_nullptr10_2258:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr10.C'
    sources:
      binary: nullptr10.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue required
          as left operand")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
test_nullptr10_2259:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr10.C'
    sources:
      binary: nullptr10.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue required
          as left operand")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
test_nullptr10_6017:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr10.C'
    sources:
      binary: nullptr10.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue required
          as left operand")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
test_nullptr10_6018:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr10.C'
    sources:
      binary: nullptr10.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue required
          as left operand")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operands
          of types ")[^\n]*\n?)+'
test_nullptr11_2260:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr11.C'
    sources:
      binary: nullptr11.s
  group: GRPSERIAL
test_nullptr11_2261:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr11.C'
    sources:
      binary: nullptr11.s
  group: GRPSERIAL
test_nullptr11_6019:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr11.C'
    sources:
      binary: nullptr11.s
  group: GRPSERIAL
test_nullptr11_6020:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr11.C'
    sources:
      binary: nullptr11.s
  group: GRPSERIAL
test_nullptr12_2262:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr12.C'
    sources:
      binary: nullptr12.s
  group: GRPSERIAL
test_nullptr12_2263:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr12.C'
    sources:
      binary: nullptr12.s
  group: GRPSERIAL
test_nullptr12_6021:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr12.C'
    sources:
      binary: nullptr12.s
  group: GRPSERIAL
test_nullptr12_6022:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr12.C'
    sources:
      binary: nullptr12.s
  group: GRPSERIAL
test_nullptr13_2264:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr13.C'
    sources:
      binary: ./nullptr13.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr13_2265:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr13.C'
    sources:
      binary: ./nullptr13.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr13_6023:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr13.C'
    sources:
      binary: ./nullptr13.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr13_6024:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr13.C'
    sources:
      binary: ./nullptr13.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr14_2266:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr14.C'
    sources:
      binary: nullptr14.s
  group: GRPSERIAL
test_nullptr14_2267:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr14.C'
    sources:
      binary: nullptr14.s
  group: GRPSERIAL
test_nullptr14_6025:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr14.C'
    sources:
      binary: nullptr14.s
  group: GRPSERIAL
test_nullptr14_6026:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr14.C'
    sources:
      binary: nullptr14.s
  group: GRPSERIAL
test_nullptr15_2268:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr15.C'
    sources:
      binary: nullptr15.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to ")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to ")[^\n]*\n?)+'
test_nullptr15_2269:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr15.C'
    sources:
      binary: nullptr15.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to ")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to ")[^\n]*\n?)+'
test_nullptr15_6027:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr15.C'
    sources:
      binary: nullptr15.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to ")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to ")[^\n]*\n?)+'
test_nullptr15_6028:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr15.C'
    sources:
      binary: nullptr15.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to ")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to ")[^\n]*\n?)+'
test_nullptr16_2270:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr16.C'
    sources:
      binary: nullptr16.s
  group: GRPSERIAL
test_nullptr16_2271:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr16.C'
    sources:
      binary: nullptr16.s
  group: GRPSERIAL
test_nullptr16_6029:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr16.C'
    sources:
      binary: nullptr16.s
  group: GRPSERIAL
test_nullptr16_6030:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr16.C'
    sources:
      binary: nullptr16.s
  group: GRPSERIAL
test_nullptr17_2272:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr17.C'
    sources:
      binary: nullptr17.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("direct")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("direct")[^\n]*\n?)+'
test_nullptr17_2273:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr17.C'
    sources:
      binary: nullptr17.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("direct")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("direct")[^\n]*\n?)+'
test_nullptr17_6031:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr17.C'
    sources:
      binary: nullptr17.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("direct")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("direct")[^\n]*\n?)+'
test_nullptr17_6032:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr17.C'
    sources:
      binary: nullptr17.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("direct")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("direct")[^\n]*\n?)+'
test_nullptr18_2274:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr18.C'
    sources:
      binary: nullptr18.s
  group: GRPSERIAL
test_nullptr18_2275:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr18.C'
    sources:
      binary: nullptr18.s
  group: GRPSERIAL
test_nullptr18_6033:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr18.C'
    sources:
      binary: nullptr18.s
  group: GRPSERIAL
test_nullptr18_6034:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr18.C'
    sources:
      binary: nullptr18.s
  group: GRPSERIAL
test_nullptr19_2276:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr19.C'
    sources:
      binary: nullptr19.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is ambiguous")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is ambiguous")[^\n]*\n?)+'
test_nullptr19_2277:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr19.C'
    sources:
      binary: nullptr19.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is ambiguous")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is ambiguous")[^\n]*\n?)+'
test_nullptr19_6035:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr19.C'
    sources:
      binary: nullptr19.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is ambiguous")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is ambiguous")[^\n]*\n?)+'
test_nullptr19_6036:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr19.C'
    sources:
      binary: nullptr19.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is ambiguous")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is ambiguous")[^\n]*\n?)+'
test_nullptr20_2278:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr20.C'
    sources:
      binary: ./nullptr20.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr20_2279:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr20.C'
    sources:
      binary: ./nullptr20.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr20_6037:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr20.C'
    sources:
      binary: ./nullptr20.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr20_6038:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr20.C'
    sources:
      binary: ./nullptr20.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr21_2280:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr21.C'
    sources:
      binary: ./nullptr21.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr21_2281:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr21.C'
    sources:
      binary: ./nullptr21.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr21_6039:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr21.C'
    sources:
      binary: ./nullptr21.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr21_6040:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr21.C'
    sources:
      binary: ./nullptr21.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr22_2282:
  build:
    cflags: "-std=gnu++11 -Wall -Wformat=2 -Wstrict-null-sentinel\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr22.C'
    sources:
      binary: nullptr22.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null argument where
          non-null required ")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel in
          function call")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("null argument where
          non-null required ")[^\n]*\n?)+'
test_nullptr22_2283:
  build:
    cflags: "-std=gnu++14 -Wall -Wformat=2 -Wstrict-null-sentinel\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr22.C'
    sources:
      binary: nullptr22.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null argument where
          non-null required ")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel in
          function call")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("null argument where
          non-null required ")[^\n]*\n?)+'
test_nullptr22_6041:
  build:
    cflags: "-std=gnu++11 -Wall -Wformat=2 -Wstrict-null-sentinel\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr22.C'
    sources:
      binary: nullptr22.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null argument where
          non-null required ")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel in
          function call")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("null argument where
          non-null required ")[^\n]*\n?)+'
test_nullptr22_6042:
  build:
    cflags: "-std=gnu++14 -Wall -Wformat=2 -Wstrict-null-sentinel\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr22.C'
    sources:
      binary: nullptr22.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null argument where
          non-null required ")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel in
          function call")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("null argument where
          non-null required ")[^\n]*\n?)+'
test_nullptr23_2284:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr23.C'
    sources:
      binary: nullptr23.s
  group: GRPSERIAL
test_nullptr23_2285:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr23.C'
    sources:
      binary: nullptr23.s
  group: GRPSERIAL
test_nullptr23_6043:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr23.C'
    sources:
      binary: nullptr23.s
  group: GRPSERIAL
test_nullptr23_6044:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr23.C'
    sources:
      binary: nullptr23.s
  group: GRPSERIAL
test_nullptr24_2286:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr24.C'
    sources:
      binary: nullptr24.s
  group: GRPSERIAL
test_nullptr24_2287:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr24.C'
    sources:
      binary: nullptr24.s
  group: GRPSERIAL
test_nullptr24_6045:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr24.C'
    sources:
      binary: nullptr24.s
  group: GRPSERIAL
test_nullptr24_6046:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr24.C'
    sources:
      binary: nullptr24.s
  group: GRPSERIAL
test_nullptr25_2288:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr25.C'
    sources:
      binary: nullptr25.s
  group: GRPSERIAL
test_nullptr25_2289:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr25.C'
    sources:
      binary: nullptr25.s
  group: GRPSERIAL
test_nullptr25_6047:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr25.C'
    sources:
      binary: nullptr25.s
  group: GRPSERIAL
test_nullptr25_6048:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr25.C'
    sources:
      binary: nullptr25.s
  group: GRPSERIAL
test_nullptr26_2290:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr26.C'
    sources:
      binary: nullptr26.s
  group: GRPSERIAL
test_nullptr26_2291:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr26.C'
    sources:
      binary: nullptr26.s
  group: GRPSERIAL
test_nullptr26_6049:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr26.C'
    sources:
      binary: nullptr26.s
  group: GRPSERIAL
test_nullptr26_6050:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr26.C'
    sources:
      binary: nullptr26.s
  group: GRPSERIAL
test_nullptr27_2292:
  build:
    cflags: "-std=gnu++11 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr27.C'
    sources:
      binary: nullptr27.s
  group: GRPSERIAL
test_nullptr27_2293:
  build:
    cflags: "-std=gnu++14 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr27.C'
    sources:
      binary: nullptr27.s
  group: GRPSERIAL
test_nullptr27_6051:
  build:
    cflags: "-std=gnu++11 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr27.C'
    sources:
      binary: nullptr27.s
  group: GRPSERIAL
test_nullptr27_6052:
  build:
    cflags: "-std=gnu++14 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr27.C'
    sources:
      binary: nullptr27.s
  group: GRPSERIAL
test_nullptr28_2294:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr28.C'
    sources:
      binary: ./nullptr28.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr28_2295:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr28.C'
    sources:
      binary: ./nullptr28.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr28_6053:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr28.C'
    sources:
      binary: ./nullptr28.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr28_6054:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr28.C'
    sources:
      binary: ./nullptr28.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr29_2296:
  build:
    cflags: "-std=gnu++11 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr29.C'
    sources:
      binary: nullptr29.s
  group: GRPSERIAL
test_nullptr29_2297:
  build:
    cflags: "-std=gnu++14 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr29.C'
    sources:
      binary: nullptr29.s
  group: GRPSERIAL
test_nullptr29_6055:
  build:
    cflags: "-std=gnu++11 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr29.C'
    sources:
      binary: nullptr29.s
  group: GRPSERIAL
test_nullptr29_6056:
  build:
    cflags: "-std=gnu++14 -O\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr29.C'
    sources:
      binary: nullptr29.s
  group: GRPSERIAL
test_nullptr30_2298:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr30.C'
    sources:
      binary: nullptr30.s
  group: GRPSERIAL
test_nullptr30_2299:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr30.C'
    sources:
      binary: nullptr30.s
  group: GRPSERIAL
test_nullptr30_6057:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr30.C'
    sources:
      binary: nullptr30.s
  group: GRPSERIAL
test_nullptr30_6058:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr30.C'
    sources:
      binary: nullptr30.s
  group: GRPSERIAL
test_nullptr31_2300:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr31.C'
    sources:
      binary: nullptr31.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("direct")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_nullptr31_2301:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr31.C'
    sources:
      binary: nullptr31.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("direct")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_nullptr31_6059:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr31.C'
    sources:
      binary: nullptr31.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("direct")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_nullptr31_6060:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr31.C'
    sources:
      binary: nullptr31.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("direct")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_nullptr32_2302:
  build:
    cflags: "-std=gnu++11 -fno-inline\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr32.C'
    sources:
      binary: nullptr32.s
  group: GRPSERIAL
test_nullptr32_2303:
  build:
    cflags: "-std=gnu++14 -fno-inline\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr32.C'
    sources:
      binary: nullptr32.s
  group: GRPSERIAL
test_nullptr32_6061:
  build:
    cflags: "-std=gnu++11 -fno-inline\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr32.C'
    sources:
      binary: nullptr32.s
  group: GRPSERIAL
test_nullptr32_6062:
  build:
    cflags: "-std=gnu++14 -fno-inline\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr32.C'
    sources:
      binary: nullptr32.s
  group: GRPSERIAL
test_nullptr33_2304:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr33.C'
    sources:
      binary: nullptr33.s
  group: GRPSERIAL
test_nullptr33_2305:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr33.C'
    sources:
      binary: nullptr33.s
  group: GRPSERIAL
test_nullptr33_6063:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr33.C'
    sources:
      binary: nullptr33.s
  group: GRPSERIAL
test_nullptr33_6064:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr33.C'
    sources:
      binary: nullptr33.s
  group: GRPSERIAL
test_nullptr34_2306:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr34.C'
    sources:
      binary: nullptr34.s
  group: GRPSERIAL
test_nullptr34_2307:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr34.C'
    sources:
      binary: nullptr34.s
  group: GRPSERIAL
test_nullptr34_6065:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr34.C'
    sources:
      binary: nullptr34.s
  group: GRPSERIAL
test_nullptr34_6066:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr34.C'
    sources:
      binary: nullptr34.s
  group: GRPSERIAL
test_nullptr35_2308:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr35.C'
    sources:
      binary: ./nullptr35.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr35_2309:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr35.C'
    sources:
      binary: ./nullptr35.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr35_6067:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr35.C'
    sources:
      binary: ./nullptr35.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr35_6068:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr35.C'
    sources:
      binary: ./nullptr35.exe
  group: GRPSERIAL
  run:
    cwd: .
test_nullptr36_2310:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr36.C'
    sources:
      binary: nullptr36.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion")[^\n]*\n?)+'
test_nullptr36_2311:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr36.C'
    sources:
      binary: nullptr36.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion")[^\n]*\n?)+'
test_nullptr36_6069:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr36.C'
    sources:
      binary: nullptr36.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion")[^\n]*\n?)+'
test_nullptr36_6070:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr36.C'
    sources:
      binary: nullptr36.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion")[^\n]*\n?)+'
test_nullptr37_2312:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr37.C'
    sources:
      binary: nullptr37.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
test_nullptr37_2313:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr37.C'
    sources:
      binary: nullptr37.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
test_nullptr37_6071:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr37.C'
    sources:
      binary: nullptr37.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
test_nullptr37_6072:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr37.C'
    sources:
      binary: nullptr37.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C\\\\+\\\\+
          forbids comparison between pointer and integer")[^\n]*\n?)+'
test_nullptr39_2314:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr39.C'
    sources:
      binary: nullptr39.s
  group: GRPSERIAL
test_nullptr39_2315:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr39.C'
    sources:
      binary: nullptr39.s
  group: GRPSERIAL
test_nullptr39_6073:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr39.C'
    sources:
      binary: nullptr39.s
  group: GRPSERIAL
test_nullptr39_6074:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/nullptr39.C'
    sources:
      binary: nullptr39.s
  group: GRPSERIAL
test_overflow1_2316:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overflow1.C'
    sources:
      binary: overflow1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow")[^\n]*\n?)+'
test_overflow1_2317:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overflow1.C'
    sources:
      binary: overflow1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow")[^\n]*\n?)+'
test_overflow1_2318:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overflow1.C'
    sources:
      binary: overflow1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow")[^\n]*\n?)+'
test_overflow1_6075:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overflow1.C'
    sources:
      binary: overflow1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow")[^\n]*\n?)+'
test_overflow1_6076:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overflow1.C'
    sources:
      binary: overflow1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow")[^\n]*\n?)+'
test_overflow1_6077:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overflow1.C'
    sources:
      binary: overflow1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow")[^\n]*\n?)+'
test_overload-conv-1_2319:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload-conv-1.C'
    sources:
      binary: overload-conv-1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_overload-conv-1_2320:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload-conv-1.C'
    sources:
      binary: overload-conv-1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_overload-conv-1_6078:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload-conv-1.C'
    sources:
      binary: overload-conv-1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_overload-conv-1_6079:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload-conv-1.C'
    sources:
      binary: overload-conv-1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_overload-conv-2_2321:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload-conv-2.C'
    sources:
      binary: overload-conv-2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_overload-conv-2_2322:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload-conv-2.C'
    sources:
      binary: overload-conv-2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_overload-conv-2_6080:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload-conv-2.C'
    sources:
      binary: overload-conv-2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_overload-conv-2_6081:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload-conv-2.C'
    sources:
      binary: overload-conv-2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_overload2_2325:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload2.C'
    sources:
      binary: overload2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("g2. was not declared")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many arguments")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_overload2_2326:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload2.C'
    sources:
      binary: overload2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("g2. was not declared")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many arguments")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_overload2_6084:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload2.C'
    sources:
      binary: overload2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("g2. was not declared")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many arguments")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_overload2_6085:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload2.C'
    sources:
      binary: overload2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("g2. was not declared")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many arguments")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_overload3_2327:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload3.C'
    sources:
      binary: overload3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_overload3_2328:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload3.C'
    sources:
      binary: overload3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_overload3_6086:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload3.C'
    sources:
      binary: overload3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_overload3_6087:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload3.C'
    sources:
      binary: overload3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_overload_2323:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload.C'
    sources:
      binary: overload.exe
  group: GRPSERIAL
  run:
    cwd: .
test_overload_2324:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload.C'
    sources:
      binary: overload.exe
  group: GRPSERIAL
  run:
    cwd: .
test_overload_6082:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload.C'
    sources:
      binary: overload.exe
  group: GRPSERIAL
  run:
    cwd: .
test_overload_6083:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overload.C'
    sources:
      binary: overload.exe
  group: GRPSERIAL
  run:
    cwd: .
test_overloadn_2329:
  build:
    cflags: -std=gnu++11
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overloadn.C'
    sources:
      binary: overloadn.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L546:
        expect: true
        expr: '(^|\n)([^\n]+:546:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L547:
        expect: true
        expr: '(^|\n)([^\n]+:547:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L548:
        expect: true
        expr: '(^|\n)([^\n]+:548:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L561:
        expect: true
        expr: '(^|\n)([^\n]+:561:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L562:
        expect: true
        expr: '(^|\n)([^\n]+:562:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L567:
        expect: true
        expr: '(^|\n)([^\n]+:567:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L568:
        expect: true
        expr: '(^|\n)([^\n]+:568:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L599:
        expect: true
        expr: '(^|\n)([^\n]+:599:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L600:
        expect: true
        expr: '(^|\n)([^\n]+:600:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L601:
        expect: true
        expr: '(^|\n)([^\n]+:601:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L614:
        expect: true
        expr: '(^|\n)([^\n]+:614:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L615:
        expect: true
        expr: '(^|\n)([^\n]+:615:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L620:
        expect: true
        expr: '(^|\n)([^\n]+:620:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L621:
        expect: true
        expr: '(^|\n)([^\n]+:621:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L626:
        expect: true
        expr: '(^|\n)([^\n]+:626:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L627:
        expect: true
        expr: '(^|\n)([^\n]+:627:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L628:
        expect: true
        expr: '(^|\n)([^\n]+:628:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L641:
        expect: true
        expr: '(^|\n)([^\n]+:641:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L642:
        expect: true
        expr: '(^|\n)([^\n]+:642:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L647:
        expect: true
        expr: '(^|\n)([^\n]+:647:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L648:
        expect: true
        expr: '(^|\n)([^\n]+:648:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L653:
        expect: true
        expr: '(^|\n)([^\n]+:653:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L654:
        expect: true
        expr: '(^|\n)([^\n]+:654:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L668:
        expect: true
        expr: '(^|\n)([^\n]+:668:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L669:
        expect: true
        expr: '(^|\n)([^\n]+:669:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L674:
        expect: true
        expr: '(^|\n)([^\n]+:674:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L675:
        expect: true
        expr: '(^|\n)([^\n]+:675:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_overloadn_2330:
  build:
    cflags: -std=gnu++14
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overloadn.C'
    sources:
      binary: overloadn.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L546:
        expect: true
        expr: '(^|\n)([^\n]+:546:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L547:
        expect: true
        expr: '(^|\n)([^\n]+:547:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L548:
        expect: true
        expr: '(^|\n)([^\n]+:548:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L561:
        expect: true
        expr: '(^|\n)([^\n]+:561:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L562:
        expect: true
        expr: '(^|\n)([^\n]+:562:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L567:
        expect: true
        expr: '(^|\n)([^\n]+:567:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L568:
        expect: true
        expr: '(^|\n)([^\n]+:568:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L599:
        expect: true
        expr: '(^|\n)([^\n]+:599:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L600:
        expect: true
        expr: '(^|\n)([^\n]+:600:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L601:
        expect: true
        expr: '(^|\n)([^\n]+:601:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L614:
        expect: true
        expr: '(^|\n)([^\n]+:614:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L615:
        expect: true
        expr: '(^|\n)([^\n]+:615:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L620:
        expect: true
        expr: '(^|\n)([^\n]+:620:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L621:
        expect: true
        expr: '(^|\n)([^\n]+:621:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L626:
        expect: true
        expr: '(^|\n)([^\n]+:626:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L627:
        expect: true
        expr: '(^|\n)([^\n]+:627:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L628:
        expect: true
        expr: '(^|\n)([^\n]+:628:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L641:
        expect: true
        expr: '(^|\n)([^\n]+:641:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L642:
        expect: true
        expr: '(^|\n)([^\n]+:642:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L647:
        expect: true
        expr: '(^|\n)([^\n]+:647:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L648:
        expect: true
        expr: '(^|\n)([^\n]+:648:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L653:
        expect: true
        expr: '(^|\n)([^\n]+:653:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L654:
        expect: true
        expr: '(^|\n)([^\n]+:654:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L668:
        expect: true
        expr: '(^|\n)([^\n]+:668:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L669:
        expect: true
        expr: '(^|\n)([^\n]+:669:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L674:
        expect: true
        expr: '(^|\n)([^\n]+:674:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L675:
        expect: true
        expr: '(^|\n)([^\n]+:675:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_overloadn_6088:
  build:
    cflags: -std=gnu++11
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overloadn.C'
    sources:
      binary: overloadn.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L546:
        expect: true
        expr: '(^|\n)([^\n]+:546:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L547:
        expect: true
        expr: '(^|\n)([^\n]+:547:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L548:
        expect: true
        expr: '(^|\n)([^\n]+:548:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L561:
        expect: true
        expr: '(^|\n)([^\n]+:561:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L562:
        expect: true
        expr: '(^|\n)([^\n]+:562:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L567:
        expect: true
        expr: '(^|\n)([^\n]+:567:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L568:
        expect: true
        expr: '(^|\n)([^\n]+:568:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L599:
        expect: true
        expr: '(^|\n)([^\n]+:599:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L600:
        expect: true
        expr: '(^|\n)([^\n]+:600:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L601:
        expect: true
        expr: '(^|\n)([^\n]+:601:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L614:
        expect: true
        expr: '(^|\n)([^\n]+:614:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L615:
        expect: true
        expr: '(^|\n)([^\n]+:615:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L620:
        expect: true
        expr: '(^|\n)([^\n]+:620:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L621:
        expect: true
        expr: '(^|\n)([^\n]+:621:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L626:
        expect: true
        expr: '(^|\n)([^\n]+:626:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L627:
        expect: true
        expr: '(^|\n)([^\n]+:627:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L628:
        expect: true
        expr: '(^|\n)([^\n]+:628:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L641:
        expect: true
        expr: '(^|\n)([^\n]+:641:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L642:
        expect: true
        expr: '(^|\n)([^\n]+:642:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L647:
        expect: true
        expr: '(^|\n)([^\n]+:647:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L648:
        expect: true
        expr: '(^|\n)([^\n]+:648:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L653:
        expect: true
        expr: '(^|\n)([^\n]+:653:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L654:
        expect: true
        expr: '(^|\n)([^\n]+:654:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L668:
        expect: true
        expr: '(^|\n)([^\n]+:668:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L669:
        expect: true
        expr: '(^|\n)([^\n]+:669:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L674:
        expect: true
        expr: '(^|\n)([^\n]+:674:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L675:
        expect: true
        expr: '(^|\n)([^\n]+:675:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_overloadn_6089:
  build:
    cflags: -std=gnu++14
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/overloadn.C'
    sources:
      binary: overloadn.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L546:
        expect: true
        expr: '(^|\n)([^\n]+:546:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L547:
        expect: true
        expr: '(^|\n)([^\n]+:547:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L548:
        expect: true
        expr: '(^|\n)([^\n]+:548:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L561:
        expect: true
        expr: '(^|\n)([^\n]+:561:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L562:
        expect: true
        expr: '(^|\n)([^\n]+:562:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L567:
        expect: true
        expr: '(^|\n)([^\n]+:567:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L568:
        expect: true
        expr: '(^|\n)([^\n]+:568:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L599:
        expect: true
        expr: '(^|\n)([^\n]+:599:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L600:
        expect: true
        expr: '(^|\n)([^\n]+:600:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L601:
        expect: true
        expr: '(^|\n)([^\n]+:601:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L614:
        expect: true
        expr: '(^|\n)([^\n]+:614:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L615:
        expect: true
        expr: '(^|\n)([^\n]+:615:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L620:
        expect: true
        expr: '(^|\n)([^\n]+:620:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L621:
        expect: true
        expr: '(^|\n)([^\n]+:621:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L626:
        expect: true
        expr: '(^|\n)([^\n]+:626:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L627:
        expect: true
        expr: '(^|\n)([^\n]+:627:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L628:
        expect: true
        expr: '(^|\n)([^\n]+:628:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L641:
        expect: true
        expr: '(^|\n)([^\n]+:641:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L642:
        expect: true
        expr: '(^|\n)([^\n]+:642:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L647:
        expect: true
        expr: '(^|\n)([^\n]+:647:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L648:
        expect: true
        expr: '(^|\n)([^\n]+:648:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L653:
        expect: true
        expr: '(^|\n)([^\n]+:653:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L654:
        expect: true
        expr: '(^|\n)([^\n]+:654:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L668:
        expect: true
        expr: '(^|\n)([^\n]+:668:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L669:
        expect: true
        expr: '(^|\n)([^\n]+:669:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L674:
        expect: true
        expr: '(^|\n)([^\n]+:674:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L675:
        expect: true
        expr: '(^|\n)([^\n]+:675:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_override1_2331:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/override1.C'
    sources:
      binary: override1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("virtual")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("virtual function")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate virt-specifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''final\'',
          but is not virtual")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not allowed outside
          a class definition")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not allowed outside
          a class definition")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
test_override1_2332:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/override1.C'
    sources:
      binary: override1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("virtual")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("virtual function")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate virt-specifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''final\'',
          but is not virtual")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not allowed outside
          a class definition")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not allowed outside
          a class definition")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
test_override1_6090:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/override1.C'
    sources:
      binary: override1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("virtual")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("virtual function")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate virt-specifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''final\'',
          but is not virtual")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not allowed outside
          a class definition")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not allowed outside
          a class definition")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
test_override1_6091:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/override1.C'
    sources:
      binary: override1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overriding")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("virtual")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("virtual function")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate virt-specifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''final\'',
          but is not virtual")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("marked \''override\'',
          but does not override")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not allowed outside
          a class definition")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not allowed outside
          a class definition")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          virt-specifiers")[^\n]*\n?)+'
test_override2_2333:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/override2.C'
    sources:
      binary: override2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class template")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate virt-specifier")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot specify
          \''override\'' for a class")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has a previous
          declaration|previously declared here")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot specify
          \''override\'' for a class")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting declaration")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
test_override2_2334:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/override2.C'
    sources:
      binary: override2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class template")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate virt-specifier")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot specify
          \''override\'' for a class")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has a previous
          declaration|previously declared here")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot specify
          \''override\'' for a class")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting declaration")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
test_override2_6092:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/override2.C'
    sources:
      binary: override2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class template")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate virt-specifier")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot specify
          \''override\'' for a class")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has a previous
          declaration|previously declared here")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot specify
          \''override\'' for a class")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting declaration")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
test_override2_6093:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/override2.C'
    sources:
      binary: override2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class template")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate virt-specifier")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot specify
          \''override\'' for a class")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has a previous
          declaration|previously declared here")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot specify
          \''override\'' for a class")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting declaration")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
test_override3_2335:
  build:
    cflags: "--std=c++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/override3.C'
    sources:
      binary: override3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("override controls")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("override controls")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
test_override3_6094:
  build:
    cflags: "--std=c++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/override3.C'
    sources:
      binary: override3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("override controls")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("override controls")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot derive
          from \''final\'' base")[^\n]*\n?)+'
test_override4_2336:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/override4.C'
    sources:
      binary: override4.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
test_override4_2337:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/override4.C'
    sources:
      binary: override4.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
test_override4_6095:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/override4.C'
    sources:
      binary: override4.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
test_override4_6096:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/override4.C'
    sources:
      binary: override4.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
test_parse1_2338:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/parse1.C'
    sources:
      binary: parse1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_parse1_2339:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/parse1.C'
    sources:
      binary: parse1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_parse1_6097:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/parse1.C'
    sources:
      binary: parse1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_parse1_6098:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/parse1.C'
    sources:
      binary: parse1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_parse2_2340:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/parse2.C'
    sources:
      binary: parse2.s
  group: GRPSERIAL
test_parse2_2341:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/parse2.C'
    sources:
      binary: parse2.s
  group: GRPSERIAL
test_parse2_6099:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/parse2.C'
    sources:
      binary: parse2.s
  group: GRPSERIAL
test_parse2_6100:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/parse2.C'
    sources:
      binary: parse2.s
  group: GRPSERIAL
test_pr31431-2_2342:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31431-2.C'
    sources:
      binary: pr31431-2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_pr31431-2_2343:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31431-2.C'
    sources:
      binary: pr31431-2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_pr31431-2_6101:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31431-2.C'
    sources:
      binary: pr31431-2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_pr31431-2_6102:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31431-2.C'
    sources:
      binary: pr31431-2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_pr31431_2344:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31431.C'
    sources:
      binary: pr31431.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_pr31431_2345:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31431.C'
    sources:
      binary: pr31431.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_pr31431_6103:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31431.C'
    sources:
      binary: pr31431.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_pr31431_6104:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31431.C'
    sources:
      binary: pr31431.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_pr31432_2346:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31432.C'
    sources:
      binary: pr31432.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
test_pr31432_2347:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31432.C'
    sources:
      binary: pr31432.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
test_pr31432_6105:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31432.C'
    sources:
      binary: pr31432.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
test_pr31432_6106:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31432.C'
    sources:
      binary: pr31432.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
test_pr31434_2348:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31434.C'
    sources:
      binary: pr31434.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded with|T")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded with|T")[^\n]*\n?)+'
test_pr31434_2349:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31434.C'
    sources:
      binary: pr31434.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded with|T")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded with|T")[^\n]*\n?)+'
test_pr31434_6107:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31434.C'
    sources:
      binary: pr31434.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded with|T")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded with|T")[^\n]*\n?)+'
test_pr31434_6108:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31434.C'
    sources:
      binary: pr31434.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded with|T")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded with|T")[^\n]*\n?)+'
test_pr31437_2350:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31437.C'
    sources:
      binary: pr31437.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_pr31437_2351:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31437.C'
    sources:
      binary: pr31437.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_pr31437_6109:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31437.C'
    sources:
      binary: pr31437.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_pr31437_6110:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31437.C'
    sources:
      binary: pr31437.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_pr31438_2352:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31438.C'
    sources:
      binary: pr31438.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|U")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr31438_2353:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31438.C'
    sources:
      binary: pr31438.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|U")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr31438_6111:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31438.C'
    sources:
      binary: pr31438.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|U")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr31438_6112:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31438.C'
    sources:
      binary: pr31438.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|U")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr31439_2354:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31439.C'
    sources:
      binary: pr31439.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not deducible|anonymous|declaration")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr31439_2355:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31439.C'
    sources:
      binary: pr31439.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not deducible|anonymous|declaration")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr31439_6113:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31439.C'
    sources:
      binary: pr31439.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not deducible|anonymous|declaration")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr31439_6114:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31439.C'
    sources:
      binary: pr31439.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not deducible|anonymous|declaration")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr31442_2356:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31442.C'
    sources:
      binary: pr31442.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T|the
          end|parameter packs|anonymous")[^\n]*\n?)+'
test_pr31442_2357:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31442.C'
    sources:
      binary: pr31442.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T|the
          end|parameter packs|anonymous")[^\n]*\n?)+'
test_pr31442_6115:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31442.C'
    sources:
      binary: pr31442.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T|the
          end|parameter packs|anonymous")[^\n]*\n?)+'
test_pr31442_6116:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31442.C'
    sources:
      binary: pr31442.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T|the
          end|parameter packs|anonymous")[^\n]*\n?)+'
test_pr31443_2358:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31443.C'
    sources:
      binary: pr31443.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no member named")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_pr31443_2359:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31443.C'
    sources:
      binary: pr31443.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no member named")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_pr31443_6117:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31443.C'
    sources:
      binary: pr31443.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no member named")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_pr31443_6118:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31443.C'
    sources:
      binary: pr31443.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no member named")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_pr31444_2360:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31444.C'
    sources:
      binary: pr31444.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no member named")[^\n]*\n?)+'
test_pr31444_2361:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31444.C'
    sources:
      binary: pr31444.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no member named")[^\n]*\n?)+'
test_pr31444_6119:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31444.C'
    sources:
      binary: pr31444.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no member named")[^\n]*\n?)+'
test_pr31444_6120:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31444.C'
    sources:
      binary: pr31444.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no member named")[^\n]*\n?)+'
test_pr31445_2362:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31445.C'
    sources:
      binary: pr31445.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("18:parameter packs|t")[^\n]*\n?)+'
test_pr31445_2363:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31445.C'
    sources:
      binary: pr31445.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("18:parameter packs|t")[^\n]*\n?)+'
test_pr31445_6121:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31445.C'
    sources:
      binary: pr31445.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("18:parameter packs|t")[^\n]*\n?)+'
test_pr31445_6122:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31445.C'
    sources:
      binary: pr31445.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("18:parameter packs|t")[^\n]*\n?)+'
test_pr31993_2364:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31993.C'
    sources:
      binary: pr31993.s
  group: GRPSERIAL
test_pr31993_2365:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31993.C'
    sources:
      binary: pr31993.s
  group: GRPSERIAL
test_pr31993_6123:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31993.C'
    sources:
      binary: pr31993.s
  group: GRPSERIAL
test_pr31993_6124:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr31993.C'
    sources:
      binary: pr31993.s
  group: GRPSERIAL
test_pr32114_2366:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32114.C'
    sources:
      binary: pr32114.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr32114_2367:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32114.C'
    sources:
      binary: pr32114.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr32114_6125:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32114.C'
    sources:
      binary: pr32114.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr32114_6126:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32114.C'
    sources:
      binary: pr32114.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr32115_2368:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32115.C'
    sources:
      binary: pr32115.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end of")[^\n]*\n?)+'
test_pr32115_2369:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32115.C'
    sources:
      binary: pr32115.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end of")[^\n]*\n?)+'
test_pr32115_6127:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32115.C'
    sources:
      binary: pr32115.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end of")[^\n]*\n?)+'
test_pr32115_6128:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32115.C'
    sources:
      binary: pr32115.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end of")[^\n]*\n?)+'
test_pr32125_2370:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32125.C'
    sources:
      binary: pr32125.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr32125_2371:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32125.C'
    sources:
      binary: pr32125.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr32125_6129:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32125.C'
    sources:
      binary: pr32125.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr32125_6130:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32125.C'
    sources:
      binary: pr32125.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr32126_2372:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32126.C'
    sources:
      binary: pr32126.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T|")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_pr32126_2373:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32126.C'
    sources:
      binary: pr32126.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T|")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_pr32126_6131:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32126.C'
    sources:
      binary: pr32126.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T|")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_pr32126_6132:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32126.C'
    sources:
      binary: pr32126.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T|")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_pr32127_2374:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32127.C'
    sources:
      binary: pr32127.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a member")[^\n]*\n?)+'
test_pr32127_2375:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32127.C'
    sources:
      binary: pr32127.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a member")[^\n]*\n?)+'
test_pr32127_6133:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32127.C'
    sources:
      binary: pr32127.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a member")[^\n]*\n?)+'
test_pr32127_6134:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32127.C'
    sources:
      binary: pr32127.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a member")[^\n]*\n?)+'
test_pr32128_2376:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32128.C'
    sources:
      binary: pr32128.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be at the
          end")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_pr32128_2377:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32128.C'
    sources:
      binary: pr32128.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be at the
          end")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_pr32128_6135:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32128.C'
    sources:
      binary: pr32128.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be at the
          end")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_pr32128_6136:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32128.C'
    sources:
      binary: pr32128.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be at the
          end")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_pr32252_2378:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32252.C'
    sources:
      binary: pr32252.s
  group: GRPSERIAL
test_pr32252_2379:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32252.C'
    sources:
      binary: pr32252.s
  group: GRPSERIAL
test_pr32252_6137:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32252.C'
    sources:
      binary: pr32252.s
  group: GRPSERIAL
test_pr32252_6138:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32252.C'
    sources:
      binary: pr32252.s
  group: GRPSERIAL
test_pr32253_2380:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32253.C'
    sources:
      binary: pr32253.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("11:parameter packs
          not expanded|fp")[^\n]*\n?)+'
test_pr32253_2381:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32253.C'
    sources:
      binary: pr32253.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("11:parameter packs
          not expanded|fp")[^\n]*\n?)+'
test_pr32253_6139:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32253.C'
    sources:
      binary: pr32253.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("11:parameter packs
          not expanded|fp")[^\n]*\n?)+'
test_pr32253_6140:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32253.C'
    sources:
      binary: pr32253.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("11:parameter packs
          not expanded|fp")[^\n]*\n?)+'
test_pr32566_2382:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32566.C'
    sources:
      binary: pr32566.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|expected")[^\n]*\n?)+'
test_pr32566_2383:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32566.C'
    sources:
      binary: pr32566.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|expected")[^\n]*\n?)+'
test_pr32566_6141:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32566.C'
    sources:
      binary: pr32566.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|expected")[^\n]*\n?)+'
test_pr32566_6142:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr32566.C'
    sources:
      binary: pr32566.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|expected")[^\n]*\n?)+'
test_pr33839_2384:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33839.C'
    sources:
      binary: pr33839.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator|expected")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_pr33839_2385:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33839.C'
    sources:
      binary: pr33839.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator|expected")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_pr33839_6143:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33839.C'
    sources:
      binary: pr33839.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator|expected")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_pr33839_6144:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33839.C'
    sources:
      binary: pr33839.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator|expected")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be an expression")[^\n]*\n?)+'
test_pr33930_2386:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33930.C'
    sources:
      binary: pr33930.s
  group: GRPSERIAL
test_pr33930_2387:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33930.C'
    sources:
      binary: pr33930.s
  group: GRPSERIAL
test_pr33930_6145:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33930.C'
    sources:
      binary: pr33930.s
  group: GRPSERIAL
test_pr33930_6146:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33930.C'
    sources:
      binary: pr33930.s
  group: GRPSERIAL
test_pr33955_2388:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33955.C'
    sources:
      binary: pr33955.s
  group: GRPSERIAL
test_pr33955_2389:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33955.C'
    sources:
      binary: pr33955.s
  group: GRPSERIAL
test_pr33955_6147:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33955.C'
    sources:
      binary: pr33955.s
  group: GRPSERIAL
test_pr33955_6148:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33955.C'
    sources:
      binary: pr33955.s
  group: GRPSERIAL
test_pr33996_2390:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33996.C'
    sources:
      binary: pr33996.s
  group: GRPSERIAL
test_pr33996_2391:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33996.C'
    sources:
      binary: pr33996.s
  group: GRPSERIAL
test_pr33996_6149:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33996.C'
    sources:
      binary: pr33996.s
  group: GRPSERIAL
test_pr33996_6150:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr33996.C'
    sources:
      binary: pr33996.s
  group: GRPSERIAL
test_pr34054_2392:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34054.C'
    sources:
      binary: pr34054.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34054_2393:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34054.C'
    sources:
      binary: pr34054.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34054_6151:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34054.C'
    sources:
      binary: pr34054.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34054_6152:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34054.C'
    sources:
      binary: pr34054.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34056_2394:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34056.C'
    sources:
      binary: pr34056.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34056_2395:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34056.C'
    sources:
      binary: pr34056.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34056_6153:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34056.C'
    sources:
      binary: pr34056.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34056_6154:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34056.C'
    sources:
      binary: pr34056.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34057_2396:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34057.C'
    sources:
      binary: pr34057.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34057_2397:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34057.C'
    sources:
      binary: pr34057.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34057_6155:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34057.C'
    sources:
      binary: pr34057.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34057_6156:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34057.C'
    sources:
      binary: pr34057.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34058_2398:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34058.C'
    sources:
      binary: pr34058.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34058_2399:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34058.C'
    sources:
      binary: pr34058.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34058_6157:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34058.C'
    sources:
      binary: pr34058.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34058_6158:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34058.C'
    sources:
      binary: pr34058.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34060_2400:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34060.C'
    sources:
      binary: pr34060.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34060_2401:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34060.C'
    sources:
      binary: pr34060.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34060_6159:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34060.C'
    sources:
      binary: pr34060.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34060_6160:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34060.C'
    sources:
      binary: pr34060.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34061_2402:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34061.C'
    sources:
      binary: pr34061.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34061_2403:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34061.C'
    sources:
      binary: pr34061.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34061_6161:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34061.C'
    sources:
      binary: pr34061.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr34061_6162:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr34061.C'
    sources:
      binary: pr34061.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_pr38646_2404:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr38646.C'
    sources:
      binary: pr38646.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be at the
          end")[^\n]*\n?)+'
test_pr38646_2405:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr38646.C'
    sources:
      binary: pr38646.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be at the
          end")[^\n]*\n?)+'
test_pr38646_6163:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr38646.C'
    sources:
      binary: pr38646.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be at the
          end")[^\n]*\n?)+'
test_pr38646_6164:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr38646.C'
    sources:
      binary: pr38646.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be at the
          end")[^\n]*\n?)+'
test_pr38795_2406:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr38795.C'
    sources:
      binary: pr38795.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded with|T")[^\n]*\n?)+'
test_pr38795_2407:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr38795.C'
    sources:
      binary: pr38795.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded with|T")[^\n]*\n?)+'
test_pr38795_6165:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr38795.C'
    sources:
      binary: pr38795.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded with|T")[^\n]*\n?)+'
test_pr38795_6166:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr38795.C'
    sources:
      binary: pr38795.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded with|T")[^\n]*\n?)+'
test_pr39639_2408:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr39639.C'
    sources:
      binary: pr39639.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected parameter
          pack before \''...\''")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected parameter
          pack before \''...\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected parameter
          pack before \''...\''")[^\n]*\n?)+'
test_pr39639_2409:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr39639.C'
    sources:
      binary: pr39639.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected parameter
          pack before \''...\''")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected parameter
          pack before \''...\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected parameter
          pack before \''...\''")[^\n]*\n?)+'
test_pr39639_6167:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr39639.C'
    sources:
      binary: pr39639.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected parameter
          pack before \''...\''")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected parameter
          pack before \''...\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected parameter
          pack before \''...\''")[^\n]*\n?)+'
test_pr39639_6168:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr39639.C'
    sources:
      binary: pr39639.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected parameter
          pack before \''...\''")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected parameter
          pack before \''...\''")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected parameter
          pack before \''...\''")[^\n]*\n?)+'
test_pr42844-2_2410:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr42844-2.C'
    sources:
      binary: pr42844-2.s
  group: GRPSERIAL
  validate:
    match:
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr42844-2_2411:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr42844-2.C'
    sources:
      binary: pr42844-2.s
  group: GRPSERIAL
  validate:
    match:
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr42844-2_6169:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr42844-2.C'
    sources:
      binary: pr42844-2.s
  group: GRPSERIAL
  validate:
    match:
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr42844-2_6170:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr42844-2.C'
    sources:
      binary: pr42844-2.s
  group: GRPSERIAL
  validate:
    match:
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr45908_2412:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr45908.C'
    sources:
      binary: pr45908.s
  group: GRPSERIAL
test_pr45908_2413:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr45908.C'
    sources:
      binary: pr45908.s
  group: GRPSERIAL
test_pr45908_6171:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr45908.C'
    sources:
      binary: pr45908.s
  group: GRPSERIAL
test_pr45908_6172:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr45908.C'
    sources:
      binary: pr45908.s
  group: GRPSERIAL
test_pr47416_2414:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr47416.C'
    sources:
      binary: pr47416.s
  group: GRPSERIAL
  validate:
    match:
      L186:
        expect: true
        expr: '(^|\n)([^\n]+:186:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a direct
          base")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared
          in this scope")[^\n]*\n?)+'
test_pr47416_2415:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr47416.C'
    sources:
      binary: pr47416.s
  group: GRPSERIAL
  validate:
    match:
      L186:
        expect: true
        expr: '(^|\n)([^\n]+:186:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a direct
          base")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared
          in this scope")[^\n]*\n?)+'
test_pr47416_6173:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr47416.C'
    sources:
      binary: pr47416.s
  group: GRPSERIAL
  validate:
    match:
      L186:
        expect: true
        expr: '(^|\n)([^\n]+:186:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a direct
          base")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared
          in this scope")[^\n]*\n?)+'
test_pr47416_6174:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr47416.C'
    sources:
      binary: pr47416.s
  group: GRPSERIAL
  validate:
    match:
      L186:
        expect: true
        expr: '(^|\n)([^\n]+:186:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a direct
          base")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared
          in this scope")[^\n]*\n?)+'
test_pr47476_2416:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr47476.C'
    sources:
      binary: pr47476.s
  group: GRPSERIAL
test_pr47476_2417:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr47476.C'
    sources:
      binary: pr47476.s
  group: GRPSERIAL
test_pr47476_6175:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr47476.C'
    sources:
      binary: pr47476.s
  group: GRPSERIAL
test_pr47476_6176:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr47476.C'
    sources:
      binary: pr47476.s
  group: GRPSERIAL
test_pr48453_2418:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr48453.C'
    sources:
      binary: pr48453.s
  group: GRPSERIAL
test_pr48453_2419:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr48453.C'
    sources:
      binary: pr48453.s
  group: GRPSERIAL
test_pr48453_6177:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr48453.C'
    sources:
      binary: pr48453.s
  group: GRPSERIAL
test_pr48453_6178:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr48453.C'
    sources:
      binary: pr48453.s
  group: GRPSERIAL
test_pr48522_2420:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr48522.C'
    sources:
      binary: pr48522.s
  group: GRPSERIAL
test_pr48522_2421:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr48522.C'
    sources:
      binary: pr48522.s
  group: GRPSERIAL
test_pr48522_6179:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr48522.C'
    sources:
      binary: pr48522.s
  group: GRPSERIAL
test_pr48522_6180:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr48522.C'
    sources:
      binary: pr48522.s
  group: GRPSERIAL
test_pr50025_2422:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr50025.C'
    sources:
      binary: pr50025.s
  group: GRPSERIAL
test_pr50025_2423:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr50025.C'
    sources:
      binary: pr50025.s
  group: GRPSERIAL
test_pr50025_6181:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr50025.C'
    sources:
      binary: pr50025.s
  group: GRPSERIAL
test_pr50025_6182:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr50025.C'
    sources:
      binary: pr50025.s
  group: GRPSERIAL
test_pr50491_2424:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr50491.C'
    sources:
      binary: pr50491.s
  group: GRPSERIAL
test_pr50491_2425:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr50491.C'
    sources:
      binary: pr50491.s
  group: GRPSERIAL
test_pr50491_6183:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr50491.C'
    sources:
      binary: pr50491.s
  group: GRPSERIAL
test_pr50491_6184:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr50491.C'
    sources:
      binary: pr50491.s
  group: GRPSERIAL
test_pr50901_2426:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr50901.C'
    sources:
      binary: pr50901.s
  group: GRPSERIAL
test_pr50901_2427:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr50901.C'
    sources:
      binary: pr50901.s
  group: GRPSERIAL
test_pr50901_6185:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr50901.C'
    sources:
      binary: pr50901.s
  group: GRPSERIAL
test_pr50901_6186:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr50901.C'
    sources:
      binary: pr50901.s
  group: GRPSERIAL
test_pr51150_2428:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51150.C'
    sources:
      binary: pr51150.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
test_pr51150_2429:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51150.C'
    sources:
      binary: pr51150.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
test_pr51150_6187:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51150.C'
    sources:
      binary: pr51150.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
test_pr51150_6188:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51150.C'
    sources:
      binary: pr51150.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
test_pr51216_2430:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51216.C'
    sources:
      binary: pr51216.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
test_pr51216_2431:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51216.C'
    sources:
      binary: pr51216.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
test_pr51216_6189:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51216.C'
    sources:
      binary: pr51216.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
test_pr51216_6190:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51216.C'
    sources:
      binary: pr51216.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ignored")[^\n]*\n?)+'
test_pr51225_2432:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51225.C'
    sources:
      binary: pr51225.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared|invalid
          type")[^\n]*\n?)+'
test_pr51225_2433:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51225.C'
    sources:
      binary: pr51225.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared|invalid
          type")[^\n]*\n?)+'
test_pr51225_6191:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51225.C'
    sources:
      binary: pr51225.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared|invalid
          type")[^\n]*\n?)+'
test_pr51225_6192:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51225.C'
    sources:
      binary: pr51225.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared|invalid
          type")[^\n]*\n?)+'
test_pr51226_2434:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51226.C'
    sources:
      binary: pr51226.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number")[^\n]*\n?)+'
test_pr51226_2435:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51226.C'
    sources:
      binary: pr51226.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number")[^\n]*\n?)+'
test_pr51226_6193:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51226.C'
    sources:
      binary: pr51226.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number")[^\n]*\n?)+'
test_pr51226_6194:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51226.C'
    sources:
      binary: pr51226.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number")[^\n]*\n?)+'
test_pr51313_2436:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51313.C'
    sources:
      binary: pr51313.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion")[^\n]*\n?)+'
test_pr51313_2437:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51313.C'
    sources:
      binary: pr51313.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion")[^\n]*\n?)+'
test_pr51313_6195:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51313.C'
    sources:
      binary: pr51313.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion")[^\n]*\n?)+'
test_pr51313_6196:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51313.C'
    sources:
      binary: pr51313.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion")[^\n]*\n?)+'
test_pr51420_2438:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51420.C'
    sources:
      binary: pr51420.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_F\'' was not
          declared in this scope")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
test_pr51420_2439:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51420.C'
    sources:
      binary: pr51420.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_F\'' was not
          declared in this scope")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
test_pr51420_6197:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51420.C'
    sources:
      binary: pr51420.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_F\'' was not
          declared in this scope")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
test_pr51420_6198:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51420.C'
    sources:
      binary: pr51420.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_F\'' was not
          declared in this scope")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
test_pr51463_2440:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51463.C'
    sources:
      binary: pr51463.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("both \''virtual\''
          and \''static\''|declared as")[^\n]*\n?)+'
test_pr51463_2441:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51463.C'
    sources:
      binary: pr51463.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("both \''virtual\''
          and \''static\''|declared as")[^\n]*\n?)+'
test_pr51463_6199:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51463.C'
    sources:
      binary: pr51463.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("both \''virtual\''
          and \''static\''|declared as")[^\n]*\n?)+'
test_pr51463_6200:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51463.C'
    sources:
      binary: pr51463.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("both \''virtual\''
          and \''static\''|declared as")[^\n]*\n?)+'
test_pr51547_2442:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51547.C'
    sources:
      binary: pr51547.s
  group: GRPSERIAL
test_pr51547_2443:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51547.C'
    sources:
      binary: pr51547.s
  group: GRPSERIAL
test_pr51547_6201:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51547.C'
    sources:
      binary: pr51547.s
  group: GRPSERIAL
test_pr51547_6202:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51547.C'
    sources:
      binary: pr51547.s
  group: GRPSERIAL
test_pr51619_2444:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51619.C'
    sources:
      binary: pr51619.s
  group: GRPSERIAL
test_pr51619_2445:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51619.C'
    sources:
      binary: pr51619.s
  group: GRPSERIAL
test_pr51619_6203:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51619.C'
    sources:
      binary: pr51619.s
  group: GRPSERIAL
test_pr51619_6204:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51619.C'
    sources:
      binary: pr51619.s
  group: GRPSERIAL
test_pr51786_2446:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51786.C'
    sources:
      binary: pr51786.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
test_pr51786_2447:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51786.C'
    sources:
      binary: pr51786.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
test_pr51786_6205:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51786.C'
    sources:
      binary: pr51786.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
test_pr51786_6206:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr51786.C'
    sources:
      binary: pr51786.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not declare
          anything")[^\n]*\n?)+'
test_pr52440_2448:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52440.C'
    sources:
      binary: pr52440.s
  group: GRPSERIAL
test_pr52440_2449:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52440.C'
    sources:
      binary: pr52440.s
  group: GRPSERIAL
test_pr52440_6207:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52440.C'
    sources:
      binary: pr52440.s
  group: GRPSERIAL
test_pr52440_6208:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52440.C'
    sources:
      binary: pr52440.s
  group: GRPSERIAL
test_pr52742_2450:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52742.C'
    sources:
      binary: pr52742.s
  group: GRPSERIAL
test_pr52742_2451:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52742.C'
    sources:
      binary: pr52742.s
  group: GRPSERIAL
test_pr52742_6209:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52742.C'
    sources:
      binary: pr52742.s
  group: GRPSERIAL
test_pr52742_6210:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52742.C'
    sources:
      binary: pr52742.s
  group: GRPSERIAL
test_pr52744_2452:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52744.C'
    sources:
      binary: pr52744.s
  group: GRPSERIAL
test_pr52744_2453:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52744.C'
    sources:
      binary: pr52744.s
  group: GRPSERIAL
test_pr52744_6211:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52744.C'
    sources:
      binary: pr52744.s
  group: GRPSERIAL
test_pr52744_6212:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52744.C'
    sources:
      binary: pr52744.s
  group: GRPSERIAL
test_pr52841_2454:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52841.C'
    sources:
      binary: pr52841.s
  group: GRPSERIAL
test_pr52841_2455:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52841.C'
    sources:
      binary: pr52841.s
  group: GRPSERIAL
test_pr52841_2456:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52841.C'
    sources:
      binary: pr52841.s
  group: GRPSERIAL
test_pr52841_6213:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52841.C'
    sources:
      binary: pr52841.s
  group: GRPSERIAL
test_pr52841_6214:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52841.C'
    sources:
      binary: pr52841.s
  group: GRPSERIAL
test_pr52841_6215:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr52841.C'
    sources:
      binary: pr52841.s
  group: GRPSERIAL
test_pr53223_2457:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr53223.C'
    sources:
      binary: pr53223.s
  group: GRPSERIAL
test_pr53223_2458:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr53223.C'
    sources:
      binary: pr53223.s
  group: GRPSERIAL
test_pr53223_6216:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr53223.C'
    sources:
      binary: pr53223.s
  group: GRPSERIAL
test_pr53223_6217:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr53223.C'
    sources:
      binary: pr53223.s
  group: GRPSERIAL
test_pr53792_2459:
  build:
    cflags: "-std=gnu++11 -O2 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr53792.C'
    sources:
      binary: pr53792.s
  group: GRPSERIAL
test_pr53792_2460:
  build:
    cflags: "-std=gnu++14 -O2 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr53792.C'
    sources:
      binary: pr53792.s
  group: GRPSERIAL
test_pr53792_6218:
  build:
    cflags: "-std=gnu++11 -O2 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr53792.C'
    sources:
      binary: pr53792.s
  group: GRPSERIAL
test_pr53792_6219:
  build:
    cflags: "-std=gnu++14 -O2 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr53792.C'
    sources:
      binary: pr53792.s
  group: GRPSERIAL
test_pr54318_2461:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr54318.C'
    sources:
      binary: pr54318.s
  group: GRPSERIAL
test_pr54318_2462:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr54318.C'
    sources:
      binary: pr54318.s
  group: GRPSERIAL
test_pr54318_6220:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr54318.C'
    sources:
      binary: pr54318.s
  group: GRPSERIAL
test_pr54318_6221:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr54318.C'
    sources:
      binary: pr54318.s
  group: GRPSERIAL
test_pr54323_2463:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr54323.C'
    sources:
      binary: pr54323.s
  group: GRPSERIAL
test_pr54323_2464:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr54323.C'
    sources:
      binary: pr54323.s
  group: GRPSERIAL
test_pr54323_6222:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr54323.C'
    sources:
      binary: pr54323.s
  group: GRPSERIAL
test_pr54323_6223:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr54323.C'
    sources:
      binary: pr54323.s
  group: GRPSERIAL
test_pr54377_2465:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr54377.C'
    sources:
      binary: pr54377.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("at least 2")[^\n]*\n?)+'
test_pr54377_2466:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr54377.C'
    sources:
      binary: pr54377.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("at least 2")[^\n]*\n?)+'
test_pr54377_6224:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr54377.C'
    sources:
      binary: pr54377.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("at least 2")[^\n]*\n?)+'
test_pr54377_6225:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr54377.C'
    sources:
      binary: pr54377.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("at least 2")[^\n]*\n?)+'
test_pr57101_2467:
  build:
    cflags: "-std=gnu++11 -fcompare-debug\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57101.C'
    sources:
      binary: pr57101.s
  group: GRPSERIAL
  validate:
    match:
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("used but never defined")[^\n]*\n?)+'
test_pr57101_2468:
  build:
    cflags: "-std=gnu++14 -fcompare-debug\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57101.C'
    sources:
      binary: pr57101.s
  group: GRPSERIAL
  validate:
    match:
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("used but never defined")[^\n]*\n?)+'
test_pr57101_6226:
  build:
    cflags: "-std=gnu++11 -fcompare-debug\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57101.C'
    sources:
      binary: pr57101.s
  group: GRPSERIAL
  validate:
    match:
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("used but never defined")[^\n]*\n?)+'
test_pr57101_6227:
  build:
    cflags: "-std=gnu++14 -fcompare-debug\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57101.C'
    sources:
      binary: pr57101.s
  group: GRPSERIAL
  validate:
    match:
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("used but never defined")[^\n]*\n?)+'
test_pr57172_2469:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57172.C'
    sources:
      binary: pr57172.s
  group: GRPSERIAL
test_pr57172_2470:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57172.C'
    sources:
      binary: pr57172.s
  group: GRPSERIAL
test_pr57172_6228:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57172.C'
    sources:
      binary: pr57172.s
  group: GRPSERIAL
test_pr57172_6229:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57172.C'
    sources:
      binary: pr57172.s
  group: GRPSERIAL
test_pr57416_2471:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57416.C'
    sources:
      binary: pr57416.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
test_pr57416_2472:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57416.C'
    sources:
      binary: pr57416.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
test_pr57416_6230:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57416.C'
    sources:
      binary: pr57416.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
test_pr57416_6231:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57416.C'
    sources:
      binary: pr57416.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'
test_pr57543-1_2473:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57543-1.C'
    sources:
      binary: pr57543-1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr57543-1_2474:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57543-1.C'
    sources:
      binary: pr57543-1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr57543-1_6232:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57543-1.C'
    sources:
      binary: pr57543-1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr57543-1_6233:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57543-1.C'
    sources:
      binary: pr57543-1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr57543-2_2475:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57543-2.C'
    sources:
      binary: pr57543-2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr57543-2_2476:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57543-2.C'
    sources:
      binary: pr57543-2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr57543-2_6234:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57543-2.C'
    sources:
      binary: pr57543-2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr57543-2_6235:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57543-2.C'
    sources:
      binary: pr57543-2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr57543-3_2477:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57543-3.C'
    sources:
      binary: pr57543-3.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr57543-3_2478:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57543-3.C'
    sources:
      binary: pr57543-3.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr57543-3_6236:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57543-3.C'
    sources:
      binary: pr57543-3.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr57543-3_6237:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57543-3.C'
    sources:
      binary: pr57543-3.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr57958_2479:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57958.C'
    sources:
      binary: ./pr57958.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr57958_2480:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57958.C'
    sources:
      binary: ./pr57958.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr57958_6238:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57958.C'
    sources:
      binary: ./pr57958.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr57958_6239:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57958.C'
    sources:
      binary: ./pr57958.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr57981_2481:
  build:
    cflags: "-std=gnu++11 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57981.C'
    sources:
      binary: pr57981.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("unused parameter")[^\n]*\n?)+'
test_pr57981_2482:
  build:
    cflags: "-std=gnu++14 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57981.C'
    sources:
      binary: pr57981.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("unused parameter")[^\n]*\n?)+'
test_pr57981_6240:
  build:
    cflags: "-std=gnu++11 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57981.C'
    sources:
      binary: pr57981.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("unused parameter")[^\n]*\n?)+'
test_pr57981_6241:
  build:
    cflags: "-std=gnu++14 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr57981.C'
    sources:
      binary: pr57981.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("unused parameter")[^\n]*\n?)+'
test_pr58046_2483:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58046.C'
    sources:
      binary: pr58046.s
  group: GRPSERIAL
  validate:
    match:
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind")[^\n]*\n?)+'
test_pr58046_2484:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58046.C'
    sources:
      binary: pr58046.s
  group: GRPSERIAL
  validate:
    match:
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind")[^\n]*\n?)+'
test_pr58046_6242:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58046.C'
    sources:
      binary: pr58046.s
  group: GRPSERIAL
  validate:
    match:
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind")[^\n]*\n?)+'
test_pr58046_6243:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58046.C'
    sources:
      binary: pr58046.s
  group: GRPSERIAL
  validate:
    match:
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind")[^\n]*\n?)+'
test_pr58072_2485:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58072.C'
    sources:
      binary: pr58072.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before numeric constant")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before numeric constant")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
test_pr58072_2486:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58072.C'
    sources:
      binary: pr58072.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before numeric constant")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before numeric constant")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
test_pr58072_6244:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58072.C'
    sources:
      binary: pr58072.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before numeric constant")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before numeric constant")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
test_pr58072_6245:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58072.C'
    sources:
      binary: pr58072.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined string literal")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before numeric constant")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before numeric constant")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before user-defined character literal")[^\n]*\n?)+'
test_pr58080_2487:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58080.C'
    sources:
      binary: pr58080.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer")[^\n]*\n?)+'
test_pr58080_2488:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58080.C'
    sources:
      binary: pr58080.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer")[^\n]*\n?)+'
test_pr58080_6246:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58080.C'
    sources:
      binary: pr58080.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer")[^\n]*\n?)+'
test_pr58080_6247:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58080.C'
    sources:
      binary: pr58080.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer")[^\n]*\n?)+'
test_pr58155_2489:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58155.C'
    sources:
      binary: pr58155.s
  group: GRPSERIAL
test_pr58155_2490:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58155.C'
    sources:
      binary: pr58155.s
  group: GRPSERIAL
test_pr58155_6248:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58155.C'
    sources:
      binary: pr58155.s
  group: GRPSERIAL
test_pr58155_6249:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58155.C'
    sources:
      binary: pr58155.s
  group: GRPSERIAL
test_pr58510_2491:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58510.C'
    sources:
      binary: pr58510.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
test_pr58510_2492:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58510.C'
    sources:
      binary: pr58510.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
test_pr58510_6250:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58510.C'
    sources:
      binary: pr58510.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
test_pr58510_6251:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58510.C'
    sources:
      binary: pr58510.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
test_pr58563_2493:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58563.C'
    sources:
      binary: pr58563.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr58563_2494:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58563.C'
    sources:
      binary: pr58563.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr58563_6252:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58563.C'
    sources:
      binary: pr58563.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr58563_6253:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58563.C'
    sources:
      binary: pr58563.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a class")[^\n]*\n?)+'
test_pr58674_2495:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58674.C'
    sources:
      binary: pr58674.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not usable")[^\n]*\n?)+'
test_pr58674_2496:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58674.C'
    sources:
      binary: pr58674.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not usable")[^\n]*\n?)+'
test_pr58674_6254:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58674.C'
    sources:
      binary: pr58674.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not usable")[^\n]*\n?)+'
test_pr58674_6255:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58674.C'
    sources:
      binary: pr58674.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not usable")[^\n]*\n?)+'
test_pr58707_2497:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58707.C'
    sources:
      binary: pr58707.s
  group: GRPSERIAL
test_pr58707_2498:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58707.C'
    sources:
      binary: pr58707.s
  group: GRPSERIAL
test_pr58707_6256:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58707.C'
    sources:
      binary: pr58707.s
  group: GRPSERIAL
test_pr58707_6257:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58707.C'
    sources:
      binary: pr58707.s
  group: GRPSERIAL
test_pr58781_2499:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58781.C'
    sources:
      binary: pr58781.s
  group: GRPSERIAL
test_pr58781_2500:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58781.C'
    sources:
      binary: pr58781.s
  group: GRPSERIAL
test_pr58781_6258:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58781.C'
    sources:
      binary: pr58781.s
  group: GRPSERIAL
test_pr58781_6259:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58781.C'
    sources:
      binary: pr58781.s
  group: GRPSERIAL
test_pr58871_2501:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58871.C'
    sources:
      binary: pr58871.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("base type")[^\n]*\n?)+'
test_pr58871_2502:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58871.C'
    sources:
      binary: pr58871.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("base type")[^\n]*\n?)+'
test_pr58871_6260:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58871.C'
    sources:
      binary: pr58871.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("base type")[^\n]*\n?)+'
test_pr58871_6261:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr58871.C'
    sources:
      binary: pr58871.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("base type")[^\n]*\n?)+'
test_pr59111_2503:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr59111.C'
    sources:
      binary: pr59111.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type specifier
          without trailing return type")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_pr59111_2504:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr59111.C'
    sources:
      binary: pr59111.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type specifier
          without trailing return type")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_pr59111_6262:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr59111.C'
    sources:
      binary: pr59111.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type specifier
          without trailing return type")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_pr59111_6263:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr59111.C'
    sources:
      binary: pr59111.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type specifier
          without trailing return type")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_pr59641_2505:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr59641.C'
    sources:
      binary: pr59641.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant")[^\n]*\n?)+'
test_pr59641_2506:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr59641.C'
    sources:
      binary: pr59641.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant")[^\n]*\n?)+'
test_pr59641_6264:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr59641.C'
    sources:
      binary: pr59641.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant")[^\n]*\n?)+'
test_pr59641_6265:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr59641.C'
    sources:
      binary: pr59641.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant")[^\n]*\n?)+'
test_pr59816_2507:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr59816.C'
    sources:
      binary: pr59816.s
  group: GRPSERIAL
test_pr59816_2508:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr59816.C'
    sources:
      binary: pr59816.s
  group: GRPSERIAL
test_pr59816_6266:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr59816.C'
    sources:
      binary: pr59816.s
  group: GRPSERIAL
test_pr59816_6267:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr59816.C'
    sources:
      binary: pr59816.s
  group: GRPSERIAL
test_pr60047_2509:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60047.C'
    sources:
      binary: pr60047.s
  group: GRPSERIAL
test_pr60047_2510:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60047.C'
    sources:
      binary: pr60047.s
  group: GRPSERIAL
test_pr60047_6268:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60047.C'
    sources:
      binary: pr60047.s
  group: GRPSERIAL
test_pr60047_6269:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60047.C'
    sources:
      binary: pr60047.s
  group: GRPSERIAL
test_pr60209-neg_2511:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60209-neg.C'
    sources:
      binary: pr60209-neg.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported non-standard
          concatenation of string literals")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inconsistent
          user-defined literal suffixes")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unexpected keyword;
          remove space between quotes and suffix identifier")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected suffix
          identifier")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected empty
          string after")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected empty
          string after")[^\n]*\n?)+'
test_pr60209-neg_2512:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60209-neg.C'
    sources:
      binary: pr60209-neg.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported non-standard
          concatenation of string literals")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inconsistent
          user-defined literal suffixes")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unexpected keyword;
          remove space between quotes and suffix identifier")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected suffix
          identifier")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected empty
          string after")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected empty
          string after")[^\n]*\n?)+'
test_pr60209-neg_6270:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60209-neg.C'
    sources:
      binary: pr60209-neg.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported non-standard
          concatenation of string literals")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inconsistent
          user-defined literal suffixes")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unexpected keyword;
          remove space between quotes and suffix identifier")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected suffix
          identifier")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected empty
          string after")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected empty
          string after")[^\n]*\n?)+'
test_pr60209-neg_6271:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60209-neg.C'
    sources:
      binary: pr60209-neg.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported non-standard
          concatenation of string literals")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inconsistent
          user-defined literal suffixes")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unexpected keyword;
          remove space between quotes and suffix identifier")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected suffix
          identifier")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid encoding
          prefix in literal operator")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected empty
          string after")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected empty
          string after")[^\n]*\n?)+'
test_pr60209_2513:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60209.C'
    sources:
      binary: pr60209.s
  group: GRPSERIAL
test_pr60209_2514:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60209.C'
    sources:
      binary: pr60209.s
  group: GRPSERIAL
test_pr60209_6272:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60209.C'
    sources:
      binary: pr60209.s
  group: GRPSERIAL
test_pr60209_6273:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60209.C'
    sources:
      binary: pr60209.s
  group: GRPSERIAL
test_pr60215_2515:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60215.C'
    sources:
      binary: pr60215.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width")[^\n]*\n?)+'
test_pr60215_2516:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60215.C'
    sources:
      binary: pr60215.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width")[^\n]*\n?)+'
test_pr60215_6274:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60215.C'
    sources:
      binary: pr60215.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width")[^\n]*\n?)+'
test_pr60215_6275:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60215.C'
    sources:
      binary: pr60215.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width")[^\n]*\n?)+'
test_pr60249_2517:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60249.C'
    sources:
      binary: pr60249.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator")[^\n]*\n?)+'
test_pr60249_2518:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60249.C'
    sources:
      binary: pr60249.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator")[^\n]*\n?)+'
test_pr60249_6276:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60249.C'
    sources:
      binary: pr60249.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator")[^\n]*\n?)+'
test_pr60249_6277:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr60249.C'
    sources:
      binary: pr60249.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator")[^\n]*\n?)+'
test_pr61019_2519:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr61019.C'
    sources:
      binary: pr61019.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr61019_2520:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr61019.C'
    sources:
      binary: pr61019.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr61019_6278:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr61019.C'
    sources:
      binary: pr61019.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr61019_6279:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr61019.C'
    sources:
      binary: pr61019.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr61038_2521:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr61038.C'
    sources:
      binary: pr61038.s
  group: GRPSERIAL
test_pr61038_2522:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr61038.C'
    sources:
      binary: pr61038.s
  group: GRPSERIAL
test_pr61038_6280:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr61038.C'
    sources:
      binary: pr61038.s
  group: GRPSERIAL
test_pr61038_6281:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr61038.C'
    sources:
      binary: pr61038.s
  group: GRPSERIAL
test_pr61924_2523:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr61924.C'
    sources:
      binary: pr61924.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
test_pr61924_2524:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr61924.C'
    sources:
      binary: pr61924.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
test_pr61924_6282:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr61924.C'
    sources:
      binary: pr61924.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
test_pr61924_6283:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr61924.C'
    sources:
      binary: pr61924.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never defined")[^\n]*\n?)+'
test_pr62024_2525:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr62024.C'
    sources:
      binary: pr62024.s
  group: GRPSERIAL
test_pr62024_2526:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr62024.C'
    sources:
      binary: pr62024.s
  group: GRPSERIAL
test_pr62024_6284:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr62024.C'
    sources:
      binary: pr62024.s
  group: GRPSERIAL
test_pr62024_6285:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr62024.C'
    sources:
      binary: pr62024.s
  group: GRPSERIAL
test_pr62101_2527:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr62101.C'
    sources:
      binary: pr62101.s
  group: GRPSERIAL
  validate:
    match:
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer specified
          for friend function")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
test_pr62101_2528:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr62101.C'
    sources:
      binary: pr62101.s
  group: GRPSERIAL
  validate:
    match:
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer specified
          for friend function")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
test_pr62101_6286:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr62101.C'
    sources:
      binary: pr62101.s
  group: GRPSERIAL
  validate:
    match:
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer specified
          for friend function")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
test_pr62101_6287:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr62101.C'
    sources:
      binary: pr62101.s
  group: GRPSERIAL
  validate:
    match:
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted
          function")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer specified
          for friend function")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be defaulted")[^\n]*\n?)+'
test_pr63506-1_2529:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr63506-1.C'
    sources:
      binary: pr63506-1.s
  group: GRPSERIAL
test_pr63506-1_2530:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr63506-1.C'
    sources:
      binary: pr63506-1.s
  group: GRPSERIAL
test_pr63506-1_6288:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr63506-1.C'
    sources:
      binary: pr63506-1.s
  group: GRPSERIAL
test_pr63506-1_6289:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr63506-1.C'
    sources:
      binary: pr63506-1.s
  group: GRPSERIAL
test_pr63506-2_2531:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr63506-2.C'
    sources:
      binary: pr63506-2.s
  group: GRPSERIAL
test_pr63506-2_2532:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr63506-2.C'
    sources:
      binary: pr63506-2.s
  group: GRPSERIAL
test_pr63506-2_6290:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr63506-2.C'
    sources:
      binary: pr63506-2.s
  group: GRPSERIAL
test_pr63506-2_6291:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr63506-2.C'
    sources:
      binary: pr63506-2.s
  group: GRPSERIAL
test_pr63904_2533:
  build:
    cflags: "-std=gnu++11 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr63904.C'
    sources:
      binary: pr63904.s
  group: GRPSERIAL
test_pr63904_2534:
  build:
    cflags: "-std=gnu++14 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr63904.C'
    sources:
      binary: pr63904.s
  group: GRPSERIAL
test_pr63904_6292:
  build:
    cflags: "-std=gnu++11 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr63904.C'
    sources:
      binary: pr63904.s
  group: GRPSERIAL
test_pr63904_6293:
  build:
    cflags: "-std=gnu++14 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr63904.C'
    sources:
      binary: pr63904.s
  group: GRPSERIAL
test_pr65072_2535:
  build:
    cflags: "-std=gnu++11 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65072.C'
    sources:
      binary: pr65072.s
  group: GRPSERIAL
test_pr65072_2536:
  build:
    cflags: "-std=gnu++14 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65072.C'
    sources:
      binary: pr65072.s
  group: GRPSERIAL
test_pr65072_6294:
  build:
    cflags: "-std=gnu++11 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65072.C'
    sources:
      binary: pr65072.s
  group: GRPSERIAL
test_pr65072_6295:
  build:
    cflags: "-std=gnu++14 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65072.C'
    sources:
      binary: pr65072.s
  group: GRPSERIAL
test_pr65075_2537:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65075.C'
    sources:
      binary: pr65075.s
  group: GRPSERIAL
test_pr65075_2538:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65075.C'
    sources:
      binary: pr65075.s
  group: GRPSERIAL
test_pr65075_6296:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65075.C'
    sources:
      binary: pr65075.s
  group: GRPSERIAL
test_pr65075_6297:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65075.C'
    sources:
      binary: pr65075.s
  group: GRPSERIAL
test_pr65127_2539:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65127.C'
    sources:
      binary: pr65127.s
  group: GRPSERIAL
test_pr65127_2540:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65127.C'
    sources:
      binary: pr65127.s
  group: GRPSERIAL
test_pr65127_6298:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65127.C'
    sources:
      binary: pr65127.s
  group: GRPSERIAL
test_pr65127_6299:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65127.C'
    sources:
      binary: pr65127.s
  group: GRPSERIAL
test_pr65327_2541:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65327.C'
    sources:
      binary: pr65327.s
  group: GRPSERIAL
test_pr65327_2542:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65327.C'
    sources:
      binary: pr65327.s
  group: GRPSERIAL
test_pr65327_6300:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65327.C'
    sources:
      binary: pr65327.s
  group: GRPSERIAL
test_pr65327_6301:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65327.C'
    sources:
      binary: pr65327.s
  group: GRPSERIAL
test_pr65398-2_2543:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65398-2.C'
    sources:
      binary: pr65398-2.s
  group: GRPSERIAL
test_pr65398-2_2544:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65398-2.C'
    sources:
      binary: pr65398-2.s
  group: GRPSERIAL
test_pr65398-2_6302:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65398-2.C'
    sources:
      binary: pr65398-2.s
  group: GRPSERIAL
test_pr65398-2_6303:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65398-2.C'
    sources:
      binary: pr65398-2.s
  group: GRPSERIAL
test_pr65398_2545:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65398.C'
    sources:
      binary: pr65398.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_pr65398_2546:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65398.C'
    sources:
      binary: pr65398.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_pr65398_6304:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65398.C'
    sources:
      binary: pr65398.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_pr65398_6305:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65398.C'
    sources:
      binary: pr65398.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript")[^\n]*\n?)+'
test_pr65558_2547:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65558.C'
    sources:
      binary: pr65558.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignoring .__abi_tag__.
          attribute on anonymous namespace")[^\n]*\n?)+'
test_pr65558_2548:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65558.C'
    sources:
      binary: pr65558.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignoring .__abi_tag__.
          attribute on anonymous namespace")[^\n]*\n?)+'
test_pr65558_6306:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65558.C'
    sources:
      binary: pr65558.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignoring .__abi_tag__.
          attribute on anonymous namespace")[^\n]*\n?)+'
test_pr65558_6307:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65558.C'
    sources:
      binary: pr65558.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignoring .__abi_tag__.
          attribute on anonymous namespace")[^\n]*\n?)+'
test_pr65736_2549:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65736.C'
    sources:
      binary: pr65736.s
  group: GRPSERIAL
test_pr65736_2550:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65736.C'
    sources:
      binary: pr65736.s
  group: GRPSERIAL
test_pr65736_6308:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65736.C'
    sources:
      binary: pr65736.s
  group: GRPSERIAL
test_pr65736_6309:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65736.C'
    sources:
      binary: pr65736.s
  group: GRPSERIAL
test_pr65954_2551:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65954.C'
    sources:
      binary: pr65954.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a member
          of")[^\n]*\n?)+'
test_pr65954_2552:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65954.C'
    sources:
      binary: pr65954.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a member
          of")[^\n]*\n?)+'
test_pr65954_6310:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65954.C'
    sources:
      binary: pr65954.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a member
          of")[^\n]*\n?)+'
test_pr65954_6311:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr65954.C'
    sources:
      binary: pr65954.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a member
          of")[^\n]*\n?)+'
test_pr66130_2553:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr66130.C'
    sources:
      binary: pr66130.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member function
          of type \''void \\\\(Local::\\\\)\\\\(\\\\)\''")[^\n]*\n?)+'
test_pr66130_2554:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr66130.C'
    sources:
      binary: pr66130.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member function
          of type \''void \\\\(Local::\\\\)\\\\(\\\\)\''")[^\n]*\n?)+'
test_pr66130_6312:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr66130.C'
    sources:
      binary: pr66130.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member function
          of type \''void \\\\(Local::\\\\)\\\\(\\\\)\''")[^\n]*\n?)+'
test_pr66130_6313:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr66130.C'
    sources:
      binary: pr66130.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member function
          of type \''void \\\\(Local::\\\\)\\\\(\\\\)\''")[^\n]*\n?)+'
test_pr66243_2555:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr66243.C'
    sources:
      binary: pr66243.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_pr66243_2556:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr66243.C'
    sources:
      binary: pr66243.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_pr66243_6314:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr66243.C'
    sources:
      binary: pr66243.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_pr66243_6315:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr66243.C'
    sources:
      binary: pr66243.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_pr66443-cxx11-2_2557:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr66443-cxx11-2.C'
    sources:
      binary: pr66443-cxx11-2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is private")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
test_pr66443-cxx11-2_6316:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr66443-cxx11-2.C'
    sources:
      binary: pr66443-cxx11-2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is private")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
test_pr66443-cxx11_2558:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr66443-cxx11.C'
    sources:
      binary: pr66443-cxx11.s
  group: GRPSERIAL
  validate:
    match:
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted function")[^\n]*\n?)+'
test_pr66443-cxx11_6317:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr66443-cxx11.C'
    sources:
      binary: pr66443-cxx11.s
  group: GRPSERIAL
  validate:
    match:
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted function")[^\n]*\n?)+'
test_pr67238_2559:
  build:
    cflags: "-std=gnu++11 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr67238.C'
    sources:
      binary: pr67238.s
  group: GRPSERIAL
test_pr67238_2560:
  build:
    cflags: "-std=gnu++14 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr67238.C'
    sources:
      binary: pr67238.s
  group: GRPSERIAL
test_pr67238_6318:
  build:
    cflags: "-std=gnu++11 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr67238.C'
    sources:
      binary: pr67238.s
  group: GRPSERIAL
test_pr67238_6319:
  build:
    cflags: "-std=gnu++14 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr67238.C'
    sources:
      binary: pr67238.s
  group: GRPSERIAL
test_pr67767_2561:
  build:
    cflags: "-std=gnu++11 -Wsuggest-attribute=noreturn\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr67767.C'
    sources:
      binary: pr67767.s
  group: GRPSERIAL
test_pr67767_2562:
  build:
    cflags: "-std=gnu++14 -Wsuggest-attribute=noreturn\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr67767.C'
    sources:
      binary: pr67767.s
  group: GRPSERIAL
test_pr67767_6320:
  build:
    cflags: "-std=gnu++11 -Wsuggest-attribute=noreturn\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr67767.C'
    sources:
      binary: pr67767.s
  group: GRPSERIAL
test_pr67767_6321:
  build:
    cflags: "-std=gnu++14 -Wsuggest-attribute=noreturn\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr67767.C'
    sources:
      binary: pr67767.s
  group: GRPSERIAL
test_pr68116_2563:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68116.C'
    sources:
      binary: pr68116.s
  group: GRPSERIAL
test_pr68116_2564:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68116.C'
    sources:
      binary: pr68116.s
  group: GRPSERIAL
test_pr68116_6322:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68116.C'
    sources:
      binary: pr68116.s
  group: GRPSERIAL
test_pr68116_6323:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68116.C'
    sources:
      binary: pr68116.s
  group: GRPSERIAL
test_pr68348_2565:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68348.C'
    sources:
      binary: pr68348.s
  group: GRPSERIAL
test_pr68348_2566:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68348.C'
    sources:
      binary: pr68348.s
  group: GRPSERIAL
test_pr68348_6324:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68348.C'
    sources:
      binary: pr68348.s
  group: GRPSERIAL
test_pr68348_6325:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68348.C'
    sources:
      binary: pr68348.s
  group: GRPSERIAL
test_pr68724_2567:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68724.C'
    sources:
      binary: pr68724.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_pr68724_2568:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68724.C'
    sources:
      binary: pr68724.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_pr68724_6326:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68724.C'
    sources:
      binary: pr68724.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_pr68724_6327:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68724.C'
    sources:
      binary: pr68724.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_pr68726_2569:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68726.C'
    sources:
      binary: pr68726.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_pr68726_2570:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68726.C'
    sources:
      binary: pr68726.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_pr68726_6328:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68726.C'
    sources:
      binary: pr68726.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_pr68726_6329:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr68726.C'
    sources:
      binary: pr68726.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
test_pr69056_2571:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69056.C'
    sources:
      binary: pr69056.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_pr69056_2572:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69056.C'
    sources:
      binary: pr69056.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_pr69056_6330:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69056.C'
    sources:
      binary: pr69056.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_pr69056_6331:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69056.C'
    sources:
      binary: pr69056.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_pr69481_2573:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69481.C'
    sources:
      binary: pr69481.s
  group: GRPSERIAL
test_pr69481_2574:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69481.C'
    sources:
      binary: pr69481.s
  group: GRPSERIAL
test_pr69481_6332:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69481.C'
    sources:
      binary: pr69481.s
  group: GRPSERIAL
test_pr69481_6333:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69481.C'
    sources:
      binary: pr69481.s
  group: GRPSERIAL
test_pr69637-1_2575:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69637-1.C'
    sources:
      binary: pr69637-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type")[^\n]*\n?)+'
test_pr69637-1_2576:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69637-1.C'
    sources:
      binary: pr69637-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type")[^\n]*\n?)+'
test_pr69637-1_6334:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69637-1.C'
    sources:
      binary: pr69637-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type")[^\n]*\n?)+'
test_pr69637-1_6335:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69637-1.C'
    sources:
      binary: pr69637-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type")[^\n]*\n?)+'
test_pr69637-2_2577:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69637-2.C'
    sources:
      binary: pr69637-2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type|expected")[^\n]*\n?)+'
test_pr69637-2_2578:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69637-2.C'
    sources:
      binary: pr69637-2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type|expected")[^\n]*\n?)+'
test_pr69637-2_6336:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69637-2.C'
    sources:
      binary: pr69637-2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type|expected")[^\n]*\n?)+'
test_pr69637-2_6337:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr69637-2.C'
    sources:
      binary: pr69637-2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type|expected")[^\n]*\n?)+'
test_pr70448_2579:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr70448.C'
    sources:
      binary: pr70448.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator value")[^\n]*\n?)+'
test_pr70448_2580:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr70448.C'
    sources:
      binary: pr70448.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator value")[^\n]*\n?)+'
test_pr70448_6338:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr70448.C'
    sources:
      binary: pr70448.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator value")[^\n]*\n?)+'
test_pr70448_6339:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr70448.C'
    sources:
      binary: pr70448.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator value")[^\n]*\n?)+'
test_pr70528_2581:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr70528.C'
    sources:
      binary: pr70528.s
  group: GRPSERIAL
test_pr70528_2582:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr70528.C'
    sources:
      binary: pr70528.s
  group: GRPSERIAL
test_pr70528_6340:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr70528.C'
    sources:
      binary: pr70528.s
  group: GRPSERIAL
test_pr70528_6341:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr70528.C'
    sources:
      binary: pr70528.s
  group: GRPSERIAL
test_pr70869_2583:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr70869.C'
    sources:
      binary: ./pr70869.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr70869_2584:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr70869.C'
    sources:
      binary: ./pr70869.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr70869_6342:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr70869.C'
    sources:
      binary: ./pr70869.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr70869_6343:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr70869.C'
    sources:
      binary: ./pr70869.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr71054_2585:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71054.C'
    sources:
      binary: pr71054.s
  group: GRPSERIAL
test_pr71054_2586:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71054.C'
    sources:
      binary: pr71054.s
  group: GRPSERIAL
test_pr71054_6344:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71054.C'
    sources:
      binary: pr71054.s
  group: GRPSERIAL
test_pr71054_6345:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71054.C'
    sources:
      binary: pr71054.s
  group: GRPSERIAL
test_pr71182_2587:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71182.C'
    sources:
      binary: pr71182.s
  group: GRPSERIAL
test_pr71182_2588:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71182.C'
    sources:
      binary: pr71182.s
  group: GRPSERIAL
test_pr71182_6346:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71182.C'
    sources:
      binary: pr71182.s
  group: GRPSERIAL
test_pr71182_6347:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71182.C'
    sources:
      binary: pr71182.s
  group: GRPSERIAL
test_pr71225_2589:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71225.C'
    sources:
      binary: pr71225.s
  group: GRPSERIAL
test_pr71225_2590:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71225.C'
    sources:
      binary: pr71225.s
  group: GRPSERIAL
test_pr71225_6348:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71225.C'
    sources:
      binary: pr71225.s
  group: GRPSERIAL
test_pr71225_6349:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71225.C'
    sources:
      binary: pr71225.s
  group: GRPSERIAL
test_pr71248_2591:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71248.C'
    sources:
      binary: pr71248.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("20:in-class initialization")[^\n]*\n?)+'
test_pr71248_2592:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71248.C'
    sources:
      binary: pr71248.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("20:in-class initialization")[^\n]*\n?)+'
test_pr71248_6350:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71248.C'
    sources:
      binary: pr71248.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("20:in-class initialization")[^\n]*\n?)+'
test_pr71248_6351:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71248.C'
    sources:
      binary: pr71248.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("20:in-class initialization")[^\n]*\n?)+'
test_pr71450-1_2593:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71450-1.C'
    sources:
      binary: pr71450-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of \''x\''
          before deduction of \''auto\''")[^\n]*\n?)+'
test_pr71450-1_2594:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71450-1.C'
    sources:
      binary: pr71450-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of \''x\''
          before deduction of \''auto\''")[^\n]*\n?)+'
test_pr71450-1_6352:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71450-1.C'
    sources:
      binary: pr71450-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of \''x\''
          before deduction of \''auto\''")[^\n]*\n?)+'
test_pr71450-1_6353:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71450-1.C'
    sources:
      binary: pr71450-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of \''x\''
          before deduction of \''auto\''")[^\n]*\n?)+'
test_pr71450-2_2595:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71450-2.C'
    sources:
      binary: pr71450-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of \''x\''
          before deduction of \''auto\''")[^\n]*\n?)+'
test_pr71450-2_2596:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71450-2.C'
    sources:
      binary: pr71450-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of \''x\''
          before deduction of \''auto\''")[^\n]*\n?)+'
test_pr71450-2_6354:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71450-2.C'
    sources:
      binary: pr71450-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of \''x\''
          before deduction of \''auto\''")[^\n]*\n?)+'
test_pr71450-2_6355:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71450-2.C'
    sources:
      binary: pr71450-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of \''x\''
          before deduction of \''auto\''")[^\n]*\n?)+'
test_pr71665-1_2597:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71665-1.C'
    sources:
      binary: pr71665-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator")[^\n]*\n?)+'
test_pr71665-1_2598:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71665-1.C'
    sources:
      binary: pr71665-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator")[^\n]*\n?)+'
test_pr71665-1_6356:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71665-1.C'
    sources:
      binary: pr71665-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator")[^\n]*\n?)+'
test_pr71665-1_6357:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71665-1.C'
    sources:
      binary: pr71665-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator")[^\n]*\n?)+'
test_pr71665-2_2599:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71665-2.C'
    sources:
      binary: pr71665-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral or unscoped
          enumeration")[^\n]*\n?)+'
test_pr71665-2_2600:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71665-2.C'
    sources:
      binary: pr71665-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral or unscoped
          enumeration")[^\n]*\n?)+'
test_pr71665-2_6358:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71665-2.C'
    sources:
      binary: pr71665-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral or unscoped
          enumeration")[^\n]*\n?)+'
test_pr71665-2_6359:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71665-2.C'
    sources:
      binary: pr71665-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral or unscoped
          enumeration")[^\n]*\n?)+'
test_pr71737_2601:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71737.C'
    sources:
      binary: pr71737.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pack expansion")[^\n]*\n?)+'
test_pr71737_2602:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71737.C'
    sources:
      binary: pr71737.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pack expansion")[^\n]*\n?)+'
test_pr71737_6360:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71737.C'
    sources:
      binary: pr71737.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pack expansion")[^\n]*\n?)+'
test_pr71737_6361:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71737.C'
    sources:
      binary: pr71737.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pack expansion")[^\n]*\n?)+'
test_pr71739_2603:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71739.C'
    sources:
      binary: pr71739.s
  group: GRPSERIAL
test_pr71739_2604:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71739.C'
    sources:
      binary: pr71739.s
  group: GRPSERIAL
test_pr71739_6362:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71739.C'
    sources:
      binary: pr71739.s
  group: GRPSERIAL
test_pr71739_6363:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71739.C'
    sources:
      binary: pr71739.s
  group: GRPSERIAL
test_pr71966-1_2605:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71966-1.C'
    sources:
      binary: pr71966-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before its definition")[^\n]*\n?)+'
test_pr71966-1_2606:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71966-1.C'
    sources:
      binary: pr71966-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before its definition")[^\n]*\n?)+'
test_pr71966-1_6364:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71966-1.C'
    sources:
      binary: pr71966-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before its definition")[^\n]*\n?)+'
test_pr71966-1_6365:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71966-1.C'
    sources:
      binary: pr71966-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before its definition")[^\n]*\n?)+'
test_pr71966-2_2607:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71966-2.C'
    sources:
      binary: pr71966-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before its definition")[^\n]*\n?)+'
test_pr71966-2_2608:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71966-2.C'
    sources:
      binary: pr71966-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before its definition")[^\n]*\n?)+'
test_pr71966-2_6366:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71966-2.C'
    sources:
      binary: pr71966-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before its definition")[^\n]*\n?)+'
test_pr71966-2_6367:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71966-2.C'
    sources:
      binary: pr71966-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before its definition")[^\n]*\n?)+'
test_pr71979_2609:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71979.C'
    sources:
      binary: pr71979.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind")[^\n]*\n?)+'
test_pr71979_2610:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71979.C'
    sources:
      binary: pr71979.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind")[^\n]*\n?)+'
test_pr71979_6368:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71979.C'
    sources:
      binary: pr71979.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind")[^\n]*\n?)+'
test_pr71979_6369:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr71979.C'
    sources:
      binary: pr71979.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot bind")[^\n]*\n?)+'
test_pr77907_2611:
  build:
    cflags: -std=gnu++11 -O2 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77907.C'
    sources:
      binary: ./pr77907.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_pr77907_2612:
  build:
    cflags: -std=gnu++14 -O2 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77907.C'
    sources:
      binary: ./pr77907.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_pr77907_6370:
  build:
    cflags: -std=gnu++11 -O2 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77907.C'
    sources:
      binary: ./pr77907.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_pr77907_6371:
  build:
    cflags: -std=gnu++14 -O2 -save-temps -ffat-lto-objects
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77907.C'
    sources:
      binary: ./pr77907.exe
  group: GRPSERIAL
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/cpp0x
test_pr77948-1_2613:
  build:
    cflags: "-std=c++11 -std=gnu++11\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77948-1.C'
    sources:
      binary: pr77948-1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
test_pr77948-1_6372:
  build:
    cflags: "-std=c++11 -std=gnu++11\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77948-1.C'
    sources:
      binary: pr77948-1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
test_pr77948-2_2614:
  build:
    cflags: "-std=gnu++11 -std=c++11\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77948-2.C'
    sources:
      binary: pr77948-2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
test_pr77948-2_6373:
  build:
    cflags: "-std=gnu++11 -std=c++11\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77948-2.C'
    sources:
      binary: pr77948-2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
test_pr77948-3_2615:
  build:
    cflags: "-std=c++11 -std=gnu++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77948-3.C'
    sources:
      binary: pr77948-3.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
test_pr77948-3_6374:
  build:
    cflags: "-std=c++11 -std=gnu++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77948-3.C'
    sources:
      binary: pr77948-3.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
test_pr77948-4_2616:
  build:
    cflags: "-std=c++11 -std=c++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77948-4.C'
    sources:
      binary: pr77948-4.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
test_pr77948-4_6375:
  build:
    cflags: "-std=c++11 -std=c++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77948-4.C'
    sources:
      binary: pr77948-4.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
test_pr77948-5_2617:
  build:
    cflags: "-std=gnu++98 -std=c++11\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77948-5.C'
    sources:
      binary: pr77948-5.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
test_pr77948-5_6376:
  build:
    cflags: "-std=gnu++98 -std=c++11\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77948-5.C'
    sources:
      binary: pr77948-5.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
test_pr77948-6_2618:
  build:
    cflags: "-std=c++98 -std=c++11\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77948-6.C'
    sources:
      binary: pr77948-6.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
test_pr77948-6_6377:
  build:
    cflags: "-std=c++98 -std=c++11\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr77948-6.C'
    sources:
      binary: pr77948-6.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
test_pr78341_2619:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78341.C'
    sources:
      binary: pr78341.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_pr78341_2620:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78341.C'
    sources:
      binary: pr78341.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_pr78341_6378:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78341.C'
    sources:
      binary: pr78341.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_pr78341_6379:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78341.C'
    sources:
      binary: pr78341.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_pr78469_2621:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78469.C'
    sources:
      binary: pr78469.s
  group: GRPSERIAL
test_pr78469_2622:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78469.C'
    sources:
      binary: pr78469.s
  group: GRPSERIAL
test_pr78469_6380:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78469.C'
    sources:
      binary: pr78469.s
  group: GRPSERIAL
test_pr78469_6381:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78469.C'
    sources:
      binary: pr78469.s
  group: GRPSERIAL
test_pr78649_2623:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78649.C'
    sources:
      binary: pr78649.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared void")[^\n]*\n?)+'
test_pr78649_2624:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78649.C'
    sources:
      binary: pr78649.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared void")[^\n]*\n?)+'
test_pr78649_6382:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78649.C'
    sources:
      binary: pr78649.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared void")[^\n]*\n?)+'
test_pr78649_6383:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78649.C'
    sources:
      binary: pr78649.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared void")[^\n]*\n?)+'
test_pr78693_2625:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78693.C'
    sources:
      binary: pr78693.s
  group: GRPSERIAL
test_pr78693_2626:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78693.C'
    sources:
      binary: pr78693.s
  group: GRPSERIAL
test_pr78693_6384:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78693.C'
    sources:
      binary: pr78693.s
  group: GRPSERIAL
test_pr78693_6385:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78693.C'
    sources:
      binary: pr78693.s
  group: GRPSERIAL
test_pr78701_2627:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78701.C'
    sources:
      binary: pr78701.s
  group: GRPSERIAL
test_pr78701_2628:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78701.C'
    sources:
      binary: pr78701.s
  group: GRPSERIAL
test_pr78701_6386:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78701.C'
    sources:
      binary: pr78701.s
  group: GRPSERIAL
test_pr78701_6387:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78701.C'
    sources:
      binary: pr78701.s
  group: GRPSERIAL
test_pr78765_2629:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78765.C'
    sources:
      binary: pr78765.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_pr78765_2630:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78765.C'
    sources:
      binary: pr78765.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_pr78765_6388:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78765.C'
    sources:
      binary: pr78765.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_pr78765_6389:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78765.C'
    sources:
      binary: pr78765.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_pr78771-new_2631:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -fnew-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78771-new.C'
    sources:
      binary: pr78771-new.s
  group: GRPSERIAL
test_pr78771-new_2632:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -fnew-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78771-new.C'
    sources:
      binary: pr78771-new.s
  group: GRPSERIAL
test_pr78771-new_6390:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -fnew-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78771-new.C'
    sources:
      binary: pr78771-new.s
  group: GRPSERIAL
test_pr78771-new_6391:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -fnew-inheriting-ctors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78771-new.C'
    sources:
      binary: pr78771-new.s
  group: GRPSERIAL
test_pr78771-old_2633:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -fno-new-inheriting-ctors\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78771-old.C'
    sources:
      binary: pr78771-old.s
  group: GRPSERIAL
test_pr78771-old_2634:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -fno-new-inheriting-ctors\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78771-old.C'
    sources:
      binary: pr78771-old.s
  group: GRPSERIAL
test_pr78771-old_6392:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -fno-new-inheriting-ctors\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78771-old.C'
    sources:
      binary: pr78771-old.s
  group: GRPSERIAL
test_pr78771-old_6393:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -fno-new-inheriting-ctors\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78771-old.C'
    sources:
      binary: pr78771-old.s
  group: GRPSERIAL
test_pr78890-1_2635:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78890-1.C'
    sources:
      binary: pr78890-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have reference
          type")[^\n]*\n?)+'
test_pr78890-1_2636:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78890-1.C'
    sources:
      binary: pr78890-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have reference
          type")[^\n]*\n?)+'
test_pr78890-1_6394:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78890-1.C'
    sources:
      binary: pr78890-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have reference
          type")[^\n]*\n?)+'
test_pr78890-1_6395:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78890-1.C'
    sources:
      binary: pr78890-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have reference
          type")[^\n]*\n?)+'
test_pr78890-2_2637:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78890-2.C'
    sources:
      binary: pr78890-2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
test_pr78890-2_2638:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78890-2.C'
    sources:
      binary: pr78890-2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
test_pr78890-2_6396:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78890-2.C'
    sources:
      binary: pr78890-2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
test_pr78890-2_6397:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr78890-2.C'
    sources:
      binary: pr78890-2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
test_pr79118_2639:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79118.C'
    sources:
      binary: pr79118.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("exactly one")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("b\'' must be
          initialized")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("a\'' must be
          initialized")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("a\'' must be
          initialized")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("b\'' must be
          initialized")[^\n]*\n?)+'
test_pr79118_2640:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79118.C'
    sources:
      binary: pr79118.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("exactly one")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("b\'' must be
          initialized")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("a\'' must be
          initialized")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("a\'' must be
          initialized")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("b\'' must be
          initialized")[^\n]*\n?)+'
test_pr79118_6398:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79118.C'
    sources:
      binary: pr79118.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("exactly one")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("b\'' must be
          initialized")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("a\'' must be
          initialized")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("a\'' must be
          initialized")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("b\'' must be
          initialized")[^\n]*\n?)+'
test_pr79118_6399:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79118.C'
    sources:
      binary: pr79118.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("exactly one")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("b\'' must be
          initialized")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("a\'' must be
          initialized")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("a\'' must be
          initialized")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("b\'' must be
          initialized")[^\n]*\n?)+'
test_pr79296_2641:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -flto\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79296.C'
    sources:
      binary: pr79296.s
  group: GRPSERIAL
test_pr79296_2642:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -flto\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79296.C'
    sources:
      binary: pr79296.s
  group: GRPSERIAL
test_pr79296_6400:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -flto\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79296.C'
    sources:
      binary: pr79296.s
  group: GRPSERIAL
test_pr79296_6401:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -flto\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79296.C'
    sources:
      binary: pr79296.s
  group: GRPSERIAL
test_pr79361-1_2643:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79361-1.C'
    sources:
      binary: pr79361-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_pr79361-1_2644:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79361-1.C'
    sources:
      binary: pr79361-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_pr79361-1_6402:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79361-1.C'
    sources:
      binary: pr79361-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_pr79361-1_6403:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79361-1.C'
    sources:
      binary: pr79361-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_pr79361-2_2645:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79361-2.C'
    sources:
      binary: pr79361-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_pr79361-2_2646:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79361-2.C'
    sources:
      binary: pr79361-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_pr79361-2_6404:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79361-2.C'
    sources:
      binary: pr79361-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_pr79361-2_6405:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79361-2.C'
    sources:
      binary: pr79361-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'
test_pr79457_2647:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79457.C'
    sources:
      binary: pr79457.s
  group: GRPSERIAL
test_pr79457_2648:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79457.C'
    sources:
      binary: pr79457.s
  group: GRPSERIAL
test_pr79457_6406:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79457.C'
    sources:
      binary: pr79457.s
  group: GRPSERIAL
test_pr79457_6407:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr79457.C'
    sources:
      binary: pr79457.s
  group: GRPSERIAL
test_pr80259_2649:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr80259.C'
    sources:
      binary: pr80259.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition
          of")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition of")[^\n]*\n?)+'
test_pr80259_2650:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr80259.C'
    sources:
      binary: pr80259.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition
          of")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition of")[^\n]*\n?)+'
test_pr80259_6408:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr80259.C'
    sources:
      binary: pr80259.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition
          of")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition of")[^\n]*\n?)+'
test_pr80259_6409:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr80259.C'
    sources:
      binary: pr80259.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition
          of")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition of")[^\n]*\n?)+'
test_pr81325_2651:
  build:
    cflags: "-std=gnu++11 -O2 -fcompare-debug\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr81325.C'
    sources:
      binary: pr81325.s
  group: GRPSERIAL
test_pr81325_2652:
  build:
    cflags: "-std=gnu++14 -O2 -fcompare-debug\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr81325.C'
    sources:
      binary: pr81325.s
  group: GRPSERIAL
test_pr81325_6410:
  build:
    cflags: "-std=gnu++11 -O2 -fcompare-debug\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr81325.C'
    sources:
      binary: pr81325.s
  group: GRPSERIAL
test_pr81325_6411:
  build:
    cflags: "-std=gnu++14 -O2 -fcompare-debug\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr81325.C'
    sources:
      binary: pr81325.s
  group: GRPSERIAL
test_pr82299_2653:
  build:
    cflags: "-std=gnu++11 -Wuseless-cast\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr82299.C'
    sources:
      binary: pr82299.s
  group: GRPSERIAL
test_pr82299_2654:
  build:
    cflags: "-std=gnu++14 -Wuseless-cast\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr82299.C'
    sources:
      binary: pr82299.s
  group: GRPSERIAL
test_pr82299_6412:
  build:
    cflags: "-std=gnu++11 -Wuseless-cast\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr82299.C'
    sources:
      binary: pr82299.s
  group: GRPSERIAL
test_pr82299_6413:
  build:
    cflags: "-std=gnu++14 -Wuseless-cast\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr82299.C'
    sources:
      binary: pr82299.s
  group: GRPSERIAL
test_pr82560_2655:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr82560.C'
    sources:
      binary: ./pr82560.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr82560_2656:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr82560.C'
    sources:
      binary: ./pr82560.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr82560_6414:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr82560.C'
    sources:
      binary: ./pr82560.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr82560_6415:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr82560.C'
    sources:
      binary: ./pr82560.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr83556_2657:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr83556.C'
    sources:
      binary: ./pr83556.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr83556_2658:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr83556.C'
    sources:
      binary: ./pr83556.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr83556_6416:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr83556.C'
    sources:
      binary: ./pr83556.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr83556_6417:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/pr83556.C'
    sources:
      binary: ./pr83556.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ptrmem-cst-arg1_2659:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ptrmem-cst-arg1.C'
    sources:
      binary: ptrmem-cst-arg1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert
          template argument")[^\n]*\n?)+'
test_ptrmem-cst-arg1_2660:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ptrmem-cst-arg1.C'
    sources:
      binary: ptrmem-cst-arg1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert
          template argument")[^\n]*\n?)+'
test_ptrmem-cst-arg1_6418:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ptrmem-cst-arg1.C'
    sources:
      binary: ptrmem-cst-arg1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert
          template argument")[^\n]*\n?)+'
test_ptrmem-cst-arg1_6419:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ptrmem-cst-arg1.C'
    sources:
      binary: ptrmem-cst-arg1.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert
          template argument")[^\n]*\n?)+'
test_range-for10_2663:
  build:
    cflags: "-std=gnu++11 -fno-for-scope\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for10.C'
    sources:
      binary: range-for10.s
  group: GRPSERIAL
test_range-for10_2664:
  build:
    cflags: "-std=gnu++14 -fno-for-scope\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for10.C'
    sources:
      binary: range-for10.s
  group: GRPSERIAL
test_range-for10_6422:
  build:
    cflags: "-std=gnu++11 -fno-for-scope\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for10.C'
    sources:
      binary: range-for10.s
  group: GRPSERIAL
test_range-for10_6423:
  build:
    cflags: "-std=gnu++14 -fno-for-scope\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for10.C'
    sources:
      binary: range-for10.s
  group: GRPSERIAL
test_range-for11_2665:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for11.C'
    sources:
      binary: range-for11.s
  group: GRPSERIAL
test_range-for11_2666:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for11.C'
    sources:
      binary: range-for11.s
  group: GRPSERIAL
test_range-for11_6424:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for11.C'
    sources:
      binary: range-for11.s
  group: GRPSERIAL
test_range-for11_6425:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for11.C'
    sources:
      binary: range-for11.s
  group: GRPSERIAL
test_range-for12_2667:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for12.C'
    sources:
      binary: ./range-for12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for12_2668:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for12.C'
    sources:
      binary: ./range-for12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for12_6426:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for12.C'
    sources:
      binary: ./range-for12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for12_6427:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for12.C'
    sources:
      binary: ./range-for12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for13_2669:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for13.C'
    sources:
      binary: range-for13.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this
          context")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member but not")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member but not")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this context")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be used
          as a function")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
test_range-for13_2670:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for13.C'
    sources:
      binary: range-for13.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this
          context")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member but not")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member but not")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this context")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be used
          as a function")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
test_range-for13_6428:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for13.C'
    sources:
      binary: range-for13.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this
          context")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member but not")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member but not")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this context")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be used
          as a function")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
test_range-for13_6429:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for13.C'
    sources:
      binary: range-for13.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this
          context")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member but not")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member but not")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("within this context")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be used
          as a function")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of")[^\n]*\n?)+'
test_range-for14_2671:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for14.C'
    sources:
      binary: range-for14.s
  group: GRPSERIAL
  validate:
    match:
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function|note")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function|note")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is ambiguous")[^\n]*\n?)+'
test_range-for14_2672:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for14.C'
    sources:
      binary: range-for14.s
  group: GRPSERIAL
  validate:
    match:
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function|note")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function|note")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is ambiguous")[^\n]*\n?)+'
test_range-for14_6430:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for14.C'
    sources:
      binary: range-for14.s
  group: GRPSERIAL
  validate:
    match:
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function|note")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function|note")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is ambiguous")[^\n]*\n?)+'
test_range-for14_6431:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for14.C'
    sources:
      binary: range-for14.s
  group: GRPSERIAL
  validate:
    match:
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function|note")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function|note")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is ambiguous")[^\n]*\n?)+'
test_range-for15_2673:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for15.C'
    sources:
      binary: ./range-for15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for15_2674:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for15.C'
    sources:
      binary: ./range-for15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for15_6432:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for15.C'
    sources:
      binary: ./range-for15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for15_6433:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for15.C'
    sources:
      binary: ./range-for15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for16_2675:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for16.C'
    sources:
      binary: range-for16.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_range-for16_2676:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for16.C'
    sources:
      binary: range-for16.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_range-for16_6434:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for16.C'
    sources:
      binary: range-for16.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_range-for16_6435:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for16.C'
    sources:
      binary: range-for16.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_range-for17_2677:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for17.C'
    sources:
      binary: range-for17.s
  group: GRPSERIAL
test_range-for17_2678:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for17.C'
    sources:
      binary: range-for17.s
  group: GRPSERIAL
test_range-for17_6436:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for17.C'
    sources:
      binary: range-for17.s
  group: GRPSERIAL
test_range-for17_6437:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for17.C'
    sources:
      binary: range-for17.s
  group: GRPSERIAL
test_range-for18_2679:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for18.C'
    sources:
      binary: range-for18.s
  group: GRPSERIAL
test_range-for18_2680:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for18.C'
    sources:
      binary: range-for18.s
  group: GRPSERIAL
test_range-for18_6438:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for18.C'
    sources:
      binary: range-for18.s
  group: GRPSERIAL
test_range-for18_6439:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for18.C'
    sources:
      binary: range-for18.s
  group: GRPSERIAL
test_range-for19_2681:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for19.C'
    sources:
      binary: range-for19.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no initializer")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deduce")[^\n]*\n?)+'
test_range-for19_2682:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for19.C'
    sources:
      binary: range-for19.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no initializer")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deduce")[^\n]*\n?)+'
test_range-for19_6440:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for19.C'
    sources:
      binary: range-for19.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no initializer")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deduce")[^\n]*\n?)+'
test_range-for19_6441:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for19.C'
    sources:
      binary: range-for19.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no initializer")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deduce")[^\n]*\n?)+'
test_range-for1_2661:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for1.C'
    sources:
      binary: ./range-for1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for1_2662:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for1.C'
    sources:
      binary: ./range-for1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for1_6420:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for1.C'
    sources:
      binary: ./range-for1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for1_6421:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for1.C'
    sources:
      binary: ./range-for1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for20_2685:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for20.C'
    sources:
      binary: range-for20.s
  group: GRPSERIAL
test_range-for20_2686:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for20.C'
    sources:
      binary: range-for20.s
  group: GRPSERIAL
test_range-for20_6444:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for20.C'
    sources:
      binary: range-for20.s
  group: GRPSERIAL
test_range-for20_6445:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for20.C'
    sources:
      binary: range-for20.s
  group: GRPSERIAL
test_range-for21_2687:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for21.C'
    sources:
      binary: range-for21.s
  group: GRPSERIAL
test_range-for21_2688:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for21.C'
    sources:
      binary: range-for21.s
  group: GRPSERIAL
test_range-for21_6446:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for21.C'
    sources:
      binary: range-for21.s
  group: GRPSERIAL
test_range-for21_6447:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for21.C'
    sources:
      binary: range-for21.s
  group: GRPSERIAL
test_range-for22_2689:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for22.C'
    sources:
      binary: range-for22.s
  group: GRPSERIAL
test_range-for22_2690:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for22.C'
    sources:
      binary: range-for22.s
  group: GRPSERIAL
test_range-for22_6448:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for22.C'
    sources:
      binary: range-for22.s
  group: GRPSERIAL
test_range-for22_6449:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for22.C'
    sources:
      binary: range-for22.s
  group: GRPSERIAL
test_range-for23_2691:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for23.C'
    sources:
      binary: range-for23.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has no initializer|expected")[^\n]*\n?)+'
test_range-for23_2692:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for23.C'
    sources:
      binary: range-for23.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has no initializer|expected")[^\n]*\n?)+'
test_range-for23_6450:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for23.C'
    sources:
      binary: range-for23.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has no initializer|expected")[^\n]*\n?)+'
test_range-for23_6451:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for23.C'
    sources:
      binary: range-for23.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has no initializer|expected")[^\n]*\n?)+'
test_range-for24_2693:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for24.C'
    sources:
      binary: range-for24.s
  group: GRPSERIAL
test_range-for24_2694:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for24.C'
    sources:
      binary: range-for24.s
  group: GRPSERIAL
test_range-for24_6452:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for24.C'
    sources:
      binary: range-for24.s
  group: GRPSERIAL
test_range-for24_6453:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for24.C'
    sources:
      binary: range-for24.s
  group: GRPSERIAL
test_range-for25_2695:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for25.C'
    sources:
      binary: range-for25.s
  group: GRPSERIAL
test_range-for25_2696:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for25.C'
    sources:
      binary: range-for25.s
  group: GRPSERIAL
test_range-for25_6454:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for25.C'
    sources:
      binary: range-for25.s
  group: GRPSERIAL
test_range-for25_6455:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for25.C'
    sources:
      binary: range-for25.s
  group: GRPSERIAL
test_range-for26_2697:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for26.C'
    sources:
      binary: range-for26.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("there are no arguments")[^\n]*\n?)+'
test_range-for26_2698:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for26.C'
    sources:
      binary: range-for26.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("there are no arguments")[^\n]*\n?)+'
test_range-for26_6456:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for26.C'
    sources:
      binary: range-for26.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("there are no arguments")[^\n]*\n?)+'
test_range-for26_6457:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for26.C'
    sources:
      binary: range-for26.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("there are no arguments")[^\n]*\n?)+'
test_range-for27_2699:
  build:
    cflags: "-std=gnu++11 -fpermissive -w\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for27.C'
    sources:
      binary: range-for27.s
  group: GRPSERIAL
test_range-for27_2700:
  build:
    cflags: "-std=gnu++14 -fpermissive -w\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for27.C'
    sources:
      binary: range-for27.s
  group: GRPSERIAL
test_range-for27_6458:
  build:
    cflags: "-std=gnu++11 -fpermissive -w\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for27.C'
    sources:
      binary: range-for27.s
  group: GRPSERIAL
test_range-for27_6459:
  build:
    cflags: "-std=gnu++14 -fpermissive -w\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for27.C'
    sources:
      binary: range-for27.s
  group: GRPSERIAL
test_range-for28_2701:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for28.C'
    sources:
      binary: range-for28.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared")[^\n]*\n?)+'
test_range-for28_2702:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for28.C'
    sources:
      binary: range-for28.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared")[^\n]*\n?)+'
test_range-for28_6460:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for28.C'
    sources:
      binary: range-for28.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared")[^\n]*\n?)+'
test_range-for28_6461:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for28.C'
    sources:
      binary: range-for28.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared")[^\n]*\n?)+'
test_range-for29_2703:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for29.C'
    sources:
      binary: range-for29.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple declarations
          in range-based")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer in
          range-based")[^\n]*\n?)+'
test_range-for29_2704:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for29.C'
    sources:
      binary: range-for29.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple declarations
          in range-based")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer in
          range-based")[^\n]*\n?)+'
test_range-for29_6462:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for29.C'
    sources:
      binary: range-for29.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple declarations
          in range-based")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer in
          range-based")[^\n]*\n?)+'
test_range-for29_6463:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for29.C'
    sources:
      binary: range-for29.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple declarations
          in range-based")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer in
          range-based")[^\n]*\n?)+'
test_range-for2_2683:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for2.C'
    sources:
      binary: range-for2.s
  group: GRPSERIAL
test_range-for2_2684:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for2.C'
    sources:
      binary: range-for2.s
  group: GRPSERIAL
test_range-for2_6442:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for2.C'
    sources:
      binary: range-for2.s
  group: GRPSERIAL
test_range-for2_6443:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for2.C'
    sources:
      binary: range-for2.s
  group: GRPSERIAL
test_range-for30_2707:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for30.C'
    sources:
      binary: range-for30.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared
          in this scope")[^\n]*\n?)+'
test_range-for30_2708:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for30.C'
    sources:
      binary: range-for30.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared
          in this scope")[^\n]*\n?)+'
test_range-for30_6466:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for30.C'
    sources:
      binary: range-for30.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared
          in this scope")[^\n]*\n?)+'
test_range-for30_6467:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for30.C'
    sources:
      binary: range-for30.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared
          in this scope")[^\n]*\n?)+'
test_range-for31_2709:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for31.C'
    sources:
      binary: range-for31.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined")[^\n]*\n?)+'
test_range-for31_2710:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for31.C'
    sources:
      binary: range-for31.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined")[^\n]*\n?)+'
test_range-for31_6468:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for31.C'
    sources:
      binary: range-for31.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined")[^\n]*\n?)+'
test_range-for31_6469:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for31.C'
    sources:
      binary: range-for31.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined")[^\n]*\n?)+'
test_range-for32_2711:
  build:
    cflags: "-std=gnu++11 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for32.C'
    sources:
      binary: range-for32.s
  group: GRPSERIAL
test_range-for32_2712:
  build:
    cflags: "-std=gnu++14 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for32.C'
    sources:
      binary: range-for32.s
  group: GRPSERIAL
test_range-for32_6470:
  build:
    cflags: "-std=gnu++11 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for32.C'
    sources:
      binary: range-for32.s
  group: GRPSERIAL
test_range-for32_6471:
  build:
    cflags: "-std=gnu++14 -Wno-pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for32.C'
    sources:
      binary: range-for32.s
  group: GRPSERIAL
test_range-for33_2713:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for33.C'
    sources:
      binary: range-for33.s
  group: GRPSERIAL
test_range-for33_2714:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for33.C'
    sources:
      binary: range-for33.s
  group: GRPSERIAL
test_range-for33_6472:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for33.C'
    sources:
      binary: range-for33.s
  group: GRPSERIAL
test_range-for33_6473:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for33.C'
    sources:
      binary: range-for33.s
  group: GRPSERIAL
test_range-for34_2715:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for34.C'
    sources:
      binary: range-for34.s
  group: GRPSERIAL
test_range-for34_2716:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for34.C'
    sources:
      binary: range-for34.s
  group: GRPSERIAL
test_range-for34_6474:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for34.C'
    sources:
      binary: range-for34.s
  group: GRPSERIAL
test_range-for34_6475:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for34.C'
    sources:
      binary: range-for34.s
  group: GRPSERIAL
test_range-for3_2705:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for3.C'
    sources:
      binary: range-for3.s
  group: GRPSERIAL
  validate:
    match:
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared")[^\n]*\n?)+'
test_range-for3_2706:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for3.C'
    sources:
      binary: range-for3.s
  group: GRPSERIAL
  validate:
    match:
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared")[^\n]*\n?)+'
test_range-for3_6464:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for3.C'
    sources:
      binary: range-for3.s
  group: GRPSERIAL
  validate:
    match:
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared")[^\n]*\n?)+'
test_range-for3_6465:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for3.C'
    sources:
      binary: range-for3.s
  group: GRPSERIAL
  validate:
    match:
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was not declared")[^\n]*\n?)+'
test_range-for4_2717:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for4.C'
    sources:
      binary: ./range-for4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for4_2718:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for4.C'
    sources:
      binary: ./range-for4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for4_6476:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for4.C'
    sources:
      binary: ./range-for4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for4_6477:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for4.C'
    sources:
      binary: ./range-for4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for5_2719:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for5.C'
    sources:
      binary: range-for5.s
  group: GRPSERIAL
  validate:
    match:
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inconsistent|conversion|comparison")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
test_range-for5_2720:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for5.C'
    sources:
      binary: range-for5.s
  group: GRPSERIAL
  validate:
    match:
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inconsistent|conversion|comparison")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
test_range-for5_6478:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for5.C'
    sources:
      binary: range-for5.s
  group: GRPSERIAL
  validate:
    match:
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inconsistent|conversion|comparison")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
test_range-for5_6479:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for5.C'
    sources:
      binary: range-for5.s
  group: GRPSERIAL
  validate:
    match:
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inconsistent|conversion|comparison")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
test_range-for6_2721:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for6.C'
    sources:
      binary: ./range-for6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for6_2722:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for6.C'
    sources:
      binary: ./range-for6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for6_6480:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for6.C'
    sources:
      binary: ./range-for6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for6_6481:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for6.C'
    sources:
      binary: ./range-for6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for7_2723:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for7.C'
    sources:
      binary: ./range-for7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for7_2724:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for7.C'
    sources:
      binary: ./range-for7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for7_6482:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for7.C'
    sources:
      binary: ./range-for7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for7_6483:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for7.C'
    sources:
      binary: ./range-for7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_range-for8_2725:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for8.C'
    sources:
      binary: range-for8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined")[^\n]*\n?)+'
test_range-for8_2726:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for8.C'
    sources:
      binary: range-for8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined")[^\n]*\n?)+'
test_range-for8_6484:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for8.C'
    sources:
      binary: range-for8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined")[^\n]*\n?)+'
test_range-for8_6485:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for8.C'
    sources:
      binary: range-for8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("types may not
          be defined")[^\n]*\n?)+'
test_range-for9_2727:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for9.C'
    sources:
      binary: range-for9.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("range-based \''for\''")[^\n]*\n?)+'
test_range-for9_6486:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/range-for9.C'
    sources:
      binary: range-for9.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("range-based \''for\''")[^\n]*\n?)+'
test_ref-qual-mangle1_2728:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual-mangle1.C'
    sources:
      binary: ref-qual-mangle1.s
  group: GRPSERIAL
test_ref-qual-mangle1_2729:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual-mangle1.C'
    sources:
      binary: ref-qual-mangle1.s
  group: GRPSERIAL
test_ref-qual-mangle1_6487:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual-mangle1.C'
    sources:
      binary: ref-qual-mangle1.s
  group: GRPSERIAL
test_ref-qual-mangle1_6488:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual-mangle1.C'
    sources:
      binary: ref-qual-mangle1.s
  group: GRPSERIAL
test_ref-qual-multi-neg_2730:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual-multi-neg.C'
    sources:
      binary: ref-qual-multi-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple ref-qualifiers")[^\n]*\n?)+'
test_ref-qual-multi-neg_2731:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual-multi-neg.C'
    sources:
      binary: ref-qual-multi-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple ref-qualifiers")[^\n]*\n?)+'
test_ref-qual-multi-neg_6489:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual-multi-neg.C'
    sources:
      binary: ref-qual-multi-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple ref-qualifiers")[^\n]*\n?)+'
test_ref-qual-multi-neg_6490:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual-multi-neg.C'
    sources:
      binary: ref-qual-multi-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple ref-qualifiers")[^\n]*\n?)+'
test_ref-qual10_2734:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual10.C'
    sources:
      binary: ref-qual10.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual10_2735:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual10.C'
    sources:
      binary: ref-qual10.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual10_6493:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual10.C'
    sources:
      binary: ref-qual10.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual10_6494:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual10.C'
    sources:
      binary: ref-qual10.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual11_2736:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual11.C'
    sources:
      binary: ref-qual11.s
  group: GRPSERIAL
test_ref-qual11_2737:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual11.C'
    sources:
      binary: ref-qual11.s
  group: GRPSERIAL
test_ref-qual11_6495:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual11.C'
    sources:
      binary: ref-qual11.s
  group: GRPSERIAL
test_ref-qual11_6496:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual11.C'
    sources:
      binary: ref-qual11.s
  group: GRPSERIAL
test_ref-qual12_2738:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual12.C'
    sources:
      binary: ref-qual12.s
  group: GRPSERIAL
test_ref-qual12_2739:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual12.C'
    sources:
      binary: ref-qual12.s
  group: GRPSERIAL
test_ref-qual12_6497:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual12.C'
    sources:
      binary: ref-qual12.s
  group: GRPSERIAL
test_ref-qual12_6498:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual12.C'
    sources:
      binary: ref-qual12.s
  group: GRPSERIAL
test_ref-qual13_2740:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual13.C'
    sources:
      binary: ref-qual13.s
  group: GRPSERIAL
test_ref-qual13_2741:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual13.C'
    sources:
      binary: ref-qual13.s
  group: GRPSERIAL
test_ref-qual13_6499:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual13.C'
    sources:
      binary: ref-qual13.s
  group: GRPSERIAL
test_ref-qual13_6500:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual13.C'
    sources:
      binary: ref-qual13.s
  group: GRPSERIAL
test_ref-qual14_2742:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual14.C'
    sources:
      binary: ref-qual14.s
  group: GRPSERIAL
test_ref-qual14_2743:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual14.C'
    sources:
      binary: ref-qual14.s
  group: GRPSERIAL
test_ref-qual14_6501:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual14.C'
    sources:
      binary: ref-qual14.s
  group: GRPSERIAL
test_ref-qual14_6502:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual14.C'
    sources:
      binary: ref-qual14.s
  group: GRPSERIAL
test_ref-qual15_2744:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual15.C'
    sources:
      binary: ref-qual15.s
  group: GRPSERIAL
test_ref-qual15_2745:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual15.C'
    sources:
      binary: ref-qual15.s
  group: GRPSERIAL
test_ref-qual15_6503:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual15.C'
    sources:
      binary: ref-qual15.s
  group: GRPSERIAL
test_ref-qual15_6504:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual15.C'
    sources:
      binary: ref-qual15.s
  group: GRPSERIAL
test_ref-qual16_2746:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual16.C'
    sources:
      binary: ref-qual16.s
  group: GRPSERIAL
test_ref-qual16_2747:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual16.C'
    sources:
      binary: ref-qual16.s
  group: GRPSERIAL
test_ref-qual16_6505:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual16.C'
    sources:
      binary: ref-qual16.s
  group: GRPSERIAL
test_ref-qual16_6506:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual16.C'
    sources:
      binary: ref-qual16.s
  group: GRPSERIAL
test_ref-qual17_2748:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual17.C'
    sources:
      binary: ref-qual17.s
  group: GRPSERIAL
test_ref-qual17_2749:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual17.C'
    sources:
      binary: ref-qual17.s
  group: GRPSERIAL
test_ref-qual17_6507:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual17.C'
    sources:
      binary: ref-qual17.s
  group: GRPSERIAL
test_ref-qual17_6508:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual17.C'
    sources:
      binary: ref-qual17.s
  group: GRPSERIAL
test_ref-qual1_2732:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual1.C'
    sources:
      binary: ref-qual1.s
  group: GRPSERIAL
test_ref-qual1_2733:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual1.C'
    sources:
      binary: ref-qual1.s
  group: GRPSERIAL
test_ref-qual1_6491:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual1.C'
    sources:
      binary: ref-qual1.s
  group: GRPSERIAL
test_ref-qual1_6492:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual1.C'
    sources:
      binary: ref-qual1.s
  group: GRPSERIAL
test_ref-qual2_2750:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual2.C'
    sources:
      binary: ref-qual2.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual2_2751:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual2.C'
    sources:
      binary: ref-qual2.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual2_6509:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual2.C'
    sources:
      binary: ref-qual2.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual2_6510:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual2.C'
    sources:
      binary: ref-qual2.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual3_2752:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual3.C'
    sources:
      binary: ref-qual3.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual3_2753:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual3.C'
    sources:
      binary: ref-qual3.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual3_6511:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual3.C'
    sources:
      binary: ref-qual3.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual3_6512:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual3.C'
    sources:
      binary: ref-qual3.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual4_2754:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual4.C'
    sources:
      binary: ref-qual4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'
test_ref-qual4_2755:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual4.C'
    sources:
      binary: ref-qual4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'
test_ref-qual4_6513:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual4.C'
    sources:
      binary: ref-qual4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'
test_ref-qual4_6514:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual4.C'
    sources:
      binary: ref-qual4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constructor")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'
test_ref-qual5_2756:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual5.C'
    sources:
      binary: ref-qual5.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual5_2757:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual5.C'
    sources:
      binary: ref-qual5.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual5_6515:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual5.C'
    sources:
      binary: ref-qual5.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual5_6516:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual5.C'
    sources:
      binary: ref-qual5.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual6_2758:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual6.C'
    sources:
      binary: ref-qual6.s
  group: GRPSERIAL
test_ref-qual6_2759:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual6.C'
    sources:
      binary: ref-qual6.s
  group: GRPSERIAL
test_ref-qual6_6517:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual6.C'
    sources:
      binary: ref-qual6.s
  group: GRPSERIAL
test_ref-qual6_6518:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual6.C'
    sources:
      binary: ref-qual6.s
  group: GRPSERIAL
test_ref-qual7_2760:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual7.C'
    sources:
      binary: ref-qual7.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual7_2761:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual7.C'
    sources:
      binary: ref-qual7.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual7_6519:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual7.C'
    sources:
      binary: ref-qual7.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual7_6520:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual7.C'
    sources:
      binary: ref-qual7.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ref-qual8_2762:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual8.C'
    sources:
      binary: ref-qual8.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("abstract")[^\n]*\n?)+'
test_ref-qual8_2763:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual8.C'
    sources:
      binary: ref-qual8.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("abstract")[^\n]*\n?)+'
test_ref-qual8_6521:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual8.C'
    sources:
      binary: ref-qual8.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("abstract")[^\n]*\n?)+'
test_ref-qual8_6522:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual8.C'
    sources:
      binary: ref-qual8.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("abstract")[^\n]*\n?)+'
test_ref-qual9_2764:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual9.C'
    sources:
      binary: ref-qual9.s
  group: GRPSERIAL
test_ref-qual9_2765:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual9.C'
    sources:
      binary: ref-qual9.s
  group: GRPSERIAL
test_ref-qual9_6523:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual9.C'
    sources:
      binary: ref-qual9.s
  group: GRPSERIAL
test_ref-qual9_6524:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/ref-qual9.C'
    sources:
      binary: ref-qual9.s
  group: GRPSERIAL
test_reference_collapsing_2766:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/reference_collapsing.C'
    sources:
      binary: reference_collapsing.s
  group: GRPSERIAL
test_reference_collapsing_2767:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/reference_collapsing.C'
    sources:
      binary: reference_collapsing.s
  group: GRPSERIAL
test_reference_collapsing_6525:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/reference_collapsing.C'
    sources:
      binary: reference_collapsing.s
  group: GRPSERIAL
test_reference_collapsing_6526:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/reference_collapsing.C'
    sources:
      binary: reference_collapsing.s
  group: GRPSERIAL
test_reinterpret_cast1_2768:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/reinterpret_cast1.C'
    sources:
      binary: reinterpret_cast1.s
  group: GRPSERIAL
test_reinterpret_cast1_2769:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/reinterpret_cast1.C'
    sources:
      binary: reinterpret_cast1.s
  group: GRPSERIAL
test_reinterpret_cast1_6527:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/reinterpret_cast1.C'
    sources:
      binary: reinterpret_cast1.s
  group: GRPSERIAL
test_reinterpret_cast1_6528:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/reinterpret_cast1.C'
    sources:
      binary: reinterpret_cast1.s
  group: GRPSERIAL
test_rv-array1_2770:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-array1.C'
    sources:
      binary: ./rv-array1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv-array1_2771:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-array1.C'
    sources:
      binary: ./rv-array1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv-array1_6529:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-array1.C'
    sources:
      binary: ./rv-array1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv-array1_6530:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-array1.C'
    sources:
      binary: ./rv-array1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv-bitfield2_2774:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-bitfield2.C'
    sources:
      binary: rv-bitfield2.s
  group: GRPSERIAL
test_rv-bitfield2_2775:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-bitfield2.C'
    sources:
      binary: rv-bitfield2.s
  group: GRPSERIAL
test_rv-bitfield2_6533:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-bitfield2.C'
    sources:
      binary: rv-bitfield2.s
  group: GRPSERIAL
test_rv-bitfield2_6534:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-bitfield2.C'
    sources:
      binary: rv-bitfield2.s
  group: GRPSERIAL
test_rv-bitfield3_2776:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-bitfield3.C'
    sources:
      binary: rv-bitfield3.s
  group: GRPSERIAL
test_rv-bitfield3_2777:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-bitfield3.C'
    sources:
      binary: rv-bitfield3.s
  group: GRPSERIAL
test_rv-bitfield3_6535:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-bitfield3.C'
    sources:
      binary: rv-bitfield3.s
  group: GRPSERIAL
test_rv-bitfield3_6536:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-bitfield3.C'
    sources:
      binary: rv-bitfield3.s
  group: GRPSERIAL
test_rv-bitfield_2772:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-bitfield.C'
    sources:
      binary: rv-bitfield.s
  group: GRPSERIAL
test_rv-bitfield_2773:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-bitfield.C'
    sources:
      binary: rv-bitfield.s
  group: GRPSERIAL
test_rv-bitfield_6531:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-bitfield.C'
    sources:
      binary: rv-bitfield.s
  group: GRPSERIAL
test_rv-bitfield_6532:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-bitfield.C'
    sources:
      binary: rv-bitfield.s
  group: GRPSERIAL
test_rv-cast2_2780:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast2.C'
    sources:
      binary: rv-cast2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv-cast2_2781:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast2.C'
    sources:
      binary: rv-cast2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv-cast2_6539:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast2.C'
    sources:
      binary: rv-cast2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv-cast2_6540:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast2.C'
    sources:
      binary: rv-cast2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv-cast3_2782:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast3.C'
    sources:
      binary: ./rv-cast3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv-cast3_2783:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast3.C'
    sources:
      binary: ./rv-cast3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv-cast3_6541:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast3.C'
    sources:
      binary: ./rv-cast3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv-cast3_6542:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast3.C'
    sources:
      binary: ./rv-cast3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv-cast4_2784:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast4.C'
    sources:
      binary: rv-cast4.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_rv-cast4_2785:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast4.C'
    sources:
      binary: rv-cast4.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_rv-cast4_6543:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast4.C'
    sources:
      binary: rv-cast4.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_rv-cast4_6544:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast4.C'
    sources:
      binary: rv-cast4.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_rv-cast5_2786:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast5.C'
    sources:
      binary: rv-cast5.s
  group: GRPSERIAL
test_rv-cast5_2787:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast5.C'
    sources:
      binary: rv-cast5.s
  group: GRPSERIAL
test_rv-cast5_6545:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast5.C'
    sources:
      binary: rv-cast5.s
  group: GRPSERIAL
test_rv-cast5_6546:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast5.C'
    sources:
      binary: rv-cast5.s
  group: GRPSERIAL
test_rv-cast_2778:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast.C'
    sources:
      binary: rv-cast.s
  group: GRPSERIAL
test_rv-cast_2779:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast.C'
    sources:
      binary: rv-cast.s
  group: GRPSERIAL
test_rv-cast_6537:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast.C'
    sources:
      binary: rv-cast.s
  group: GRPSERIAL
test_rv-cast_6538:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cast.C'
    sources:
      binary: rv-cast.s
  group: GRPSERIAL
test_rv-cond1_2788:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cond1.C'
    sources:
      binary: rv-cond1.s
  group: GRPSERIAL
test_rv-cond1_2789:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cond1.C'
    sources:
      binary: rv-cond1.s
  group: GRPSERIAL
test_rv-cond1_6547:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cond1.C'
    sources:
      binary: rv-cond1.s
  group: GRPSERIAL
test_rv-cond1_6548:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cond1.C'
    sources:
      binary: rv-cond1.s
  group: GRPSERIAL
test_rv-cond2_2790:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cond2.C'
    sources:
      binary: rv-cond2.s
  group: GRPSERIAL
test_rv-cond2_2791:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cond2.C'
    sources:
      binary: rv-cond2.s
  group: GRPSERIAL
test_rv-cond2_6549:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cond2.C'
    sources:
      binary: rv-cond2.s
  group: GRPSERIAL
test_rv-cond2_6550:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-cond2.C'
    sources:
      binary: rv-cond2.s
  group: GRPSERIAL
test_rv-conv1_2792:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-conv1.C'
    sources:
      binary: rv-conv1.s
  group: GRPSERIAL
test_rv-conv1_2793:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-conv1.C'
    sources:
      binary: rv-conv1.s
  group: GRPSERIAL
test_rv-conv1_6551:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-conv1.C'
    sources:
      binary: rv-conv1.s
  group: GRPSERIAL
test_rv-conv1_6552:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-conv1.C'
    sources:
      binary: rv-conv1.s
  group: GRPSERIAL
test_rv-copy1_2794:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-copy1.C'
    sources:
      binary: rv-copy1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("rvalue ref")[^\n]*\n?)+'
test_rv-copy1_2795:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-copy1.C'
    sources:
      binary: rv-copy1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("rvalue ref")[^\n]*\n?)+'
test_rv-copy1_6553:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-copy1.C'
    sources:
      binary: rv-copy1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("rvalue ref")[^\n]*\n?)+'
test_rv-copy1_6554:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-copy1.C'
    sources:
      binary: rv-copy1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("rvalue ref")[^\n]*\n?)+'
test_rv-deduce2_2798:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-deduce2.C'
    sources:
      binary: rv-deduce2.s
  group: GRPSERIAL
test_rv-deduce2_2799:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-deduce2.C'
    sources:
      binary: rv-deduce2.s
  group: GRPSERIAL
test_rv-deduce2_6557:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-deduce2.C'
    sources:
      binary: rv-deduce2.s
  group: GRPSERIAL
test_rv-deduce2_6558:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-deduce2.C'
    sources:
      binary: rv-deduce2.s
  group: GRPSERIAL
test_rv-deduce_2796:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-deduce.C'
    sources:
      binary: rv-deduce.s
  group: GRPSERIAL
test_rv-deduce_2797:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-deduce.C'
    sources:
      binary: rv-deduce.s
  group: GRPSERIAL
test_rv-deduce_6555:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-deduce.C'
    sources:
      binary: rv-deduce.s
  group: GRPSERIAL
test_rv-deduce_6556:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-deduce.C'
    sources:
      binary: rv-deduce.s
  group: GRPSERIAL
test_rv-dotstar_2800:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-dotstar.C'
    sources:
      binary: rv-dotstar.s
  group: GRPSERIAL
test_rv-dotstar_2801:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-dotstar.C'
    sources:
      binary: rv-dotstar.s
  group: GRPSERIAL
test_rv-dotstar_6559:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-dotstar.C'
    sources:
      binary: rv-dotstar.s
  group: GRPSERIAL
test_rv-dotstar_6560:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-dotstar.C'
    sources:
      binary: rv-dotstar.s
  group: GRPSERIAL
test_rv-func2_2804:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-func2.C'
    sources:
      binary: rv-func2.s
  group: GRPSERIAL
test_rv-func2_2805:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-func2.C'
    sources:
      binary: rv-func2.s
  group: GRPSERIAL
test_rv-func2_6563:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-func2.C'
    sources:
      binary: rv-func2.s
  group: GRPSERIAL
test_rv-func2_6564:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-func2.C'
    sources:
      binary: rv-func2.s
  group: GRPSERIAL
test_rv-func3_2806:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-func3.C'
    sources:
      binary: rv-func3.s
  group: GRPSERIAL
test_rv-func3_2807:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-func3.C'
    sources:
      binary: rv-func3.s
  group: GRPSERIAL
test_rv-func3_6565:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-func3.C'
    sources:
      binary: rv-func3.s
  group: GRPSERIAL
test_rv-func3_6566:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-func3.C'
    sources:
      binary: rv-func3.s
  group: GRPSERIAL
test_rv-func_2802:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-func.C'
    sources:
      binary: rv-func.s
  group: GRPSERIAL
test_rv-func_2803:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-func.C'
    sources:
      binary: rv-func.s
  group: GRPSERIAL
test_rv-func_6561:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-func.C'
    sources:
      binary: rv-func.s
  group: GRPSERIAL
test_rv-func_6562:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-func.C'
    sources:
      binary: rv-func.s
  group: GRPSERIAL
test_rv-init1_2808:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-init1.C'
    sources:
      binary: rv-init1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv-init1_2809:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-init1.C'
    sources:
      binary: rv-init1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv-init1_6567:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-init1.C'
    sources:
      binary: rv-init1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv-init1_6568:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-init1.C'
    sources:
      binary: rv-init1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv-lvalue-req_2810:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-lvalue-req.C'
    sources:
      binary: rv-lvalue-req.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
test_rv-lvalue-req_2811:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-lvalue-req.C'
    sources:
      binary: rv-lvalue-req.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
test_rv-lvalue-req_6569:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-lvalue-req.C'
    sources:
      binary: rv-lvalue-req.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
test_rv-lvalue-req_6570:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-lvalue-req.C'
    sources:
      binary: rv-lvalue-req.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("xvalue")[^\n]*\n?)+'
test_rv-reinterpret_2812:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-reinterpret.C'
    sources:
      binary: ./rv-reinterpret.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv-reinterpret_2813:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-reinterpret.C'
    sources:
      binary: ./rv-reinterpret.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv-reinterpret_6571:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-reinterpret.C'
    sources:
      binary: ./rv-reinterpret.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv-reinterpret_6572:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-reinterpret.C'
    sources:
      binary: ./rv-reinterpret.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv-restrict_2814:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-restrict.C'
    sources:
      binary: rv-restrict.s
  group: GRPSERIAL
test_rv-restrict_2815:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-restrict.C'
    sources:
      binary: rv-restrict.s
  group: GRPSERIAL
test_rv-restrict_6573:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-restrict.C'
    sources:
      binary: rv-restrict.s
  group: GRPSERIAL
test_rv-restrict_6574:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-restrict.C'
    sources:
      binary: rv-restrict.s
  group: GRPSERIAL
test_rv-return_2816:
  build:
    cflags: "-std=gnu++11 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-return.C'
    sources:
      binary: rv-return.s
  group: GRPSERIAL
test_rv-return_2817:
  build:
    cflags: "-std=gnu++14 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-return.C'
    sources:
      binary: rv-return.s
  group: GRPSERIAL
test_rv-return_6575:
  build:
    cflags: "-std=gnu++11 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-return.C'
    sources:
      binary: rv-return.s
  group: GRPSERIAL
test_rv-return_6576:
  build:
    cflags: "-std=gnu++14 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-return.C'
    sources:
      binary: rv-return.s
  group: GRPSERIAL
test_rv-template1_2818:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-template1.C'
    sources:
      binary: rv-template1.s
  group: GRPSERIAL
test_rv-template1_2819:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-template1.C'
    sources:
      binary: rv-template1.s
  group: GRPSERIAL
test_rv-template1_6577:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-template1.C'
    sources:
      binary: rv-template1.s
  group: GRPSERIAL
test_rv-template1_6578:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-template1.C'
    sources:
      binary: rv-template1.s
  group: GRPSERIAL
test_rv-this2_2822:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-this2.C'
    sources:
      binary: rv-this2.s
  group: GRPSERIAL
test_rv-this2_2823:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-this2.C'
    sources:
      binary: rv-this2.s
  group: GRPSERIAL
test_rv-this2_6581:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-this2.C'
    sources:
      binary: rv-this2.s
  group: GRPSERIAL
test_rv-this2_6582:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-this2.C'
    sources:
      binary: rv-this2.s
  group: GRPSERIAL
test_rv-this_2820:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-this.C'
    sources:
      binary: rv-this.s
  group: GRPSERIAL
test_rv-this_2821:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-this.C'
    sources:
      binary: rv-this.s
  group: GRPSERIAL
test_rv-this_6579:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-this.C'
    sources:
      binary: rv-this.s
  group: GRPSERIAL
test_rv-this_6580:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-this.C'
    sources:
      binary: rv-this.s
  group: GRPSERIAL
test_rv-trivial-bug_2824:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-trivial-bug.C'
    sources:
      binary: rv-trivial-bug.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_rv-trivial-bug_2825:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-trivial-bug.C'
    sources:
      binary: rv-trivial-bug.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_rv-trivial-bug_6583:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-trivial-bug.C'
    sources:
      binary: rv-trivial-bug.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_rv-trivial-bug_6584:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv-trivial-bug.C'
    sources:
      binary: rv-trivial-bug.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_rv10_2826:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv10.C'
    sources:
      binary: rv10.s
  group: GRPSERIAL
test_rv10_2827:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv10.C'
    sources:
      binary: rv10.s
  group: GRPSERIAL
test_rv10_6585:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv10.C'
    sources:
      binary: rv10.s
  group: GRPSERIAL
test_rv10_6586:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv10.C'
    sources:
      binary: rv10.s
  group: GRPSERIAL
test_rv1n_2828:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -fno-ipa-icf -fno-ipa-icf\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv1n.C'
    sources:
      binary: rv1n.s
  group: GRPSERIAL
  validate:
    match:
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv1n_2829:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -fno-ipa-icf -fno-ipa-icf\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv1n.C'
    sources:
      binary: rv1n.s
  group: GRPSERIAL
  validate:
    match:
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv1n_6587:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -fno-ipa-icf -fno-ipa-icf\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv1n.C'
    sources:
      binary: rv1n.s
  group: GRPSERIAL
  validate:
    match:
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv1n_6588:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -fno-ipa-icf -fno-ipa-icf\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv1n.C'
    sources:
      binary: rv1n.s
  group: GRPSERIAL
  validate:
    match:
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv1p_2830:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv1p.C'
    sources:
      binary: rv1p.s
  group: GRPSERIAL
test_rv1p_2831:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv1p.C'
    sources:
      binary: rv1p.s
  group: GRPSERIAL
test_rv1p_6589:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv1p.C'
    sources:
      binary: rv1p.s
  group: GRPSERIAL
test_rv1p_6590:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv1p.C'
    sources:
      binary: rv1p.s
  group: GRPSERIAL
test_rv2n_2832:
  build:
    cflags: "-std=gnu++11 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv2n.C'
    sources:
      binary: rv2n.s
  group: GRPSERIAL
  validate:
    match:
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+:187:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+:188:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+:189:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+:201:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+:203:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+:204:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+:217:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L223:
        expect: true
        expr: '(^|\n)([^\n]+:223:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+:233:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+:235:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+:237:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L248:
        expect: true
        expr: '(^|\n)([^\n]+:248:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L250:
        expect: true
        expr: '(^|\n)([^\n]+:250:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L251:
        expect: true
        expr: '(^|\n)([^\n]+:251:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L252:
        expect: true
        expr: '(^|\n)([^\n]+:252:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L264:
        expect: true
        expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L265:
        expect: true
        expr: '(^|\n)([^\n]+:265:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L266:
        expect: true
        expr: '(^|\n)([^\n]+:266:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+:267:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L282:
        expect: true
        expr: '(^|\n)([^\n]+:282:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L283:
        expect: true
        expr: '(^|\n)([^\n]+:283:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L284:
        expect: true
        expr: '(^|\n)([^\n]+:284:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L294:
        expect: true
        expr: '(^|\n)([^\n]+:294:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L296:
        expect: true
        expr: '(^|\n)([^\n]+:296:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L297:
        expect: true
        expr: '(^|\n)([^\n]+:297:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L298:
        expect: true
        expr: '(^|\n)([^\n]+:298:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L299:
        expect: true
        expr: '(^|\n)([^\n]+:299:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L300:
        expect: true
        expr: '(^|\n)([^\n]+:300:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L310:
        expect: true
        expr: '(^|\n)([^\n]+:310:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L312:
        expect: true
        expr: '(^|\n)([^\n]+:312:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L313:
        expect: true
        expr: '(^|\n)([^\n]+:313:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L314:
        expect: true
        expr: '(^|\n)([^\n]+:314:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L326:
        expect: true
        expr: '(^|\n)([^\n]+:326:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L327:
        expect: true
        expr: '(^|\n)([^\n]+:327:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L328:
        expect: true
        expr: '(^|\n)([^\n]+:328:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L338:
        expect: true
        expr: '(^|\n)([^\n]+:338:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L341:
        expect: true
        expr: '(^|\n)([^\n]+:341:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L342:
        expect: true
        expr: '(^|\n)([^\n]+:342:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L352:
        expect: true
        expr: '(^|\n)([^\n]+:352:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L354:
        expect: true
        expr: '(^|\n)([^\n]+:354:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L355:
        expect: true
        expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L356:
        expect: true
        expr: '(^|\n)([^\n]+:356:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L366:
        expect: true
        expr: '(^|\n)([^\n]+:366:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L369:
        expect: true
        expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L370:
        expect: true
        expr: '(^|\n)([^\n]+:370:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L372:
        expect: true
        expr: '(^|\n)([^\n]+:372:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L374:
        expect: true
        expr: '(^|\n)([^\n]+:374:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L384:
        expect: true
        expr: '(^|\n)([^\n]+:384:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L386:
        expect: true
        expr: '(^|\n)([^\n]+:386:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L387:
        expect: true
        expr: '(^|\n)([^\n]+:387:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L388:
        expect: true
        expr: '(^|\n)([^\n]+:388:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L389:
        expect: true
        expr: '(^|\n)([^\n]+:389:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L390:
        expect: true
        expr: '(^|\n)([^\n]+:390:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L391:
        expect: true
        expr: '(^|\n)([^\n]+:391:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L392:
        expect: true
        expr: '(^|\n)([^\n]+:392:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L402:
        expect: true
        expr: '(^|\n)([^\n]+:402:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+:404:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L406:
        expect: true
        expr: '(^|\n)([^\n]+:406:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L407:
        expect: true
        expr: '(^|\n)([^\n]+:407:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L408:
        expect: true
        expr: '(^|\n)([^\n]+:408:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L417:
        expect: true
        expr: '(^|\n)([^\n]+:417:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L419:
        expect: true
        expr: '(^|\n)([^\n]+:419:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L422:
        expect: true
        expr: '(^|\n)([^\n]+:422:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L424:
        expect: true
        expr: '(^|\n)([^\n]+:424:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L425:
        expect: true
        expr: '(^|\n)([^\n]+:425:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L435:
        expect: true
        expr: '(^|\n)([^\n]+:435:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L438:
        expect: true
        expr: '(^|\n)([^\n]+:438:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L439:
        expect: true
        expr: '(^|\n)([^\n]+:439:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L440:
        expect: true
        expr: '(^|\n)([^\n]+:440:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L441:
        expect: true
        expr: '(^|\n)([^\n]+:441:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L450:
        expect: true
        expr: '(^|\n)([^\n]+:450:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L454:
        expect: true
        expr: '(^|\n)([^\n]+:454:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L455:
        expect: true
        expr: '(^|\n)([^\n]+:455:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L456:
        expect: true
        expr: '(^|\n)([^\n]+:456:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv2n_2833:
  build:
    cflags: "-std=gnu++14 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv2n.C'
    sources:
      binary: rv2n.s
  group: GRPSERIAL
  validate:
    match:
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+:187:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+:188:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+:189:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+:201:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+:203:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+:204:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+:217:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L223:
        expect: true
        expr: '(^|\n)([^\n]+:223:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+:233:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+:235:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+:237:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L248:
        expect: true
        expr: '(^|\n)([^\n]+:248:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L250:
        expect: true
        expr: '(^|\n)([^\n]+:250:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L251:
        expect: true
        expr: '(^|\n)([^\n]+:251:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L252:
        expect: true
        expr: '(^|\n)([^\n]+:252:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L264:
        expect: true
        expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L265:
        expect: true
        expr: '(^|\n)([^\n]+:265:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L266:
        expect: true
        expr: '(^|\n)([^\n]+:266:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+:267:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L282:
        expect: true
        expr: '(^|\n)([^\n]+:282:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L283:
        expect: true
        expr: '(^|\n)([^\n]+:283:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L284:
        expect: true
        expr: '(^|\n)([^\n]+:284:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L294:
        expect: true
        expr: '(^|\n)([^\n]+:294:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L296:
        expect: true
        expr: '(^|\n)([^\n]+:296:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L297:
        expect: true
        expr: '(^|\n)([^\n]+:297:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L298:
        expect: true
        expr: '(^|\n)([^\n]+:298:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L299:
        expect: true
        expr: '(^|\n)([^\n]+:299:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L300:
        expect: true
        expr: '(^|\n)([^\n]+:300:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L310:
        expect: true
        expr: '(^|\n)([^\n]+:310:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L312:
        expect: true
        expr: '(^|\n)([^\n]+:312:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L313:
        expect: true
        expr: '(^|\n)([^\n]+:313:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L314:
        expect: true
        expr: '(^|\n)([^\n]+:314:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L326:
        expect: true
        expr: '(^|\n)([^\n]+:326:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L327:
        expect: true
        expr: '(^|\n)([^\n]+:327:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L328:
        expect: true
        expr: '(^|\n)([^\n]+:328:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L338:
        expect: true
        expr: '(^|\n)([^\n]+:338:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L341:
        expect: true
        expr: '(^|\n)([^\n]+:341:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L342:
        expect: true
        expr: '(^|\n)([^\n]+:342:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L352:
        expect: true
        expr: '(^|\n)([^\n]+:352:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L354:
        expect: true
        expr: '(^|\n)([^\n]+:354:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L355:
        expect: true
        expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L356:
        expect: true
        expr: '(^|\n)([^\n]+:356:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L366:
        expect: true
        expr: '(^|\n)([^\n]+:366:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L369:
        expect: true
        expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L370:
        expect: true
        expr: '(^|\n)([^\n]+:370:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L372:
        expect: true
        expr: '(^|\n)([^\n]+:372:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L374:
        expect: true
        expr: '(^|\n)([^\n]+:374:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L384:
        expect: true
        expr: '(^|\n)([^\n]+:384:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L386:
        expect: true
        expr: '(^|\n)([^\n]+:386:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L387:
        expect: true
        expr: '(^|\n)([^\n]+:387:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L388:
        expect: true
        expr: '(^|\n)([^\n]+:388:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L389:
        expect: true
        expr: '(^|\n)([^\n]+:389:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L390:
        expect: true
        expr: '(^|\n)([^\n]+:390:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L391:
        expect: true
        expr: '(^|\n)([^\n]+:391:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L392:
        expect: true
        expr: '(^|\n)([^\n]+:392:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L402:
        expect: true
        expr: '(^|\n)([^\n]+:402:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+:404:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L406:
        expect: true
        expr: '(^|\n)([^\n]+:406:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L407:
        expect: true
        expr: '(^|\n)([^\n]+:407:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L408:
        expect: true
        expr: '(^|\n)([^\n]+:408:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L417:
        expect: true
        expr: '(^|\n)([^\n]+:417:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L419:
        expect: true
        expr: '(^|\n)([^\n]+:419:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L422:
        expect: true
        expr: '(^|\n)([^\n]+:422:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L424:
        expect: true
        expr: '(^|\n)([^\n]+:424:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L425:
        expect: true
        expr: '(^|\n)([^\n]+:425:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L435:
        expect: true
        expr: '(^|\n)([^\n]+:435:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L438:
        expect: true
        expr: '(^|\n)([^\n]+:438:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L439:
        expect: true
        expr: '(^|\n)([^\n]+:439:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L440:
        expect: true
        expr: '(^|\n)([^\n]+:440:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L441:
        expect: true
        expr: '(^|\n)([^\n]+:441:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L450:
        expect: true
        expr: '(^|\n)([^\n]+:450:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L454:
        expect: true
        expr: '(^|\n)([^\n]+:454:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L455:
        expect: true
        expr: '(^|\n)([^\n]+:455:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L456:
        expect: true
        expr: '(^|\n)([^\n]+:456:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv2n_6591:
  build:
    cflags: "-std=gnu++11 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv2n.C'
    sources:
      binary: rv2n.s
  group: GRPSERIAL
  validate:
    match:
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+:187:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+:188:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+:189:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+:201:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+:203:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+:204:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+:217:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L223:
        expect: true
        expr: '(^|\n)([^\n]+:223:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+:233:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+:235:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+:237:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L248:
        expect: true
        expr: '(^|\n)([^\n]+:248:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L250:
        expect: true
        expr: '(^|\n)([^\n]+:250:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L251:
        expect: true
        expr: '(^|\n)([^\n]+:251:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L252:
        expect: true
        expr: '(^|\n)([^\n]+:252:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L264:
        expect: true
        expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L265:
        expect: true
        expr: '(^|\n)([^\n]+:265:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L266:
        expect: true
        expr: '(^|\n)([^\n]+:266:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+:267:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L282:
        expect: true
        expr: '(^|\n)([^\n]+:282:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L283:
        expect: true
        expr: '(^|\n)([^\n]+:283:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L284:
        expect: true
        expr: '(^|\n)([^\n]+:284:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L294:
        expect: true
        expr: '(^|\n)([^\n]+:294:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L296:
        expect: true
        expr: '(^|\n)([^\n]+:296:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L297:
        expect: true
        expr: '(^|\n)([^\n]+:297:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L298:
        expect: true
        expr: '(^|\n)([^\n]+:298:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L299:
        expect: true
        expr: '(^|\n)([^\n]+:299:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L300:
        expect: true
        expr: '(^|\n)([^\n]+:300:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L310:
        expect: true
        expr: '(^|\n)([^\n]+:310:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L312:
        expect: true
        expr: '(^|\n)([^\n]+:312:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L313:
        expect: true
        expr: '(^|\n)([^\n]+:313:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L314:
        expect: true
        expr: '(^|\n)([^\n]+:314:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L326:
        expect: true
        expr: '(^|\n)([^\n]+:326:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L327:
        expect: true
        expr: '(^|\n)([^\n]+:327:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L328:
        expect: true
        expr: '(^|\n)([^\n]+:328:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L338:
        expect: true
        expr: '(^|\n)([^\n]+:338:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L341:
        expect: true
        expr: '(^|\n)([^\n]+:341:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L342:
        expect: true
        expr: '(^|\n)([^\n]+:342:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L352:
        expect: true
        expr: '(^|\n)([^\n]+:352:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L354:
        expect: true
        expr: '(^|\n)([^\n]+:354:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L355:
        expect: true
        expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L356:
        expect: true
        expr: '(^|\n)([^\n]+:356:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L366:
        expect: true
        expr: '(^|\n)([^\n]+:366:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L369:
        expect: true
        expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L370:
        expect: true
        expr: '(^|\n)([^\n]+:370:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L372:
        expect: true
        expr: '(^|\n)([^\n]+:372:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L374:
        expect: true
        expr: '(^|\n)([^\n]+:374:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L384:
        expect: true
        expr: '(^|\n)([^\n]+:384:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L386:
        expect: true
        expr: '(^|\n)([^\n]+:386:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L387:
        expect: true
        expr: '(^|\n)([^\n]+:387:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L388:
        expect: true
        expr: '(^|\n)([^\n]+:388:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L389:
        expect: true
        expr: '(^|\n)([^\n]+:389:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L390:
        expect: true
        expr: '(^|\n)([^\n]+:390:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L391:
        expect: true
        expr: '(^|\n)([^\n]+:391:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L392:
        expect: true
        expr: '(^|\n)([^\n]+:392:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L402:
        expect: true
        expr: '(^|\n)([^\n]+:402:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+:404:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L406:
        expect: true
        expr: '(^|\n)([^\n]+:406:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L407:
        expect: true
        expr: '(^|\n)([^\n]+:407:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L408:
        expect: true
        expr: '(^|\n)([^\n]+:408:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L417:
        expect: true
        expr: '(^|\n)([^\n]+:417:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L419:
        expect: true
        expr: '(^|\n)([^\n]+:419:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L422:
        expect: true
        expr: '(^|\n)([^\n]+:422:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L424:
        expect: true
        expr: '(^|\n)([^\n]+:424:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L425:
        expect: true
        expr: '(^|\n)([^\n]+:425:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L435:
        expect: true
        expr: '(^|\n)([^\n]+:435:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L438:
        expect: true
        expr: '(^|\n)([^\n]+:438:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L439:
        expect: true
        expr: '(^|\n)([^\n]+:439:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L440:
        expect: true
        expr: '(^|\n)([^\n]+:440:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L441:
        expect: true
        expr: '(^|\n)([^\n]+:441:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L450:
        expect: true
        expr: '(^|\n)([^\n]+:450:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L454:
        expect: true
        expr: '(^|\n)([^\n]+:454:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L455:
        expect: true
        expr: '(^|\n)([^\n]+:455:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L456:
        expect: true
        expr: '(^|\n)([^\n]+:456:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv2n_6592:
  build:
    cflags: "-std=gnu++14 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv2n.C'
    sources:
      binary: rv2n.s
  group: GRPSERIAL
  validate:
    match:
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+:187:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+:188:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+:189:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+:201:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+:203:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+:204:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+:217:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L223:
        expect: true
        expr: '(^|\n)([^\n]+:223:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+:233:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+:235:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+:237:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L248:
        expect: true
        expr: '(^|\n)([^\n]+:248:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L250:
        expect: true
        expr: '(^|\n)([^\n]+:250:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L251:
        expect: true
        expr: '(^|\n)([^\n]+:251:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L252:
        expect: true
        expr: '(^|\n)([^\n]+:252:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L264:
        expect: true
        expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L265:
        expect: true
        expr: '(^|\n)([^\n]+:265:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L266:
        expect: true
        expr: '(^|\n)([^\n]+:266:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+:267:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L282:
        expect: true
        expr: '(^|\n)([^\n]+:282:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L283:
        expect: true
        expr: '(^|\n)([^\n]+:283:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L284:
        expect: true
        expr: '(^|\n)([^\n]+:284:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L294:
        expect: true
        expr: '(^|\n)([^\n]+:294:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L296:
        expect: true
        expr: '(^|\n)([^\n]+:296:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L297:
        expect: true
        expr: '(^|\n)([^\n]+:297:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L298:
        expect: true
        expr: '(^|\n)([^\n]+:298:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L299:
        expect: true
        expr: '(^|\n)([^\n]+:299:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L300:
        expect: true
        expr: '(^|\n)([^\n]+:300:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L310:
        expect: true
        expr: '(^|\n)([^\n]+:310:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L312:
        expect: true
        expr: '(^|\n)([^\n]+:312:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L313:
        expect: true
        expr: '(^|\n)([^\n]+:313:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L314:
        expect: true
        expr: '(^|\n)([^\n]+:314:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L326:
        expect: true
        expr: '(^|\n)([^\n]+:326:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L327:
        expect: true
        expr: '(^|\n)([^\n]+:327:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L328:
        expect: true
        expr: '(^|\n)([^\n]+:328:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L338:
        expect: true
        expr: '(^|\n)([^\n]+:338:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L341:
        expect: true
        expr: '(^|\n)([^\n]+:341:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L342:
        expect: true
        expr: '(^|\n)([^\n]+:342:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L352:
        expect: true
        expr: '(^|\n)([^\n]+:352:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L354:
        expect: true
        expr: '(^|\n)([^\n]+:354:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L355:
        expect: true
        expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L356:
        expect: true
        expr: '(^|\n)([^\n]+:356:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L366:
        expect: true
        expr: '(^|\n)([^\n]+:366:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L369:
        expect: true
        expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L370:
        expect: true
        expr: '(^|\n)([^\n]+:370:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L372:
        expect: true
        expr: '(^|\n)([^\n]+:372:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L374:
        expect: true
        expr: '(^|\n)([^\n]+:374:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L384:
        expect: true
        expr: '(^|\n)([^\n]+:384:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L386:
        expect: true
        expr: '(^|\n)([^\n]+:386:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L387:
        expect: true
        expr: '(^|\n)([^\n]+:387:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L388:
        expect: true
        expr: '(^|\n)([^\n]+:388:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L389:
        expect: true
        expr: '(^|\n)([^\n]+:389:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L390:
        expect: true
        expr: '(^|\n)([^\n]+:390:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L391:
        expect: true
        expr: '(^|\n)([^\n]+:391:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L392:
        expect: true
        expr: '(^|\n)([^\n]+:392:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L402:
        expect: true
        expr: '(^|\n)([^\n]+:402:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+:404:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L406:
        expect: true
        expr: '(^|\n)([^\n]+:406:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L407:
        expect: true
        expr: '(^|\n)([^\n]+:407:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L408:
        expect: true
        expr: '(^|\n)([^\n]+:408:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L417:
        expect: true
        expr: '(^|\n)([^\n]+:417:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L419:
        expect: true
        expr: '(^|\n)([^\n]+:419:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L422:
        expect: true
        expr: '(^|\n)([^\n]+:422:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L424:
        expect: true
        expr: '(^|\n)([^\n]+:424:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L425:
        expect: true
        expr: '(^|\n)([^\n]+:425:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L435:
        expect: true
        expr: '(^|\n)([^\n]+:435:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L438:
        expect: true
        expr: '(^|\n)([^\n]+:438:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L439:
        expect: true
        expr: '(^|\n)([^\n]+:439:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L440:
        expect: true
        expr: '(^|\n)([^\n]+:440:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L441:
        expect: true
        expr: '(^|\n)([^\n]+:441:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L450:
        expect: true
        expr: '(^|\n)([^\n]+:450:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L454:
        expect: true
        expr: '(^|\n)([^\n]+:454:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L455:
        expect: true
        expr: '(^|\n)([^\n]+:455:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L456:
        expect: true
        expr: '(^|\n)([^\n]+:456:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv2p_2834:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv2p.C'
    sources:
      binary: rv2p.s
  group: GRPSERIAL
test_rv2p_2835:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv2p.C'
    sources:
      binary: rv2p.s
  group: GRPSERIAL
test_rv2p_6593:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv2p.C'
    sources:
      binary: rv2p.s
  group: GRPSERIAL
test_rv2p_6594:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv2p.C'
    sources:
      binary: rv2p.s
  group: GRPSERIAL
test_rv3n_2836:
  build:
    cflags: "-std=gnu++11 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv3n.C'
    sources:
      binary: rv3n.s
  group: GRPSERIAL
  validate:
    match:
      L105:
        expect: true
        expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+:121:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+:153:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+:176:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+:177:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+:188:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+:193:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+:194:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L223:
        expect: true
        expr: '(^|\n)([^\n]+:223:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L224:
        expect: true
        expr: '(^|\n)([^\n]+:224:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L225:
        expect: true
        expr: '(^|\n)([^\n]+:225:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+:240:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L251:
        expect: true
        expr: '(^|\n)([^\n]+:251:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L253:
        expect: true
        expr: '(^|\n)([^\n]+:253:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L255:
        expect: true
        expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L266:
        expect: true
        expr: '(^|\n)([^\n]+:266:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L269:
        expect: true
        expr: '(^|\n)([^\n]+:269:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L271:
        expect: true
        expr: '(^|\n)([^\n]+:271:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L272:
        expect: true
        expr: '(^|\n)([^\n]+:272:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L273:
        expect: true
        expr: '(^|\n)([^\n]+:273:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L284:
        expect: true
        expr: '(^|\n)([^\n]+:284:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L286:
        expect: true
        expr: '(^|\n)([^\n]+:286:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L287:
        expect: true
        expr: '(^|\n)([^\n]+:287:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L288:
        expect: true
        expr: '(^|\n)([^\n]+:288:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L289:
        expect: true
        expr: '(^|\n)([^\n]+:289:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L290:
        expect: true
        expr: '(^|\n)([^\n]+:290:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L291:
        expect: true
        expr: '(^|\n)([^\n]+:291:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L302:
        expect: true
        expr: '(^|\n)([^\n]+:302:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L304:
        expect: true
        expr: '(^|\n)([^\n]+:304:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L305:
        expect: true
        expr: '(^|\n)([^\n]+:305:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L306:
        expect: true
        expr: '(^|\n)([^\n]+:306:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L307:
        expect: true
        expr: '(^|\n)([^\n]+:307:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L318:
        expect: true
        expr: '(^|\n)([^\n]+:318:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L320:
        expect: true
        expr: '(^|\n)([^\n]+:320:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L321:
        expect: true
        expr: '(^|\n)([^\n]+:321:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L322:
        expect: true
        expr: '(^|\n)([^\n]+:322:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L324:
        expect: true
        expr: '(^|\n)([^\n]+:324:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L336:
        expect: true
        expr: '(^|\n)([^\n]+:336:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L338:
        expect: true
        expr: '(^|\n)([^\n]+:338:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L339:
        expect: true
        expr: '(^|\n)([^\n]+:339:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L341:
        expect: true
        expr: '(^|\n)([^\n]+:341:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L352:
        expect: true
        expr: '(^|\n)([^\n]+:352:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L354:
        expect: true
        expr: '(^|\n)([^\n]+:354:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L355:
        expect: true
        expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L356:
        expect: true
        expr: '(^|\n)([^\n]+:356:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L357:
        expect: true
        expr: '(^|\n)([^\n]+:357:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L370:
        expect: true
        expr: '(^|\n)([^\n]+:370:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L372:
        expect: true
        expr: '(^|\n)([^\n]+:372:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L384:
        expect: true
        expr: '(^|\n)([^\n]+:384:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L386:
        expect: true
        expr: '(^|\n)([^\n]+:386:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L387:
        expect: true
        expr: '(^|\n)([^\n]+:387:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L388:
        expect: true
        expr: '(^|\n)([^\n]+:388:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L389:
        expect: true
        expr: '(^|\n)([^\n]+:389:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L390:
        expect: true
        expr: '(^|\n)([^\n]+:390:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L401:
        expect: true
        expr: '(^|\n)([^\n]+:401:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L403:
        expect: true
        expr: '(^|\n)([^\n]+:403:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+:404:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L406:
        expect: true
        expr: '(^|\n)([^\n]+:406:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L407:
        expect: true
        expr: '(^|\n)([^\n]+:407:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L418:
        expect: true
        expr: '(^|\n)([^\n]+:418:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L422:
        expect: true
        expr: '(^|\n)([^\n]+:422:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L434:
        expect: true
        expr: '(^|\n)([^\n]+:434:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L436:
        expect: true
        expr: '(^|\n)([^\n]+:436:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L438:
        expect: true
        expr: '(^|\n)([^\n]+:438:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L449:
        expect: true
        expr: '(^|\n)([^\n]+:449:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L451:
        expect: true
        expr: '(^|\n)([^\n]+:451:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L464:
        expect: true
        expr: '(^|\n)([^\n]+:464:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L466:
        expect: true
        expr: '(^|\n)([^\n]+:466:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L467:
        expect: true
        expr: '(^|\n)([^\n]+:467:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L468:
        expect: true
        expr: '(^|\n)([^\n]+:468:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L479:
        expect: true
        expr: '(^|\n)([^\n]+:479:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L481:
        expect: true
        expr: '(^|\n)([^\n]+:481:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L482:
        expect: true
        expr: '(^|\n)([^\n]+:482:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L493:
        expect: true
        expr: '(^|\n)([^\n]+:493:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L495:
        expect: true
        expr: '(^|\n)([^\n]+:495:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L496:
        expect: true
        expr: '(^|\n)([^\n]+:496:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L497:
        expect: true
        expr: '(^|\n)([^\n]+:497:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L498:
        expect: true
        expr: '(^|\n)([^\n]+:498:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L499:
        expect: true
        expr: '(^|\n)([^\n]+:499:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L510:
        expect: true
        expr: '(^|\n)([^\n]+:510:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L512:
        expect: true
        expr: '(^|\n)([^\n]+:512:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L513:
        expect: true
        expr: '(^|\n)([^\n]+:513:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L514:
        expect: true
        expr: '(^|\n)([^\n]+:514:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L515:
        expect: true
        expr: '(^|\n)([^\n]+:515:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L526:
        expect: true
        expr: '(^|\n)([^\n]+:526:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L528:
        expect: true
        expr: '(^|\n)([^\n]+:528:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L529:
        expect: true
        expr: '(^|\n)([^\n]+:529:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L530:
        expect: true
        expr: '(^|\n)([^\n]+:530:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L541:
        expect: true
        expr: '(^|\n)([^\n]+:541:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L543:
        expect: true
        expr: '(^|\n)([^\n]+:543:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L544:
        expect: true
        expr: '(^|\n)([^\n]+:544:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L545:
        expect: true
        expr: '(^|\n)([^\n]+:545:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L546:
        expect: true
        expr: '(^|\n)([^\n]+:546:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L547:
        expect: true
        expr: '(^|\n)([^\n]+:547:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L558:
        expect: true
        expr: '(^|\n)([^\n]+:558:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L560:
        expect: true
        expr: '(^|\n)([^\n]+:560:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L561:
        expect: true
        expr: '(^|\n)([^\n]+:561:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L562:
        expect: true
        expr: '(^|\n)([^\n]+:562:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L573:
        expect: true
        expr: '(^|\n)([^\n]+:573:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L575:
        expect: true
        expr: '(^|\n)([^\n]+:575:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L576:
        expect: true
        expr: '(^|\n)([^\n]+:576:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L577:
        expect: true
        expr: '(^|\n)([^\n]+:577:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L588:
        expect: true
        expr: '(^|\n)([^\n]+:588:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L590:
        expect: true
        expr: '(^|\n)([^\n]+:590:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L591:
        expect: true
        expr: '(^|\n)([^\n]+:591:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L592:
        expect: true
        expr: '(^|\n)([^\n]+:592:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L593:
        expect: true
        expr: '(^|\n)([^\n]+:593:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L604:
        expect: true
        expr: '(^|\n)([^\n]+:604:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L606:
        expect: true
        expr: '(^|\n)([^\n]+:606:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L607:
        expect: true
        expr: '(^|\n)([^\n]+:607:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L608:
        expect: true
        expr: '(^|\n)([^\n]+:608:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L619:
        expect: true
        expr: '(^|\n)([^\n]+:619:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L621:
        expect: true
        expr: '(^|\n)([^\n]+:621:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L622:
        expect: true
        expr: '(^|\n)([^\n]+:622:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L623:
        expect: true
        expr: '(^|\n)([^\n]+:623:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L634:
        expect: true
        expr: '(^|\n)([^\n]+:634:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L636:
        expect: true
        expr: '(^|\n)([^\n]+:636:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L637:
        expect: true
        expr: '(^|\n)([^\n]+:637:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L638:
        expect: true
        expr: '(^|\n)([^\n]+:638:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L639:
        expect: true
        expr: '(^|\n)([^\n]+:639:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L640:
        expect: true
        expr: '(^|\n)([^\n]+:640:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L651:
        expect: true
        expr: '(^|\n)([^\n]+:651:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L653:
        expect: true
        expr: '(^|\n)([^\n]+:653:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L654:
        expect: true
        expr: '(^|\n)([^\n]+:654:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L656:
        expect: true
        expr: '(^|\n)([^\n]+:656:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L657:
        expect: true
        expr: '(^|\n)([^\n]+:657:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L668:
        expect: true
        expr: '(^|\n)([^\n]+:668:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L670:
        expect: true
        expr: '(^|\n)([^\n]+:670:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L671:
        expect: true
        expr: '(^|\n)([^\n]+:671:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L672:
        expect: true
        expr: '(^|\n)([^\n]+:672:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L683:
        expect: true
        expr: '(^|\n)([^\n]+:683:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L685:
        expect: true
        expr: '(^|\n)([^\n]+:685:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L686:
        expect: true
        expr: '(^|\n)([^\n]+:686:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L687:
        expect: true
        expr: '(^|\n)([^\n]+:687:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L688:
        expect: true
        expr: '(^|\n)([^\n]+:688:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L689:
        expect: true
        expr: '(^|\n)([^\n]+:689:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L700:
        expect: true
        expr: '(^|\n)([^\n]+:700:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L702:
        expect: true
        expr: '(^|\n)([^\n]+:702:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L703:
        expect: true
        expr: '(^|\n)([^\n]+:703:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L704:
        expect: true
        expr: '(^|\n)([^\n]+:704:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L715:
        expect: true
        expr: '(^|\n)([^\n]+:715:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L717:
        expect: true
        expr: '(^|\n)([^\n]+:717:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L718:
        expect: true
        expr: '(^|\n)([^\n]+:718:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L719:
        expect: true
        expr: '(^|\n)([^\n]+:719:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L730:
        expect: true
        expr: '(^|\n)([^\n]+:730:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L732:
        expect: true
        expr: '(^|\n)([^\n]+:732:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L733:
        expect: true
        expr: '(^|\n)([^\n]+:733:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L734:
        expect: true
        expr: '(^|\n)([^\n]+:734:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L745:
        expect: true
        expr: '(^|\n)([^\n]+:745:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L747:
        expect: true
        expr: '(^|\n)([^\n]+:747:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L748:
        expect: true
        expr: '(^|\n)([^\n]+:748:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L749:
        expect: true
        expr: '(^|\n)([^\n]+:749:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L760:
        expect: true
        expr: '(^|\n)([^\n]+:760:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L762:
        expect: true
        expr: '(^|\n)([^\n]+:762:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L763:
        expect: true
        expr: '(^|\n)([^\n]+:763:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L764:
        expect: true
        expr: '(^|\n)([^\n]+:764:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L775:
        expect: true
        expr: '(^|\n)([^\n]+:775:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L777:
        expect: true
        expr: '(^|\n)([^\n]+:777:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L778:
        expect: true
        expr: '(^|\n)([^\n]+:778:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L779:
        expect: true
        expr: '(^|\n)([^\n]+:779:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L780:
        expect: true
        expr: '(^|\n)([^\n]+:780:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L781:
        expect: true
        expr: '(^|\n)([^\n]+:781:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L782:
        expect: true
        expr: '(^|\n)([^\n]+:782:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L793:
        expect: true
        expr: '(^|\n)([^\n]+:793:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L795:
        expect: true
        expr: '(^|\n)([^\n]+:795:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L796:
        expect: true
        expr: '(^|\n)([^\n]+:796:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L797:
        expect: true
        expr: '(^|\n)([^\n]+:797:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L798:
        expect: true
        expr: '(^|\n)([^\n]+:798:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L799:
        expect: true
        expr: '(^|\n)([^\n]+:799:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L810:
        expect: true
        expr: '(^|\n)([^\n]+:810:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L812:
        expect: true
        expr: '(^|\n)([^\n]+:812:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L813:
        expect: true
        expr: '(^|\n)([^\n]+:813:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L814:
        expect: true
        expr: '(^|\n)([^\n]+:814:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L815:
        expect: true
        expr: '(^|\n)([^\n]+:815:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L816:
        expect: true
        expr: '(^|\n)([^\n]+:816:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L827:
        expect: true
        expr: '(^|\n)([^\n]+:827:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L829:
        expect: true
        expr: '(^|\n)([^\n]+:829:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L830:
        expect: true
        expr: '(^|\n)([^\n]+:830:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L831:
        expect: true
        expr: '(^|\n)([^\n]+:831:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L832:
        expect: true
        expr: '(^|\n)([^\n]+:832:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L833:
        expect: true
        expr: '(^|\n)([^\n]+:833:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L834:
        expect: true
        expr: '(^|\n)([^\n]+:834:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv3n_2837:
  build:
    cflags: "-std=gnu++14 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv3n.C'
    sources:
      binary: rv3n.s
  group: GRPSERIAL
  validate:
    match:
      L105:
        expect: true
        expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+:121:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+:153:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+:176:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+:177:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+:188:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+:193:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+:194:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L223:
        expect: true
        expr: '(^|\n)([^\n]+:223:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L224:
        expect: true
        expr: '(^|\n)([^\n]+:224:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L225:
        expect: true
        expr: '(^|\n)([^\n]+:225:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+:240:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L251:
        expect: true
        expr: '(^|\n)([^\n]+:251:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L253:
        expect: true
        expr: '(^|\n)([^\n]+:253:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L255:
        expect: true
        expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L266:
        expect: true
        expr: '(^|\n)([^\n]+:266:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L269:
        expect: true
        expr: '(^|\n)([^\n]+:269:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L271:
        expect: true
        expr: '(^|\n)([^\n]+:271:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L272:
        expect: true
        expr: '(^|\n)([^\n]+:272:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L273:
        expect: true
        expr: '(^|\n)([^\n]+:273:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L284:
        expect: true
        expr: '(^|\n)([^\n]+:284:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L286:
        expect: true
        expr: '(^|\n)([^\n]+:286:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L287:
        expect: true
        expr: '(^|\n)([^\n]+:287:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L288:
        expect: true
        expr: '(^|\n)([^\n]+:288:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L289:
        expect: true
        expr: '(^|\n)([^\n]+:289:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L290:
        expect: true
        expr: '(^|\n)([^\n]+:290:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L291:
        expect: true
        expr: '(^|\n)([^\n]+:291:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L302:
        expect: true
        expr: '(^|\n)([^\n]+:302:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L304:
        expect: true
        expr: '(^|\n)([^\n]+:304:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L305:
        expect: true
        expr: '(^|\n)([^\n]+:305:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L306:
        expect: true
        expr: '(^|\n)([^\n]+:306:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L307:
        expect: true
        expr: '(^|\n)([^\n]+:307:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L318:
        expect: true
        expr: '(^|\n)([^\n]+:318:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L320:
        expect: true
        expr: '(^|\n)([^\n]+:320:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L321:
        expect: true
        expr: '(^|\n)([^\n]+:321:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L322:
        expect: true
        expr: '(^|\n)([^\n]+:322:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L324:
        expect: true
        expr: '(^|\n)([^\n]+:324:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L336:
        expect: true
        expr: '(^|\n)([^\n]+:336:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L338:
        expect: true
        expr: '(^|\n)([^\n]+:338:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L339:
        expect: true
        expr: '(^|\n)([^\n]+:339:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L341:
        expect: true
        expr: '(^|\n)([^\n]+:341:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L352:
        expect: true
        expr: '(^|\n)([^\n]+:352:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L354:
        expect: true
        expr: '(^|\n)([^\n]+:354:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L355:
        expect: true
        expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L356:
        expect: true
        expr: '(^|\n)([^\n]+:356:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L357:
        expect: true
        expr: '(^|\n)([^\n]+:357:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L370:
        expect: true
        expr: '(^|\n)([^\n]+:370:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L372:
        expect: true
        expr: '(^|\n)([^\n]+:372:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L384:
        expect: true
        expr: '(^|\n)([^\n]+:384:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L386:
        expect: true
        expr: '(^|\n)([^\n]+:386:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L387:
        expect: true
        expr: '(^|\n)([^\n]+:387:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L388:
        expect: true
        expr: '(^|\n)([^\n]+:388:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L389:
        expect: true
        expr: '(^|\n)([^\n]+:389:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L390:
        expect: true
        expr: '(^|\n)([^\n]+:390:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L401:
        expect: true
        expr: '(^|\n)([^\n]+:401:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L403:
        expect: true
        expr: '(^|\n)([^\n]+:403:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+:404:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L406:
        expect: true
        expr: '(^|\n)([^\n]+:406:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L407:
        expect: true
        expr: '(^|\n)([^\n]+:407:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L418:
        expect: true
        expr: '(^|\n)([^\n]+:418:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L422:
        expect: true
        expr: '(^|\n)([^\n]+:422:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L434:
        expect: true
        expr: '(^|\n)([^\n]+:434:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L436:
        expect: true
        expr: '(^|\n)([^\n]+:436:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L438:
        expect: true
        expr: '(^|\n)([^\n]+:438:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L449:
        expect: true
        expr: '(^|\n)([^\n]+:449:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L451:
        expect: true
        expr: '(^|\n)([^\n]+:451:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L464:
        expect: true
        expr: '(^|\n)([^\n]+:464:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L466:
        expect: true
        expr: '(^|\n)([^\n]+:466:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L467:
        expect: true
        expr: '(^|\n)([^\n]+:467:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L468:
        expect: true
        expr: '(^|\n)([^\n]+:468:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L479:
        expect: true
        expr: '(^|\n)([^\n]+:479:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L481:
        expect: true
        expr: '(^|\n)([^\n]+:481:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L482:
        expect: true
        expr: '(^|\n)([^\n]+:482:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L493:
        expect: true
        expr: '(^|\n)([^\n]+:493:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L495:
        expect: true
        expr: '(^|\n)([^\n]+:495:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L496:
        expect: true
        expr: '(^|\n)([^\n]+:496:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L497:
        expect: true
        expr: '(^|\n)([^\n]+:497:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L498:
        expect: true
        expr: '(^|\n)([^\n]+:498:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L499:
        expect: true
        expr: '(^|\n)([^\n]+:499:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L510:
        expect: true
        expr: '(^|\n)([^\n]+:510:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L512:
        expect: true
        expr: '(^|\n)([^\n]+:512:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L513:
        expect: true
        expr: '(^|\n)([^\n]+:513:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L514:
        expect: true
        expr: '(^|\n)([^\n]+:514:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L515:
        expect: true
        expr: '(^|\n)([^\n]+:515:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L526:
        expect: true
        expr: '(^|\n)([^\n]+:526:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L528:
        expect: true
        expr: '(^|\n)([^\n]+:528:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L529:
        expect: true
        expr: '(^|\n)([^\n]+:529:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L530:
        expect: true
        expr: '(^|\n)([^\n]+:530:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L541:
        expect: true
        expr: '(^|\n)([^\n]+:541:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L543:
        expect: true
        expr: '(^|\n)([^\n]+:543:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L544:
        expect: true
        expr: '(^|\n)([^\n]+:544:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L545:
        expect: true
        expr: '(^|\n)([^\n]+:545:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L546:
        expect: true
        expr: '(^|\n)([^\n]+:546:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L547:
        expect: true
        expr: '(^|\n)([^\n]+:547:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L558:
        expect: true
        expr: '(^|\n)([^\n]+:558:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L560:
        expect: true
        expr: '(^|\n)([^\n]+:560:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L561:
        expect: true
        expr: '(^|\n)([^\n]+:561:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L562:
        expect: true
        expr: '(^|\n)([^\n]+:562:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L573:
        expect: true
        expr: '(^|\n)([^\n]+:573:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L575:
        expect: true
        expr: '(^|\n)([^\n]+:575:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L576:
        expect: true
        expr: '(^|\n)([^\n]+:576:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L577:
        expect: true
        expr: '(^|\n)([^\n]+:577:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L588:
        expect: true
        expr: '(^|\n)([^\n]+:588:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L590:
        expect: true
        expr: '(^|\n)([^\n]+:590:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L591:
        expect: true
        expr: '(^|\n)([^\n]+:591:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L592:
        expect: true
        expr: '(^|\n)([^\n]+:592:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L593:
        expect: true
        expr: '(^|\n)([^\n]+:593:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L604:
        expect: true
        expr: '(^|\n)([^\n]+:604:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L606:
        expect: true
        expr: '(^|\n)([^\n]+:606:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L607:
        expect: true
        expr: '(^|\n)([^\n]+:607:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L608:
        expect: true
        expr: '(^|\n)([^\n]+:608:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L619:
        expect: true
        expr: '(^|\n)([^\n]+:619:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L621:
        expect: true
        expr: '(^|\n)([^\n]+:621:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L622:
        expect: true
        expr: '(^|\n)([^\n]+:622:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L623:
        expect: true
        expr: '(^|\n)([^\n]+:623:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L634:
        expect: true
        expr: '(^|\n)([^\n]+:634:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L636:
        expect: true
        expr: '(^|\n)([^\n]+:636:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L637:
        expect: true
        expr: '(^|\n)([^\n]+:637:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L638:
        expect: true
        expr: '(^|\n)([^\n]+:638:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L639:
        expect: true
        expr: '(^|\n)([^\n]+:639:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L640:
        expect: true
        expr: '(^|\n)([^\n]+:640:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L651:
        expect: true
        expr: '(^|\n)([^\n]+:651:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L653:
        expect: true
        expr: '(^|\n)([^\n]+:653:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L654:
        expect: true
        expr: '(^|\n)([^\n]+:654:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L656:
        expect: true
        expr: '(^|\n)([^\n]+:656:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L657:
        expect: true
        expr: '(^|\n)([^\n]+:657:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L668:
        expect: true
        expr: '(^|\n)([^\n]+:668:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L670:
        expect: true
        expr: '(^|\n)([^\n]+:670:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L671:
        expect: true
        expr: '(^|\n)([^\n]+:671:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L672:
        expect: true
        expr: '(^|\n)([^\n]+:672:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L683:
        expect: true
        expr: '(^|\n)([^\n]+:683:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L685:
        expect: true
        expr: '(^|\n)([^\n]+:685:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L686:
        expect: true
        expr: '(^|\n)([^\n]+:686:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L687:
        expect: true
        expr: '(^|\n)([^\n]+:687:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L688:
        expect: true
        expr: '(^|\n)([^\n]+:688:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L689:
        expect: true
        expr: '(^|\n)([^\n]+:689:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L700:
        expect: true
        expr: '(^|\n)([^\n]+:700:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L702:
        expect: true
        expr: '(^|\n)([^\n]+:702:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L703:
        expect: true
        expr: '(^|\n)([^\n]+:703:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L704:
        expect: true
        expr: '(^|\n)([^\n]+:704:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L715:
        expect: true
        expr: '(^|\n)([^\n]+:715:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L717:
        expect: true
        expr: '(^|\n)([^\n]+:717:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L718:
        expect: true
        expr: '(^|\n)([^\n]+:718:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L719:
        expect: true
        expr: '(^|\n)([^\n]+:719:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L730:
        expect: true
        expr: '(^|\n)([^\n]+:730:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L732:
        expect: true
        expr: '(^|\n)([^\n]+:732:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L733:
        expect: true
        expr: '(^|\n)([^\n]+:733:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L734:
        expect: true
        expr: '(^|\n)([^\n]+:734:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L745:
        expect: true
        expr: '(^|\n)([^\n]+:745:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L747:
        expect: true
        expr: '(^|\n)([^\n]+:747:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L748:
        expect: true
        expr: '(^|\n)([^\n]+:748:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L749:
        expect: true
        expr: '(^|\n)([^\n]+:749:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L760:
        expect: true
        expr: '(^|\n)([^\n]+:760:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L762:
        expect: true
        expr: '(^|\n)([^\n]+:762:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L763:
        expect: true
        expr: '(^|\n)([^\n]+:763:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L764:
        expect: true
        expr: '(^|\n)([^\n]+:764:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L775:
        expect: true
        expr: '(^|\n)([^\n]+:775:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L777:
        expect: true
        expr: '(^|\n)([^\n]+:777:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L778:
        expect: true
        expr: '(^|\n)([^\n]+:778:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L779:
        expect: true
        expr: '(^|\n)([^\n]+:779:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L780:
        expect: true
        expr: '(^|\n)([^\n]+:780:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L781:
        expect: true
        expr: '(^|\n)([^\n]+:781:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L782:
        expect: true
        expr: '(^|\n)([^\n]+:782:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L793:
        expect: true
        expr: '(^|\n)([^\n]+:793:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L795:
        expect: true
        expr: '(^|\n)([^\n]+:795:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L796:
        expect: true
        expr: '(^|\n)([^\n]+:796:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L797:
        expect: true
        expr: '(^|\n)([^\n]+:797:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L798:
        expect: true
        expr: '(^|\n)([^\n]+:798:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L799:
        expect: true
        expr: '(^|\n)([^\n]+:799:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L810:
        expect: true
        expr: '(^|\n)([^\n]+:810:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L812:
        expect: true
        expr: '(^|\n)([^\n]+:812:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L813:
        expect: true
        expr: '(^|\n)([^\n]+:813:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L814:
        expect: true
        expr: '(^|\n)([^\n]+:814:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L815:
        expect: true
        expr: '(^|\n)([^\n]+:815:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L816:
        expect: true
        expr: '(^|\n)([^\n]+:816:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L827:
        expect: true
        expr: '(^|\n)([^\n]+:827:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L829:
        expect: true
        expr: '(^|\n)([^\n]+:829:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L830:
        expect: true
        expr: '(^|\n)([^\n]+:830:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L831:
        expect: true
        expr: '(^|\n)([^\n]+:831:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L832:
        expect: true
        expr: '(^|\n)([^\n]+:832:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L833:
        expect: true
        expr: '(^|\n)([^\n]+:833:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L834:
        expect: true
        expr: '(^|\n)([^\n]+:834:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv3n_6595:
  build:
    cflags: "-std=gnu++11 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv3n.C'
    sources:
      binary: rv3n.s
  group: GRPSERIAL
  validate:
    match:
      L105:
        expect: true
        expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+:121:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+:153:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+:176:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+:177:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+:188:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+:193:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+:194:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L223:
        expect: true
        expr: '(^|\n)([^\n]+:223:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L224:
        expect: true
        expr: '(^|\n)([^\n]+:224:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L225:
        expect: true
        expr: '(^|\n)([^\n]+:225:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+:240:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L251:
        expect: true
        expr: '(^|\n)([^\n]+:251:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L253:
        expect: true
        expr: '(^|\n)([^\n]+:253:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L255:
        expect: true
        expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L266:
        expect: true
        expr: '(^|\n)([^\n]+:266:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L269:
        expect: true
        expr: '(^|\n)([^\n]+:269:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L271:
        expect: true
        expr: '(^|\n)([^\n]+:271:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L272:
        expect: true
        expr: '(^|\n)([^\n]+:272:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L273:
        expect: true
        expr: '(^|\n)([^\n]+:273:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L284:
        expect: true
        expr: '(^|\n)([^\n]+:284:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L286:
        expect: true
        expr: '(^|\n)([^\n]+:286:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L287:
        expect: true
        expr: '(^|\n)([^\n]+:287:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L288:
        expect: true
        expr: '(^|\n)([^\n]+:288:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L289:
        expect: true
        expr: '(^|\n)([^\n]+:289:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L290:
        expect: true
        expr: '(^|\n)([^\n]+:290:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L291:
        expect: true
        expr: '(^|\n)([^\n]+:291:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L302:
        expect: true
        expr: '(^|\n)([^\n]+:302:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L304:
        expect: true
        expr: '(^|\n)([^\n]+:304:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L305:
        expect: true
        expr: '(^|\n)([^\n]+:305:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L306:
        expect: true
        expr: '(^|\n)([^\n]+:306:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L307:
        expect: true
        expr: '(^|\n)([^\n]+:307:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L318:
        expect: true
        expr: '(^|\n)([^\n]+:318:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L320:
        expect: true
        expr: '(^|\n)([^\n]+:320:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L321:
        expect: true
        expr: '(^|\n)([^\n]+:321:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L322:
        expect: true
        expr: '(^|\n)([^\n]+:322:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L324:
        expect: true
        expr: '(^|\n)([^\n]+:324:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L336:
        expect: true
        expr: '(^|\n)([^\n]+:336:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L338:
        expect: true
        expr: '(^|\n)([^\n]+:338:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L339:
        expect: true
        expr: '(^|\n)([^\n]+:339:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L341:
        expect: true
        expr: '(^|\n)([^\n]+:341:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L352:
        expect: true
        expr: '(^|\n)([^\n]+:352:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L354:
        expect: true
        expr: '(^|\n)([^\n]+:354:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L355:
        expect: true
        expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L356:
        expect: true
        expr: '(^|\n)([^\n]+:356:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L357:
        expect: true
        expr: '(^|\n)([^\n]+:357:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L370:
        expect: true
        expr: '(^|\n)([^\n]+:370:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L372:
        expect: true
        expr: '(^|\n)([^\n]+:372:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L384:
        expect: true
        expr: '(^|\n)([^\n]+:384:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L386:
        expect: true
        expr: '(^|\n)([^\n]+:386:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L387:
        expect: true
        expr: '(^|\n)([^\n]+:387:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L388:
        expect: true
        expr: '(^|\n)([^\n]+:388:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L389:
        expect: true
        expr: '(^|\n)([^\n]+:389:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L390:
        expect: true
        expr: '(^|\n)([^\n]+:390:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L401:
        expect: true
        expr: '(^|\n)([^\n]+:401:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L403:
        expect: true
        expr: '(^|\n)([^\n]+:403:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+:404:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L406:
        expect: true
        expr: '(^|\n)([^\n]+:406:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L407:
        expect: true
        expr: '(^|\n)([^\n]+:407:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L418:
        expect: true
        expr: '(^|\n)([^\n]+:418:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L422:
        expect: true
        expr: '(^|\n)([^\n]+:422:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L434:
        expect: true
        expr: '(^|\n)([^\n]+:434:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L436:
        expect: true
        expr: '(^|\n)([^\n]+:436:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L438:
        expect: true
        expr: '(^|\n)([^\n]+:438:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L449:
        expect: true
        expr: '(^|\n)([^\n]+:449:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L451:
        expect: true
        expr: '(^|\n)([^\n]+:451:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L464:
        expect: true
        expr: '(^|\n)([^\n]+:464:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L466:
        expect: true
        expr: '(^|\n)([^\n]+:466:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L467:
        expect: true
        expr: '(^|\n)([^\n]+:467:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L468:
        expect: true
        expr: '(^|\n)([^\n]+:468:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L479:
        expect: true
        expr: '(^|\n)([^\n]+:479:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L481:
        expect: true
        expr: '(^|\n)([^\n]+:481:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L482:
        expect: true
        expr: '(^|\n)([^\n]+:482:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L493:
        expect: true
        expr: '(^|\n)([^\n]+:493:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L495:
        expect: true
        expr: '(^|\n)([^\n]+:495:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L496:
        expect: true
        expr: '(^|\n)([^\n]+:496:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L497:
        expect: true
        expr: '(^|\n)([^\n]+:497:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L498:
        expect: true
        expr: '(^|\n)([^\n]+:498:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L499:
        expect: true
        expr: '(^|\n)([^\n]+:499:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L510:
        expect: true
        expr: '(^|\n)([^\n]+:510:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L512:
        expect: true
        expr: '(^|\n)([^\n]+:512:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L513:
        expect: true
        expr: '(^|\n)([^\n]+:513:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L514:
        expect: true
        expr: '(^|\n)([^\n]+:514:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L515:
        expect: true
        expr: '(^|\n)([^\n]+:515:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L526:
        expect: true
        expr: '(^|\n)([^\n]+:526:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L528:
        expect: true
        expr: '(^|\n)([^\n]+:528:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L529:
        expect: true
        expr: '(^|\n)([^\n]+:529:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L530:
        expect: true
        expr: '(^|\n)([^\n]+:530:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L541:
        expect: true
        expr: '(^|\n)([^\n]+:541:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L543:
        expect: true
        expr: '(^|\n)([^\n]+:543:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L544:
        expect: true
        expr: '(^|\n)([^\n]+:544:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L545:
        expect: true
        expr: '(^|\n)([^\n]+:545:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L546:
        expect: true
        expr: '(^|\n)([^\n]+:546:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L547:
        expect: true
        expr: '(^|\n)([^\n]+:547:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L558:
        expect: true
        expr: '(^|\n)([^\n]+:558:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L560:
        expect: true
        expr: '(^|\n)([^\n]+:560:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L561:
        expect: true
        expr: '(^|\n)([^\n]+:561:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L562:
        expect: true
        expr: '(^|\n)([^\n]+:562:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L573:
        expect: true
        expr: '(^|\n)([^\n]+:573:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L575:
        expect: true
        expr: '(^|\n)([^\n]+:575:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L576:
        expect: true
        expr: '(^|\n)([^\n]+:576:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L577:
        expect: true
        expr: '(^|\n)([^\n]+:577:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L588:
        expect: true
        expr: '(^|\n)([^\n]+:588:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L590:
        expect: true
        expr: '(^|\n)([^\n]+:590:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L591:
        expect: true
        expr: '(^|\n)([^\n]+:591:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L592:
        expect: true
        expr: '(^|\n)([^\n]+:592:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L593:
        expect: true
        expr: '(^|\n)([^\n]+:593:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L604:
        expect: true
        expr: '(^|\n)([^\n]+:604:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L606:
        expect: true
        expr: '(^|\n)([^\n]+:606:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L607:
        expect: true
        expr: '(^|\n)([^\n]+:607:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L608:
        expect: true
        expr: '(^|\n)([^\n]+:608:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L619:
        expect: true
        expr: '(^|\n)([^\n]+:619:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L621:
        expect: true
        expr: '(^|\n)([^\n]+:621:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L622:
        expect: true
        expr: '(^|\n)([^\n]+:622:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L623:
        expect: true
        expr: '(^|\n)([^\n]+:623:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L634:
        expect: true
        expr: '(^|\n)([^\n]+:634:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L636:
        expect: true
        expr: '(^|\n)([^\n]+:636:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L637:
        expect: true
        expr: '(^|\n)([^\n]+:637:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L638:
        expect: true
        expr: '(^|\n)([^\n]+:638:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L639:
        expect: true
        expr: '(^|\n)([^\n]+:639:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L640:
        expect: true
        expr: '(^|\n)([^\n]+:640:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L651:
        expect: true
        expr: '(^|\n)([^\n]+:651:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L653:
        expect: true
        expr: '(^|\n)([^\n]+:653:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L654:
        expect: true
        expr: '(^|\n)([^\n]+:654:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L656:
        expect: true
        expr: '(^|\n)([^\n]+:656:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L657:
        expect: true
        expr: '(^|\n)([^\n]+:657:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L668:
        expect: true
        expr: '(^|\n)([^\n]+:668:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L670:
        expect: true
        expr: '(^|\n)([^\n]+:670:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L671:
        expect: true
        expr: '(^|\n)([^\n]+:671:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L672:
        expect: true
        expr: '(^|\n)([^\n]+:672:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L683:
        expect: true
        expr: '(^|\n)([^\n]+:683:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L685:
        expect: true
        expr: '(^|\n)([^\n]+:685:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L686:
        expect: true
        expr: '(^|\n)([^\n]+:686:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L687:
        expect: true
        expr: '(^|\n)([^\n]+:687:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L688:
        expect: true
        expr: '(^|\n)([^\n]+:688:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L689:
        expect: true
        expr: '(^|\n)([^\n]+:689:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L700:
        expect: true
        expr: '(^|\n)([^\n]+:700:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L702:
        expect: true
        expr: '(^|\n)([^\n]+:702:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L703:
        expect: true
        expr: '(^|\n)([^\n]+:703:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L704:
        expect: true
        expr: '(^|\n)([^\n]+:704:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L715:
        expect: true
        expr: '(^|\n)([^\n]+:715:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L717:
        expect: true
        expr: '(^|\n)([^\n]+:717:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L718:
        expect: true
        expr: '(^|\n)([^\n]+:718:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L719:
        expect: true
        expr: '(^|\n)([^\n]+:719:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L730:
        expect: true
        expr: '(^|\n)([^\n]+:730:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L732:
        expect: true
        expr: '(^|\n)([^\n]+:732:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L733:
        expect: true
        expr: '(^|\n)([^\n]+:733:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L734:
        expect: true
        expr: '(^|\n)([^\n]+:734:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L745:
        expect: true
        expr: '(^|\n)([^\n]+:745:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L747:
        expect: true
        expr: '(^|\n)([^\n]+:747:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L748:
        expect: true
        expr: '(^|\n)([^\n]+:748:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L749:
        expect: true
        expr: '(^|\n)([^\n]+:749:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L760:
        expect: true
        expr: '(^|\n)([^\n]+:760:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L762:
        expect: true
        expr: '(^|\n)([^\n]+:762:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L763:
        expect: true
        expr: '(^|\n)([^\n]+:763:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L764:
        expect: true
        expr: '(^|\n)([^\n]+:764:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L775:
        expect: true
        expr: '(^|\n)([^\n]+:775:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L777:
        expect: true
        expr: '(^|\n)([^\n]+:777:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L778:
        expect: true
        expr: '(^|\n)([^\n]+:778:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L779:
        expect: true
        expr: '(^|\n)([^\n]+:779:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L780:
        expect: true
        expr: '(^|\n)([^\n]+:780:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L781:
        expect: true
        expr: '(^|\n)([^\n]+:781:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L782:
        expect: true
        expr: '(^|\n)([^\n]+:782:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L793:
        expect: true
        expr: '(^|\n)([^\n]+:793:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L795:
        expect: true
        expr: '(^|\n)([^\n]+:795:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L796:
        expect: true
        expr: '(^|\n)([^\n]+:796:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L797:
        expect: true
        expr: '(^|\n)([^\n]+:797:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L798:
        expect: true
        expr: '(^|\n)([^\n]+:798:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L799:
        expect: true
        expr: '(^|\n)([^\n]+:799:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L810:
        expect: true
        expr: '(^|\n)([^\n]+:810:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L812:
        expect: true
        expr: '(^|\n)([^\n]+:812:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L813:
        expect: true
        expr: '(^|\n)([^\n]+:813:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L814:
        expect: true
        expr: '(^|\n)([^\n]+:814:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L815:
        expect: true
        expr: '(^|\n)([^\n]+:815:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L816:
        expect: true
        expr: '(^|\n)([^\n]+:816:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L827:
        expect: true
        expr: '(^|\n)([^\n]+:827:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L829:
        expect: true
        expr: '(^|\n)([^\n]+:829:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L830:
        expect: true
        expr: '(^|\n)([^\n]+:830:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L831:
        expect: true
        expr: '(^|\n)([^\n]+:831:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L832:
        expect: true
        expr: '(^|\n)([^\n]+:832:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L833:
        expect: true
        expr: '(^|\n)([^\n]+:833:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L834:
        expect: true
        expr: '(^|\n)([^\n]+:834:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv3n_6596:
  build:
    cflags: "-std=gnu++14 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv3n.C'
    sources:
      binary: rv3n.s
  group: GRPSERIAL
  validate:
    match:
      L105:
        expect: true
        expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+:121:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+:153:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+:176:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+:177:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+:188:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+:193:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+:194:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L223:
        expect: true
        expr: '(^|\n)([^\n]+:223:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L224:
        expect: true
        expr: '(^|\n)([^\n]+:224:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L225:
        expect: true
        expr: '(^|\n)([^\n]+:225:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+:240:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L251:
        expect: true
        expr: '(^|\n)([^\n]+:251:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L253:
        expect: true
        expr: '(^|\n)([^\n]+:253:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L255:
        expect: true
        expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L266:
        expect: true
        expr: '(^|\n)([^\n]+:266:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L269:
        expect: true
        expr: '(^|\n)([^\n]+:269:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L271:
        expect: true
        expr: '(^|\n)([^\n]+:271:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L272:
        expect: true
        expr: '(^|\n)([^\n]+:272:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L273:
        expect: true
        expr: '(^|\n)([^\n]+:273:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L284:
        expect: true
        expr: '(^|\n)([^\n]+:284:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L286:
        expect: true
        expr: '(^|\n)([^\n]+:286:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L287:
        expect: true
        expr: '(^|\n)([^\n]+:287:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L288:
        expect: true
        expr: '(^|\n)([^\n]+:288:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L289:
        expect: true
        expr: '(^|\n)([^\n]+:289:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L290:
        expect: true
        expr: '(^|\n)([^\n]+:290:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L291:
        expect: true
        expr: '(^|\n)([^\n]+:291:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L302:
        expect: true
        expr: '(^|\n)([^\n]+:302:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L304:
        expect: true
        expr: '(^|\n)([^\n]+:304:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L305:
        expect: true
        expr: '(^|\n)([^\n]+:305:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L306:
        expect: true
        expr: '(^|\n)([^\n]+:306:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L307:
        expect: true
        expr: '(^|\n)([^\n]+:307:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L318:
        expect: true
        expr: '(^|\n)([^\n]+:318:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L320:
        expect: true
        expr: '(^|\n)([^\n]+:320:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L321:
        expect: true
        expr: '(^|\n)([^\n]+:321:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L322:
        expect: true
        expr: '(^|\n)([^\n]+:322:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L324:
        expect: true
        expr: '(^|\n)([^\n]+:324:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L336:
        expect: true
        expr: '(^|\n)([^\n]+:336:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L338:
        expect: true
        expr: '(^|\n)([^\n]+:338:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L339:
        expect: true
        expr: '(^|\n)([^\n]+:339:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L341:
        expect: true
        expr: '(^|\n)([^\n]+:341:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L352:
        expect: true
        expr: '(^|\n)([^\n]+:352:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L354:
        expect: true
        expr: '(^|\n)([^\n]+:354:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L355:
        expect: true
        expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L356:
        expect: true
        expr: '(^|\n)([^\n]+:356:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L357:
        expect: true
        expr: '(^|\n)([^\n]+:357:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L370:
        expect: true
        expr: '(^|\n)([^\n]+:370:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L372:
        expect: true
        expr: '(^|\n)([^\n]+:372:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L384:
        expect: true
        expr: '(^|\n)([^\n]+:384:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L386:
        expect: true
        expr: '(^|\n)([^\n]+:386:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L387:
        expect: true
        expr: '(^|\n)([^\n]+:387:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L388:
        expect: true
        expr: '(^|\n)([^\n]+:388:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L389:
        expect: true
        expr: '(^|\n)([^\n]+:389:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L390:
        expect: true
        expr: '(^|\n)([^\n]+:390:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L401:
        expect: true
        expr: '(^|\n)([^\n]+:401:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L403:
        expect: true
        expr: '(^|\n)([^\n]+:403:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+:404:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L406:
        expect: true
        expr: '(^|\n)([^\n]+:406:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L407:
        expect: true
        expr: '(^|\n)([^\n]+:407:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L418:
        expect: true
        expr: '(^|\n)([^\n]+:418:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L422:
        expect: true
        expr: '(^|\n)([^\n]+:422:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L434:
        expect: true
        expr: '(^|\n)([^\n]+:434:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L436:
        expect: true
        expr: '(^|\n)([^\n]+:436:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L438:
        expect: true
        expr: '(^|\n)([^\n]+:438:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L449:
        expect: true
        expr: '(^|\n)([^\n]+:449:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L451:
        expect: true
        expr: '(^|\n)([^\n]+:451:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L464:
        expect: true
        expr: '(^|\n)([^\n]+:464:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L466:
        expect: true
        expr: '(^|\n)([^\n]+:466:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L467:
        expect: true
        expr: '(^|\n)([^\n]+:467:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L468:
        expect: true
        expr: '(^|\n)([^\n]+:468:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L479:
        expect: true
        expr: '(^|\n)([^\n]+:479:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L481:
        expect: true
        expr: '(^|\n)([^\n]+:481:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L482:
        expect: true
        expr: '(^|\n)([^\n]+:482:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L493:
        expect: true
        expr: '(^|\n)([^\n]+:493:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L495:
        expect: true
        expr: '(^|\n)([^\n]+:495:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L496:
        expect: true
        expr: '(^|\n)([^\n]+:496:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L497:
        expect: true
        expr: '(^|\n)([^\n]+:497:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L498:
        expect: true
        expr: '(^|\n)([^\n]+:498:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L499:
        expect: true
        expr: '(^|\n)([^\n]+:499:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L510:
        expect: true
        expr: '(^|\n)([^\n]+:510:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L512:
        expect: true
        expr: '(^|\n)([^\n]+:512:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L513:
        expect: true
        expr: '(^|\n)([^\n]+:513:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L514:
        expect: true
        expr: '(^|\n)([^\n]+:514:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L515:
        expect: true
        expr: '(^|\n)([^\n]+:515:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L526:
        expect: true
        expr: '(^|\n)([^\n]+:526:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L528:
        expect: true
        expr: '(^|\n)([^\n]+:528:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L529:
        expect: true
        expr: '(^|\n)([^\n]+:529:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L530:
        expect: true
        expr: '(^|\n)([^\n]+:530:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L541:
        expect: true
        expr: '(^|\n)([^\n]+:541:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L543:
        expect: true
        expr: '(^|\n)([^\n]+:543:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L544:
        expect: true
        expr: '(^|\n)([^\n]+:544:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L545:
        expect: true
        expr: '(^|\n)([^\n]+:545:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L546:
        expect: true
        expr: '(^|\n)([^\n]+:546:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L547:
        expect: true
        expr: '(^|\n)([^\n]+:547:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L558:
        expect: true
        expr: '(^|\n)([^\n]+:558:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L560:
        expect: true
        expr: '(^|\n)([^\n]+:560:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L561:
        expect: true
        expr: '(^|\n)([^\n]+:561:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L562:
        expect: true
        expr: '(^|\n)([^\n]+:562:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L573:
        expect: true
        expr: '(^|\n)([^\n]+:573:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L575:
        expect: true
        expr: '(^|\n)([^\n]+:575:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L576:
        expect: true
        expr: '(^|\n)([^\n]+:576:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L577:
        expect: true
        expr: '(^|\n)([^\n]+:577:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L588:
        expect: true
        expr: '(^|\n)([^\n]+:588:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L590:
        expect: true
        expr: '(^|\n)([^\n]+:590:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L591:
        expect: true
        expr: '(^|\n)([^\n]+:591:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L592:
        expect: true
        expr: '(^|\n)([^\n]+:592:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L593:
        expect: true
        expr: '(^|\n)([^\n]+:593:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L604:
        expect: true
        expr: '(^|\n)([^\n]+:604:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L606:
        expect: true
        expr: '(^|\n)([^\n]+:606:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L607:
        expect: true
        expr: '(^|\n)([^\n]+:607:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L608:
        expect: true
        expr: '(^|\n)([^\n]+:608:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L619:
        expect: true
        expr: '(^|\n)([^\n]+:619:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L621:
        expect: true
        expr: '(^|\n)([^\n]+:621:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L622:
        expect: true
        expr: '(^|\n)([^\n]+:622:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L623:
        expect: true
        expr: '(^|\n)([^\n]+:623:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L634:
        expect: true
        expr: '(^|\n)([^\n]+:634:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L636:
        expect: true
        expr: '(^|\n)([^\n]+:636:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L637:
        expect: true
        expr: '(^|\n)([^\n]+:637:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L638:
        expect: true
        expr: '(^|\n)([^\n]+:638:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L639:
        expect: true
        expr: '(^|\n)([^\n]+:639:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L640:
        expect: true
        expr: '(^|\n)([^\n]+:640:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L651:
        expect: true
        expr: '(^|\n)([^\n]+:651:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L653:
        expect: true
        expr: '(^|\n)([^\n]+:653:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L654:
        expect: true
        expr: '(^|\n)([^\n]+:654:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L656:
        expect: true
        expr: '(^|\n)([^\n]+:656:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L657:
        expect: true
        expr: '(^|\n)([^\n]+:657:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L668:
        expect: true
        expr: '(^|\n)([^\n]+:668:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L670:
        expect: true
        expr: '(^|\n)([^\n]+:670:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L671:
        expect: true
        expr: '(^|\n)([^\n]+:671:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L672:
        expect: true
        expr: '(^|\n)([^\n]+:672:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L683:
        expect: true
        expr: '(^|\n)([^\n]+:683:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L685:
        expect: true
        expr: '(^|\n)([^\n]+:685:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L686:
        expect: true
        expr: '(^|\n)([^\n]+:686:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L687:
        expect: true
        expr: '(^|\n)([^\n]+:687:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L688:
        expect: true
        expr: '(^|\n)([^\n]+:688:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L689:
        expect: true
        expr: '(^|\n)([^\n]+:689:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L700:
        expect: true
        expr: '(^|\n)([^\n]+:700:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L702:
        expect: true
        expr: '(^|\n)([^\n]+:702:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L703:
        expect: true
        expr: '(^|\n)([^\n]+:703:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L704:
        expect: true
        expr: '(^|\n)([^\n]+:704:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L715:
        expect: true
        expr: '(^|\n)([^\n]+:715:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L717:
        expect: true
        expr: '(^|\n)([^\n]+:717:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L718:
        expect: true
        expr: '(^|\n)([^\n]+:718:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L719:
        expect: true
        expr: '(^|\n)([^\n]+:719:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L730:
        expect: true
        expr: '(^|\n)([^\n]+:730:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L732:
        expect: true
        expr: '(^|\n)([^\n]+:732:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L733:
        expect: true
        expr: '(^|\n)([^\n]+:733:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L734:
        expect: true
        expr: '(^|\n)([^\n]+:734:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L745:
        expect: true
        expr: '(^|\n)([^\n]+:745:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L747:
        expect: true
        expr: '(^|\n)([^\n]+:747:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L748:
        expect: true
        expr: '(^|\n)([^\n]+:748:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L749:
        expect: true
        expr: '(^|\n)([^\n]+:749:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L760:
        expect: true
        expr: '(^|\n)([^\n]+:760:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L762:
        expect: true
        expr: '(^|\n)([^\n]+:762:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L763:
        expect: true
        expr: '(^|\n)([^\n]+:763:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L764:
        expect: true
        expr: '(^|\n)([^\n]+:764:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L775:
        expect: true
        expr: '(^|\n)([^\n]+:775:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L777:
        expect: true
        expr: '(^|\n)([^\n]+:777:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L778:
        expect: true
        expr: '(^|\n)([^\n]+:778:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L779:
        expect: true
        expr: '(^|\n)([^\n]+:779:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L780:
        expect: true
        expr: '(^|\n)([^\n]+:780:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L781:
        expect: true
        expr: '(^|\n)([^\n]+:781:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L782:
        expect: true
        expr: '(^|\n)([^\n]+:782:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L793:
        expect: true
        expr: '(^|\n)([^\n]+:793:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L795:
        expect: true
        expr: '(^|\n)([^\n]+:795:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L796:
        expect: true
        expr: '(^|\n)([^\n]+:796:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L797:
        expect: true
        expr: '(^|\n)([^\n]+:797:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L798:
        expect: true
        expr: '(^|\n)([^\n]+:798:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L799:
        expect: true
        expr: '(^|\n)([^\n]+:799:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L810:
        expect: true
        expr: '(^|\n)([^\n]+:810:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L812:
        expect: true
        expr: '(^|\n)([^\n]+:812:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L813:
        expect: true
        expr: '(^|\n)([^\n]+:813:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L814:
        expect: true
        expr: '(^|\n)([^\n]+:814:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L815:
        expect: true
        expr: '(^|\n)([^\n]+:815:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L816:
        expect: true
        expr: '(^|\n)([^\n]+:816:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L827:
        expect: true
        expr: '(^|\n)([^\n]+:827:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L829:
        expect: true
        expr: '(^|\n)([^\n]+:829:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L830:
        expect: true
        expr: '(^|\n)([^\n]+:830:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L831:
        expect: true
        expr: '(^|\n)([^\n]+:831:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L832:
        expect: true
        expr: '(^|\n)([^\n]+:832:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L833:
        expect: true
        expr: '(^|\n)([^\n]+:833:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L834:
        expect: true
        expr: '(^|\n)([^\n]+:834:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv3p_2838:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv3p.C'
    sources:
      binary: rv3p.s
  group: GRPSERIAL
test_rv3p_2839:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv3p.C'
    sources:
      binary: rv3p.s
  group: GRPSERIAL
test_rv3p_6597:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv3p.C'
    sources:
      binary: rv3p.s
  group: GRPSERIAL
test_rv3p_6598:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv3p.C'
    sources:
      binary: rv3p.s
  group: GRPSERIAL
test_rv4n_2840:
  build:
    cflags: "-std=gnu++11 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv4n.C'
    sources:
      binary: rv4n.s
  group: GRPSERIAL
  validate:
    match:
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+:172:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+:187:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+:189:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+:204:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L223:
        expect: true
        expr: '(^|\n)([^\n]+:223:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L224:
        expect: true
        expr: '(^|\n)([^\n]+:224:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L225:
        expect: true
        expr: '(^|\n)([^\n]+:225:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L226:
        expect: true
        expr: '(^|\n)([^\n]+:226:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+:240:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+:241:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+:242:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L256:
        expect: true
        expr: '(^|\n)([^\n]+:256:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L257:
        expect: true
        expr: '(^|\n)([^\n]+:257:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L258:
        expect: true
        expr: '(^|\n)([^\n]+:258:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L272:
        expect: true
        expr: '(^|\n)([^\n]+:272:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L273:
        expect: true
        expr: '(^|\n)([^\n]+:273:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L274:
        expect: true
        expr: '(^|\n)([^\n]+:274:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L275:
        expect: true
        expr: '(^|\n)([^\n]+:275:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L287:
        expect: true
        expr: '(^|\n)([^\n]+:287:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L289:
        expect: true
        expr: '(^|\n)([^\n]+:289:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L290:
        expect: true
        expr: '(^|\n)([^\n]+:290:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L291:
        expect: true
        expr: '(^|\n)([^\n]+:291:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L303:
        expect: true
        expr: '(^|\n)([^\n]+:303:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L305:
        expect: true
        expr: '(^|\n)([^\n]+:305:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L306:
        expect: true
        expr: '(^|\n)([^\n]+:306:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L307:
        expect: true
        expr: '(^|\n)([^\n]+:307:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L319:
        expect: true
        expr: '(^|\n)([^\n]+:319:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L321:
        expect: true
        expr: '(^|\n)([^\n]+:321:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L322:
        expect: true
        expr: '(^|\n)([^\n]+:322:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L324:
        expect: true
        expr: '(^|\n)([^\n]+:324:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L337:
        expect: true
        expr: '(^|\n)([^\n]+:337:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L339:
        expect: true
        expr: '(^|\n)([^\n]+:339:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L341:
        expect: true
        expr: '(^|\n)([^\n]+:341:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L342:
        expect: true
        expr: '(^|\n)([^\n]+:342:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L343:
        expect: true
        expr: '(^|\n)([^\n]+:343:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L355:
        expect: true
        expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L357:
        expect: true
        expr: '(^|\n)([^\n]+:357:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L358:
        expect: true
        expr: '(^|\n)([^\n]+:358:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L359:
        expect: true
        expr: '(^|\n)([^\n]+:359:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L374:
        expect: true
        expr: '(^|\n)([^\n]+:374:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+:375:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L376:
        expect: true
        expr: '(^|\n)([^\n]+:376:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L377:
        expect: true
        expr: '(^|\n)([^\n]+:377:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L389:
        expect: true
        expr: '(^|\n)([^\n]+:389:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L391:
        expect: true
        expr: '(^|\n)([^\n]+:391:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L392:
        expect: true
        expr: '(^|\n)([^\n]+:392:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L393:
        expect: true
        expr: '(^|\n)([^\n]+:393:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L407:
        expect: true
        expr: '(^|\n)([^\n]+:407:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L408:
        expect: true
        expr: '(^|\n)([^\n]+:408:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L409:
        expect: true
        expr: '(^|\n)([^\n]+:409:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L424:
        expect: true
        expr: '(^|\n)([^\n]+:424:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L425:
        expect: true
        expr: '(^|\n)([^\n]+:425:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L439:
        expect: true
        expr: '(^|\n)([^\n]+:439:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L440:
        expect: true
        expr: '(^|\n)([^\n]+:440:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L441:
        expect: true
        expr: '(^|\n)([^\n]+:441:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L455:
        expect: true
        expr: '(^|\n)([^\n]+:455:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L456:
        expect: true
        expr: '(^|\n)([^\n]+:456:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L457:
        expect: true
        expr: '(^|\n)([^\n]+:457:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L469:
        expect: true
        expr: '(^|\n)([^\n]+:469:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L471:
        expect: true
        expr: '(^|\n)([^\n]+:471:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L472:
        expect: true
        expr: '(^|\n)([^\n]+:472:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L473:
        expect: true
        expr: '(^|\n)([^\n]+:473:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L474:
        expect: true
        expr: '(^|\n)([^\n]+:474:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L475:
        expect: true
        expr: '(^|\n)([^\n]+:475:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L487:
        expect: true
        expr: '(^|\n)([^\n]+:487:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L489:
        expect: true
        expr: '(^|\n)([^\n]+:489:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L490:
        expect: true
        expr: '(^|\n)([^\n]+:490:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L491:
        expect: true
        expr: '(^|\n)([^\n]+:491:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L492:
        expect: true
        expr: '(^|\n)([^\n]+:492:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L504:
        expect: true
        expr: '(^|\n)([^\n]+:504:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L506:
        expect: true
        expr: '(^|\n)([^\n]+:506:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L507:
        expect: true
        expr: '(^|\n)([^\n]+:507:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L508:
        expect: true
        expr: '(^|\n)([^\n]+:508:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L509:
        expect: true
        expr: '(^|\n)([^\n]+:509:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L521:
        expect: true
        expr: '(^|\n)([^\n]+:521:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L523:
        expect: true
        expr: '(^|\n)([^\n]+:523:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L524:
        expect: true
        expr: '(^|\n)([^\n]+:524:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L525:
        expect: true
        expr: '(^|\n)([^\n]+:525:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L526:
        expect: true
        expr: '(^|\n)([^\n]+:526:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L527:
        expect: true
        expr: '(^|\n)([^\n]+:527:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L539:
        expect: true
        expr: '(^|\n)([^\n]+:539:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L541:
        expect: true
        expr: '(^|\n)([^\n]+:541:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L542:
        expect: true
        expr: '(^|\n)([^\n]+:542:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L543:
        expect: true
        expr: '(^|\n)([^\n]+:543:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L544:
        expect: true
        expr: '(^|\n)([^\n]+:544:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L556:
        expect: true
        expr: '(^|\n)([^\n]+:556:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L558:
        expect: true
        expr: '(^|\n)([^\n]+:558:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L559:
        expect: true
        expr: '(^|\n)([^\n]+:559:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L560:
        expect: true
        expr: '(^|\n)([^\n]+:560:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L561:
        expect: true
        expr: '(^|\n)([^\n]+:561:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L573:
        expect: true
        expr: '(^|\n)([^\n]+:573:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L575:
        expect: true
        expr: '(^|\n)([^\n]+:575:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L576:
        expect: true
        expr: '(^|\n)([^\n]+:576:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L577:
        expect: true
        expr: '(^|\n)([^\n]+:577:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L589:
        expect: true
        expr: '(^|\n)([^\n]+:589:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L591:
        expect: true
        expr: '(^|\n)([^\n]+:591:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L592:
        expect: true
        expr: '(^|\n)([^\n]+:592:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L604:
        expect: true
        expr: '(^|\n)([^\n]+:604:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L606:
        expect: true
        expr: '(^|\n)([^\n]+:606:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L607:
        expect: true
        expr: '(^|\n)([^\n]+:607:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L608:
        expect: true
        expr: '(^|\n)([^\n]+:608:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L609:
        expect: true
        expr: '(^|\n)([^\n]+:609:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L610:
        expect: true
        expr: '(^|\n)([^\n]+:610:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L622:
        expect: true
        expr: '(^|\n)([^\n]+:622:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L624:
        expect: true
        expr: '(^|\n)([^\n]+:624:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L625:
        expect: true
        expr: '(^|\n)([^\n]+:625:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L626:
        expect: true
        expr: '(^|\n)([^\n]+:626:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L627:
        expect: true
        expr: '(^|\n)([^\n]+:627:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L639:
        expect: true
        expr: '(^|\n)([^\n]+:639:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L641:
        expect: true
        expr: '(^|\n)([^\n]+:641:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L642:
        expect: true
        expr: '(^|\n)([^\n]+:642:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L643:
        expect: true
        expr: '(^|\n)([^\n]+:643:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L657:
        expect: true
        expr: '(^|\n)([^\n]+:657:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L658:
        expect: true
        expr: '(^|\n)([^\n]+:658:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L659:
        expect: true
        expr: '(^|\n)([^\n]+:659:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L660:
        expect: true
        expr: '(^|\n)([^\n]+:660:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L661:
        expect: true
        expr: '(^|\n)([^\n]+:661:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L673:
        expect: true
        expr: '(^|\n)([^\n]+:673:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L675:
        expect: true
        expr: '(^|\n)([^\n]+:675:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L676:
        expect: true
        expr: '(^|\n)([^\n]+:676:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L677:
        expect: true
        expr: '(^|\n)([^\n]+:677:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L689:
        expect: true
        expr: '(^|\n)([^\n]+:689:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L691:
        expect: true
        expr: '(^|\n)([^\n]+:691:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L692:
        expect: true
        expr: '(^|\n)([^\n]+:692:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L693:
        expect: true
        expr: '(^|\n)([^\n]+:693:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L705:
        expect: true
        expr: '(^|\n)([^\n]+:705:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L707:
        expect: true
        expr: '(^|\n)([^\n]+:707:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L708:
        expect: true
        expr: '(^|\n)([^\n]+:708:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L709:
        expect: true
        expr: '(^|\n)([^\n]+:709:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L721:
        expect: true
        expr: '(^|\n)([^\n]+:721:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L723:
        expect: true
        expr: '(^|\n)([^\n]+:723:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L724:
        expect: true
        expr: '(^|\n)([^\n]+:724:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L736:
        expect: true
        expr: '(^|\n)([^\n]+:736:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L738:
        expect: true
        expr: '(^|\n)([^\n]+:738:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L739:
        expect: true
        expr: '(^|\n)([^\n]+:739:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L740:
        expect: true
        expr: '(^|\n)([^\n]+:740:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L752:
        expect: true
        expr: '(^|\n)([^\n]+:752:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L754:
        expect: true
        expr: '(^|\n)([^\n]+:754:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L755:
        expect: true
        expr: '(^|\n)([^\n]+:755:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L756:
        expect: true
        expr: '(^|\n)([^\n]+:756:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L757:
        expect: true
        expr: '(^|\n)([^\n]+:757:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L769:
        expect: true
        expr: '(^|\n)([^\n]+:769:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L771:
        expect: true
        expr: '(^|\n)([^\n]+:771:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L772:
        expect: true
        expr: '(^|\n)([^\n]+:772:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L773:
        expect: true
        expr: '(^|\n)([^\n]+:773:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L785:
        expect: true
        expr: '(^|\n)([^\n]+:785:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L787:
        expect: true
        expr: '(^|\n)([^\n]+:787:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L788:
        expect: true
        expr: '(^|\n)([^\n]+:788:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L789:
        expect: true
        expr: '(^|\n)([^\n]+:789:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L801:
        expect: true
        expr: '(^|\n)([^\n]+:801:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L803:
        expect: true
        expr: '(^|\n)([^\n]+:803:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L804:
        expect: true
        expr: '(^|\n)([^\n]+:804:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L805:
        expect: true
        expr: '(^|\n)([^\n]+:805:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L806:
        expect: true
        expr: '(^|\n)([^\n]+:806:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L818:
        expect: true
        expr: '(^|\n)([^\n]+:818:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L820:
        expect: true
        expr: '(^|\n)([^\n]+:820:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L821:
        expect: true
        expr: '(^|\n)([^\n]+:821:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L822:
        expect: true
        expr: '(^|\n)([^\n]+:822:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L834:
        expect: true
        expr: '(^|\n)([^\n]+:834:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L836:
        expect: true
        expr: '(^|\n)([^\n]+:836:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L837:
        expect: true
        expr: '(^|\n)([^\n]+:837:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L838:
        expect: true
        expr: '(^|\n)([^\n]+:838:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L850:
        expect: true
        expr: '(^|\n)([^\n]+:850:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L852:
        expect: true
        expr: '(^|\n)([^\n]+:852:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L853:
        expect: true
        expr: '(^|\n)([^\n]+:853:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L854:
        expect: true
        expr: '(^|\n)([^\n]+:854:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L866:
        expect: true
        expr: '(^|\n)([^\n]+:866:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L868:
        expect: true
        expr: '(^|\n)([^\n]+:868:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L869:
        expect: true
        expr: '(^|\n)([^\n]+:869:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L870:
        expect: true
        expr: '(^|\n)([^\n]+:870:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L871:
        expect: true
        expr: '(^|\n)([^\n]+:871:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L883:
        expect: true
        expr: '(^|\n)([^\n]+:883:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L885:
        expect: true
        expr: '(^|\n)([^\n]+:885:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L886:
        expect: true
        expr: '(^|\n)([^\n]+:886:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L887:
        expect: true
        expr: '(^|\n)([^\n]+:887:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L899:
        expect: true
        expr: '(^|\n)([^\n]+:899:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L901:
        expect: true
        expr: '(^|\n)([^\n]+:901:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L902:
        expect: true
        expr: '(^|\n)([^\n]+:902:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L903:
        expect: true
        expr: '(^|\n)([^\n]+:903:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L915:
        expect: true
        expr: '(^|\n)([^\n]+:915:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L917:
        expect: true
        expr: '(^|\n)([^\n]+:917:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L918:
        expect: true
        expr: '(^|\n)([^\n]+:918:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L919:
        expect: true
        expr: '(^|\n)([^\n]+:919:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L920:
        expect: true
        expr: '(^|\n)([^\n]+:920:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L932:
        expect: true
        expr: '(^|\n)([^\n]+:932:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L934:
        expect: true
        expr: '(^|\n)([^\n]+:934:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L935:
        expect: true
        expr: '(^|\n)([^\n]+:935:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L947:
        expect: true
        expr: '(^|\n)([^\n]+:947:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L949:
        expect: true
        expr: '(^|\n)([^\n]+:949:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L950:
        expect: true
        expr: '(^|\n)([^\n]+:950:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L962:
        expect: true
        expr: '(^|\n)([^\n]+:962:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L964:
        expect: true
        expr: '(^|\n)([^\n]+:964:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L965:
        expect: true
        expr: '(^|\n)([^\n]+:965:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L966:
        expect: true
        expr: '(^|\n)([^\n]+:966:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L967:
        expect: true
        expr: '(^|\n)([^\n]+:967:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L968:
        expect: true
        expr: '(^|\n)([^\n]+:968:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv4n_2841:
  build:
    cflags: "-std=gnu++14 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv4n.C'
    sources:
      binary: rv4n.s
  group: GRPSERIAL
  validate:
    match:
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+:172:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+:187:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+:189:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+:204:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L223:
        expect: true
        expr: '(^|\n)([^\n]+:223:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L224:
        expect: true
        expr: '(^|\n)([^\n]+:224:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L225:
        expect: true
        expr: '(^|\n)([^\n]+:225:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L226:
        expect: true
        expr: '(^|\n)([^\n]+:226:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+:240:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+:241:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+:242:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L256:
        expect: true
        expr: '(^|\n)([^\n]+:256:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L257:
        expect: true
        expr: '(^|\n)([^\n]+:257:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L258:
        expect: true
        expr: '(^|\n)([^\n]+:258:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L272:
        expect: true
        expr: '(^|\n)([^\n]+:272:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L273:
        expect: true
        expr: '(^|\n)([^\n]+:273:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L274:
        expect: true
        expr: '(^|\n)([^\n]+:274:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L275:
        expect: true
        expr: '(^|\n)([^\n]+:275:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L287:
        expect: true
        expr: '(^|\n)([^\n]+:287:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L289:
        expect: true
        expr: '(^|\n)([^\n]+:289:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L290:
        expect: true
        expr: '(^|\n)([^\n]+:290:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L291:
        expect: true
        expr: '(^|\n)([^\n]+:291:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L303:
        expect: true
        expr: '(^|\n)([^\n]+:303:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L305:
        expect: true
        expr: '(^|\n)([^\n]+:305:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L306:
        expect: true
        expr: '(^|\n)([^\n]+:306:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L307:
        expect: true
        expr: '(^|\n)([^\n]+:307:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L319:
        expect: true
        expr: '(^|\n)([^\n]+:319:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L321:
        expect: true
        expr: '(^|\n)([^\n]+:321:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L322:
        expect: true
        expr: '(^|\n)([^\n]+:322:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L324:
        expect: true
        expr: '(^|\n)([^\n]+:324:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L337:
        expect: true
        expr: '(^|\n)([^\n]+:337:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L339:
        expect: true
        expr: '(^|\n)([^\n]+:339:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L341:
        expect: true
        expr: '(^|\n)([^\n]+:341:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L342:
        expect: true
        expr: '(^|\n)([^\n]+:342:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L343:
        expect: true
        expr: '(^|\n)([^\n]+:343:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L355:
        expect: true
        expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L357:
        expect: true
        expr: '(^|\n)([^\n]+:357:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L358:
        expect: true
        expr: '(^|\n)([^\n]+:358:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L359:
        expect: true
        expr: '(^|\n)([^\n]+:359:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L374:
        expect: true
        expr: '(^|\n)([^\n]+:374:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+:375:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L376:
        expect: true
        expr: '(^|\n)([^\n]+:376:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L377:
        expect: true
        expr: '(^|\n)([^\n]+:377:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L389:
        expect: true
        expr: '(^|\n)([^\n]+:389:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L391:
        expect: true
        expr: '(^|\n)([^\n]+:391:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L392:
        expect: true
        expr: '(^|\n)([^\n]+:392:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L393:
        expect: true
        expr: '(^|\n)([^\n]+:393:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L407:
        expect: true
        expr: '(^|\n)([^\n]+:407:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L408:
        expect: true
        expr: '(^|\n)([^\n]+:408:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L409:
        expect: true
        expr: '(^|\n)([^\n]+:409:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L424:
        expect: true
        expr: '(^|\n)([^\n]+:424:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L425:
        expect: true
        expr: '(^|\n)([^\n]+:425:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L439:
        expect: true
        expr: '(^|\n)([^\n]+:439:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L440:
        expect: true
        expr: '(^|\n)([^\n]+:440:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L441:
        expect: true
        expr: '(^|\n)([^\n]+:441:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L455:
        expect: true
        expr: '(^|\n)([^\n]+:455:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L456:
        expect: true
        expr: '(^|\n)([^\n]+:456:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L457:
        expect: true
        expr: '(^|\n)([^\n]+:457:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L469:
        expect: true
        expr: '(^|\n)([^\n]+:469:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L471:
        expect: true
        expr: '(^|\n)([^\n]+:471:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L472:
        expect: true
        expr: '(^|\n)([^\n]+:472:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L473:
        expect: true
        expr: '(^|\n)([^\n]+:473:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L474:
        expect: true
        expr: '(^|\n)([^\n]+:474:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L475:
        expect: true
        expr: '(^|\n)([^\n]+:475:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L487:
        expect: true
        expr: '(^|\n)([^\n]+:487:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L489:
        expect: true
        expr: '(^|\n)([^\n]+:489:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L490:
        expect: true
        expr: '(^|\n)([^\n]+:490:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L491:
        expect: true
        expr: '(^|\n)([^\n]+:491:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L492:
        expect: true
        expr: '(^|\n)([^\n]+:492:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L504:
        expect: true
        expr: '(^|\n)([^\n]+:504:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L506:
        expect: true
        expr: '(^|\n)([^\n]+:506:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L507:
        expect: true
        expr: '(^|\n)([^\n]+:507:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L508:
        expect: true
        expr: '(^|\n)([^\n]+:508:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L509:
        expect: true
        expr: '(^|\n)([^\n]+:509:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L521:
        expect: true
        expr: '(^|\n)([^\n]+:521:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L523:
        expect: true
        expr: '(^|\n)([^\n]+:523:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L524:
        expect: true
        expr: '(^|\n)([^\n]+:524:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L525:
        expect: true
        expr: '(^|\n)([^\n]+:525:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L526:
        expect: true
        expr: '(^|\n)([^\n]+:526:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L527:
        expect: true
        expr: '(^|\n)([^\n]+:527:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L539:
        expect: true
        expr: '(^|\n)([^\n]+:539:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L541:
        expect: true
        expr: '(^|\n)([^\n]+:541:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L542:
        expect: true
        expr: '(^|\n)([^\n]+:542:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L543:
        expect: true
        expr: '(^|\n)([^\n]+:543:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L544:
        expect: true
        expr: '(^|\n)([^\n]+:544:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L556:
        expect: true
        expr: '(^|\n)([^\n]+:556:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L558:
        expect: true
        expr: '(^|\n)([^\n]+:558:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L559:
        expect: true
        expr: '(^|\n)([^\n]+:559:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L560:
        expect: true
        expr: '(^|\n)([^\n]+:560:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L561:
        expect: true
        expr: '(^|\n)([^\n]+:561:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L573:
        expect: true
        expr: '(^|\n)([^\n]+:573:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L575:
        expect: true
        expr: '(^|\n)([^\n]+:575:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L576:
        expect: true
        expr: '(^|\n)([^\n]+:576:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L577:
        expect: true
        expr: '(^|\n)([^\n]+:577:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L589:
        expect: true
        expr: '(^|\n)([^\n]+:589:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L591:
        expect: true
        expr: '(^|\n)([^\n]+:591:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L592:
        expect: true
        expr: '(^|\n)([^\n]+:592:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L604:
        expect: true
        expr: '(^|\n)([^\n]+:604:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L606:
        expect: true
        expr: '(^|\n)([^\n]+:606:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L607:
        expect: true
        expr: '(^|\n)([^\n]+:607:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L608:
        expect: true
        expr: '(^|\n)([^\n]+:608:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L609:
        expect: true
        expr: '(^|\n)([^\n]+:609:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L610:
        expect: true
        expr: '(^|\n)([^\n]+:610:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L622:
        expect: true
        expr: '(^|\n)([^\n]+:622:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L624:
        expect: true
        expr: '(^|\n)([^\n]+:624:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L625:
        expect: true
        expr: '(^|\n)([^\n]+:625:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L626:
        expect: true
        expr: '(^|\n)([^\n]+:626:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L627:
        expect: true
        expr: '(^|\n)([^\n]+:627:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L639:
        expect: true
        expr: '(^|\n)([^\n]+:639:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L641:
        expect: true
        expr: '(^|\n)([^\n]+:641:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L642:
        expect: true
        expr: '(^|\n)([^\n]+:642:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L643:
        expect: true
        expr: '(^|\n)([^\n]+:643:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L657:
        expect: true
        expr: '(^|\n)([^\n]+:657:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L658:
        expect: true
        expr: '(^|\n)([^\n]+:658:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L659:
        expect: true
        expr: '(^|\n)([^\n]+:659:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L660:
        expect: true
        expr: '(^|\n)([^\n]+:660:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L661:
        expect: true
        expr: '(^|\n)([^\n]+:661:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L673:
        expect: true
        expr: '(^|\n)([^\n]+:673:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L675:
        expect: true
        expr: '(^|\n)([^\n]+:675:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L676:
        expect: true
        expr: '(^|\n)([^\n]+:676:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L677:
        expect: true
        expr: '(^|\n)([^\n]+:677:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L689:
        expect: true
        expr: '(^|\n)([^\n]+:689:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L691:
        expect: true
        expr: '(^|\n)([^\n]+:691:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L692:
        expect: true
        expr: '(^|\n)([^\n]+:692:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L693:
        expect: true
        expr: '(^|\n)([^\n]+:693:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L705:
        expect: true
        expr: '(^|\n)([^\n]+:705:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L707:
        expect: true
        expr: '(^|\n)([^\n]+:707:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L708:
        expect: true
        expr: '(^|\n)([^\n]+:708:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L709:
        expect: true
        expr: '(^|\n)([^\n]+:709:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L721:
        expect: true
        expr: '(^|\n)([^\n]+:721:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L723:
        expect: true
        expr: '(^|\n)([^\n]+:723:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L724:
        expect: true
        expr: '(^|\n)([^\n]+:724:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L736:
        expect: true
        expr: '(^|\n)([^\n]+:736:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L738:
        expect: true
        expr: '(^|\n)([^\n]+:738:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L739:
        expect: true
        expr: '(^|\n)([^\n]+:739:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L740:
        expect: true
        expr: '(^|\n)([^\n]+:740:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L752:
        expect: true
        expr: '(^|\n)([^\n]+:752:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L754:
        expect: true
        expr: '(^|\n)([^\n]+:754:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L755:
        expect: true
        expr: '(^|\n)([^\n]+:755:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L756:
        expect: true
        expr: '(^|\n)([^\n]+:756:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L757:
        expect: true
        expr: '(^|\n)([^\n]+:757:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L769:
        expect: true
        expr: '(^|\n)([^\n]+:769:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L771:
        expect: true
        expr: '(^|\n)([^\n]+:771:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L772:
        expect: true
        expr: '(^|\n)([^\n]+:772:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L773:
        expect: true
        expr: '(^|\n)([^\n]+:773:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L785:
        expect: true
        expr: '(^|\n)([^\n]+:785:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L787:
        expect: true
        expr: '(^|\n)([^\n]+:787:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L788:
        expect: true
        expr: '(^|\n)([^\n]+:788:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L789:
        expect: true
        expr: '(^|\n)([^\n]+:789:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L801:
        expect: true
        expr: '(^|\n)([^\n]+:801:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L803:
        expect: true
        expr: '(^|\n)([^\n]+:803:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L804:
        expect: true
        expr: '(^|\n)([^\n]+:804:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L805:
        expect: true
        expr: '(^|\n)([^\n]+:805:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L806:
        expect: true
        expr: '(^|\n)([^\n]+:806:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L818:
        expect: true
        expr: '(^|\n)([^\n]+:818:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L820:
        expect: true
        expr: '(^|\n)([^\n]+:820:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L821:
        expect: true
        expr: '(^|\n)([^\n]+:821:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L822:
        expect: true
        expr: '(^|\n)([^\n]+:822:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L834:
        expect: true
        expr: '(^|\n)([^\n]+:834:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L836:
        expect: true
        expr: '(^|\n)([^\n]+:836:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L837:
        expect: true
        expr: '(^|\n)([^\n]+:837:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L838:
        expect: true
        expr: '(^|\n)([^\n]+:838:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L850:
        expect: true
        expr: '(^|\n)([^\n]+:850:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L852:
        expect: true
        expr: '(^|\n)([^\n]+:852:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L853:
        expect: true
        expr: '(^|\n)([^\n]+:853:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L854:
        expect: true
        expr: '(^|\n)([^\n]+:854:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L866:
        expect: true
        expr: '(^|\n)([^\n]+:866:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L868:
        expect: true
        expr: '(^|\n)([^\n]+:868:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L869:
        expect: true
        expr: '(^|\n)([^\n]+:869:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L870:
        expect: true
        expr: '(^|\n)([^\n]+:870:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L871:
        expect: true
        expr: '(^|\n)([^\n]+:871:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L883:
        expect: true
        expr: '(^|\n)([^\n]+:883:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L885:
        expect: true
        expr: '(^|\n)([^\n]+:885:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L886:
        expect: true
        expr: '(^|\n)([^\n]+:886:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L887:
        expect: true
        expr: '(^|\n)([^\n]+:887:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L899:
        expect: true
        expr: '(^|\n)([^\n]+:899:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L901:
        expect: true
        expr: '(^|\n)([^\n]+:901:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L902:
        expect: true
        expr: '(^|\n)([^\n]+:902:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L903:
        expect: true
        expr: '(^|\n)([^\n]+:903:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L915:
        expect: true
        expr: '(^|\n)([^\n]+:915:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L917:
        expect: true
        expr: '(^|\n)([^\n]+:917:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L918:
        expect: true
        expr: '(^|\n)([^\n]+:918:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L919:
        expect: true
        expr: '(^|\n)([^\n]+:919:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L920:
        expect: true
        expr: '(^|\n)([^\n]+:920:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L932:
        expect: true
        expr: '(^|\n)([^\n]+:932:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L934:
        expect: true
        expr: '(^|\n)([^\n]+:934:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L935:
        expect: true
        expr: '(^|\n)([^\n]+:935:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L947:
        expect: true
        expr: '(^|\n)([^\n]+:947:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L949:
        expect: true
        expr: '(^|\n)([^\n]+:949:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L950:
        expect: true
        expr: '(^|\n)([^\n]+:950:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L962:
        expect: true
        expr: '(^|\n)([^\n]+:962:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L964:
        expect: true
        expr: '(^|\n)([^\n]+:964:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L965:
        expect: true
        expr: '(^|\n)([^\n]+:965:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L966:
        expect: true
        expr: '(^|\n)([^\n]+:966:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L967:
        expect: true
        expr: '(^|\n)([^\n]+:967:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L968:
        expect: true
        expr: '(^|\n)([^\n]+:968:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv4n_6599:
  build:
    cflags: "-std=gnu++11 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv4n.C'
    sources:
      binary: rv4n.s
  group: GRPSERIAL
  validate:
    match:
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+:172:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+:187:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+:189:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+:204:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L223:
        expect: true
        expr: '(^|\n)([^\n]+:223:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L224:
        expect: true
        expr: '(^|\n)([^\n]+:224:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L225:
        expect: true
        expr: '(^|\n)([^\n]+:225:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L226:
        expect: true
        expr: '(^|\n)([^\n]+:226:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+:240:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+:241:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+:242:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L256:
        expect: true
        expr: '(^|\n)([^\n]+:256:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L257:
        expect: true
        expr: '(^|\n)([^\n]+:257:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L258:
        expect: true
        expr: '(^|\n)([^\n]+:258:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L272:
        expect: true
        expr: '(^|\n)([^\n]+:272:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L273:
        expect: true
        expr: '(^|\n)([^\n]+:273:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L274:
        expect: true
        expr: '(^|\n)([^\n]+:274:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L275:
        expect: true
        expr: '(^|\n)([^\n]+:275:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L287:
        expect: true
        expr: '(^|\n)([^\n]+:287:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L289:
        expect: true
        expr: '(^|\n)([^\n]+:289:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L290:
        expect: true
        expr: '(^|\n)([^\n]+:290:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L291:
        expect: true
        expr: '(^|\n)([^\n]+:291:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L303:
        expect: true
        expr: '(^|\n)([^\n]+:303:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L305:
        expect: true
        expr: '(^|\n)([^\n]+:305:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L306:
        expect: true
        expr: '(^|\n)([^\n]+:306:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L307:
        expect: true
        expr: '(^|\n)([^\n]+:307:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L319:
        expect: true
        expr: '(^|\n)([^\n]+:319:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L321:
        expect: true
        expr: '(^|\n)([^\n]+:321:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L322:
        expect: true
        expr: '(^|\n)([^\n]+:322:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L324:
        expect: true
        expr: '(^|\n)([^\n]+:324:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L337:
        expect: true
        expr: '(^|\n)([^\n]+:337:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L339:
        expect: true
        expr: '(^|\n)([^\n]+:339:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L341:
        expect: true
        expr: '(^|\n)([^\n]+:341:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L342:
        expect: true
        expr: '(^|\n)([^\n]+:342:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L343:
        expect: true
        expr: '(^|\n)([^\n]+:343:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L355:
        expect: true
        expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L357:
        expect: true
        expr: '(^|\n)([^\n]+:357:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L358:
        expect: true
        expr: '(^|\n)([^\n]+:358:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L359:
        expect: true
        expr: '(^|\n)([^\n]+:359:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L374:
        expect: true
        expr: '(^|\n)([^\n]+:374:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+:375:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L376:
        expect: true
        expr: '(^|\n)([^\n]+:376:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L377:
        expect: true
        expr: '(^|\n)([^\n]+:377:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L389:
        expect: true
        expr: '(^|\n)([^\n]+:389:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L391:
        expect: true
        expr: '(^|\n)([^\n]+:391:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L392:
        expect: true
        expr: '(^|\n)([^\n]+:392:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L393:
        expect: true
        expr: '(^|\n)([^\n]+:393:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L407:
        expect: true
        expr: '(^|\n)([^\n]+:407:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L408:
        expect: true
        expr: '(^|\n)([^\n]+:408:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L409:
        expect: true
        expr: '(^|\n)([^\n]+:409:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L424:
        expect: true
        expr: '(^|\n)([^\n]+:424:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L425:
        expect: true
        expr: '(^|\n)([^\n]+:425:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L439:
        expect: true
        expr: '(^|\n)([^\n]+:439:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L440:
        expect: true
        expr: '(^|\n)([^\n]+:440:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L441:
        expect: true
        expr: '(^|\n)([^\n]+:441:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L455:
        expect: true
        expr: '(^|\n)([^\n]+:455:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L456:
        expect: true
        expr: '(^|\n)([^\n]+:456:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L457:
        expect: true
        expr: '(^|\n)([^\n]+:457:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L469:
        expect: true
        expr: '(^|\n)([^\n]+:469:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L471:
        expect: true
        expr: '(^|\n)([^\n]+:471:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L472:
        expect: true
        expr: '(^|\n)([^\n]+:472:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L473:
        expect: true
        expr: '(^|\n)([^\n]+:473:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L474:
        expect: true
        expr: '(^|\n)([^\n]+:474:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L475:
        expect: true
        expr: '(^|\n)([^\n]+:475:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L487:
        expect: true
        expr: '(^|\n)([^\n]+:487:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L489:
        expect: true
        expr: '(^|\n)([^\n]+:489:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L490:
        expect: true
        expr: '(^|\n)([^\n]+:490:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L491:
        expect: true
        expr: '(^|\n)([^\n]+:491:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L492:
        expect: true
        expr: '(^|\n)([^\n]+:492:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L504:
        expect: true
        expr: '(^|\n)([^\n]+:504:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L506:
        expect: true
        expr: '(^|\n)([^\n]+:506:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L507:
        expect: true
        expr: '(^|\n)([^\n]+:507:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L508:
        expect: true
        expr: '(^|\n)([^\n]+:508:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L509:
        expect: true
        expr: '(^|\n)([^\n]+:509:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L521:
        expect: true
        expr: '(^|\n)([^\n]+:521:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L523:
        expect: true
        expr: '(^|\n)([^\n]+:523:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L524:
        expect: true
        expr: '(^|\n)([^\n]+:524:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L525:
        expect: true
        expr: '(^|\n)([^\n]+:525:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L526:
        expect: true
        expr: '(^|\n)([^\n]+:526:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L527:
        expect: true
        expr: '(^|\n)([^\n]+:527:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L539:
        expect: true
        expr: '(^|\n)([^\n]+:539:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L541:
        expect: true
        expr: '(^|\n)([^\n]+:541:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L542:
        expect: true
        expr: '(^|\n)([^\n]+:542:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L543:
        expect: true
        expr: '(^|\n)([^\n]+:543:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L544:
        expect: true
        expr: '(^|\n)([^\n]+:544:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L556:
        expect: true
        expr: '(^|\n)([^\n]+:556:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L558:
        expect: true
        expr: '(^|\n)([^\n]+:558:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L559:
        expect: true
        expr: '(^|\n)([^\n]+:559:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L560:
        expect: true
        expr: '(^|\n)([^\n]+:560:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L561:
        expect: true
        expr: '(^|\n)([^\n]+:561:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L573:
        expect: true
        expr: '(^|\n)([^\n]+:573:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L575:
        expect: true
        expr: '(^|\n)([^\n]+:575:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L576:
        expect: true
        expr: '(^|\n)([^\n]+:576:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L577:
        expect: true
        expr: '(^|\n)([^\n]+:577:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L589:
        expect: true
        expr: '(^|\n)([^\n]+:589:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L591:
        expect: true
        expr: '(^|\n)([^\n]+:591:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L592:
        expect: true
        expr: '(^|\n)([^\n]+:592:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L604:
        expect: true
        expr: '(^|\n)([^\n]+:604:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L606:
        expect: true
        expr: '(^|\n)([^\n]+:606:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L607:
        expect: true
        expr: '(^|\n)([^\n]+:607:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L608:
        expect: true
        expr: '(^|\n)([^\n]+:608:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L609:
        expect: true
        expr: '(^|\n)([^\n]+:609:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L610:
        expect: true
        expr: '(^|\n)([^\n]+:610:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L622:
        expect: true
        expr: '(^|\n)([^\n]+:622:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L624:
        expect: true
        expr: '(^|\n)([^\n]+:624:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L625:
        expect: true
        expr: '(^|\n)([^\n]+:625:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L626:
        expect: true
        expr: '(^|\n)([^\n]+:626:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L627:
        expect: true
        expr: '(^|\n)([^\n]+:627:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L639:
        expect: true
        expr: '(^|\n)([^\n]+:639:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L641:
        expect: true
        expr: '(^|\n)([^\n]+:641:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L642:
        expect: true
        expr: '(^|\n)([^\n]+:642:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L643:
        expect: true
        expr: '(^|\n)([^\n]+:643:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L657:
        expect: true
        expr: '(^|\n)([^\n]+:657:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L658:
        expect: true
        expr: '(^|\n)([^\n]+:658:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L659:
        expect: true
        expr: '(^|\n)([^\n]+:659:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L660:
        expect: true
        expr: '(^|\n)([^\n]+:660:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L661:
        expect: true
        expr: '(^|\n)([^\n]+:661:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L673:
        expect: true
        expr: '(^|\n)([^\n]+:673:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L675:
        expect: true
        expr: '(^|\n)([^\n]+:675:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L676:
        expect: true
        expr: '(^|\n)([^\n]+:676:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L677:
        expect: true
        expr: '(^|\n)([^\n]+:677:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L689:
        expect: true
        expr: '(^|\n)([^\n]+:689:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L691:
        expect: true
        expr: '(^|\n)([^\n]+:691:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L692:
        expect: true
        expr: '(^|\n)([^\n]+:692:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L693:
        expect: true
        expr: '(^|\n)([^\n]+:693:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L705:
        expect: true
        expr: '(^|\n)([^\n]+:705:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L707:
        expect: true
        expr: '(^|\n)([^\n]+:707:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L708:
        expect: true
        expr: '(^|\n)([^\n]+:708:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L709:
        expect: true
        expr: '(^|\n)([^\n]+:709:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L721:
        expect: true
        expr: '(^|\n)([^\n]+:721:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L723:
        expect: true
        expr: '(^|\n)([^\n]+:723:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L724:
        expect: true
        expr: '(^|\n)([^\n]+:724:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L736:
        expect: true
        expr: '(^|\n)([^\n]+:736:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L738:
        expect: true
        expr: '(^|\n)([^\n]+:738:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L739:
        expect: true
        expr: '(^|\n)([^\n]+:739:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L740:
        expect: true
        expr: '(^|\n)([^\n]+:740:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L752:
        expect: true
        expr: '(^|\n)([^\n]+:752:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L754:
        expect: true
        expr: '(^|\n)([^\n]+:754:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L755:
        expect: true
        expr: '(^|\n)([^\n]+:755:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L756:
        expect: true
        expr: '(^|\n)([^\n]+:756:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L757:
        expect: true
        expr: '(^|\n)([^\n]+:757:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L769:
        expect: true
        expr: '(^|\n)([^\n]+:769:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L771:
        expect: true
        expr: '(^|\n)([^\n]+:771:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L772:
        expect: true
        expr: '(^|\n)([^\n]+:772:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L773:
        expect: true
        expr: '(^|\n)([^\n]+:773:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L785:
        expect: true
        expr: '(^|\n)([^\n]+:785:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L787:
        expect: true
        expr: '(^|\n)([^\n]+:787:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L788:
        expect: true
        expr: '(^|\n)([^\n]+:788:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L789:
        expect: true
        expr: '(^|\n)([^\n]+:789:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L801:
        expect: true
        expr: '(^|\n)([^\n]+:801:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L803:
        expect: true
        expr: '(^|\n)([^\n]+:803:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L804:
        expect: true
        expr: '(^|\n)([^\n]+:804:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L805:
        expect: true
        expr: '(^|\n)([^\n]+:805:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L806:
        expect: true
        expr: '(^|\n)([^\n]+:806:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L818:
        expect: true
        expr: '(^|\n)([^\n]+:818:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L820:
        expect: true
        expr: '(^|\n)([^\n]+:820:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L821:
        expect: true
        expr: '(^|\n)([^\n]+:821:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L822:
        expect: true
        expr: '(^|\n)([^\n]+:822:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L834:
        expect: true
        expr: '(^|\n)([^\n]+:834:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L836:
        expect: true
        expr: '(^|\n)([^\n]+:836:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L837:
        expect: true
        expr: '(^|\n)([^\n]+:837:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L838:
        expect: true
        expr: '(^|\n)([^\n]+:838:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L850:
        expect: true
        expr: '(^|\n)([^\n]+:850:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L852:
        expect: true
        expr: '(^|\n)([^\n]+:852:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L853:
        expect: true
        expr: '(^|\n)([^\n]+:853:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L854:
        expect: true
        expr: '(^|\n)([^\n]+:854:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L866:
        expect: true
        expr: '(^|\n)([^\n]+:866:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L868:
        expect: true
        expr: '(^|\n)([^\n]+:868:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L869:
        expect: true
        expr: '(^|\n)([^\n]+:869:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L870:
        expect: true
        expr: '(^|\n)([^\n]+:870:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L871:
        expect: true
        expr: '(^|\n)([^\n]+:871:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L883:
        expect: true
        expr: '(^|\n)([^\n]+:883:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L885:
        expect: true
        expr: '(^|\n)([^\n]+:885:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L886:
        expect: true
        expr: '(^|\n)([^\n]+:886:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L887:
        expect: true
        expr: '(^|\n)([^\n]+:887:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L899:
        expect: true
        expr: '(^|\n)([^\n]+:899:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L901:
        expect: true
        expr: '(^|\n)([^\n]+:901:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L902:
        expect: true
        expr: '(^|\n)([^\n]+:902:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L903:
        expect: true
        expr: '(^|\n)([^\n]+:903:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L915:
        expect: true
        expr: '(^|\n)([^\n]+:915:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L917:
        expect: true
        expr: '(^|\n)([^\n]+:917:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L918:
        expect: true
        expr: '(^|\n)([^\n]+:918:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L919:
        expect: true
        expr: '(^|\n)([^\n]+:919:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L920:
        expect: true
        expr: '(^|\n)([^\n]+:920:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L932:
        expect: true
        expr: '(^|\n)([^\n]+:932:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L934:
        expect: true
        expr: '(^|\n)([^\n]+:934:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L935:
        expect: true
        expr: '(^|\n)([^\n]+:935:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L947:
        expect: true
        expr: '(^|\n)([^\n]+:947:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L949:
        expect: true
        expr: '(^|\n)([^\n]+:949:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L950:
        expect: true
        expr: '(^|\n)([^\n]+:950:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L962:
        expect: true
        expr: '(^|\n)([^\n]+:962:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L964:
        expect: true
        expr: '(^|\n)([^\n]+:964:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L965:
        expect: true
        expr: '(^|\n)([^\n]+:965:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L966:
        expect: true
        expr: '(^|\n)([^\n]+:966:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L967:
        expect: true
        expr: '(^|\n)([^\n]+:967:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L968:
        expect: true
        expr: '(^|\n)([^\n]+:968:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv4n_6600:
  build:
    cflags: "-std=gnu++14 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv4n.C'
    sources:
      binary: rv4n.s
  group: GRPSERIAL
  validate:
    match:
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+:172:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+:187:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+:189:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+:204:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L223:
        expect: true
        expr: '(^|\n)([^\n]+:223:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L224:
        expect: true
        expr: '(^|\n)([^\n]+:224:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L225:
        expect: true
        expr: '(^|\n)([^\n]+:225:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L226:
        expect: true
        expr: '(^|\n)([^\n]+:226:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+:240:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+:241:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+:242:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L256:
        expect: true
        expr: '(^|\n)([^\n]+:256:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L257:
        expect: true
        expr: '(^|\n)([^\n]+:257:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L258:
        expect: true
        expr: '(^|\n)([^\n]+:258:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L272:
        expect: true
        expr: '(^|\n)([^\n]+:272:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L273:
        expect: true
        expr: '(^|\n)([^\n]+:273:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L274:
        expect: true
        expr: '(^|\n)([^\n]+:274:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L275:
        expect: true
        expr: '(^|\n)([^\n]+:275:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L287:
        expect: true
        expr: '(^|\n)([^\n]+:287:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L289:
        expect: true
        expr: '(^|\n)([^\n]+:289:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L290:
        expect: true
        expr: '(^|\n)([^\n]+:290:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L291:
        expect: true
        expr: '(^|\n)([^\n]+:291:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L303:
        expect: true
        expr: '(^|\n)([^\n]+:303:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L305:
        expect: true
        expr: '(^|\n)([^\n]+:305:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L306:
        expect: true
        expr: '(^|\n)([^\n]+:306:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L307:
        expect: true
        expr: '(^|\n)([^\n]+:307:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L319:
        expect: true
        expr: '(^|\n)([^\n]+:319:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L321:
        expect: true
        expr: '(^|\n)([^\n]+:321:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L322:
        expect: true
        expr: '(^|\n)([^\n]+:322:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L324:
        expect: true
        expr: '(^|\n)([^\n]+:324:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L337:
        expect: true
        expr: '(^|\n)([^\n]+:337:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L339:
        expect: true
        expr: '(^|\n)([^\n]+:339:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L341:
        expect: true
        expr: '(^|\n)([^\n]+:341:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L342:
        expect: true
        expr: '(^|\n)([^\n]+:342:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L343:
        expect: true
        expr: '(^|\n)([^\n]+:343:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L355:
        expect: true
        expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L357:
        expect: true
        expr: '(^|\n)([^\n]+:357:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L358:
        expect: true
        expr: '(^|\n)([^\n]+:358:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L359:
        expect: true
        expr: '(^|\n)([^\n]+:359:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L374:
        expect: true
        expr: '(^|\n)([^\n]+:374:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+:375:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L376:
        expect: true
        expr: '(^|\n)([^\n]+:376:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L377:
        expect: true
        expr: '(^|\n)([^\n]+:377:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L389:
        expect: true
        expr: '(^|\n)([^\n]+:389:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L391:
        expect: true
        expr: '(^|\n)([^\n]+:391:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L392:
        expect: true
        expr: '(^|\n)([^\n]+:392:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L393:
        expect: true
        expr: '(^|\n)([^\n]+:393:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L407:
        expect: true
        expr: '(^|\n)([^\n]+:407:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L408:
        expect: true
        expr: '(^|\n)([^\n]+:408:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L409:
        expect: true
        expr: '(^|\n)([^\n]+:409:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L424:
        expect: true
        expr: '(^|\n)([^\n]+:424:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L425:
        expect: true
        expr: '(^|\n)([^\n]+:425:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L439:
        expect: true
        expr: '(^|\n)([^\n]+:439:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L440:
        expect: true
        expr: '(^|\n)([^\n]+:440:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L441:
        expect: true
        expr: '(^|\n)([^\n]+:441:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L455:
        expect: true
        expr: '(^|\n)([^\n]+:455:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L456:
        expect: true
        expr: '(^|\n)([^\n]+:456:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L457:
        expect: true
        expr: '(^|\n)([^\n]+:457:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L469:
        expect: true
        expr: '(^|\n)([^\n]+:469:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L471:
        expect: true
        expr: '(^|\n)([^\n]+:471:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L472:
        expect: true
        expr: '(^|\n)([^\n]+:472:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L473:
        expect: true
        expr: '(^|\n)([^\n]+:473:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L474:
        expect: true
        expr: '(^|\n)([^\n]+:474:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L475:
        expect: true
        expr: '(^|\n)([^\n]+:475:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L487:
        expect: true
        expr: '(^|\n)([^\n]+:487:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L489:
        expect: true
        expr: '(^|\n)([^\n]+:489:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L490:
        expect: true
        expr: '(^|\n)([^\n]+:490:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L491:
        expect: true
        expr: '(^|\n)([^\n]+:491:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L492:
        expect: true
        expr: '(^|\n)([^\n]+:492:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L504:
        expect: true
        expr: '(^|\n)([^\n]+:504:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L506:
        expect: true
        expr: '(^|\n)([^\n]+:506:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L507:
        expect: true
        expr: '(^|\n)([^\n]+:507:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L508:
        expect: true
        expr: '(^|\n)([^\n]+:508:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L509:
        expect: true
        expr: '(^|\n)([^\n]+:509:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L521:
        expect: true
        expr: '(^|\n)([^\n]+:521:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L523:
        expect: true
        expr: '(^|\n)([^\n]+:523:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L524:
        expect: true
        expr: '(^|\n)([^\n]+:524:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L525:
        expect: true
        expr: '(^|\n)([^\n]+:525:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L526:
        expect: true
        expr: '(^|\n)([^\n]+:526:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L527:
        expect: true
        expr: '(^|\n)([^\n]+:527:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L539:
        expect: true
        expr: '(^|\n)([^\n]+:539:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L541:
        expect: true
        expr: '(^|\n)([^\n]+:541:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L542:
        expect: true
        expr: '(^|\n)([^\n]+:542:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L543:
        expect: true
        expr: '(^|\n)([^\n]+:543:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L544:
        expect: true
        expr: '(^|\n)([^\n]+:544:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L556:
        expect: true
        expr: '(^|\n)([^\n]+:556:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L558:
        expect: true
        expr: '(^|\n)([^\n]+:558:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L559:
        expect: true
        expr: '(^|\n)([^\n]+:559:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L560:
        expect: true
        expr: '(^|\n)([^\n]+:560:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L561:
        expect: true
        expr: '(^|\n)([^\n]+:561:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L573:
        expect: true
        expr: '(^|\n)([^\n]+:573:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L575:
        expect: true
        expr: '(^|\n)([^\n]+:575:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L576:
        expect: true
        expr: '(^|\n)([^\n]+:576:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L577:
        expect: true
        expr: '(^|\n)([^\n]+:577:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L589:
        expect: true
        expr: '(^|\n)([^\n]+:589:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L591:
        expect: true
        expr: '(^|\n)([^\n]+:591:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L592:
        expect: true
        expr: '(^|\n)([^\n]+:592:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L604:
        expect: true
        expr: '(^|\n)([^\n]+:604:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L606:
        expect: true
        expr: '(^|\n)([^\n]+:606:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L607:
        expect: true
        expr: '(^|\n)([^\n]+:607:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L608:
        expect: true
        expr: '(^|\n)([^\n]+:608:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L609:
        expect: true
        expr: '(^|\n)([^\n]+:609:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L610:
        expect: true
        expr: '(^|\n)([^\n]+:610:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L622:
        expect: true
        expr: '(^|\n)([^\n]+:622:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L624:
        expect: true
        expr: '(^|\n)([^\n]+:624:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L625:
        expect: true
        expr: '(^|\n)([^\n]+:625:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L626:
        expect: true
        expr: '(^|\n)([^\n]+:626:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L627:
        expect: true
        expr: '(^|\n)([^\n]+:627:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L639:
        expect: true
        expr: '(^|\n)([^\n]+:639:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L641:
        expect: true
        expr: '(^|\n)([^\n]+:641:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L642:
        expect: true
        expr: '(^|\n)([^\n]+:642:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L643:
        expect: true
        expr: '(^|\n)([^\n]+:643:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L657:
        expect: true
        expr: '(^|\n)([^\n]+:657:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L658:
        expect: true
        expr: '(^|\n)([^\n]+:658:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L659:
        expect: true
        expr: '(^|\n)([^\n]+:659:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L660:
        expect: true
        expr: '(^|\n)([^\n]+:660:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L661:
        expect: true
        expr: '(^|\n)([^\n]+:661:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L673:
        expect: true
        expr: '(^|\n)([^\n]+:673:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L675:
        expect: true
        expr: '(^|\n)([^\n]+:675:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L676:
        expect: true
        expr: '(^|\n)([^\n]+:676:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L677:
        expect: true
        expr: '(^|\n)([^\n]+:677:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L689:
        expect: true
        expr: '(^|\n)([^\n]+:689:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L691:
        expect: true
        expr: '(^|\n)([^\n]+:691:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L692:
        expect: true
        expr: '(^|\n)([^\n]+:692:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L693:
        expect: true
        expr: '(^|\n)([^\n]+:693:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L705:
        expect: true
        expr: '(^|\n)([^\n]+:705:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L707:
        expect: true
        expr: '(^|\n)([^\n]+:707:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L708:
        expect: true
        expr: '(^|\n)([^\n]+:708:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L709:
        expect: true
        expr: '(^|\n)([^\n]+:709:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L721:
        expect: true
        expr: '(^|\n)([^\n]+:721:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L723:
        expect: true
        expr: '(^|\n)([^\n]+:723:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L724:
        expect: true
        expr: '(^|\n)([^\n]+:724:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L736:
        expect: true
        expr: '(^|\n)([^\n]+:736:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L738:
        expect: true
        expr: '(^|\n)([^\n]+:738:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L739:
        expect: true
        expr: '(^|\n)([^\n]+:739:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L740:
        expect: true
        expr: '(^|\n)([^\n]+:740:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L752:
        expect: true
        expr: '(^|\n)([^\n]+:752:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L754:
        expect: true
        expr: '(^|\n)([^\n]+:754:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L755:
        expect: true
        expr: '(^|\n)([^\n]+:755:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L756:
        expect: true
        expr: '(^|\n)([^\n]+:756:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L757:
        expect: true
        expr: '(^|\n)([^\n]+:757:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L769:
        expect: true
        expr: '(^|\n)([^\n]+:769:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L771:
        expect: true
        expr: '(^|\n)([^\n]+:771:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L772:
        expect: true
        expr: '(^|\n)([^\n]+:772:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L773:
        expect: true
        expr: '(^|\n)([^\n]+:773:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L785:
        expect: true
        expr: '(^|\n)([^\n]+:785:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L787:
        expect: true
        expr: '(^|\n)([^\n]+:787:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L788:
        expect: true
        expr: '(^|\n)([^\n]+:788:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L789:
        expect: true
        expr: '(^|\n)([^\n]+:789:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L801:
        expect: true
        expr: '(^|\n)([^\n]+:801:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L803:
        expect: true
        expr: '(^|\n)([^\n]+:803:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L804:
        expect: true
        expr: '(^|\n)([^\n]+:804:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L805:
        expect: true
        expr: '(^|\n)([^\n]+:805:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L806:
        expect: true
        expr: '(^|\n)([^\n]+:806:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L818:
        expect: true
        expr: '(^|\n)([^\n]+:818:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L820:
        expect: true
        expr: '(^|\n)([^\n]+:820:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L821:
        expect: true
        expr: '(^|\n)([^\n]+:821:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L822:
        expect: true
        expr: '(^|\n)([^\n]+:822:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L834:
        expect: true
        expr: '(^|\n)([^\n]+:834:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L836:
        expect: true
        expr: '(^|\n)([^\n]+:836:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L837:
        expect: true
        expr: '(^|\n)([^\n]+:837:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L838:
        expect: true
        expr: '(^|\n)([^\n]+:838:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L850:
        expect: true
        expr: '(^|\n)([^\n]+:850:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L852:
        expect: true
        expr: '(^|\n)([^\n]+:852:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L853:
        expect: true
        expr: '(^|\n)([^\n]+:853:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L854:
        expect: true
        expr: '(^|\n)([^\n]+:854:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L866:
        expect: true
        expr: '(^|\n)([^\n]+:866:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L868:
        expect: true
        expr: '(^|\n)([^\n]+:868:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L869:
        expect: true
        expr: '(^|\n)([^\n]+:869:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L870:
        expect: true
        expr: '(^|\n)([^\n]+:870:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L871:
        expect: true
        expr: '(^|\n)([^\n]+:871:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L883:
        expect: true
        expr: '(^|\n)([^\n]+:883:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L885:
        expect: true
        expr: '(^|\n)([^\n]+:885:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L886:
        expect: true
        expr: '(^|\n)([^\n]+:886:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L887:
        expect: true
        expr: '(^|\n)([^\n]+:887:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L899:
        expect: true
        expr: '(^|\n)([^\n]+:899:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L901:
        expect: true
        expr: '(^|\n)([^\n]+:901:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L902:
        expect: true
        expr: '(^|\n)([^\n]+:902:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L903:
        expect: true
        expr: '(^|\n)([^\n]+:903:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L915:
        expect: true
        expr: '(^|\n)([^\n]+:915:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L917:
        expect: true
        expr: '(^|\n)([^\n]+:917:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L918:
        expect: true
        expr: '(^|\n)([^\n]+:918:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L919:
        expect: true
        expr: '(^|\n)([^\n]+:919:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L920:
        expect: true
        expr: '(^|\n)([^\n]+:920:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L932:
        expect: true
        expr: '(^|\n)([^\n]+:932:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L934:
        expect: true
        expr: '(^|\n)([^\n]+:934:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L935:
        expect: true
        expr: '(^|\n)([^\n]+:935:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L947:
        expect: true
        expr: '(^|\n)([^\n]+:947:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L949:
        expect: true
        expr: '(^|\n)([^\n]+:949:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L950:
        expect: true
        expr: '(^|\n)([^\n]+:950:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L962:
        expect: true
        expr: '(^|\n)([^\n]+:962:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L964:
        expect: true
        expr: '(^|\n)([^\n]+:964:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L965:
        expect: true
        expr: '(^|\n)([^\n]+:965:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L966:
        expect: true
        expr: '(^|\n)([^\n]+:966:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L967:
        expect: true
        expr: '(^|\n)([^\n]+:967:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L968:
        expect: true
        expr: '(^|\n)([^\n]+:968:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv4p_2842:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv4p.C'
    sources:
      binary: rv4p.s
  group: GRPSERIAL
test_rv4p_2843:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv4p.C'
    sources:
      binary: rv4p.s
  group: GRPSERIAL
test_rv4p_6601:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv4p.C'
    sources:
      binary: rv4p.s
  group: GRPSERIAL
test_rv4p_6602:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv4p.C'
    sources:
      binary: rv4p.s
  group: GRPSERIAL
test_rv5n_2844:
  build:
    cflags: "-std=gnu++11 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv5n.C'
    sources:
      binary: rv5n.s
  group: GRPSERIAL
  validate:
    match:
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+:164:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+:177:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+:179:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+:180:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+:193:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+:213:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L226:
        expect: true
        expr: '(^|\n)([^\n]+:226:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L228:
        expect: true
        expr: '(^|\n)([^\n]+:228:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L229:
        expect: true
        expr: '(^|\n)([^\n]+:229:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+:243:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L245:
        expect: true
        expr: '(^|\n)([^\n]+:245:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L246:
        expect: true
        expr: '(^|\n)([^\n]+:246:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+:247:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L248:
        expect: true
        expr: '(^|\n)([^\n]+:248:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L264:
        expect: true
        expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L265:
        expect: true
        expr: '(^|\n)([^\n]+:265:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L282:
        expect: true
        expr: '(^|\n)([^\n]+:282:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L295:
        expect: true
        expr: '(^|\n)([^\n]+:295:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L297:
        expect: true
        expr: '(^|\n)([^\n]+:297:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L298:
        expect: true
        expr: '(^|\n)([^\n]+:298:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L299:
        expect: true
        expr: '(^|\n)([^\n]+:299:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L300:
        expect: true
        expr: '(^|\n)([^\n]+:300:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L313:
        expect: true
        expr: '(^|\n)([^\n]+:313:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L315:
        expect: true
        expr: '(^|\n)([^\n]+:315:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L316:
        expect: true
        expr: '(^|\n)([^\n]+:316:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L317:
        expect: true
        expr: '(^|\n)([^\n]+:317:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L330:
        expect: true
        expr: '(^|\n)([^\n]+:330:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L332:
        expect: true
        expr: '(^|\n)([^\n]+:332:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L333:
        expect: true
        expr: '(^|\n)([^\n]+:333:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L334:
        expect: true
        expr: '(^|\n)([^\n]+:334:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L347:
        expect: true
        expr: '(^|\n)([^\n]+:347:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L349:
        expect: true
        expr: '(^|\n)([^\n]+:349:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L350:
        expect: true
        expr: '(^|\n)([^\n]+:350:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L351:
        expect: true
        expr: '(^|\n)([^\n]+:351:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L364:
        expect: true
        expr: '(^|\n)([^\n]+:364:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L366:
        expect: true
        expr: '(^|\n)([^\n]+:366:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L367:
        expect: true
        expr: '(^|\n)([^\n]+:367:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L369:
        expect: true
        expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L382:
        expect: true
        expr: '(^|\n)([^\n]+:382:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L384:
        expect: true
        expr: '(^|\n)([^\n]+:384:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L385:
        expect: true
        expr: '(^|\n)([^\n]+:385:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L386:
        expect: true
        expr: '(^|\n)([^\n]+:386:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L399:
        expect: true
        expr: '(^|\n)([^\n]+:399:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L401:
        expect: true
        expr: '(^|\n)([^\n]+:401:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L402:
        expect: true
        expr: '(^|\n)([^\n]+:402:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L403:
        expect: true
        expr: '(^|\n)([^\n]+:403:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L416:
        expect: true
        expr: '(^|\n)([^\n]+:416:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L418:
        expect: true
        expr: '(^|\n)([^\n]+:418:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L419:
        expect: true
        expr: '(^|\n)([^\n]+:419:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L434:
        expect: true
        expr: '(^|\n)([^\n]+:434:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L436:
        expect: true
        expr: '(^|\n)([^\n]+:436:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L450:
        expect: true
        expr: '(^|\n)([^\n]+:450:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L466:
        expect: true
        expr: '(^|\n)([^\n]+:466:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L468:
        expect: true
        expr: '(^|\n)([^\n]+:468:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L469:
        expect: true
        expr: '(^|\n)([^\n]+:469:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L470:
        expect: true
        expr: '(^|\n)([^\n]+:470:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L471:
        expect: true
        expr: '(^|\n)([^\n]+:471:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L484:
        expect: true
        expr: '(^|\n)([^\n]+:484:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L486:
        expect: true
        expr: '(^|\n)([^\n]+:486:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L487:
        expect: true
        expr: '(^|\n)([^\n]+:487:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L488:
        expect: true
        expr: '(^|\n)([^\n]+:488:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L489:
        expect: true
        expr: '(^|\n)([^\n]+:489:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L502:
        expect: true
        expr: '(^|\n)([^\n]+:502:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L504:
        expect: true
        expr: '(^|\n)([^\n]+:504:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L505:
        expect: true
        expr: '(^|\n)([^\n]+:505:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L506:
        expect: true
        expr: '(^|\n)([^\n]+:506:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L519:
        expect: true
        expr: '(^|\n)([^\n]+:519:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L521:
        expect: true
        expr: '(^|\n)([^\n]+:521:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L522:
        expect: true
        expr: '(^|\n)([^\n]+:522:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L535:
        expect: true
        expr: '(^|\n)([^\n]+:535:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L537:
        expect: true
        expr: '(^|\n)([^\n]+:537:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L538:
        expect: true
        expr: '(^|\n)([^\n]+:538:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L539:
        expect: true
        expr: '(^|\n)([^\n]+:539:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L540:
        expect: true
        expr: '(^|\n)([^\n]+:540:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L553:
        expect: true
        expr: '(^|\n)([^\n]+:553:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L555:
        expect: true
        expr: '(^|\n)([^\n]+:555:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L556:
        expect: true
        expr: '(^|\n)([^\n]+:556:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L569:
        expect: true
        expr: '(^|\n)([^\n]+:569:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L571:
        expect: true
        expr: '(^|\n)([^\n]+:571:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L572:
        expect: true
        expr: '(^|\n)([^\n]+:572:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L585:
        expect: true
        expr: '(^|\n)([^\n]+:585:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L587:
        expect: true
        expr: '(^|\n)([^\n]+:587:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L588:
        expect: true
        expr: '(^|\n)([^\n]+:588:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L589:
        expect: true
        expr: '(^|\n)([^\n]+:589:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L590:
        expect: true
        expr: '(^|\n)([^\n]+:590:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L603:
        expect: true
        expr: '(^|\n)([^\n]+:603:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L605:
        expect: true
        expr: '(^|\n)([^\n]+:605:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L606:
        expect: true
        expr: '(^|\n)([^\n]+:606:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L607:
        expect: true
        expr: '(^|\n)([^\n]+:607:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L620:
        expect: true
        expr: '(^|\n)([^\n]+:620:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L622:
        expect: true
        expr: '(^|\n)([^\n]+:622:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L623:
        expect: true
        expr: '(^|\n)([^\n]+:623:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L624:
        expect: true
        expr: '(^|\n)([^\n]+:624:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L637:
        expect: true
        expr: '(^|\n)([^\n]+:637:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L639:
        expect: true
        expr: '(^|\n)([^\n]+:639:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L640:
        expect: true
        expr: '(^|\n)([^\n]+:640:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L641:
        expect: true
        expr: '(^|\n)([^\n]+:641:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L642:
        expect: true
        expr: '(^|\n)([^\n]+:642:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L657:
        expect: true
        expr: '(^|\n)([^\n]+:657:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L658:
        expect: true
        expr: '(^|\n)([^\n]+:658:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L671:
        expect: true
        expr: '(^|\n)([^\n]+:671:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L673:
        expect: true
        expr: '(^|\n)([^\n]+:673:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L674:
        expect: true
        expr: '(^|\n)([^\n]+:674:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L687:
        expect: true
        expr: '(^|\n)([^\n]+:687:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L689:
        expect: true
        expr: '(^|\n)([^\n]+:689:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L690:
        expect: true
        expr: '(^|\n)([^\n]+:690:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L691:
        expect: true
        expr: '(^|\n)([^\n]+:691:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L704:
        expect: true
        expr: '(^|\n)([^\n]+:704:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L706:
        expect: true
        expr: '(^|\n)([^\n]+:706:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L707:
        expect: true
        expr: '(^|\n)([^\n]+:707:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L720:
        expect: true
        expr: '(^|\n)([^\n]+:720:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L722:
        expect: true
        expr: '(^|\n)([^\n]+:722:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L723:
        expect: true
        expr: '(^|\n)([^\n]+:723:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L736:
        expect: true
        expr: '(^|\n)([^\n]+:736:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L738:
        expect: true
        expr: '(^|\n)([^\n]+:738:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L739:
        expect: true
        expr: '(^|\n)([^\n]+:739:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L740:
        expect: true
        expr: '(^|\n)([^\n]+:740:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv5n_2845:
  build:
    cflags: "-std=gnu++14 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv5n.C'
    sources:
      binary: rv5n.s
  group: GRPSERIAL
  validate:
    match:
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+:164:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+:177:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+:179:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+:180:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+:193:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+:213:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L226:
        expect: true
        expr: '(^|\n)([^\n]+:226:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L228:
        expect: true
        expr: '(^|\n)([^\n]+:228:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L229:
        expect: true
        expr: '(^|\n)([^\n]+:229:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+:243:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L245:
        expect: true
        expr: '(^|\n)([^\n]+:245:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L246:
        expect: true
        expr: '(^|\n)([^\n]+:246:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+:247:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L248:
        expect: true
        expr: '(^|\n)([^\n]+:248:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L264:
        expect: true
        expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L265:
        expect: true
        expr: '(^|\n)([^\n]+:265:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L282:
        expect: true
        expr: '(^|\n)([^\n]+:282:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L295:
        expect: true
        expr: '(^|\n)([^\n]+:295:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L297:
        expect: true
        expr: '(^|\n)([^\n]+:297:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L298:
        expect: true
        expr: '(^|\n)([^\n]+:298:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L299:
        expect: true
        expr: '(^|\n)([^\n]+:299:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L300:
        expect: true
        expr: '(^|\n)([^\n]+:300:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L313:
        expect: true
        expr: '(^|\n)([^\n]+:313:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L315:
        expect: true
        expr: '(^|\n)([^\n]+:315:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L316:
        expect: true
        expr: '(^|\n)([^\n]+:316:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L317:
        expect: true
        expr: '(^|\n)([^\n]+:317:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L330:
        expect: true
        expr: '(^|\n)([^\n]+:330:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L332:
        expect: true
        expr: '(^|\n)([^\n]+:332:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L333:
        expect: true
        expr: '(^|\n)([^\n]+:333:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L334:
        expect: true
        expr: '(^|\n)([^\n]+:334:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L347:
        expect: true
        expr: '(^|\n)([^\n]+:347:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L349:
        expect: true
        expr: '(^|\n)([^\n]+:349:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L350:
        expect: true
        expr: '(^|\n)([^\n]+:350:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L351:
        expect: true
        expr: '(^|\n)([^\n]+:351:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L364:
        expect: true
        expr: '(^|\n)([^\n]+:364:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L366:
        expect: true
        expr: '(^|\n)([^\n]+:366:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L367:
        expect: true
        expr: '(^|\n)([^\n]+:367:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L369:
        expect: true
        expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L382:
        expect: true
        expr: '(^|\n)([^\n]+:382:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L384:
        expect: true
        expr: '(^|\n)([^\n]+:384:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L385:
        expect: true
        expr: '(^|\n)([^\n]+:385:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L386:
        expect: true
        expr: '(^|\n)([^\n]+:386:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L399:
        expect: true
        expr: '(^|\n)([^\n]+:399:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L401:
        expect: true
        expr: '(^|\n)([^\n]+:401:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L402:
        expect: true
        expr: '(^|\n)([^\n]+:402:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L403:
        expect: true
        expr: '(^|\n)([^\n]+:403:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L416:
        expect: true
        expr: '(^|\n)([^\n]+:416:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L418:
        expect: true
        expr: '(^|\n)([^\n]+:418:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L419:
        expect: true
        expr: '(^|\n)([^\n]+:419:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L434:
        expect: true
        expr: '(^|\n)([^\n]+:434:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L436:
        expect: true
        expr: '(^|\n)([^\n]+:436:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L450:
        expect: true
        expr: '(^|\n)([^\n]+:450:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L466:
        expect: true
        expr: '(^|\n)([^\n]+:466:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L468:
        expect: true
        expr: '(^|\n)([^\n]+:468:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L469:
        expect: true
        expr: '(^|\n)([^\n]+:469:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L470:
        expect: true
        expr: '(^|\n)([^\n]+:470:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L471:
        expect: true
        expr: '(^|\n)([^\n]+:471:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L484:
        expect: true
        expr: '(^|\n)([^\n]+:484:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L486:
        expect: true
        expr: '(^|\n)([^\n]+:486:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L487:
        expect: true
        expr: '(^|\n)([^\n]+:487:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L488:
        expect: true
        expr: '(^|\n)([^\n]+:488:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L489:
        expect: true
        expr: '(^|\n)([^\n]+:489:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L502:
        expect: true
        expr: '(^|\n)([^\n]+:502:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L504:
        expect: true
        expr: '(^|\n)([^\n]+:504:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L505:
        expect: true
        expr: '(^|\n)([^\n]+:505:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L506:
        expect: true
        expr: '(^|\n)([^\n]+:506:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L519:
        expect: true
        expr: '(^|\n)([^\n]+:519:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L521:
        expect: true
        expr: '(^|\n)([^\n]+:521:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L522:
        expect: true
        expr: '(^|\n)([^\n]+:522:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L535:
        expect: true
        expr: '(^|\n)([^\n]+:535:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L537:
        expect: true
        expr: '(^|\n)([^\n]+:537:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L538:
        expect: true
        expr: '(^|\n)([^\n]+:538:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L539:
        expect: true
        expr: '(^|\n)([^\n]+:539:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L540:
        expect: true
        expr: '(^|\n)([^\n]+:540:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L553:
        expect: true
        expr: '(^|\n)([^\n]+:553:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L555:
        expect: true
        expr: '(^|\n)([^\n]+:555:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L556:
        expect: true
        expr: '(^|\n)([^\n]+:556:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L569:
        expect: true
        expr: '(^|\n)([^\n]+:569:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L571:
        expect: true
        expr: '(^|\n)([^\n]+:571:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L572:
        expect: true
        expr: '(^|\n)([^\n]+:572:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L585:
        expect: true
        expr: '(^|\n)([^\n]+:585:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L587:
        expect: true
        expr: '(^|\n)([^\n]+:587:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L588:
        expect: true
        expr: '(^|\n)([^\n]+:588:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L589:
        expect: true
        expr: '(^|\n)([^\n]+:589:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L590:
        expect: true
        expr: '(^|\n)([^\n]+:590:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L603:
        expect: true
        expr: '(^|\n)([^\n]+:603:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L605:
        expect: true
        expr: '(^|\n)([^\n]+:605:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L606:
        expect: true
        expr: '(^|\n)([^\n]+:606:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L607:
        expect: true
        expr: '(^|\n)([^\n]+:607:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L620:
        expect: true
        expr: '(^|\n)([^\n]+:620:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L622:
        expect: true
        expr: '(^|\n)([^\n]+:622:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L623:
        expect: true
        expr: '(^|\n)([^\n]+:623:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L624:
        expect: true
        expr: '(^|\n)([^\n]+:624:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L637:
        expect: true
        expr: '(^|\n)([^\n]+:637:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L639:
        expect: true
        expr: '(^|\n)([^\n]+:639:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L640:
        expect: true
        expr: '(^|\n)([^\n]+:640:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L641:
        expect: true
        expr: '(^|\n)([^\n]+:641:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L642:
        expect: true
        expr: '(^|\n)([^\n]+:642:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L657:
        expect: true
        expr: '(^|\n)([^\n]+:657:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L658:
        expect: true
        expr: '(^|\n)([^\n]+:658:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L671:
        expect: true
        expr: '(^|\n)([^\n]+:671:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L673:
        expect: true
        expr: '(^|\n)([^\n]+:673:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L674:
        expect: true
        expr: '(^|\n)([^\n]+:674:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L687:
        expect: true
        expr: '(^|\n)([^\n]+:687:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L689:
        expect: true
        expr: '(^|\n)([^\n]+:689:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L690:
        expect: true
        expr: '(^|\n)([^\n]+:690:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L691:
        expect: true
        expr: '(^|\n)([^\n]+:691:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L704:
        expect: true
        expr: '(^|\n)([^\n]+:704:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L706:
        expect: true
        expr: '(^|\n)([^\n]+:706:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L707:
        expect: true
        expr: '(^|\n)([^\n]+:707:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L720:
        expect: true
        expr: '(^|\n)([^\n]+:720:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L722:
        expect: true
        expr: '(^|\n)([^\n]+:722:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L723:
        expect: true
        expr: '(^|\n)([^\n]+:723:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L736:
        expect: true
        expr: '(^|\n)([^\n]+:736:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L738:
        expect: true
        expr: '(^|\n)([^\n]+:738:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L739:
        expect: true
        expr: '(^|\n)([^\n]+:739:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L740:
        expect: true
        expr: '(^|\n)([^\n]+:740:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv5n_6603:
  build:
    cflags: "-std=gnu++11 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv5n.C'
    sources:
      binary: rv5n.s
  group: GRPSERIAL
  validate:
    match:
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+:164:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+:177:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+:179:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+:180:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+:193:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+:213:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L226:
        expect: true
        expr: '(^|\n)([^\n]+:226:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L228:
        expect: true
        expr: '(^|\n)([^\n]+:228:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L229:
        expect: true
        expr: '(^|\n)([^\n]+:229:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+:243:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L245:
        expect: true
        expr: '(^|\n)([^\n]+:245:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L246:
        expect: true
        expr: '(^|\n)([^\n]+:246:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+:247:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L248:
        expect: true
        expr: '(^|\n)([^\n]+:248:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L264:
        expect: true
        expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L265:
        expect: true
        expr: '(^|\n)([^\n]+:265:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L282:
        expect: true
        expr: '(^|\n)([^\n]+:282:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L295:
        expect: true
        expr: '(^|\n)([^\n]+:295:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L297:
        expect: true
        expr: '(^|\n)([^\n]+:297:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L298:
        expect: true
        expr: '(^|\n)([^\n]+:298:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L299:
        expect: true
        expr: '(^|\n)([^\n]+:299:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L300:
        expect: true
        expr: '(^|\n)([^\n]+:300:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L313:
        expect: true
        expr: '(^|\n)([^\n]+:313:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L315:
        expect: true
        expr: '(^|\n)([^\n]+:315:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L316:
        expect: true
        expr: '(^|\n)([^\n]+:316:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L317:
        expect: true
        expr: '(^|\n)([^\n]+:317:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L330:
        expect: true
        expr: '(^|\n)([^\n]+:330:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L332:
        expect: true
        expr: '(^|\n)([^\n]+:332:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L333:
        expect: true
        expr: '(^|\n)([^\n]+:333:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L334:
        expect: true
        expr: '(^|\n)([^\n]+:334:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L347:
        expect: true
        expr: '(^|\n)([^\n]+:347:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L349:
        expect: true
        expr: '(^|\n)([^\n]+:349:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L350:
        expect: true
        expr: '(^|\n)([^\n]+:350:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L351:
        expect: true
        expr: '(^|\n)([^\n]+:351:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L364:
        expect: true
        expr: '(^|\n)([^\n]+:364:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L366:
        expect: true
        expr: '(^|\n)([^\n]+:366:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L367:
        expect: true
        expr: '(^|\n)([^\n]+:367:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L369:
        expect: true
        expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L382:
        expect: true
        expr: '(^|\n)([^\n]+:382:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L384:
        expect: true
        expr: '(^|\n)([^\n]+:384:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L385:
        expect: true
        expr: '(^|\n)([^\n]+:385:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L386:
        expect: true
        expr: '(^|\n)([^\n]+:386:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L399:
        expect: true
        expr: '(^|\n)([^\n]+:399:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L401:
        expect: true
        expr: '(^|\n)([^\n]+:401:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L402:
        expect: true
        expr: '(^|\n)([^\n]+:402:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L403:
        expect: true
        expr: '(^|\n)([^\n]+:403:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L416:
        expect: true
        expr: '(^|\n)([^\n]+:416:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L418:
        expect: true
        expr: '(^|\n)([^\n]+:418:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L419:
        expect: true
        expr: '(^|\n)([^\n]+:419:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L434:
        expect: true
        expr: '(^|\n)([^\n]+:434:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L436:
        expect: true
        expr: '(^|\n)([^\n]+:436:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L450:
        expect: true
        expr: '(^|\n)([^\n]+:450:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L466:
        expect: true
        expr: '(^|\n)([^\n]+:466:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L468:
        expect: true
        expr: '(^|\n)([^\n]+:468:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L469:
        expect: true
        expr: '(^|\n)([^\n]+:469:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L470:
        expect: true
        expr: '(^|\n)([^\n]+:470:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L471:
        expect: true
        expr: '(^|\n)([^\n]+:471:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L484:
        expect: true
        expr: '(^|\n)([^\n]+:484:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L486:
        expect: true
        expr: '(^|\n)([^\n]+:486:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L487:
        expect: true
        expr: '(^|\n)([^\n]+:487:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L488:
        expect: true
        expr: '(^|\n)([^\n]+:488:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L489:
        expect: true
        expr: '(^|\n)([^\n]+:489:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L502:
        expect: true
        expr: '(^|\n)([^\n]+:502:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L504:
        expect: true
        expr: '(^|\n)([^\n]+:504:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L505:
        expect: true
        expr: '(^|\n)([^\n]+:505:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L506:
        expect: true
        expr: '(^|\n)([^\n]+:506:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L519:
        expect: true
        expr: '(^|\n)([^\n]+:519:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L521:
        expect: true
        expr: '(^|\n)([^\n]+:521:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L522:
        expect: true
        expr: '(^|\n)([^\n]+:522:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L535:
        expect: true
        expr: '(^|\n)([^\n]+:535:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L537:
        expect: true
        expr: '(^|\n)([^\n]+:537:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L538:
        expect: true
        expr: '(^|\n)([^\n]+:538:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L539:
        expect: true
        expr: '(^|\n)([^\n]+:539:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L540:
        expect: true
        expr: '(^|\n)([^\n]+:540:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L553:
        expect: true
        expr: '(^|\n)([^\n]+:553:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L555:
        expect: true
        expr: '(^|\n)([^\n]+:555:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L556:
        expect: true
        expr: '(^|\n)([^\n]+:556:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L569:
        expect: true
        expr: '(^|\n)([^\n]+:569:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L571:
        expect: true
        expr: '(^|\n)([^\n]+:571:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L572:
        expect: true
        expr: '(^|\n)([^\n]+:572:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L585:
        expect: true
        expr: '(^|\n)([^\n]+:585:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L587:
        expect: true
        expr: '(^|\n)([^\n]+:587:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L588:
        expect: true
        expr: '(^|\n)([^\n]+:588:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L589:
        expect: true
        expr: '(^|\n)([^\n]+:589:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L590:
        expect: true
        expr: '(^|\n)([^\n]+:590:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L603:
        expect: true
        expr: '(^|\n)([^\n]+:603:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L605:
        expect: true
        expr: '(^|\n)([^\n]+:605:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L606:
        expect: true
        expr: '(^|\n)([^\n]+:606:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L607:
        expect: true
        expr: '(^|\n)([^\n]+:607:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L620:
        expect: true
        expr: '(^|\n)([^\n]+:620:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L622:
        expect: true
        expr: '(^|\n)([^\n]+:622:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L623:
        expect: true
        expr: '(^|\n)([^\n]+:623:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L624:
        expect: true
        expr: '(^|\n)([^\n]+:624:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L637:
        expect: true
        expr: '(^|\n)([^\n]+:637:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L639:
        expect: true
        expr: '(^|\n)([^\n]+:639:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L640:
        expect: true
        expr: '(^|\n)([^\n]+:640:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L641:
        expect: true
        expr: '(^|\n)([^\n]+:641:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L642:
        expect: true
        expr: '(^|\n)([^\n]+:642:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L657:
        expect: true
        expr: '(^|\n)([^\n]+:657:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L658:
        expect: true
        expr: '(^|\n)([^\n]+:658:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L671:
        expect: true
        expr: '(^|\n)([^\n]+:671:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L673:
        expect: true
        expr: '(^|\n)([^\n]+:673:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L674:
        expect: true
        expr: '(^|\n)([^\n]+:674:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L687:
        expect: true
        expr: '(^|\n)([^\n]+:687:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L689:
        expect: true
        expr: '(^|\n)([^\n]+:689:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L690:
        expect: true
        expr: '(^|\n)([^\n]+:690:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L691:
        expect: true
        expr: '(^|\n)([^\n]+:691:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L704:
        expect: true
        expr: '(^|\n)([^\n]+:704:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L706:
        expect: true
        expr: '(^|\n)([^\n]+:706:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L707:
        expect: true
        expr: '(^|\n)([^\n]+:707:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L720:
        expect: true
        expr: '(^|\n)([^\n]+:720:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L722:
        expect: true
        expr: '(^|\n)([^\n]+:722:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L723:
        expect: true
        expr: '(^|\n)([^\n]+:723:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L736:
        expect: true
        expr: '(^|\n)([^\n]+:736:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L738:
        expect: true
        expr: '(^|\n)([^\n]+:738:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L739:
        expect: true
        expr: '(^|\n)([^\n]+:739:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L740:
        expect: true
        expr: '(^|\n)([^\n]+:740:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv5n_6604:
  build:
    cflags: "-std=gnu++14 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv5n.C'
    sources:
      binary: rv5n.s
  group: GRPSERIAL
  validate:
    match:
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+:164:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+:177:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+:179:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+:180:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+:193:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+:213:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L226:
        expect: true
        expr: '(^|\n)([^\n]+:226:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L228:
        expect: true
        expr: '(^|\n)([^\n]+:228:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L229:
        expect: true
        expr: '(^|\n)([^\n]+:229:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+:243:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L245:
        expect: true
        expr: '(^|\n)([^\n]+:245:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L246:
        expect: true
        expr: '(^|\n)([^\n]+:246:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+:247:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L248:
        expect: true
        expr: '(^|\n)([^\n]+:248:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L264:
        expect: true
        expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L265:
        expect: true
        expr: '(^|\n)([^\n]+:265:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L282:
        expect: true
        expr: '(^|\n)([^\n]+:282:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L295:
        expect: true
        expr: '(^|\n)([^\n]+:295:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L297:
        expect: true
        expr: '(^|\n)([^\n]+:297:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L298:
        expect: true
        expr: '(^|\n)([^\n]+:298:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L299:
        expect: true
        expr: '(^|\n)([^\n]+:299:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L300:
        expect: true
        expr: '(^|\n)([^\n]+:300:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L313:
        expect: true
        expr: '(^|\n)([^\n]+:313:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L315:
        expect: true
        expr: '(^|\n)([^\n]+:315:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L316:
        expect: true
        expr: '(^|\n)([^\n]+:316:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L317:
        expect: true
        expr: '(^|\n)([^\n]+:317:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L330:
        expect: true
        expr: '(^|\n)([^\n]+:330:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L332:
        expect: true
        expr: '(^|\n)([^\n]+:332:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L333:
        expect: true
        expr: '(^|\n)([^\n]+:333:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L334:
        expect: true
        expr: '(^|\n)([^\n]+:334:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L347:
        expect: true
        expr: '(^|\n)([^\n]+:347:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L349:
        expect: true
        expr: '(^|\n)([^\n]+:349:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L350:
        expect: true
        expr: '(^|\n)([^\n]+:350:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L351:
        expect: true
        expr: '(^|\n)([^\n]+:351:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L364:
        expect: true
        expr: '(^|\n)([^\n]+:364:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L366:
        expect: true
        expr: '(^|\n)([^\n]+:366:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L367:
        expect: true
        expr: '(^|\n)([^\n]+:367:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L369:
        expect: true
        expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L382:
        expect: true
        expr: '(^|\n)([^\n]+:382:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L384:
        expect: true
        expr: '(^|\n)([^\n]+:384:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L385:
        expect: true
        expr: '(^|\n)([^\n]+:385:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L386:
        expect: true
        expr: '(^|\n)([^\n]+:386:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L399:
        expect: true
        expr: '(^|\n)([^\n]+:399:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L401:
        expect: true
        expr: '(^|\n)([^\n]+:401:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L402:
        expect: true
        expr: '(^|\n)([^\n]+:402:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L403:
        expect: true
        expr: '(^|\n)([^\n]+:403:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L416:
        expect: true
        expr: '(^|\n)([^\n]+:416:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L418:
        expect: true
        expr: '(^|\n)([^\n]+:418:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L419:
        expect: true
        expr: '(^|\n)([^\n]+:419:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L434:
        expect: true
        expr: '(^|\n)([^\n]+:434:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L436:
        expect: true
        expr: '(^|\n)([^\n]+:436:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L437:
        expect: true
        expr: '(^|\n)([^\n]+:437:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L450:
        expect: true
        expr: '(^|\n)([^\n]+:450:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L453:
        expect: true
        expr: '(^|\n)([^\n]+:453:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L466:
        expect: true
        expr: '(^|\n)([^\n]+:466:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L468:
        expect: true
        expr: '(^|\n)([^\n]+:468:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L469:
        expect: true
        expr: '(^|\n)([^\n]+:469:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L470:
        expect: true
        expr: '(^|\n)([^\n]+:470:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L471:
        expect: true
        expr: '(^|\n)([^\n]+:471:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L484:
        expect: true
        expr: '(^|\n)([^\n]+:484:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L486:
        expect: true
        expr: '(^|\n)([^\n]+:486:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L487:
        expect: true
        expr: '(^|\n)([^\n]+:487:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L488:
        expect: true
        expr: '(^|\n)([^\n]+:488:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L489:
        expect: true
        expr: '(^|\n)([^\n]+:489:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L502:
        expect: true
        expr: '(^|\n)([^\n]+:502:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L504:
        expect: true
        expr: '(^|\n)([^\n]+:504:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L505:
        expect: true
        expr: '(^|\n)([^\n]+:505:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L506:
        expect: true
        expr: '(^|\n)([^\n]+:506:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L519:
        expect: true
        expr: '(^|\n)([^\n]+:519:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L521:
        expect: true
        expr: '(^|\n)([^\n]+:521:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L522:
        expect: true
        expr: '(^|\n)([^\n]+:522:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L535:
        expect: true
        expr: '(^|\n)([^\n]+:535:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L537:
        expect: true
        expr: '(^|\n)([^\n]+:537:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L538:
        expect: true
        expr: '(^|\n)([^\n]+:538:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L539:
        expect: true
        expr: '(^|\n)([^\n]+:539:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L540:
        expect: true
        expr: '(^|\n)([^\n]+:540:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L553:
        expect: true
        expr: '(^|\n)([^\n]+:553:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L555:
        expect: true
        expr: '(^|\n)([^\n]+:555:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L556:
        expect: true
        expr: '(^|\n)([^\n]+:556:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L569:
        expect: true
        expr: '(^|\n)([^\n]+:569:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L571:
        expect: true
        expr: '(^|\n)([^\n]+:571:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L572:
        expect: true
        expr: '(^|\n)([^\n]+:572:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L585:
        expect: true
        expr: '(^|\n)([^\n]+:585:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L587:
        expect: true
        expr: '(^|\n)([^\n]+:587:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L588:
        expect: true
        expr: '(^|\n)([^\n]+:588:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L589:
        expect: true
        expr: '(^|\n)([^\n]+:589:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L590:
        expect: true
        expr: '(^|\n)([^\n]+:590:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L603:
        expect: true
        expr: '(^|\n)([^\n]+:603:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L605:
        expect: true
        expr: '(^|\n)([^\n]+:605:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L606:
        expect: true
        expr: '(^|\n)([^\n]+:606:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L607:
        expect: true
        expr: '(^|\n)([^\n]+:607:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L620:
        expect: true
        expr: '(^|\n)([^\n]+:620:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L622:
        expect: true
        expr: '(^|\n)([^\n]+:622:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L623:
        expect: true
        expr: '(^|\n)([^\n]+:623:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L624:
        expect: true
        expr: '(^|\n)([^\n]+:624:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L637:
        expect: true
        expr: '(^|\n)([^\n]+:637:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L639:
        expect: true
        expr: '(^|\n)([^\n]+:639:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L640:
        expect: true
        expr: '(^|\n)([^\n]+:640:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L641:
        expect: true
        expr: '(^|\n)([^\n]+:641:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L642:
        expect: true
        expr: '(^|\n)([^\n]+:642:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L655:
        expect: true
        expr: '(^|\n)([^\n]+:655:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L657:
        expect: true
        expr: '(^|\n)([^\n]+:657:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L658:
        expect: true
        expr: '(^|\n)([^\n]+:658:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L671:
        expect: true
        expr: '(^|\n)([^\n]+:671:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L673:
        expect: true
        expr: '(^|\n)([^\n]+:673:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L674:
        expect: true
        expr: '(^|\n)([^\n]+:674:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L687:
        expect: true
        expr: '(^|\n)([^\n]+:687:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L689:
        expect: true
        expr: '(^|\n)([^\n]+:689:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L690:
        expect: true
        expr: '(^|\n)([^\n]+:690:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L691:
        expect: true
        expr: '(^|\n)([^\n]+:691:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L704:
        expect: true
        expr: '(^|\n)([^\n]+:704:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L706:
        expect: true
        expr: '(^|\n)([^\n]+:706:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L707:
        expect: true
        expr: '(^|\n)([^\n]+:707:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L720:
        expect: true
        expr: '(^|\n)([^\n]+:720:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L722:
        expect: true
        expr: '(^|\n)([^\n]+:722:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L723:
        expect: true
        expr: '(^|\n)([^\n]+:723:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L736:
        expect: true
        expr: '(^|\n)([^\n]+:736:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L738:
        expect: true
        expr: '(^|\n)([^\n]+:738:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L739:
        expect: true
        expr: '(^|\n)([^\n]+:739:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L740:
        expect: true
        expr: '(^|\n)([^\n]+:740:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv5p_2846:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv5p.C'
    sources:
      binary: rv5p.s
  group: GRPSERIAL
test_rv5p_2847:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv5p.C'
    sources:
      binary: rv5p.s
  group: GRPSERIAL
test_rv5p_6605:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv5p.C'
    sources:
      binary: rv5p.s
  group: GRPSERIAL
test_rv5p_6606:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv5p.C'
    sources:
      binary: rv5p.s
  group: GRPSERIAL
test_rv6n_2848:
  build:
    cflags: "-std=gnu++11 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv6n.C'
    sources:
      binary: rv6n.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+:133:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+:166:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+:168:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+:183:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+:186:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L202:
        expect: true
        expr: '(^|\n)([^\n]+:202:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+:203:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+:204:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+:218:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L253:
        expect: true
        expr: '(^|\n)([^\n]+:253:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L255:
        expect: true
        expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L256:
        expect: true
        expr: '(^|\n)([^\n]+:256:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L272:
        expect: true
        expr: '(^|\n)([^\n]+:272:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L273:
        expect: true
        expr: '(^|\n)([^\n]+:273:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L274:
        expect: true
        expr: '(^|\n)([^\n]+:274:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L288:
        expect: true
        expr: '(^|\n)([^\n]+:288:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L290:
        expect: true
        expr: '(^|\n)([^\n]+:290:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L291:
        expect: true
        expr: '(^|\n)([^\n]+:291:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L305:
        expect: true
        expr: '(^|\n)([^\n]+:305:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L307:
        expect: true
        expr: '(^|\n)([^\n]+:307:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L308:
        expect: true
        expr: '(^|\n)([^\n]+:308:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L309:
        expect: true
        expr: '(^|\n)([^\n]+:309:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L326:
        expect: true
        expr: '(^|\n)([^\n]+:326:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L342:
        expect: true
        expr: '(^|\n)([^\n]+:342:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L343:
        expect: true
        expr: '(^|\n)([^\n]+:343:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L344:
        expect: true
        expr: '(^|\n)([^\n]+:344:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv6n_2849:
  build:
    cflags: "-std=gnu++14 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv6n.C'
    sources:
      binary: rv6n.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+:133:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+:166:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+:168:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+:183:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+:186:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L202:
        expect: true
        expr: '(^|\n)([^\n]+:202:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+:203:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+:204:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+:218:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L253:
        expect: true
        expr: '(^|\n)([^\n]+:253:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L255:
        expect: true
        expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L256:
        expect: true
        expr: '(^|\n)([^\n]+:256:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L272:
        expect: true
        expr: '(^|\n)([^\n]+:272:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L273:
        expect: true
        expr: '(^|\n)([^\n]+:273:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L274:
        expect: true
        expr: '(^|\n)([^\n]+:274:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L288:
        expect: true
        expr: '(^|\n)([^\n]+:288:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L290:
        expect: true
        expr: '(^|\n)([^\n]+:290:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L291:
        expect: true
        expr: '(^|\n)([^\n]+:291:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L305:
        expect: true
        expr: '(^|\n)([^\n]+:305:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L307:
        expect: true
        expr: '(^|\n)([^\n]+:307:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L308:
        expect: true
        expr: '(^|\n)([^\n]+:308:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L309:
        expect: true
        expr: '(^|\n)([^\n]+:309:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L326:
        expect: true
        expr: '(^|\n)([^\n]+:326:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L342:
        expect: true
        expr: '(^|\n)([^\n]+:342:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L343:
        expect: true
        expr: '(^|\n)([^\n]+:343:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L344:
        expect: true
        expr: '(^|\n)([^\n]+:344:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv6n_6607:
  build:
    cflags: "-std=gnu++11 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv6n.C'
    sources:
      binary: rv6n.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+:133:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+:166:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+:168:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+:183:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+:186:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L202:
        expect: true
        expr: '(^|\n)([^\n]+:202:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+:203:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+:204:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+:218:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L253:
        expect: true
        expr: '(^|\n)([^\n]+:253:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L255:
        expect: true
        expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L256:
        expect: true
        expr: '(^|\n)([^\n]+:256:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L272:
        expect: true
        expr: '(^|\n)([^\n]+:272:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L273:
        expect: true
        expr: '(^|\n)([^\n]+:273:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L274:
        expect: true
        expr: '(^|\n)([^\n]+:274:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L288:
        expect: true
        expr: '(^|\n)([^\n]+:288:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L290:
        expect: true
        expr: '(^|\n)([^\n]+:290:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L291:
        expect: true
        expr: '(^|\n)([^\n]+:291:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L305:
        expect: true
        expr: '(^|\n)([^\n]+:305:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L307:
        expect: true
        expr: '(^|\n)([^\n]+:307:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L308:
        expect: true
        expr: '(^|\n)([^\n]+:308:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L309:
        expect: true
        expr: '(^|\n)([^\n]+:309:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L326:
        expect: true
        expr: '(^|\n)([^\n]+:326:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L342:
        expect: true
        expr: '(^|\n)([^\n]+:342:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L343:
        expect: true
        expr: '(^|\n)([^\n]+:343:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L344:
        expect: true
        expr: '(^|\n)([^\n]+:344:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv6n_6608:
  build:
    cflags: "-std=gnu++14 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv6n.C'
    sources:
      binary: rv6n.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+:133:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+:166:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+:168:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+:183:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+:186:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L202:
        expect: true
        expr: '(^|\n)([^\n]+:202:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+:203:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+:204:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+:218:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L222:
        expect: true
        expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L253:
        expect: true
        expr: '(^|\n)([^\n]+:253:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L255:
        expect: true
        expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L256:
        expect: true
        expr: '(^|\n)([^\n]+:256:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L270:
        expect: true
        expr: '(^|\n)([^\n]+:270:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L272:
        expect: true
        expr: '(^|\n)([^\n]+:272:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L273:
        expect: true
        expr: '(^|\n)([^\n]+:273:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L274:
        expect: true
        expr: '(^|\n)([^\n]+:274:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L288:
        expect: true
        expr: '(^|\n)([^\n]+:288:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L290:
        expect: true
        expr: '(^|\n)([^\n]+:290:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L291:
        expect: true
        expr: '(^|\n)([^\n]+:291:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L305:
        expect: true
        expr: '(^|\n)([^\n]+:305:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L307:
        expect: true
        expr: '(^|\n)([^\n]+:307:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L308:
        expect: true
        expr: '(^|\n)([^\n]+:308:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L309:
        expect: true
        expr: '(^|\n)([^\n]+:309:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L325:
        expect: true
        expr: '(^|\n)([^\n]+:325:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L326:
        expect: true
        expr: '(^|\n)([^\n]+:326:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L342:
        expect: true
        expr: '(^|\n)([^\n]+:342:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L343:
        expect: true
        expr: '(^|\n)([^\n]+:343:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L344:
        expect: true
        expr: '(^|\n)([^\n]+:344:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_rv6p_2850:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv6p.C'
    sources:
      binary: rv6p.s
  group: GRPSERIAL
test_rv6p_2851:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv6p.C'
    sources:
      binary: rv6p.s
  group: GRPSERIAL
test_rv6p_6609:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv6p.C'
    sources:
      binary: rv6p.s
  group: GRPSERIAL
test_rv6p_6610:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv6p.C'
    sources:
      binary: rv6p.s
  group: GRPSERIAL
test_rv7n_2852:
  build:
    cflags: "-std=gnu++11 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv7n.C'
    sources:
      binary: rv7n.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_rv7n_2853:
  build:
    cflags: "-std=gnu++14 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv7n.C'
    sources:
      binary: rv7n.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_rv7n_6611:
  build:
    cflags: "-std=gnu++11 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv7n.C'
    sources:
      binary: rv7n.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_rv7n_6612:
  build:
    cflags: "-std=gnu++14 -fno-ipa-icf\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv7n.C'
    sources:
      binary: rv7n.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_rv7p_2854:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv7p.C'
    sources:
      binary: rv7p.s
  group: GRPSERIAL
test_rv7p_2855:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv7p.C'
    sources:
      binary: rv7p.s
  group: GRPSERIAL
test_rv7p_6613:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv7p.C'
    sources:
      binary: rv7p.s
  group: GRPSERIAL
test_rv7p_6614:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv7p.C'
    sources:
      binary: rv7p.s
  group: GRPSERIAL
test_rv8p_2856:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv8p.C'
    sources:
      binary: rv8p.s
  group: GRPSERIAL
test_rv8p_2857:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv8p.C'
    sources:
      binary: rv8p.s
  group: GRPSERIAL
test_rv8p_6615:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv8p.C'
    sources:
      binary: rv8p.s
  group: GRPSERIAL
test_rv8p_6616:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv8p.C'
    sources:
      binary: rv8p.s
  group: GRPSERIAL
test_rv9p_2858:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv9p.C'
    sources:
      binary: ./rv9p.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv9p_2859:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv9p.C'
    sources:
      binary: ./rv9p.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv9p_6617:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv9p.C'
    sources:
      binary: ./rv9p.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rv9p_6618:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rv9p.C'
    sources:
      binary: ./rv9p.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rvo_2860:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rvo.C'
    sources:
      binary: ./rvo.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rvo_2861:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rvo.C'
    sources:
      binary: ./rvo.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rvo_6619:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rvo.C'
    sources:
      binary: ./rvo.exe
  group: GRPSERIAL
  run:
    cwd: .
test_rvo_6620:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/rvo.C'
    sources:
      binary: ./rvo.exe
  group: GRPSERIAL
  run:
    cwd: .
test_scoped_enum2_2864:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum2.C'
    sources:
      binary: scoped_enum2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type")[^\n]*\n?)+'
test_scoped_enum2_2865:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum2.C'
    sources:
      binary: scoped_enum2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type")[^\n]*\n?)+'
test_scoped_enum2_6623:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum2.C'
    sources:
      binary: scoped_enum2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type")[^\n]*\n?)+'
test_scoped_enum2_6624:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum2.C'
    sources:
      binary: scoped_enum2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral type")[^\n]*\n?)+'
test_scoped_enum3_2866:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum3.C'
    sources:
      binary: scoped_enum3.s
  group: GRPSERIAL
test_scoped_enum3_2867:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum3.C'
    sources:
      binary: scoped_enum3.s
  group: GRPSERIAL
test_scoped_enum3_6625:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum3.C'
    sources:
      binary: scoped_enum3.s
  group: GRPSERIAL
test_scoped_enum3_6626:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum3.C'
    sources:
      binary: scoped_enum3.s
  group: GRPSERIAL
test_scoped_enum4_2868:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum4.C'
    sources:
      binary: scoped_enum4.s
  group: GRPSERIAL
test_scoped_enum4_2869:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum4.C'
    sources:
      binary: scoped_enum4.s
  group: GRPSERIAL
test_scoped_enum4_6627:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum4.C'
    sources:
      binary: scoped_enum4.s
  group: GRPSERIAL
test_scoped_enum4_6628:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum4.C'
    sources:
      binary: scoped_enum4.s
  group: GRPSERIAL
test_scoped_enum5_2870:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum5.C'
    sources:
      binary: scoped_enum5.s
  group: GRPSERIAL
test_scoped_enum5_2871:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum5.C'
    sources:
      binary: scoped_enum5.s
  group: GRPSERIAL
test_scoped_enum5_6629:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum5.C'
    sources:
      binary: scoped_enum5.s
  group: GRPSERIAL
test_scoped_enum5_6630:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum5.C'
    sources:
      binary: scoped_enum5.s
  group: GRPSERIAL
test_scoped_enum6_2872:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum6.C'
    sources:
      binary: scoped_enum6.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("13:\''X\'' is
          not a member")[^\n]*\n?)+'
test_scoped_enum6_2873:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum6.C'
    sources:
      binary: scoped_enum6.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("13:\''X\'' is
          not a member")[^\n]*\n?)+'
test_scoped_enum6_6631:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum6.C'
    sources:
      binary: scoped_enum6.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("13:\''X\'' is
          not a member")[^\n]*\n?)+'
test_scoped_enum6_6632:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum6.C'
    sources:
      binary: scoped_enum6.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("13:\''X\'' is
          not a member")[^\n]*\n?)+'
test_scoped_enum_2862:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum.C'
    sources:
      binary: scoped_enum.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript
          is not an integer")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_scoped_enum_2863:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum.C'
    sources:
      binary: scoped_enum.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript
          is not an integer")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_scoped_enum_6621:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum.C'
    sources:
      binary: scoped_enum.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript
          is not an integer")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_scoped_enum_6622:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum.C'
    sources:
      binary: scoped_enum.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array subscript
          is not an integer")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_scoped_enum_98_2874:
  build:
    cflags: "-std=c++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum_98.C'
    sources:
      binary: scoped_enum_98.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("scoped enums")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("scoped enums")[^\n]*\n?)+'
test_scoped_enum_98_6633:
  build:
    cflags: "-std=c++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum_98.C'
    sources:
      binary: scoped_enum_98.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("scoped enums")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("scoped enums")[^\n]*\n?)+'
test_scoped_enum_examples_2875:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum_examples.C'
    sources:
      binary: scoped_enum_examples.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared
          in this scope")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_scoped_enum_examples_2876:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum_examples.C'
    sources:
      binary: scoped_enum_examples.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared
          in this scope")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_scoped_enum_examples_6634:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum_examples.C'
    sources:
      binary: scoped_enum_examples.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared
          in this scope")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_scoped_enum_examples_6635:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/scoped_enum_examples.C'
    sources:
      binary: scoped_enum_examples.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared
          in this scope")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could not convert")[^\n]*\n?)+'
test_sfinae-nullptr1_2877:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae-nullptr1.C'
    sources:
      binary: sfinae-nullptr1.s
  group: GRPSERIAL
test_sfinae-nullptr1_2878:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae-nullptr1.C'
    sources:
      binary: sfinae-nullptr1.s
  group: GRPSERIAL
test_sfinae-nullptr1_6636:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae-nullptr1.C'
    sources:
      binary: sfinae-nullptr1.s
  group: GRPSERIAL
test_sfinae-nullptr1_6637:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae-nullptr1.C'
    sources:
      binary: sfinae-nullptr1.s
  group: GRPSERIAL
test_sfinae10_2881:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae10.C'
    sources:
      binary: sfinae10.s
  group: GRPSERIAL
test_sfinae10_2882:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae10.C'
    sources:
      binary: sfinae10.s
  group: GRPSERIAL
test_sfinae10_6640:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae10.C'
    sources:
      binary: sfinae10.s
  group: GRPSERIAL
test_sfinae10_6641:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae10.C'
    sources:
      binary: sfinae10.s
  group: GRPSERIAL
test_sfinae11_2883:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae11.C'
    sources:
      binary: sfinae11.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no member|not
          convert")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Z")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Z")[^\n]*\n?)+'
test_sfinae11_2884:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae11.C'
    sources:
      binary: sfinae11.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no member|not
          convert")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Z")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Z")[^\n]*\n?)+'
test_sfinae11_6642:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae11.C'
    sources:
      binary: sfinae11.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no member|not
          convert")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Z")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Z")[^\n]*\n?)+'
test_sfinae11_6643:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae11.C'
    sources:
      binary: sfinae11.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no member|not
          convert")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Z")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Z")[^\n]*\n?)+'
test_sfinae12_2885:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae12.C'
    sources:
      binary: sfinae12.s
  group: GRPSERIAL
test_sfinae12_2886:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae12.C'
    sources:
      binary: sfinae12.s
  group: GRPSERIAL
test_sfinae12_6644:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae12.C'
    sources:
      binary: sfinae12.s
  group: GRPSERIAL
test_sfinae12_6645:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae12.C'
    sources:
      binary: sfinae12.s
  group: GRPSERIAL
test_sfinae13_2887:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae13.C'
    sources:
      binary: sfinae13.s
  group: GRPSERIAL
test_sfinae13_2888:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae13.C'
    sources:
      binary: sfinae13.s
  group: GRPSERIAL
test_sfinae13_6646:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae13.C'
    sources:
      binary: sfinae13.s
  group: GRPSERIAL
test_sfinae13_6647:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae13.C'
    sources:
      binary: sfinae13.s
  group: GRPSERIAL
test_sfinae14_2889:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae14.C'
    sources:
      binary: sfinae14.s
  group: GRPSERIAL
test_sfinae14_2890:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae14.C'
    sources:
      binary: sfinae14.s
  group: GRPSERIAL
test_sfinae14_6648:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae14.C'
    sources:
      binary: sfinae14.s
  group: GRPSERIAL
test_sfinae14_6649:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae14.C'
    sources:
      binary: sfinae14.s
  group: GRPSERIAL
test_sfinae15_2891:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae15.C'
    sources:
      binary: sfinae15.s
  group: GRPSERIAL
test_sfinae15_2892:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae15.C'
    sources:
      binary: sfinae15.s
  group: GRPSERIAL
test_sfinae15_6650:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae15.C'
    sources:
      binary: sfinae15.s
  group: GRPSERIAL
test_sfinae15_6651:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae15.C'
    sources:
      binary: sfinae15.s
  group: GRPSERIAL
test_sfinae16_2893:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae16.C'
    sources:
      binary: sfinae16.s
  group: GRPSERIAL
test_sfinae16_2894:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae16.C'
    sources:
      binary: sfinae16.s
  group: GRPSERIAL
test_sfinae16_6652:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae16.C'
    sources:
      binary: sfinae16.s
  group: GRPSERIAL
test_sfinae16_6653:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae16.C'
    sources:
      binary: sfinae16.s
  group: GRPSERIAL
test_sfinae17_2895:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae17.C'
    sources:
      binary: sfinae17.s
  group: GRPSERIAL
test_sfinae17_2896:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae17.C'
    sources:
      binary: sfinae17.s
  group: GRPSERIAL
test_sfinae17_6654:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae17.C'
    sources:
      binary: sfinae17.s
  group: GRPSERIAL
test_sfinae17_6655:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae17.C'
    sources:
      binary: sfinae17.s
  group: GRPSERIAL
test_sfinae18_2897:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae18.C'
    sources:
      binary: sfinae18.s
  group: GRPSERIAL
test_sfinae18_2898:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae18.C'
    sources:
      binary: sfinae18.s
  group: GRPSERIAL
test_sfinae18_6656:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae18.C'
    sources:
      binary: sfinae18.s
  group: GRPSERIAL
test_sfinae18_6657:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae18.C'
    sources:
      binary: sfinae18.s
  group: GRPSERIAL
test_sfinae19_2899:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae19.C'
    sources:
      binary: sfinae19.s
  group: GRPSERIAL
test_sfinae19_2900:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae19.C'
    sources:
      binary: sfinae19.s
  group: GRPSERIAL
test_sfinae19_6658:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae19.C'
    sources:
      binary: sfinae19.s
  group: GRPSERIAL
test_sfinae19_6659:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae19.C'
    sources:
      binary: sfinae19.s
  group: GRPSERIAL
test_sfinae1_2879:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae1.C'
    sources:
      binary: sfinae1.s
  group: GRPSERIAL
test_sfinae1_2880:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae1.C'
    sources:
      binary: sfinae1.s
  group: GRPSERIAL
test_sfinae1_6638:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae1.C'
    sources:
      binary: sfinae1.s
  group: GRPSERIAL
test_sfinae1_6639:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae1.C'
    sources:
      binary: sfinae1.s
  group: GRPSERIAL
test_sfinae20_2903:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae20.C'
    sources:
      binary: sfinae20.s
  group: GRPSERIAL
test_sfinae20_2904:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae20.C'
    sources:
      binary: sfinae20.s
  group: GRPSERIAL
test_sfinae20_6662:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae20.C'
    sources:
      binary: sfinae20.s
  group: GRPSERIAL
test_sfinae20_6663:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae20.C'
    sources:
      binary: sfinae20.s
  group: GRPSERIAL
test_sfinae21_2905:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae21.C'
    sources:
      binary: sfinae21.s
  group: GRPSERIAL
test_sfinae21_2906:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae21.C'
    sources:
      binary: sfinae21.s
  group: GRPSERIAL
test_sfinae21_6664:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae21.C'
    sources:
      binary: sfinae21.s
  group: GRPSERIAL
test_sfinae21_6665:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae21.C'
    sources:
      binary: sfinae21.s
  group: GRPSERIAL
test_sfinae22_2907:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae22.C'
    sources:
      binary: sfinae22.s
  group: GRPSERIAL
test_sfinae22_2908:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae22.C'
    sources:
      binary: sfinae22.s
  group: GRPSERIAL
test_sfinae22_6666:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae22.C'
    sources:
      binary: sfinae22.s
  group: GRPSERIAL
test_sfinae22_6667:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae22.C'
    sources:
      binary: sfinae22.s
  group: GRPSERIAL
test_sfinae23_2909:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae23.C'
    sources:
      binary: sfinae23.s
  group: GRPSERIAL
test_sfinae23_2910:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae23.C'
    sources:
      binary: sfinae23.s
  group: GRPSERIAL
test_sfinae23_6668:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae23.C'
    sources:
      binary: sfinae23.s
  group: GRPSERIAL
test_sfinae23_6669:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae23.C'
    sources:
      binary: sfinae23.s
  group: GRPSERIAL
test_sfinae24_2911:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae24.C'
    sources:
      binary: sfinae24.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_sfinae24_2912:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae24.C'
    sources:
      binary: sfinae24.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_sfinae24_6670:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae24.C'
    sources:
      binary: sfinae24.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_sfinae24_6671:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae24.C'
    sources:
      binary: sfinae24.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_sfinae25_2913:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae25.C'
    sources:
      binary: sfinae25.s
  group: GRPSERIAL
test_sfinae25_2914:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae25.C'
    sources:
      binary: sfinae25.s
  group: GRPSERIAL
test_sfinae25_6672:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae25.C'
    sources:
      binary: sfinae25.s
  group: GRPSERIAL
test_sfinae25_6673:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae25.C'
    sources:
      binary: sfinae25.s
  group: GRPSERIAL
test_sfinae26_2915:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae26.C'
    sources:
      binary: sfinae26.s
  group: GRPSERIAL
  validate:
    match:
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_sfinae26_2916:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae26.C'
    sources:
      binary: sfinae26.s
  group: GRPSERIAL
  validate:
    match:
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_sfinae26_6674:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae26.C'
    sources:
      binary: sfinae26.s
  group: GRPSERIAL
  validate:
    match:
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_sfinae26_6675:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae26.C'
    sources:
      binary: sfinae26.s
  group: GRPSERIAL
  validate:
    match:
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_sfinae27_2917:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae27.C'
    sources:
      binary: sfinae27.s
  group: GRPSERIAL
test_sfinae27_2918:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae27.C'
    sources:
      binary: sfinae27.s
  group: GRPSERIAL
test_sfinae27_6676:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae27.C'
    sources:
      binary: sfinae27.s
  group: GRPSERIAL
test_sfinae27_6677:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae27.C'
    sources:
      binary: sfinae27.s
  group: GRPSERIAL
test_sfinae28_2919:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae28.C'
    sources:
      binary: sfinae28.s
  group: GRPSERIAL
test_sfinae28_2920:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae28.C'
    sources:
      binary: sfinae28.s
  group: GRPSERIAL
test_sfinae28_6678:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae28.C'
    sources:
      binary: sfinae28.s
  group: GRPSERIAL
test_sfinae28_6679:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae28.C'
    sources:
      binary: sfinae28.s
  group: GRPSERIAL
test_sfinae29_2921:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae29.C'
    sources:
      binary: sfinae29.s
  group: GRPSERIAL
test_sfinae29_2922:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae29.C'
    sources:
      binary: sfinae29.s
  group: GRPSERIAL
test_sfinae29_6680:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae29.C'
    sources:
      binary: sfinae29.s
  group: GRPSERIAL
test_sfinae29_6681:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae29.C'
    sources:
      binary: sfinae29.s
  group: GRPSERIAL
test_sfinae2_2901:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae2.C'
    sources:
      binary: sfinae2.s
  group: GRPSERIAL
test_sfinae2_2902:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae2.C'
    sources:
      binary: sfinae2.s
  group: GRPSERIAL
test_sfinae2_6660:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae2.C'
    sources:
      binary: sfinae2.s
  group: GRPSERIAL
test_sfinae2_6661:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae2.C'
    sources:
      binary: sfinae2.s
  group: GRPSERIAL
test_sfinae30_2925:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae30.C'
    sources:
      binary: sfinae30.s
  group: GRPSERIAL
test_sfinae30_2926:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae30.C'
    sources:
      binary: sfinae30.s
  group: GRPSERIAL
test_sfinae30_6684:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae30.C'
    sources:
      binary: sfinae30.s
  group: GRPSERIAL
test_sfinae30_6685:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae30.C'
    sources:
      binary: sfinae30.s
  group: GRPSERIAL
test_sfinae31_2927:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae31.C'
    sources:
      binary: sfinae31.s
  group: GRPSERIAL
test_sfinae31_2928:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae31.C'
    sources:
      binary: sfinae31.s
  group: GRPSERIAL
test_sfinae31_6686:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae31.C'
    sources:
      binary: sfinae31.s
  group: GRPSERIAL
test_sfinae31_6687:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae31.C'
    sources:
      binary: sfinae31.s
  group: GRPSERIAL
test_sfinae32_2929:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae32.C'
    sources:
      binary: sfinae32.s
  group: GRPSERIAL
test_sfinae32_2930:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae32.C'
    sources:
      binary: sfinae32.s
  group: GRPSERIAL
test_sfinae32_6688:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae32.C'
    sources:
      binary: sfinae32.s
  group: GRPSERIAL
test_sfinae32_6689:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae32.C'
    sources:
      binary: sfinae32.s
  group: GRPSERIAL
test_sfinae33_2931:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae33.C'
    sources:
      binary: sfinae33.s
  group: GRPSERIAL
test_sfinae33_2932:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae33.C'
    sources:
      binary: sfinae33.s
  group: GRPSERIAL
test_sfinae33_6690:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae33.C'
    sources:
      binary: sfinae33.s
  group: GRPSERIAL
test_sfinae33_6691:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae33.C'
    sources:
      binary: sfinae33.s
  group: GRPSERIAL
test_sfinae34_2933:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae34.C'
    sources:
      binary: sfinae34.s
  group: GRPSERIAL
test_sfinae34_2934:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae34.C'
    sources:
      binary: sfinae34.s
  group: GRPSERIAL
test_sfinae34_6692:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae34.C'
    sources:
      binary: sfinae34.s
  group: GRPSERIAL
test_sfinae34_6693:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae34.C'
    sources:
      binary: sfinae34.s
  group: GRPSERIAL
test_sfinae35_2935:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae35.C'
    sources:
      binary: sfinae35.s
  group: GRPSERIAL
test_sfinae35_2936:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae35.C'
    sources:
      binary: sfinae35.s
  group: GRPSERIAL
test_sfinae35_6694:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae35.C'
    sources:
      binary: sfinae35.s
  group: GRPSERIAL
test_sfinae35_6695:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae35.C'
    sources:
      binary: sfinae35.s
  group: GRPSERIAL
test_sfinae36_2937:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae36.C'
    sources:
      binary: sfinae36.s
  group: GRPSERIAL
test_sfinae36_2938:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae36.C'
    sources:
      binary: sfinae36.s
  group: GRPSERIAL
test_sfinae36_6696:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae36.C'
    sources:
      binary: sfinae36.s
  group: GRPSERIAL
test_sfinae36_6697:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae36.C'
    sources:
      binary: sfinae36.s
  group: GRPSERIAL
test_sfinae37_2939:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae37.C'
    sources:
      binary: sfinae37.s
  group: GRPSERIAL
test_sfinae37_2940:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae37.C'
    sources:
      binary: sfinae37.s
  group: GRPSERIAL
test_sfinae37_6698:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae37.C'
    sources:
      binary: sfinae37.s
  group: GRPSERIAL
test_sfinae37_6699:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae37.C'
    sources:
      binary: sfinae37.s
  group: GRPSERIAL
test_sfinae38_2941:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae38.C'
    sources:
      binary: sfinae38.s
  group: GRPSERIAL
test_sfinae38_2942:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae38.C'
    sources:
      binary: sfinae38.s
  group: GRPSERIAL
test_sfinae38_6700:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae38.C'
    sources:
      binary: sfinae38.s
  group: GRPSERIAL
test_sfinae38_6701:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae38.C'
    sources:
      binary: sfinae38.s
  group: GRPSERIAL
test_sfinae39_2943:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae39.C'
    sources:
      binary: sfinae39.s
  group: GRPSERIAL
test_sfinae39_2944:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae39.C'
    sources:
      binary: sfinae39.s
  group: GRPSERIAL
test_sfinae39_6702:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae39.C'
    sources:
      binary: sfinae39.s
  group: GRPSERIAL
test_sfinae39_6703:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae39.C'
    sources:
      binary: sfinae39.s
  group: GRPSERIAL
test_sfinae3_2923:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae3.C'
    sources:
      binary: sfinae3.s
  group: GRPSERIAL
test_sfinae3_2924:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae3.C'
    sources:
      binary: sfinae3.s
  group: GRPSERIAL
test_sfinae3_6682:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae3.C'
    sources:
      binary: sfinae3.s
  group: GRPSERIAL
test_sfinae3_6683:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae3.C'
    sources:
      binary: sfinae3.s
  group: GRPSERIAL
test_sfinae40_2947:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae40.C'
    sources:
      binary: sfinae40.s
  group: GRPSERIAL
test_sfinae40_2948:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae40.C'
    sources:
      binary: sfinae40.s
  group: GRPSERIAL
test_sfinae40_6706:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae40.C'
    sources:
      binary: sfinae40.s
  group: GRPSERIAL
test_sfinae40_6707:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae40.C'
    sources:
      binary: sfinae40.s
  group: GRPSERIAL
test_sfinae41_2949:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae41.C'
    sources:
      binary: sfinae41.s
  group: GRPSERIAL
test_sfinae41_2950:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae41.C'
    sources:
      binary: sfinae41.s
  group: GRPSERIAL
test_sfinae41_6708:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae41.C'
    sources:
      binary: sfinae41.s
  group: GRPSERIAL
test_sfinae41_6709:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae41.C'
    sources:
      binary: sfinae41.s
  group: GRPSERIAL
test_sfinae42_2951:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae42.C'
    sources:
      binary: sfinae42.s
  group: GRPSERIAL
test_sfinae42_2952:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae42.C'
    sources:
      binary: sfinae42.s
  group: GRPSERIAL
test_sfinae42_6710:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae42.C'
    sources:
      binary: sfinae42.s
  group: GRPSERIAL
test_sfinae42_6711:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae42.C'
    sources:
      binary: sfinae42.s
  group: GRPSERIAL
test_sfinae43_2953:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae43.C'
    sources:
      binary: sfinae43.s
  group: GRPSERIAL
test_sfinae43_2954:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae43.C'
    sources:
      binary: sfinae43.s
  group: GRPSERIAL
test_sfinae43_6712:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae43.C'
    sources:
      binary: sfinae43.s
  group: GRPSERIAL
test_sfinae43_6713:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae43.C'
    sources:
      binary: sfinae43.s
  group: GRPSERIAL
test_sfinae44_2955:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae44.C'
    sources:
      binary: sfinae44.s
  group: GRPSERIAL
test_sfinae44_2956:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae44.C'
    sources:
      binary: sfinae44.s
  group: GRPSERIAL
test_sfinae44_6714:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae44.C'
    sources:
      binary: sfinae44.s
  group: GRPSERIAL
test_sfinae44_6715:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae44.C'
    sources:
      binary: sfinae44.s
  group: GRPSERIAL
test_sfinae45_2957:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae45.C'
    sources:
      binary: sfinae45.s
  group: GRPSERIAL
test_sfinae45_2958:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae45.C'
    sources:
      binary: sfinae45.s
  group: GRPSERIAL
test_sfinae45_6716:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae45.C'
    sources:
      binary: sfinae45.s
  group: GRPSERIAL
test_sfinae45_6717:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae45.C'
    sources:
      binary: sfinae45.s
  group: GRPSERIAL
test_sfinae46_2959:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae46.C'
    sources:
      binary: sfinae46.s
  group: GRPSERIAL
test_sfinae46_2960:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae46.C'
    sources:
      binary: sfinae46.s
  group: GRPSERIAL
test_sfinae46_6718:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae46.C'
    sources:
      binary: sfinae46.s
  group: GRPSERIAL
test_sfinae46_6719:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae46.C'
    sources:
      binary: sfinae46.s
  group: GRPSERIAL
test_sfinae47_2961:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae47.C'
    sources:
      binary: sfinae47.s
  group: GRPSERIAL
test_sfinae47_2962:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae47.C'
    sources:
      binary: sfinae47.s
  group: GRPSERIAL
test_sfinae47_6720:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae47.C'
    sources:
      binary: sfinae47.s
  group: GRPSERIAL
test_sfinae47_6721:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae47.C'
    sources:
      binary: sfinae47.s
  group: GRPSERIAL
test_sfinae48_2963:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae48.C'
    sources:
      binary: sfinae48.s
  group: GRPSERIAL
test_sfinae48_2964:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae48.C'
    sources:
      binary: sfinae48.s
  group: GRPSERIAL
test_sfinae48_6722:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae48.C'
    sources:
      binary: sfinae48.s
  group: GRPSERIAL
test_sfinae48_6723:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae48.C'
    sources:
      binary: sfinae48.s
  group: GRPSERIAL
test_sfinae49_2965:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae49.C'
    sources:
      binary: sfinae49.s
  group: GRPSERIAL
test_sfinae49_2966:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae49.C'
    sources:
      binary: sfinae49.s
  group: GRPSERIAL
test_sfinae49_6724:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae49.C'
    sources:
      binary: sfinae49.s
  group: GRPSERIAL
test_sfinae49_6725:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae49.C'
    sources:
      binary: sfinae49.s
  group: GRPSERIAL
test_sfinae4_2945:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae4.C'
    sources:
      binary: sfinae4.s
  group: GRPSERIAL
test_sfinae4_2946:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae4.C'
    sources:
      binary: sfinae4.s
  group: GRPSERIAL
test_sfinae4_6704:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae4.C'
    sources:
      binary: sfinae4.s
  group: GRPSERIAL
test_sfinae4_6705:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae4.C'
    sources:
      binary: sfinae4.s
  group: GRPSERIAL
test_sfinae50_2969:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae50.C'
    sources:
      binary: sfinae50.s
  group: GRPSERIAL
test_sfinae50_2970:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae50.C'
    sources:
      binary: sfinae50.s
  group: GRPSERIAL
test_sfinae50_6728:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae50.C'
    sources:
      binary: sfinae50.s
  group: GRPSERIAL
test_sfinae50_6729:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae50.C'
    sources:
      binary: sfinae50.s
  group: GRPSERIAL
test_sfinae51_2971:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae51.C'
    sources:
      binary: sfinae51.s
  group: GRPSERIAL
test_sfinae51_2972:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae51.C'
    sources:
      binary: sfinae51.s
  group: GRPSERIAL
test_sfinae51_6730:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae51.C'
    sources:
      binary: sfinae51.s
  group: GRPSERIAL
test_sfinae51_6731:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae51.C'
    sources:
      binary: sfinae51.s
  group: GRPSERIAL
test_sfinae52_2973:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae52.C'
    sources:
      binary: sfinae52.s
  group: GRPSERIAL
test_sfinae52_2974:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae52.C'
    sources:
      binary: sfinae52.s
  group: GRPSERIAL
test_sfinae52_6732:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae52.C'
    sources:
      binary: sfinae52.s
  group: GRPSERIAL
test_sfinae52_6733:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae52.C'
    sources:
      binary: sfinae52.s
  group: GRPSERIAL
test_sfinae53_2975:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae53.C'
    sources:
      binary: sfinae53.s
  group: GRPSERIAL
test_sfinae53_2976:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae53.C'
    sources:
      binary: sfinae53.s
  group: GRPSERIAL
test_sfinae53_6734:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae53.C'
    sources:
      binary: sfinae53.s
  group: GRPSERIAL
test_sfinae53_6735:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae53.C'
    sources:
      binary: sfinae53.s
  group: GRPSERIAL
test_sfinae54_2977:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae54.C'
    sources:
      binary: sfinae54.s
  group: GRPSERIAL
test_sfinae54_2978:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae54.C'
    sources:
      binary: sfinae54.s
  group: GRPSERIAL
test_sfinae54_6736:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae54.C'
    sources:
      binary: sfinae54.s
  group: GRPSERIAL
test_sfinae54_6737:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae54.C'
    sources:
      binary: sfinae54.s
  group: GRPSERIAL
test_sfinae55_2979:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae55.C'
    sources:
      binary: sfinae55.s
  group: GRPSERIAL
test_sfinae55_2980:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae55.C'
    sources:
      binary: sfinae55.s
  group: GRPSERIAL
test_sfinae55_6738:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae55.C'
    sources:
      binary: sfinae55.s
  group: GRPSERIAL
test_sfinae55_6739:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae55.C'
    sources:
      binary: sfinae55.s
  group: GRPSERIAL
test_sfinae56_2981:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae56.C'
    sources:
      binary: sfinae56.s
  group: GRPSERIAL
test_sfinae56_2982:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae56.C'
    sources:
      binary: sfinae56.s
  group: GRPSERIAL
test_sfinae56_6740:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae56.C'
    sources:
      binary: sfinae56.s
  group: GRPSERIAL
test_sfinae56_6741:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae56.C'
    sources:
      binary: sfinae56.s
  group: GRPSERIAL
test_sfinae57_2983:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae57.C'
    sources:
      binary: sfinae57.s
  group: GRPSERIAL
test_sfinae57_2984:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae57.C'
    sources:
      binary: sfinae57.s
  group: GRPSERIAL
test_sfinae57_6742:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae57.C'
    sources:
      binary: sfinae57.s
  group: GRPSERIAL
test_sfinae57_6743:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae57.C'
    sources:
      binary: sfinae57.s
  group: GRPSERIAL
test_sfinae58_2985:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae58.C'
    sources:
      binary: sfinae58.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_sfinae58_2986:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae58.C'
    sources:
      binary: sfinae58.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_sfinae58_6744:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae58.C'
    sources:
      binary: sfinae58.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_sfinae58_6745:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae58.C'
    sources:
      binary: sfinae58.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_sfinae5_2967:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae5.C'
    sources:
      binary: sfinae5.s
  group: GRPSERIAL
test_sfinae5_2968:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae5.C'
    sources:
      binary: sfinae5.s
  group: GRPSERIAL
test_sfinae5_6726:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae5.C'
    sources:
      binary: sfinae5.s
  group: GRPSERIAL
test_sfinae5_6727:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae5.C'
    sources:
      binary: sfinae5.s
  group: GRPSERIAL
test_sfinae6_2987:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae6.C'
    sources:
      binary: sfinae6.s
  group: GRPSERIAL
test_sfinae6_2988:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae6.C'
    sources:
      binary: sfinae6.s
  group: GRPSERIAL
test_sfinae6_6746:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae6.C'
    sources:
      binary: sfinae6.s
  group: GRPSERIAL
test_sfinae6_6747:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae6.C'
    sources:
      binary: sfinae6.s
  group: GRPSERIAL
test_sfinae7_2989:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae7.C'
    sources:
      binary: sfinae7.s
  group: GRPSERIAL
test_sfinae7_2990:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae7.C'
    sources:
      binary: sfinae7.s
  group: GRPSERIAL
test_sfinae7_6748:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae7.C'
    sources:
      binary: sfinae7.s
  group: GRPSERIAL
test_sfinae7_6749:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae7.C'
    sources:
      binary: sfinae7.s
  group: GRPSERIAL
test_sfinae8_2991:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae8.C'
    sources:
      binary: sfinae8.s
  group: GRPSERIAL
test_sfinae8_2992:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae8.C'
    sources:
      binary: sfinae8.s
  group: GRPSERIAL
test_sfinae8_6750:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae8.C'
    sources:
      binary: sfinae8.s
  group: GRPSERIAL
test_sfinae8_6751:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae8.C'
    sources:
      binary: sfinae8.s
  group: GRPSERIAL
test_sfinae9_2993:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae9.C'
    sources:
      binary: sfinae9.s
  group: GRPSERIAL
test_sfinae9_2994:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae9.C'
    sources:
      binary: sfinae9.s
  group: GRPSERIAL
test_sfinae9_6752:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae9.C'
    sources:
      binary: sfinae9.s
  group: GRPSERIAL
test_sfinae9_6753:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/sfinae9.C'
    sources:
      binary: sfinae9.s
  group: GRPSERIAL
test_static_assert10_2997:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert10.C'
    sources:
      binary: static_assert10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant condition|not
          usable|non-constexpr")[^\n]*\n?)+'
test_static_assert10_2998:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert10.C'
    sources:
      binary: static_assert10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant condition|not
          usable|non-constexpr")[^\n]*\n?)+'
test_static_assert10_6756:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert10.C'
    sources:
      binary: static_assert10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant condition|not
          usable|non-constexpr")[^\n]*\n?)+'
test_static_assert10_6757:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert10.C'
    sources:
      binary: static_assert10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant condition|not
          usable|non-constexpr")[^\n]*\n?)+'
test_static_assert11_2999:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert11.C'
    sources:
      binary: static_assert11.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant condition|constant
          expression")[^\n]*\n?)+'
test_static_assert11_3000:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert11.C'
    sources:
      binary: static_assert11.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant condition|constant
          expression")[^\n]*\n?)+'
test_static_assert11_6758:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert11.C'
    sources:
      binary: static_assert11.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant condition|constant
          expression")[^\n]*\n?)+'
test_static_assert11_6759:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert11.C'
    sources:
      binary: static_assert11.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant condition|constant
          expression")[^\n]*\n?)+'
test_static_assert12_3001:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert12.C'
    sources:
      binary: static_assert12.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("static_assert without
          a message only available with ")[^\n]*\n?)+'
test_static_assert12_6760:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert12.C'
    sources:
      binary: static_assert12.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("static_assert without
          a message only available with ")[^\n]*\n?)+'
test_static_assert13_3002:
  build:
    cflags: "-std=gnu++11\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert13.C'
    sources:
      binary: static_assert13.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
test_static_assert13_6761:
  build:
    cflags: "-std=gnu++11\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert13.C'
    sources:
      binary: static_assert13.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
test_static_assert1_2995:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert1.C'
    sources:
      binary: static_assert1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never equal")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never equal")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never equal")[^\n]*\n?)+'
test_static_assert1_2996:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert1.C'
    sources:
      binary: static_assert1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never equal")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never equal")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never equal")[^\n]*\n?)+'
test_static_assert1_6754:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert1.C'
    sources:
      binary: static_assert1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never equal")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never equal")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never equal")[^\n]*\n?)+'
test_static_assert1_6755:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert1.C'
    sources:
      binary: static_assert1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never equal")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never equal")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("never equal")[^\n]*\n?)+'
test_static_assert2_3003:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert2.C'
    sources:
      binary: static_assert2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("odd number")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("even number")[^\n]*\n?)+'
test_static_assert2_3004:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert2.C'
    sources:
      binary: static_assert2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("odd number")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("even number")[^\n]*\n?)+'
test_static_assert2_6762:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert2.C'
    sources:
      binary: static_assert2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("odd number")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("even number")[^\n]*\n?)+'
test_static_assert2_6763:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert2.C'
    sources:
      binary: static_assert2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("odd number")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("even number")[^\n]*\n?)+'
test_static_assert3_3005:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert3.C'
    sources:
      binary: static_assert3.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant condition")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("division by zero")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division by zero
          is not a constant expression")[^\n]*\n?)+'
test_static_assert3_3006:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert3.C'
    sources:
      binary: static_assert3.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant condition")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("division by zero")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division by zero
          is not a constant expression")[^\n]*\n?)+'
test_static_assert3_6764:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert3.C'
    sources:
      binary: static_assert3.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant condition")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("division by zero")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division by zero
          is not a constant expression")[^\n]*\n?)+'
test_static_assert3_6765:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert3.C'
    sources:
      binary: static_assert3.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-constant condition")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("division by zero")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division by zero
          is not a constant expression")[^\n]*\n?)+'
test_static_assert4_3007:
  build:
    cflags: "-std=gnu++11 --param ggc-min-heapsize=0 --param ggc-min-expand=0 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert4.C'
    sources:
      binary: static_assert4.s
  group: GRPSERIAL
test_static_assert4_3008:
  build:
    cflags: "-std=gnu++14 --param ggc-min-heapsize=0 --param ggc-min-expand=0 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert4.C'
    sources:
      binary: static_assert4.s
  group: GRPSERIAL
test_static_assert4_6766:
  build:
    cflags: "-std=gnu++11 --param ggc-min-heapsize=0 --param ggc-min-expand=0 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert4.C'
    sources:
      binary: static_assert4.s
  group: GRPSERIAL
test_static_assert4_6767:
  build:
    cflags: "-std=gnu++14 --param ggc-min-heapsize=0 --param ggc-min-expand=0 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert4.C'
    sources:
      binary: static_assert4.s
  group: GRPSERIAL
test_static_assert5_3009:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert5.C'
    sources:
      binary: static_assert5.s
  group: GRPSERIAL
test_static_assert5_3010:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert5.C'
    sources:
      binary: static_assert5.s
  group: GRPSERIAL
test_static_assert5_6768:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert5.C'
    sources:
      binary: static_assert5.s
  group: GRPSERIAL
test_static_assert5_6769:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert5.C'
    sources:
      binary: static_assert5.s
  group: GRPSERIAL
test_static_assert6_3011:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert6.C'
    sources:
      binary: static_assert6.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''X\'' has the
          wrong value")[^\n]*\n?)+'
test_static_assert6_3012:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert6.C'
    sources:
      binary: static_assert6.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''X\'' has the
          wrong value")[^\n]*\n?)+'
test_static_assert6_6770:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert6.C'
    sources:
      binary: static_assert6.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''X\'' has the
          wrong value")[^\n]*\n?)+'
test_static_assert6_6771:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert6.C'
    sources:
      binary: static_assert6.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''X\'' has the
          wrong value")[^\n]*\n?)+'
test_static_assert7_3013:
  build:
    cflags: "-std=gnu++11 -Waddress\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert7.C'
    sources:
      binary: static_assert7.s
  group: GRPSERIAL
test_static_assert7_3014:
  build:
    cflags: "-std=gnu++14 -Waddress\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert7.C'
    sources:
      binary: static_assert7.s
  group: GRPSERIAL
test_static_assert7_6772:
  build:
    cflags: "-std=gnu++11 -Waddress\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert7.C'
    sources:
      binary: static_assert7.s
  group: GRPSERIAL
test_static_assert7_6773:
  build:
    cflags: "-std=gnu++14 -Waddress\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert7.C'
    sources:
      binary: static_assert7.s
  group: GRPSERIAL
test_static_assert8_3015:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert8.C'
    sources:
      binary: static_assert8.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected string-literal
          before \''\\\\)\''")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static_assert
          without a message only available with ")[^\n]*\n?)+'
test_static_assert8_3016:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert8.C'
    sources:
      binary: static_assert8.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected string-literal
          before \''\\\\)\''")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static_assert
          without a message only available with ")[^\n]*\n?)+'
test_static_assert8_6774:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert8.C'
    sources:
      binary: static_assert8.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected string-literal
          before \''\\\\)\''")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static_assert
          without a message only available with ")[^\n]*\n?)+'
test_static_assert8_6775:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert8.C'
    sources:
      binary: static_assert8.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected string-literal
          before \''\\\\)\''")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static assertion
          failed")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static_assert
          without a message only available with ")[^\n]*\n?)+'
test_static_assert9_3017:
  build:
    cflags: "-std=gnu++11 -fdelete-null-pointer-checks\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert9.C'
    sources:
      binary: static_assert9.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static member
          function")[^\n]*\n?)+'
test_static_assert9_3018:
  build:
    cflags: "-std=gnu++14 -fdelete-null-pointer-checks\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert9.C'
    sources:
      binary: static_assert9.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static member
          function")[^\n]*\n?)+'
test_static_assert9_6776:
  build:
    cflags: "-std=gnu++11 -fdelete-null-pointer-checks\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert9.C'
    sources:
      binary: static_assert9.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static member
          function")[^\n]*\n?)+'
test_static_assert9_6777:
  build:
    cflags: "-std=gnu++14 -fdelete-null-pointer-checks\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/static_assert9.C'
    sources:
      binary: static_assert9.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static member
          function")[^\n]*\n?)+'
test_std-layout1_3019:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/std-layout1.C'
    sources:
      binary: std-layout1.s
  group: GRPSERIAL
test_std-layout1_3020:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/std-layout1.C'
    sources:
      binary: std-layout1.s
  group: GRPSERIAL
test_std-layout1_6778:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/std-layout1.C'
    sources:
      binary: std-layout1.s
  group: GRPSERIAL
test_std-layout1_6779:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/std-layout1.C'
    sources:
      binary: std-layout1.s
  group: GRPSERIAL
test_std_fext-numeric-literals_3021:
  build:
    cflags: "-std=gnu++11 -fext-numeric-literals\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/std_fext-numeric-literals.C'
    sources:
      binary: std_fext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
test_std_fext-numeric-literals_3022:
  build:
    cflags: "-std=gnu++14 -fext-numeric-literals\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/std_fext-numeric-literals.C'
    sources:
      binary: std_fext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
test_std_fext-numeric-literals_6780:
  build:
    cflags: "-std=gnu++11 -fext-numeric-literals\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/std_fext-numeric-literals.C'
    sources:
      binary: std_fext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
test_std_fext-numeric-literals_6781:
  build:
    cflags: "-std=gnu++14 -fext-numeric-literals\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/std_fext-numeric-literals.C'
    sources:
      binary: std_fext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("shadowed by implementation")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("fixed-point types
          not supported")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsupported")[^\n]*\n?)+'
test_std_fno-ext-numeric-literals_3023:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/std_fno-ext-numeric-literals.C'
    sources:
      binary: std_fno-ext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
test_std_fno-ext-numeric-literals_3024:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/std_fno-ext-numeric-literals.C'
    sources:
      binary: std_fno-ext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
test_std_fno-ext-numeric-literals_6782:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/std_fno-ext-numeric-literals.C'
    sources:
      binary: std_fno-ext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
test_std_fno-ext-numeric-literals_6783:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/std_fno-ext-numeric-literals.C'
    sources:
      binary: std_fno-ext-numeric-literals.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("literal operator
          suffixes not preceded by")[^\n]*\n?)+'
test_stddef_3025:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/stddef.C'
    sources:
      binary: stddef.s
  group: GRPSERIAL
test_stddef_3026:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/stddef.C'
    sources:
      binary: stddef.s
  group: GRPSERIAL
test_stddef_6784:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/stddef.C'
    sources:
      binary: stddef.s
  group: GRPSERIAL
test_stddef_6785:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/stddef.C'
    sources:
      binary: stddef.s
  group: GRPSERIAL
test_stdint_3027:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/stdint.C'
    sources:
      binary: stdint.s
  group: GRPSERIAL
test_stdint_3028:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/stdint.C'
    sources:
      binary: stdint.s
  group: GRPSERIAL
test_stdint_6786:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/stdint.C'
    sources:
      binary: stdint.s
  group: GRPSERIAL
test_stdint_6787:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/stdint.C'
    sources:
      binary: stdint.s
  group: GRPSERIAL
test_syntax-err1_3029:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/syntax-err1.C'
    sources:
      binary: syntax-err1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("sometype. does
          not name a type")[^\n]*\n?)+'
test_syntax-err1_3030:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/syntax-err1.C'
    sources:
      binary: syntax-err1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("sometype. does
          not name a type")[^\n]*\n?)+'
test_syntax-err1_6788:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/syntax-err1.C'
    sources:
      binary: syntax-err1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("sometype. does
          not name a type")[^\n]*\n?)+'
test_syntax-err1_6789:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/syntax-err1.C'
    sources:
      binary: syntax-err1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("sometype. does
          not name a type")[^\n]*\n?)+'
test_temp-constructor-bug_3031:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp-constructor-bug.C'
    sources:
      binary: temp-constructor-bug.s
  group: GRPSERIAL
test_temp-constructor-bug_3032:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp-constructor-bug.C'
    sources:
      binary: temp-constructor-bug.s
  group: GRPSERIAL
test_temp-constructor-bug_6790:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp-constructor-bug.C'
    sources:
      binary: temp-constructor-bug.s
  group: GRPSERIAL
test_temp-constructor-bug_6791:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp-constructor-bug.C'
    sources:
      binary: temp-constructor-bug.s
  group: GRPSERIAL
test_temp-va-arg-bug_3033:
  build:
    cflags: "-std=gnu++11 -Wno-abi\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp-va-arg-bug.C'
    sources:
      binary: temp-va-arg-bug.s
  group: GRPSERIAL
test_temp-va-arg-bug_3034:
  build:
    cflags: "-std=gnu++14 -Wno-abi\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp-va-arg-bug.C'
    sources:
      binary: temp-va-arg-bug.s
  group: GRPSERIAL
test_temp-va-arg-bug_6792:
  build:
    cflags: "-std=gnu++11 -Wno-abi\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp-va-arg-bug.C'
    sources:
      binary: temp-va-arg-bug.s
  group: GRPSERIAL
test_temp-va-arg-bug_6793:
  build:
    cflags: "-std=gnu++14 -Wno-abi\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp-va-arg-bug.C'
    sources:
      binary: temp-va-arg-bug.s
  group: GRPSERIAL
test_temp_default1_3035:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default1.C'
    sources:
      binary: temp_default1.s
  group: GRPSERIAL
test_temp_default1_3036:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default1.C'
    sources:
      binary: temp_default1.s
  group: GRPSERIAL
test_temp_default1_6794:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default1.C'
    sources:
      binary: temp_default1.s
  group: GRPSERIAL
test_temp_default1_6795:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default1.C'
    sources:
      binary: temp_default1.s
  group: GRPSERIAL
test_temp_default2_3037:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default2.C'
    sources:
      binary: temp_default2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_temp_default2_3038:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default2.C'
    sources:
      binary: temp_default2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_temp_default2_6796:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default2.C'
    sources:
      binary: temp_default2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_temp_default2_6797:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default2.C'
    sources:
      binary: temp_default2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_temp_default3_3039:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default3.C'
    sources:
      binary: temp_default3.s
  group: GRPSERIAL
test_temp_default3_3040:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default3.C'
    sources:
      binary: temp_default3.s
  group: GRPSERIAL
test_temp_default3_6798:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default3.C'
    sources:
      binary: temp_default3.s
  group: GRPSERIAL
test_temp_default3_6799:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default3.C'
    sources:
      binary: temp_default3.s
  group: GRPSERIAL
test_temp_default4_3041:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default4.C'
    sources:
      binary: temp_default4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("function template
          friend")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default template
          argument")[^\n]*\n?)+'
test_temp_default4_3042:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default4.C'
    sources:
      binary: temp_default4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("function template
          friend")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default template
          argument")[^\n]*\n?)+'
test_temp_default4_6800:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default4.C'
    sources:
      binary: temp_default4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("function template
          friend")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default template
          argument")[^\n]*\n?)+'
test_temp_default4_6801:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default4.C'
    sources:
      binary: temp_default4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("function template
          friend")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default template
          argument")[^\n]*\n?)+'
test_temp_default5_3043:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default5.C'
    sources:
      binary: temp_default5.s
  group: GRPSERIAL
test_temp_default5_3044:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default5.C'
    sources:
      binary: temp_default5.s
  group: GRPSERIAL
test_temp_default5_6802:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default5.C'
    sources:
      binary: temp_default5.s
  group: GRPSERIAL
test_temp_default5_6803:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default5.C'
    sources:
      binary: temp_default5.s
  group: GRPSERIAL
test_temp_default6_3045:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default6.C'
    sources:
      binary: temp_default6.s
  group: GRPSERIAL
test_temp_default6_3046:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default6.C'
    sources:
      binary: temp_default6.s
  group: GRPSERIAL
test_temp_default6_6804:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default6.C'
    sources:
      binary: temp_default6.s
  group: GRPSERIAL
test_temp_default6_6805:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default6.C'
    sources:
      binary: temp_default6.s
  group: GRPSERIAL
test_temp_default7_3047:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default7.C'
    sources:
      binary: temp_default7.s
  group: GRPSERIAL
test_temp_default7_3048:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default7.C'
    sources:
      binary: temp_default7.s
  group: GRPSERIAL
test_temp_default7_6806:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default7.C'
    sources:
      binary: temp_default7.s
  group: GRPSERIAL
test_temp_default7_6807:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/temp_default7.C'
    sources:
      binary: temp_default7.s
  group: GRPSERIAL
test_template_deduction_3049:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/template_deduction.C'
    sources:
      binary: template_deduction.s
  group: GRPSERIAL
  validate:
    match:
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
test_template_deduction_3050:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/template_deduction.C'
    sources:
      binary: template_deduction.s
  group: GRPSERIAL
  validate:
    match:
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
test_template_deduction_6808:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/template_deduction.C'
    sources:
      binary: template_deduction.s
  group: GRPSERIAL
  validate:
    match:
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
test_template_deduction_6809:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/template_deduction.C'
    sources:
      binary: template_deduction.s
  group: GRPSERIAL
  validate:
    match:
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'
test_trailing10_3053:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing10.C'
    sources:
      binary: trailing10.s
  group: GRPSERIAL
test_trailing10_3054:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing10.C'
    sources:
      binary: trailing10.s
  group: GRPSERIAL
test_trailing10_6812:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing10.C'
    sources:
      binary: trailing10.s
  group: GRPSERIAL
test_trailing10_6813:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing10.C'
    sources:
      binary: trailing10.s
  group: GRPSERIAL
test_trailing11_3055:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing11.C'
    sources:
      binary: trailing11.s
  group: GRPSERIAL
test_trailing11_3056:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing11.C'
    sources:
      binary: trailing11.s
  group: GRPSERIAL
test_trailing11_6814:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing11.C'
    sources:
      binary: trailing11.s
  group: GRPSERIAL
test_trailing11_6815:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing11.C'
    sources:
      binary: trailing11.s
  group: GRPSERIAL
test_trailing12_3057:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing12.C'
    sources:
      binary: trailing12.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const")[^\n]*\n?)+'
test_trailing12_3058:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing12.C'
    sources:
      binary: trailing12.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const")[^\n]*\n?)+'
test_trailing12_6816:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing12.C'
    sources:
      binary: trailing12.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const")[^\n]*\n?)+'
test_trailing12_6817:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing12.C'
    sources:
      binary: trailing12.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("const")[^\n]*\n?)+'
test_trailing13_3059:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing13.C'
    sources:
      binary: trailing13.s
  group: GRPSERIAL
test_trailing13_3060:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing13.C'
    sources:
      binary: trailing13.s
  group: GRPSERIAL
test_trailing13_6818:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing13.C'
    sources:
      binary: trailing13.s
  group: GRPSERIAL
test_trailing13_6819:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing13.C'
    sources:
      binary: trailing13.s
  group: GRPSERIAL
test_trailing1_3051:
  build:
    cflags: "-std=gnu++11 -fabi-version=5 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing1.C'
    sources:
      binary: trailing1.s
  group: GRPSERIAL
test_trailing1_3052:
  build:
    cflags: "-std=gnu++14 -fabi-version=5 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing1.C'
    sources:
      binary: trailing1.s
  group: GRPSERIAL
test_trailing1_6810:
  build:
    cflags: "-std=gnu++11 -fabi-version=5 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing1.C'
    sources:
      binary: trailing1.s
  group: GRPSERIAL
test_trailing1_6811:
  build:
    cflags: "-std=gnu++14 -fabi-version=5 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing1.C'
    sources:
      binary: trailing1.s
  group: GRPSERIAL
test_trailing2_3061:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing2.C'
    sources:
      binary: trailing2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without trailing
          return type")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without trailing
          return type")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
test_trailing2_3062:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing2.C'
    sources:
      binary: trailing2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without trailing
          return type")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without trailing
          return type")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
test_trailing2_6820:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing2.C'
    sources:
      binary: trailing2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without trailing
          return type")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without trailing
          return type")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
test_trailing2_6821:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing2.C'
    sources:
      binary: trailing2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without trailing
          return type")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without trailing
          return type")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("trailing return
          type")[^\n]*\n?)+'
test_trailing3_3063:
  build:
    cflags: "-std=gnu++11 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing3.C'
    sources:
      binary: trailing3.s
  group: GRPSERIAL
test_trailing3_3064:
  build:
    cflags: "-std=gnu++14 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing3.C'
    sources:
      binary: trailing3.s
  group: GRPSERIAL
test_trailing3_6822:
  build:
    cflags: "-std=gnu++11 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing3.C'
    sources:
      binary: trailing3.s
  group: GRPSERIAL
test_trailing3_6823:
  build:
    cflags: "-std=gnu++14 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing3.C'
    sources:
      binary: trailing3.s
  group: GRPSERIAL
test_trailing4_3065:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing4.C'
    sources:
      binary: trailing4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_trailing4_3066:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing4.C'
    sources:
      binary: trailing4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_trailing4_6824:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing4.C'
    sources:
      binary: trailing4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_trailing4_6825:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing4.C'
    sources:
      binary: trailing4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function")[^\n]*\n?)+'
test_trailing5_3067:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing5.C'
    sources:
      binary: trailing5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_trailing5_3068:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing5.C'
    sources:
      binary: trailing5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_trailing5_6826:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing5.C'
    sources:
      binary: trailing5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_trailing5_6827:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing5.C'
    sources:
      binary: trailing5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_trailing6_3069:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing6.C'
    sources:
      binary: trailing6.s
  group: GRPSERIAL
test_trailing6_3070:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing6.C'
    sources:
      binary: trailing6.s
  group: GRPSERIAL
test_trailing6_6828:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing6.C'
    sources:
      binary: trailing6.s
  group: GRPSERIAL
test_trailing6_6829:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing6.C'
    sources:
      binary: trailing6.s
  group: GRPSERIAL
test_trailing7_3071:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing7.C'
    sources:
      binary: trailing7.s
  group: GRPSERIAL
test_trailing7_3072:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing7.C'
    sources:
      binary: trailing7.s
  group: GRPSERIAL
test_trailing7_6830:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing7.C'
    sources:
      binary: trailing7.s
  group: GRPSERIAL
test_trailing7_6831:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing7.C'
    sources:
      binary: trailing7.s
  group: GRPSERIAL
test_trailing8_3073:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing8.C'
    sources:
      binary: trailing8.s
  group: GRPSERIAL
test_trailing8_3074:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing8.C'
    sources:
      binary: trailing8.s
  group: GRPSERIAL
test_trailing8_6832:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing8.C'
    sources:
      binary: trailing8.s
  group: GRPSERIAL
test_trailing8_6833:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing8.C'
    sources:
      binary: trailing8.s
  group: GRPSERIAL
test_trailing9_3075:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing9.C'
    sources:
      binary: trailing9.s
  group: GRPSERIAL
test_trailing9_3076:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing9.C'
    sources:
      binary: trailing9.s
  group: GRPSERIAL
test_trailing9_6834:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing9.C'
    sources:
      binary: trailing9.s
  group: GRPSERIAL
test_trailing9_6835:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trailing9.C'
    sources:
      binary: trailing9.s
  group: GRPSERIAL
test_traits1_3077:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/traits1.C'
    sources:
      binary: traits1.s
  group: GRPSERIAL
test_traits1_3078:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/traits1.C'
    sources:
      binary: traits1.s
  group: GRPSERIAL
test_traits1_6836:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/traits1.C'
    sources:
      binary: traits1.s
  group: GRPSERIAL
test_traits1_6837:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/traits1.C'
    sources:
      binary: traits1.s
  group: GRPSERIAL
test_trivial1_3079:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trivial1.C'
    sources:
      binary: trivial1.s
  group: GRPSERIAL
test_trivial1_3080:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trivial1.C'
    sources:
      binary: trivial1.s
  group: GRPSERIAL
test_trivial1_6838:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trivial1.C'
    sources:
      binary: trivial1.s
  group: GRPSERIAL
test_trivial1_6839:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/trivial1.C'
    sources:
      binary: trivial1.s
  group: GRPSERIAL
test_typedef-redecl_3081:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/typedef-redecl.C'
    sources:
      binary: typedef-redecl.s
  group: GRPSERIAL
test_typedef-redecl_3082:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/typedef-redecl.C'
    sources:
      binary: typedef-redecl.s
  group: GRPSERIAL
test_typedef-redecl_6840:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/typedef-redecl.C'
    sources:
      binary: typedef-redecl.s
  group: GRPSERIAL
test_typedef-redecl_6841:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/typedef-redecl.C'
    sources:
      binary: typedef-redecl.s
  group: GRPSERIAL
test_udlit-addr_3083:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-addr.C'
    sources:
      binary: udlit-addr.s
  group: GRPSERIAL
test_udlit-addr_3084:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-addr.C'
    sources:
      binary: udlit-addr.s
  group: GRPSERIAL
test_udlit-addr_6842:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-addr.C'
    sources:
      binary: udlit-addr.s
  group: GRPSERIAL
test_udlit-addr_6843:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-addr.C'
    sources:
      binary: udlit-addr.s
  group: GRPSERIAL
test_udlit-args-neg_3085:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-args-neg.C'
    sources:
      binary: udlit-args-neg.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
test_udlit-args-neg_3086:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-args-neg.C'
    sources:
      binary: udlit-args-neg.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
test_udlit-args-neg_6844:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-args-neg.C'
    sources:
      binary: udlit-args-neg.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
test_udlit-args-neg_6845:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-args-neg.C'
    sources:
      binary: udlit-args-neg.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
test_udlit-args2_3089:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-args2.C'
    sources:
      binary: udlit-args2.s
  group: GRPSERIAL
test_udlit-args2_3090:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-args2.C'
    sources:
      binary: udlit-args2.s
  group: GRPSERIAL
test_udlit-args2_6848:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-args2.C'
    sources:
      binary: udlit-args2.s
  group: GRPSERIAL
test_udlit-args2_6849:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-args2.C'
    sources:
      binary: udlit-args2.s
  group: GRPSERIAL
test_udlit-args_3087:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-args.C'
    sources:
      binary: udlit-args.s
  group: GRPSERIAL
test_udlit-args_3088:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-args.C'
    sources:
      binary: udlit-args.s
  group: GRPSERIAL
test_udlit-args_6846:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-args.C'
    sources:
      binary: udlit-args.s
  group: GRPSERIAL
test_udlit-args_6847:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-args.C'
    sources:
      binary: udlit-args.s
  group: GRPSERIAL
test_udlit-clink-neg_3091:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-clink-neg.C'
    sources:
      binary: udlit-clink-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operator with
          C linkage")[^\n]*\n?)+'
test_udlit-clink-neg_3092:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-clink-neg.C'
    sources:
      binary: udlit-clink-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operator with
          C linkage")[^\n]*\n?)+'
test_udlit-clink-neg_6850:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-clink-neg.C'
    sources:
      binary: udlit-clink-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operator with
          C linkage")[^\n]*\n?)+'
test_udlit-clink-neg_6851:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-clink-neg.C'
    sources:
      binary: udlit-clink-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operator with
          C linkage")[^\n]*\n?)+'
test_udlit-concat-neg_3093:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-concat-neg.C'
    sources:
      binary: udlit-concat-neg.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inconsistent user-defined
          literal suffixes")[^\n]*\n?)+'
test_udlit-concat-neg_3094:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-concat-neg.C'
    sources:
      binary: udlit-concat-neg.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inconsistent user-defined
          literal suffixes")[^\n]*\n?)+'
test_udlit-concat-neg_6852:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-concat-neg.C'
    sources:
      binary: udlit-concat-neg.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inconsistent user-defined
          literal suffixes")[^\n]*\n?)+'
test_udlit-concat-neg_6853:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-concat-neg.C'
    sources:
      binary: udlit-concat-neg.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inconsistent user-defined
          literal suffixes")[^\n]*\n?)+'
test_udlit-concat_3095:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-concat.C'
    sources:
      binary: udlit-concat.s
  group: GRPSERIAL
test_udlit-concat_3096:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-concat.C'
    sources:
      binary: udlit-concat.s
  group: GRPSERIAL
test_udlit-concat_6854:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-concat.C'
    sources:
      binary: udlit-concat.s
  group: GRPSERIAL
test_udlit-concat_6855:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-concat.C'
    sources:
      binary: udlit-concat.s
  group: GRPSERIAL
test_udlit-constexpr_3097:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-constexpr.C'
    sources:
      binary: udlit-constexpr.s
  group: GRPSERIAL
test_udlit-constexpr_3098:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-constexpr.C'
    sources:
      binary: udlit-constexpr.s
  group: GRPSERIAL
test_udlit-constexpr_6856:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-constexpr.C'
    sources:
      binary: udlit-constexpr.s
  group: GRPSERIAL
test_udlit-constexpr_6857:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-constexpr.C'
    sources:
      binary: udlit-constexpr.s
  group: GRPSERIAL
test_udlit-cpp98-neg_3099:
  build:
    cflags: "-std=c++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-cpp98-neg.C'
    sources:
      binary: udlit-cpp98-neg.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("user-defined literals
          only available with")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion
          from")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("user-defined literals
          only available with")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid suffix")[^\n]*\n?)+'
test_udlit-cpp98-neg_6858:
  build:
    cflags: "-std=c++98\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-cpp98-neg.C'
    sources:
      binary: udlit-cpp98-neg.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("user-defined literals
          only available with")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion
          from")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("user-defined literals
          only available with")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid suffix")[^\n]*\n?)+'
test_udlit-declare-neg_3100:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-declare-neg.C'
    sources:
      binary: udlit-declare-neg.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_BarULL\'' was
          not declared in this scope")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_BarLD\'' was
          not declared in this scope")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_Bar\'' was not
          declared in this scope")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_BarCharStr\''
          was not declared in this scope")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|Possible missing length argument")[^\n]*\n?)+'
test_udlit-declare-neg_3101:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-declare-neg.C'
    sources:
      binary: udlit-declare-neg.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_BarULL\'' was
          not declared in this scope")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_BarLD\'' was
          not declared in this scope")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_Bar\'' was not
          declared in this scope")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_BarCharStr\''
          was not declared in this scope")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|Possible missing length argument")[^\n]*\n?)+'
test_udlit-declare-neg_6859:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-declare-neg.C'
    sources:
      binary: udlit-declare-neg.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_BarULL\'' was
          not declared in this scope")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_BarLD\'' was
          not declared in this scope")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_Bar\'' was not
          declared in this scope")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_BarCharStr\''
          was not declared in this scope")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|Possible missing length argument")[^\n]*\n?)+'
test_udlit-declare-neg_6860:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-declare-neg.C'
    sources:
      binary: udlit-declare-neg.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_BarULL\'' was
          not declared in this scope")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_BarLD\'' was
          not declared in this scope")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_Bar\'' was not
          declared in this scope")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_BarCharStr\''
          was not declared in this scope")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|Possible missing length argument")[^\n]*\n?)+'
test_udlit-embed-quote_3102:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-embed-quote.C'
    sources:
      binary: ./udlit-embed-quote.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-embed-quote_3103:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-embed-quote.C'
    sources:
      binary: ./udlit-embed-quote.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-embed-quote_6861:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-embed-quote.C'
    sources:
      binary: ./udlit-embed-quote.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-embed-quote_6862:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-embed-quote.C'
    sources:
      binary: ./udlit-embed-quote.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-friend_3104:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-friend.C'
    sources:
      binary: udlit-friend.s
  group: GRPSERIAL
test_udlit-friend_3105:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-friend.C'
    sources:
      binary: udlit-friend.s
  group: GRPSERIAL
test_udlit-friend_6863:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-friend.C'
    sources:
      binary: udlit-friend.s
  group: GRPSERIAL
test_udlit-friend_6864:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-friend.C'
    sources:
      binary: udlit-friend.s
  group: GRPSERIAL
test_udlit-general_3106:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-general.C'
    sources:
      binary: ./udlit-general.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-general_3107:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-general.C'
    sources:
      binary: ./udlit-general.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-general_6865:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-general.C'
    sources:
      binary: ./udlit-general.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-general_6866:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-general.C'
    sources:
      binary: ./udlit-general.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-implicit-conv-neg_3108:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-implicit-conv-neg.C'
    sources:
      binary: udlit-implicit-conv-neg.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator|with|argument")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator string operator|with|arguments")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator|with|argument")[^\n]*\n?)+'
test_udlit-implicit-conv-neg_3109:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-implicit-conv-neg.C'
    sources:
      binary: udlit-implicit-conv-neg.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator|with|argument")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator string operator|with|arguments")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator|with|argument")[^\n]*\n?)+'
test_udlit-implicit-conv-neg_6867:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-implicit-conv-neg.C'
    sources:
      binary: udlit-implicit-conv-neg.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator|with|argument")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator string operator|with|arguments")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator|with|argument")[^\n]*\n?)+'
test_udlit-implicit-conv-neg_6868:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-implicit-conv-neg.C'
    sources:
      binary: udlit-implicit-conv-neg.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator|with|argument")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator|with|argument")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator|with|arguments")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator string operator|with|arguments")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          numeric literal operator|with|argument")[^\n]*\n?)+'
test_udlit-inline_3110:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-inline.C'
    sources:
      binary: udlit-inline.s
  group: GRPSERIAL
test_udlit-inline_3111:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-inline.C'
    sources:
      binary: udlit-inline.s
  group: GRPSERIAL
test_udlit-inline_6869:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-inline.C'
    sources:
      binary: udlit-inline.s
  group: GRPSERIAL
test_udlit-inline_6870:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-inline.C'
    sources:
      binary: udlit-inline.s
  group: GRPSERIAL
test_udlit-linkage-neg_3112:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-linkage-neg.C'
    sources:
      binary: udlit-linkage-neg.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before")[^\n]*\n?)+'
test_udlit-linkage-neg_3113:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-linkage-neg.C'
    sources:
      binary: udlit-linkage-neg.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before")[^\n]*\n?)+'
test_udlit-linkage-neg_6871:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-linkage-neg.C'
    sources:
      binary: udlit-linkage-neg.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before")[^\n]*\n?)+'
test_udlit-linkage-neg_6872:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-linkage-neg.C'
    sources:
      binary: udlit-linkage-neg.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected unqualified-id
          before")[^\n]*\n?)+'
test_udlit-mangle_3114:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-mangle.C'
    sources:
      binary: udlit-mangle.s
  group: GRPSERIAL
test_udlit-mangle_3115:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-mangle.C'
    sources:
      binary: udlit-mangle.s
  group: GRPSERIAL
test_udlit-mangle_6873:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-mangle.C'
    sources:
      binary: udlit-mangle.s
  group: GRPSERIAL
test_udlit-mangle_6874:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-mangle.C'
    sources:
      binary: udlit-mangle.s
  group: GRPSERIAL
test_udlit-member-neg_3116:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-member-neg.C'
    sources:
      binary: udlit-member-neg.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_Bar\'' was not
          declared in this scope")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be a non-member
          function")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be a non-member
          function")[^\n]*\n?)+'
test_udlit-member-neg_3117:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-member-neg.C'
    sources:
      binary: udlit-member-neg.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_Bar\'' was not
          declared in this scope")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be a non-member
          function")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be a non-member
          function")[^\n]*\n?)+'
test_udlit-member-neg_6875:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-member-neg.C'
    sources:
      binary: udlit-member-neg.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_Bar\'' was not
          declared in this scope")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be a non-member
          function")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be a non-member
          function")[^\n]*\n?)+'
test_udlit-member-neg_6876:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-member-neg.C'
    sources:
      binary: udlit-member-neg.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("_Bar\'' was not
          declared in this scope")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          character literal operator")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be a non-member
          function")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be a non-member
          function")[^\n]*\n?)+'
test_udlit-namespace-ambiguous_3118:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-namespace-ambiguous.C'
    sources:
      binary: udlit-namespace-ambiguous.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("call of overloaded
          | is ambiguous")[^\n]*\n?)+'
test_udlit-namespace-ambiguous_3119:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-namespace-ambiguous.C'
    sources:
      binary: udlit-namespace-ambiguous.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("call of overloaded
          | is ambiguous")[^\n]*\n?)+'
test_udlit-namespace-ambiguous_6877:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-namespace-ambiguous.C'
    sources:
      binary: udlit-namespace-ambiguous.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("call of overloaded
          | is ambiguous")[^\n]*\n?)+'
test_udlit-namespace-ambiguous_6878:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-namespace-ambiguous.C'
    sources:
      binary: udlit-namespace-ambiguous.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("call of overloaded
          | is ambiguous")[^\n]*\n?)+'
test_udlit-namespace-using-directive_3120:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-namespace-using-directive.C'
    sources:
      binary: udlit-namespace-using-directive.s
  group: GRPSERIAL
test_udlit-namespace-using-directive_3121:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-namespace-using-directive.C'
    sources:
      binary: udlit-namespace-using-directive.s
  group: GRPSERIAL
test_udlit-namespace-using-directive_6879:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-namespace-using-directive.C'
    sources:
      binary: udlit-namespace-using-directive.s
  group: GRPSERIAL
test_udlit-namespace-using-directive_6880:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-namespace-using-directive.C'
    sources:
      binary: udlit-namespace-using-directive.s
  group: GRPSERIAL
test_udlit-namespace_3122:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-namespace.C'
    sources:
      binary: ./udlit-namespace.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-namespace_3123:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-namespace.C'
    sources:
      binary: ./udlit-namespace.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-namespace_6881:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-namespace.C'
    sources:
      binary: ./udlit-namespace.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-namespace_6882:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-namespace.C'
    sources:
      binary: ./udlit-namespace.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-nofunc-neg_3124:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nofunc-neg.C'
    sources:
      binary: udlit-nofunc-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("as non-function")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("as non-function")[^\n]*\n?)+'
test_udlit-nofunc-neg_3125:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nofunc-neg.C'
    sources:
      binary: udlit-nofunc-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("as non-function")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("as non-function")[^\n]*\n?)+'
test_udlit-nofunc-neg_6883:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nofunc-neg.C'
    sources:
      binary: udlit-nofunc-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("as non-function")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("as non-function")[^\n]*\n?)+'
test_udlit-nofunc-neg_6884:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nofunc-neg.C'
    sources:
      binary: udlit-nofunc-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("as non-function")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("as non-function")[^\n]*\n?)+'
test_udlit-nonempty-str-neg_3126:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nonempty-str-neg.C'
    sources:
      binary: udlit-nonempty-str-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected empty
          string after")[^\n]*\n?)+'
test_udlit-nonempty-str-neg_3127:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nonempty-str-neg.C'
    sources:
      binary: udlit-nonempty-str-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected empty
          string after")[^\n]*\n?)+'
test_udlit-nonempty-str-neg_6885:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nonempty-str-neg.C'
    sources:
      binary: udlit-nonempty-str-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected empty
          string after")[^\n]*\n?)+'
test_udlit-nonempty-str-neg_6886:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nonempty-str-neg.C'
    sources:
      binary: udlit-nonempty-str-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected empty
          string after")[^\n]*\n?)+'
test_udlit-nospace-neg_3128:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nospace-neg.C'
    sources:
      binary: udlit-nospace-neg.s
  group: GRPSERIAL
test_udlit-nospace-neg_3129:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nospace-neg.C'
    sources:
      binary: udlit-nospace-neg.s
  group: GRPSERIAL
test_udlit-nospace-neg_6887:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nospace-neg.C'
    sources:
      binary: udlit-nospace-neg.s
  group: GRPSERIAL
test_udlit-nospace-neg_6888:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nospace-neg.C'
    sources:
      binary: udlit-nospace-neg.s
  group: GRPSERIAL
test_udlit-nosuffix-neg_3130:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nosuffix-neg.C'
    sources:
      binary: udlit-nosuffix-neg.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected suffix
          identifier")[^\n]*\n?)+'
test_udlit-nosuffix-neg_3131:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nosuffix-neg.C'
    sources:
      binary: udlit-nosuffix-neg.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected suffix
          identifier")[^\n]*\n?)+'
test_udlit-nosuffix-neg_6889:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nosuffix-neg.C'
    sources:
      binary: udlit-nosuffix-neg.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected suffix
          identifier")[^\n]*\n?)+'
test_udlit-nosuffix-neg_6890:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nosuffix-neg.C'
    sources:
      binary: udlit-nosuffix-neg.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected suffix
          identifier")[^\n]*\n?)+'
test_udlit-nounder-neg_3132:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nounder-neg.C'
    sources:
      binary: udlit-nounder-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
test_udlit-nounder-neg_3133:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nounder-neg.C'
    sources:
      binary: udlit-nounder-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
test_udlit-nounder-neg_6891:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nounder-neg.C'
    sources:
      binary: udlit-nounder-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
test_udlit-nounder-neg_6892:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-nounder-neg.C'
    sources:
      binary: udlit-nounder-neg.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
test_udlit-operator-neg_3134:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-operator-neg.C'
    sources:
      binary: udlit-operator-neg.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|conflicts with raw literal operator")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("raw literal operator|conflicts
          with literal operator template")[^\n]*\n?)+'
test_udlit-operator-neg_3135:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-operator-neg.C'
    sources:
      binary: udlit-operator-neg.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|conflicts with raw literal operator")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("raw literal operator|conflicts
          with literal operator template")[^\n]*\n?)+'
test_udlit-operator-neg_6893:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-operator-neg.C'
    sources:
      binary: udlit-operator-neg.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|conflicts with raw literal operator")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("raw literal operator|conflicts
          with literal operator template")[^\n]*\n?)+'
test_udlit-operator-neg_6894:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-operator-neg.C'
    sources:
      binary: udlit-operator-neg.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|conflicts with raw literal operator")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("raw literal operator|conflicts
          with literal operator template")[^\n]*\n?)+'
test_udlit-overflow-neg_3136:
  build:
    cflags: "-std=gnu++11 -Woverflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-overflow-neg.C'
    sources:
      binary: udlit-overflow-neg.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("integer literal exceeds
          range of ")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("floating literal exceeds
          range of ")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("floating literal truncated
          to zero")[^\n]*\n?)+'
test_udlit-overflow-neg_3137:
  build:
    cflags: "-std=gnu++14 -Woverflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-overflow-neg.C'
    sources:
      binary: udlit-overflow-neg.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("integer literal exceeds
          range of ")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("floating literal exceeds
          range of ")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("floating literal truncated
          to zero")[^\n]*\n?)+'
test_udlit-overflow-neg_6895:
  build:
    cflags: "-std=gnu++11 -Woverflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-overflow-neg.C'
    sources:
      binary: udlit-overflow-neg.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("integer literal exceeds
          range of ")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("floating literal exceeds
          range of ")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("floating literal truncated
          to zero")[^\n]*\n?)+'
test_udlit-overflow-neg_6896:
  build:
    cflags: "-std=gnu++14 -Woverflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-overflow-neg.C'
    sources:
      binary: udlit-overflow-neg.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("integer literal exceeds
          range of ")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("floating literal exceeds
          range of ")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("floating literal truncated
          to zero")[^\n]*\n?)+'
test_udlit-overflow_3138:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-overflow.C'
    sources:
      binary: udlit-overflow.s
  group: GRPSERIAL
test_udlit-overflow_3139:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-overflow.C'
    sources:
      binary: udlit-overflow.s
  group: GRPSERIAL
test_udlit-overflow_6897:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-overflow.C'
    sources:
      binary: udlit-overflow.s
  group: GRPSERIAL
test_udlit-overflow_6898:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-overflow.C'
    sources:
      binary: udlit-overflow.s
  group: GRPSERIAL
test_udlit-preproc-neg_3140:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-preproc-neg.C'
    sources:
      binary: udlit-preproc-neg.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("user-defined literal
          in preprocessor expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("user-defined literal
          in preprocessor expression")[^\n]*\n?)+'
test_udlit-preproc-neg_3141:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-preproc-neg.C'
    sources:
      binary: udlit-preproc-neg.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("user-defined literal
          in preprocessor expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("user-defined literal
          in preprocessor expression")[^\n]*\n?)+'
test_udlit-preproc-neg_6899:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-preproc-neg.C'
    sources:
      binary: udlit-preproc-neg.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("user-defined literal
          in preprocessor expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("user-defined literal
          in preprocessor expression")[^\n]*\n?)+'
test_udlit-preproc-neg_6900:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-preproc-neg.C'
    sources:
      binary: udlit-preproc-neg.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("user-defined literal
          in preprocessor expression")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("user-defined literal
          in preprocessor expression")[^\n]*\n?)+'
test_udlit-raw-length_3142:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-length.C'
    sources:
      binary: udlit-raw-length.s
  group: GRPSERIAL
test_udlit-raw-length_3143:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-length.C'
    sources:
      binary: udlit-raw-length.s
  group: GRPSERIAL
test_udlit-raw-length_6901:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-length.C'
    sources:
      binary: udlit-raw-length.s
  group: GRPSERIAL
test_udlit-raw-length_6902:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-length.C'
    sources:
      binary: udlit-raw-length.s
  group: GRPSERIAL
test_udlit-raw-op-string-neg_3144:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-op-string-neg.C'
    sources:
      binary: udlit-raw-op-string-neg.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator")[^\n]*\n?)+'
test_udlit-raw-op-string-neg_3145:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-op-string-neg.C'
    sources:
      binary: udlit-raw-op-string-neg.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator")[^\n]*\n?)+'
test_udlit-raw-op-string-neg_6903:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-op-string-neg.C'
    sources:
      binary: udlit-raw-op-string-neg.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator")[^\n]*\n?)+'
test_udlit-raw-op-string-neg_6904:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-op-string-neg.C'
    sources:
      binary: udlit-raw-op-string-neg.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unable to find
          string literal operator")[^\n]*\n?)+'
test_udlit-raw-op_3146:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-op.C'
    sources:
      binary: ./udlit-raw-op.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-raw-op_3147:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-op.C'
    sources:
      binary: ./udlit-raw-op.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-raw-op_6905:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-op.C'
    sources:
      binary: ./udlit-raw-op.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-raw-op_6906:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-op.C'
    sources:
      binary: ./udlit-raw-op.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-raw-str_3148:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-str.C'
    sources:
      binary: udlit-raw-str.s
  group: GRPSERIAL
test_udlit-raw-str_3149:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-str.C'
    sources:
      binary: udlit-raw-str.s
  group: GRPSERIAL
test_udlit-raw-str_6907:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-str.C'
    sources:
      binary: udlit-raw-str.s
  group: GRPSERIAL
test_udlit-raw-str_6908:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-raw-str.C'
    sources:
      binary: udlit-raw-str.s
  group: GRPSERIAL
test_udlit-resolve_3150:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-resolve.C'
    sources:
      binary: ./udlit-resolve.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-resolve_3151:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-resolve.C'
    sources:
      binary: ./udlit-resolve.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-resolve_6909:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-resolve.C'
    sources:
      binary: ./udlit-resolve.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-resolve_6910:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-resolve.C'
    sources:
      binary: ./udlit-resolve.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-sfinae-neg_3152:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-sfinae-neg.C'
    sources:
      binary: udlit-sfinae-neg.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type named|in")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type named|in")[^\n]*\n?)+'
test_udlit-sfinae-neg_3153:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-sfinae-neg.C'
    sources:
      binary: udlit-sfinae-neg.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type named|in")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type named|in")[^\n]*\n?)+'
test_udlit-sfinae-neg_6911:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-sfinae-neg.C'
    sources:
      binary: udlit-sfinae-neg.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type named|in")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type named|in")[^\n]*\n?)+'
test_udlit-sfinae-neg_6912:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-sfinae-neg.C'
    sources:
      binary: udlit-sfinae-neg.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type named|in")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching function
          for call to")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type named|in")[^\n]*\n?)+'
test_udlit-sfinae_3154:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-sfinae.C'
    sources:
      binary: ./udlit-sfinae.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-sfinae_3155:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-sfinae.C'
    sources:
      binary: ./udlit-sfinae.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-sfinae_6913:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-sfinae.C'
    sources:
      binary: ./udlit-sfinae.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-sfinae_6914:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-sfinae.C'
    sources:
      binary: ./udlit-sfinae.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-shadow-neg_3156:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-shadow-neg.C'
    sources:
      binary: udlit-shadow-neg.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("floating point suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("floating point suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
test_udlit-shadow-neg_3157:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-shadow-neg.C'
    sources:
      binary: udlit-shadow-neg.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("floating point suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("floating point suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
test_udlit-shadow-neg_6915:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-shadow-neg.C'
    sources:
      binary: udlit-shadow-neg.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("floating point suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("floating point suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
test_udlit-shadow-neg_6916:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-shadow-neg.C'
    sources:
      binary: udlit-shadow-neg.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("floating point suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("literal operator suffixes
          not preceded by|are reserved for future standardization")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("floating point suffix|shadowed
          by implementation")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("integer suffix|shadowed
          by implementation")[^\n]*\n?)+'
test_udlit-string-length_3158:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-string-length.C'
    sources:
      binary: udlit-string-length.s
  group: GRPSERIAL
test_udlit-string-length_3159:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-string-length.C'
    sources:
      binary: udlit-string-length.s
  group: GRPSERIAL
test_udlit-string-length_6917:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-string-length.C'
    sources:
      binary: udlit-string-length.s
  group: GRPSERIAL
test_udlit-string-length_6918:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-string-length.C'
    sources:
      binary: udlit-string-length.s
  group: GRPSERIAL
test_udlit-string-literal_3160:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-string-literal.C'
    sources:
      binary: udlit-string-literal.s
  group: GRPSERIAL
test_udlit-string-literal_3161:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-string-literal.C'
    sources:
      binary: udlit-string-literal.s
  group: GRPSERIAL
test_udlit-string-literal_6919:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-string-literal.C'
    sources:
      binary: udlit-string-literal.s
  group: GRPSERIAL
test_udlit-string-literal_6920:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-string-literal.C'
    sources:
      binary: udlit-string-literal.s
  group: GRPSERIAL
test_udlit-suffix-neg_3162:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-suffix-neg.C'
    sources:
      binary: udlit-suffix-neg.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected suffix
          identifier")[^\n]*\n?)+'
test_udlit-suffix-neg_3163:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-suffix-neg.C'
    sources:
      binary: udlit-suffix-neg.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected suffix
          identifier")[^\n]*\n?)+'
test_udlit-suffix-neg_6921:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-suffix-neg.C'
    sources:
      binary: udlit-suffix-neg.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected suffix
          identifier")[^\n]*\n?)+'
test_udlit-suffix-neg_6922:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-suffix-neg.C'
    sources:
      binary: udlit-suffix-neg.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected suffix
          identifier")[^\n]*\n?)+'
test_udlit-systemheader_3164:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-systemheader.C'
    sources:
      binary: udlit-systemheader.s
  group: GRPSERIAL
test_udlit-systemheader_3165:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-systemheader.C'
    sources:
      binary: udlit-systemheader.s
  group: GRPSERIAL
test_udlit-systemheader_6923:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-systemheader.C'
    sources:
      binary: udlit-systemheader.s
  group: GRPSERIAL
test_udlit-systemheader_6924:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-systemheader.C'
    sources:
      binary: udlit-systemheader.s
  group: GRPSERIAL
test_udlit-template_3166:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-template.C'
    sources:
      binary: ./udlit-template.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-template_3167:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-template.C'
    sources:
      binary: ./udlit-template.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-template_6925:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-template.C'
    sources:
      binary: ./udlit-template.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-template_6926:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-template.C'
    sources:
      binary: ./udlit-template.exe
  group: GRPSERIAL
  run:
    cwd: .
test_udlit-tmpl-arg-neg2_3170:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-arg-neg2.C'
    sources:
      binary: udlit-tmpl-arg-neg2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''T\'' has not
          been declared")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid parameter
          list")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''T\'' has not
          been declared")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid parameter
          list")[^\n]*\n?)+'
test_udlit-tmpl-arg-neg2_3171:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-arg-neg2.C'
    sources:
      binary: udlit-tmpl-arg-neg2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''T\'' has not
          been declared")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid parameter
          list")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''T\'' has not
          been declared")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid parameter
          list")[^\n]*\n?)+'
test_udlit-tmpl-arg-neg2_6929:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-arg-neg2.C'
    sources:
      binary: udlit-tmpl-arg-neg2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''T\'' has not
          been declared")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid parameter
          list")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''T\'' has not
          been declared")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid parameter
          list")[^\n]*\n?)+'
test_udlit-tmpl-arg-neg2_6930:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-arg-neg2.C'
    sources:
      binary: udlit-tmpl-arg-neg2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''T\'' has not
          been declared")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid parameter
          list")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''T\'' has not
          been declared")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid parameter
          list")[^\n]*\n?)+'
test_udlit-tmpl-arg-neg_3168:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-arg-neg.C'
    sources:
      binary: udlit-tmpl-arg-neg.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
test_udlit-tmpl-arg-neg_3169:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-arg-neg.C'
    sources:
      binary: udlit-tmpl-arg-neg.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
test_udlit-tmpl-arg-neg_6927:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-arg-neg.C'
    sources:
      binary: udlit-tmpl-arg-neg.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
test_udlit-tmpl-arg-neg_6928:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-arg-neg.C'
    sources:
      binary: udlit-tmpl-arg-neg.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has invalid argument
          list")[^\n]*\n?)+'
test_udlit-tmpl-arg_3172:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-arg.C'
    sources:
      binary: udlit-tmpl-arg.s
  group: GRPSERIAL
test_udlit-tmpl-arg_3173:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-arg.C'
    sources:
      binary: udlit-tmpl-arg.s
  group: GRPSERIAL
test_udlit-tmpl-arg_6931:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-arg.C'
    sources:
      binary: udlit-tmpl-arg.s
  group: GRPSERIAL
test_udlit-tmpl-arg_6932:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-arg.C'
    sources:
      binary: udlit-tmpl-arg.s
  group: GRPSERIAL
test_udlit-tmpl-parms-neg_3174:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-parms-neg.C'
    sources:
      binary: udlit-tmpl-parms-neg.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|has invalid parameter list")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|has invalid parameter list")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|has invalid parameter list")[^\n]*\n?)+'
test_udlit-tmpl-parms-neg_3175:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-parms-neg.C'
    sources:
      binary: udlit-tmpl-parms-neg.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|has invalid parameter list")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|has invalid parameter list")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|has invalid parameter list")[^\n]*\n?)+'
test_udlit-tmpl-parms-neg_6933:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-parms-neg.C'
    sources:
      binary: udlit-tmpl-parms-neg.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|has invalid parameter list")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|has invalid parameter list")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|has invalid parameter list")[^\n]*\n?)+'
test_udlit-tmpl-parms-neg_6934:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-parms-neg.C'
    sources:
      binary: udlit-tmpl-parms-neg.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|has invalid parameter list")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|has invalid parameter list")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("literal operator
          template|has invalid parameter list")[^\n]*\n?)+'
test_udlit-tmpl-parms_3176:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-parms.C'
    sources:
      binary: udlit-tmpl-parms.s
  group: GRPSERIAL
test_udlit-tmpl-parms_3177:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-parms.C'
    sources:
      binary: udlit-tmpl-parms.s
  group: GRPSERIAL
test_udlit-tmpl-parms_6935:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-parms.C'
    sources:
      binary: udlit-tmpl-parms.s
  group: GRPSERIAL
test_udlit-tmpl-parms_6936:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/udlit-tmpl-parms.C'
    sources:
      binary: udlit-tmpl-parms.s
  group: GRPSERIAL
test_union1_3178:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union1.C'
    sources:
      binary: union1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union member")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B\\\\(\\\\)")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B\\\\(const
          B&\\\\)")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union member")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::C\\\\(\\\\)")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::C\\\\(const
          C&\\\\)")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::~B")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::~B")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::~C")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::~C")[^\n]*\n?)+'
test_union1_3179:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union1.C'
    sources:
      binary: union1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union member")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B\\\\(\\\\)")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B\\\\(const
          B&\\\\)")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union member")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::C\\\\(\\\\)")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::C\\\\(const
          C&\\\\)")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::~B")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::~B")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::~C")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::~C")[^\n]*\n?)+'
test_union1_6937:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union1.C'
    sources:
      binary: union1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union member")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B\\\\(\\\\)")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B\\\\(const
          B&\\\\)")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union member")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::C\\\\(\\\\)")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::C\\\\(const
          C&\\\\)")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::~B")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::~B")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::~C")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::~C")[^\n]*\n?)+'
test_union1_6938:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union1.C'
    sources:
      binary: union1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union member")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B\\\\(\\\\)")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::B\\\\(const
          B&\\\\)")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union member")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::C\\\\(\\\\)")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::C\\\\(const
          C&\\\\)")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::~B")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("B::~B")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::~C")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("C::~C")[^\n]*\n?)+'
test_union2_3180:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union2.C'
    sources:
      binary: union2.s
  group: GRPSERIAL
test_union2_3181:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union2.C'
    sources:
      binary: union2.s
  group: GRPSERIAL
test_union2_6939:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union2.C'
    sources:
      binary: union2.s
  group: GRPSERIAL
test_union2_6940:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union2.C'
    sources:
      binary: union2.s
  group: GRPSERIAL
test_union3_3182:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union3.C'
    sources:
      binary: ./union3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_union3_3183:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union3.C'
    sources:
      binary: ./union3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_union3_6941:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union3.C'
    sources:
      binary: ./union3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_union3_6942:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union3.C'
    sources:
      binary: ./union3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_union4_3184:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union4.C'
    sources:
      binary: union4.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_union4_3185:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union4.C'
    sources:
      binary: union4.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_union4_6943:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union4.C'
    sources:
      binary: union4.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_union4_6944:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union4.C'
    sources:
      binary: union4.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_union5_3186:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union5.C'
    sources:
      binary: union5.s
  group: GRPSERIAL
test_union5_3187:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union5.C'
    sources:
      binary: union5.s
  group: GRPSERIAL
test_union5_6945:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union5.C'
    sources:
      binary: union5.s
  group: GRPSERIAL
test_union5_6946:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union5.C'
    sources:
      binary: union5.s
  group: GRPSERIAL
test_union6_3188:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union6.C'
    sources:
      binary: union6.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
test_union6_3189:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union6.C'
    sources:
      binary: union6.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
test_union6_6947:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union6.C'
    sources:
      binary: union6.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
test_union6_6948:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union6.C'
    sources:
      binary: union6.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have
          reference type")[^\n]*\n?)+'
test_union7_3190:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union7.C'
    sources:
      binary: union7.s
  group: GRPSERIAL
test_union7_3191:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union7.C'
    sources:
      binary: union7.s
  group: GRPSERIAL
test_union7_6949:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union7.C'
    sources:
      binary: union7.s
  group: GRPSERIAL
test_union7_6950:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union7.C'
    sources:
      binary: union7.s
  group: GRPSERIAL
test_union8_3192:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union8.C'
    sources:
      binary: union8.s
  group: GRPSERIAL
test_union8_3193:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union8.C'
    sources:
      binary: union8.s
  group: GRPSERIAL
test_union8_6951:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union8.C'
    sources:
      binary: union8.s
  group: GRPSERIAL
test_union8_6952:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/union8.C'
    sources:
      binary: union8.s
  group: GRPSERIAL
test_unnamed_refs_3194:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/unnamed_refs.C'
    sources:
      binary: unnamed_refs.s
  group: GRPSERIAL
test_unnamed_refs_3195:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/unnamed_refs.C'
    sources:
      binary: unnamed_refs.s
  group: GRPSERIAL
test_unnamed_refs_6953:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/unnamed_refs.C'
    sources:
      binary: unnamed_refs.s
  group: GRPSERIAL
test_unnamed_refs_6954:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/unnamed_refs.C'
    sources:
      binary: unnamed_refs.s
  group: GRPSERIAL
test_using-enum-1_3196:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/using-enum-1.C'
    sources:
      binary: using-enum-1.s
  group: GRPSERIAL
test_using-enum-1_3197:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/using-enum-1.C'
    sources:
      binary: using-enum-1.s
  group: GRPSERIAL
test_using-enum-1_6955:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/using-enum-1.C'
    sources:
      binary: using-enum-1.s
  group: GRPSERIAL
test_using-enum-1_6956:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/using-enum-1.C'
    sources:
      binary: using-enum-1.s
  group: GRPSERIAL
test_using-enum-2_3198:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/using-enum-2.C'
    sources:
      binary: using-enum-2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
test_using-enum-2_3199:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/using-enum-2.C'
    sources:
      binary: using-enum-2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
test_using-enum-2_6957:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/using-enum-2.C'
    sources:
      binary: using-enum-2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
test_using-enum-2_6958:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/using-enum-2.C'
    sources:
      binary: using-enum-2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a namespace
          or unscoped enum")[^\n]*\n?)+'
test_variadic-104_3200:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-104.C'
    sources:
      binary: variadic-104.s
  group: GRPSERIAL
test_variadic-104_3201:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-104.C'
    sources:
      binary: variadic-104.s
  group: GRPSERIAL
test_variadic-104_6959:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-104.C'
    sources:
      binary: variadic-104.s
  group: GRPSERIAL
test_variadic-104_6960:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-104.C'
    sources:
      binary: variadic-104.s
  group: GRPSERIAL
test_variadic-alias1_3202:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-alias1.C'
    sources:
      binary: variadic-alias1.s
  group: GRPSERIAL
test_variadic-alias1_3203:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-alias1.C'
    sources:
      binary: variadic-alias1.s
  group: GRPSERIAL
test_variadic-alias1_6961:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-alias1.C'
    sources:
      binary: variadic-alias1.s
  group: GRPSERIAL
test_variadic-alias1_6962:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-alias1.C'
    sources:
      binary: variadic-alias1.s
  group: GRPSERIAL
test_variadic-bind_3204:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-bind.C'
    sources:
      binary: ./variadic-bind.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-bind_3205:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-bind.C'
    sources:
      binary: ./variadic-bind.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-bind_6963:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-bind.C'
    sources:
      binary: ./variadic-bind.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-bind_6964:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-bind.C'
    sources:
      binary: ./variadic-bind.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-crash1_3206:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-crash1.C'
    sources:
      binary: variadic-crash1.s
  group: GRPSERIAL
test_variadic-crash1_3207:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-crash1.C'
    sources:
      binary: variadic-crash1.s
  group: GRPSERIAL
test_variadic-crash1_6965:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-crash1.C'
    sources:
      binary: variadic-crash1.s
  group: GRPSERIAL
test_variadic-crash1_6966:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-crash1.C'
    sources:
      binary: variadic-crash1.s
  group: GRPSERIAL
test_variadic-crash2_3208:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-crash2.C'
    sources:
      binary: variadic-crash2.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded with \''...\''")[^\n]*\n?)+'
test_variadic-crash2_3209:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-crash2.C'
    sources:
      binary: variadic-crash2.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded with \''...\''")[^\n]*\n?)+'
test_variadic-crash2_6967:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-crash2.C'
    sources:
      binary: variadic-crash2.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded with \''...\''")[^\n]*\n?)+'
test_variadic-crash2_6968:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-crash2.C'
    sources:
      binary: variadic-crash2.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded with \''...\''")[^\n]*\n?)+'
test_variadic-default_3210:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-default.C'
    sources:
      binary: variadic-default.s
  group: GRPSERIAL
test_variadic-default_3211:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-default.C'
    sources:
      binary: variadic-default.s
  group: GRPSERIAL
test_variadic-default_6969:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-default.C'
    sources:
      binary: variadic-default.s
  group: GRPSERIAL
test_variadic-default_6970:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-default.C'
    sources:
      binary: variadic-default.s
  group: GRPSERIAL
test_variadic-diag1_3212:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-diag1.C'
    sources:
      binary: variadic-diag1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-diag1_3213:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-diag1.C'
    sources:
      binary: variadic-diag1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-diag1_6971:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-diag1.C'
    sources:
      binary: variadic-diag1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-diag1_6972:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-diag1.C'
    sources:
      binary: variadic-diag1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-ex10_3216:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex10.C'
    sources:
      binary: variadic-ex10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch")[^\n]*\n?)+'
test_variadic-ex10_3217:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex10.C'
    sources:
      binary: variadic-ex10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch")[^\n]*\n?)+'
test_variadic-ex10_6975:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex10.C'
    sources:
      binary: variadic-ex10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch")[^\n]*\n?)+'
test_variadic-ex10_6976:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex10.C'
    sources:
      binary: variadic-ex10.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch")[^\n]*\n?)+'
test_variadic-ex11_3218:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex11.C'
    sources:
      binary: variadic-ex11.s
  group: GRPSERIAL
test_variadic-ex11_3219:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex11.C'
    sources:
      binary: variadic-ex11.s
  group: GRPSERIAL
test_variadic-ex11_6977:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex11.C'
    sources:
      binary: variadic-ex11.s
  group: GRPSERIAL
test_variadic-ex11_6978:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex11.C'
    sources:
      binary: variadic-ex11.s
  group: GRPSERIAL
test_variadic-ex12_3220:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex12.C'
    sources:
      binary: variadic-ex12.s
  group: GRPSERIAL
test_variadic-ex12_3221:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex12.C'
    sources:
      binary: variadic-ex12.s
  group: GRPSERIAL
test_variadic-ex12_6979:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex12.C'
    sources:
      binary: variadic-ex12.s
  group: GRPSERIAL
test_variadic-ex12_6980:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex12.C'
    sources:
      binary: variadic-ex12.s
  group: GRPSERIAL
test_variadic-ex13_3222:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex13.C'
    sources:
      binary: variadic-ex13.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("contains no argument
          packs")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic-ex13_3223:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex13.C'
    sources:
      binary: variadic-ex13.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("contains no argument
          packs")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic-ex13_6981:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex13.C'
    sources:
      binary: variadic-ex13.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("contains no argument
          packs")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic-ex13_6982:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex13.C'
    sources:
      binary: variadic-ex13.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("contains no argument
          packs")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic-ex14_3224:
  build:
    cflags: "-std=gnu++11 -fno-new-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex14.C'
    sources:
      binary: variadic-ex14.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch")[^\n]*\n?)+'
test_variadic-ex14_3225:
  build:
    cflags: "-std=gnu++14 -fno-new-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex14.C'
    sources:
      binary: variadic-ex14.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch")[^\n]*\n?)+'
test_variadic-ex14_6983:
  build:
    cflags: "-std=gnu++11 -fno-new-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex14.C'
    sources:
      binary: variadic-ex14.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch")[^\n]*\n?)+'
test_variadic-ex14_6984:
  build:
    cflags: "-std=gnu++14 -fno-new-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex14.C'
    sources:
      binary: variadic-ex14.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch")[^\n]*\n?)+'
test_variadic-ex14a_3226:
  build:
    cflags: "-std=gnu++98 -fnew-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex14a.C'
    sources:
      binary: variadic-ex14a.s
  group: GRPSERIAL
test_variadic-ex14a_3227:
  build:
    cflags: "-std=gnu++11 -fnew-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex14a.C'
    sources:
      binary: variadic-ex14a.s
  group: GRPSERIAL
test_variadic-ex14a_3228:
  build:
    cflags: "-std=gnu++14 -fnew-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex14a.C'
    sources:
      binary: variadic-ex14a.s
  group: GRPSERIAL
test_variadic-ex14a_6985:
  build:
    cflags: "-std=gnu++98 -fnew-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex14a.C'
    sources:
      binary: variadic-ex14a.s
  group: GRPSERIAL
test_variadic-ex14a_6986:
  build:
    cflags: "-std=gnu++11 -fnew-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex14a.C'
    sources:
      binary: variadic-ex14a.s
  group: GRPSERIAL
test_variadic-ex14a_6987:
  build:
    cflags: "-std=gnu++14 -fnew-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex14a.C'
    sources:
      binary: variadic-ex14a.s
  group: GRPSERIAL
test_variadic-ex1_3214:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex1.C'
    sources:
      binary: variadic-ex1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-ex1_3215:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex1.C'
    sources:
      binary: variadic-ex1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-ex1_6973:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex1.C'
    sources:
      binary: variadic-ex1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-ex1_6974:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex1.C'
    sources:
      binary: variadic-ex1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-ex2_3229:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex2.C'
    sources:
      binary: variadic-ex2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
test_variadic-ex2_3230:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex2.C'
    sources:
      binary: variadic-ex2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
test_variadic-ex2_6988:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex2.C'
    sources:
      binary: variadic-ex2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
test_variadic-ex2_6989:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex2.C'
    sources:
      binary: variadic-ex2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
test_variadic-ex3_3231:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex3.C'
    sources:
      binary: variadic-ex3.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_variadic-ex3_3232:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex3.C'
    sources:
      binary: variadic-ex3.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_variadic-ex3_6990:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex3.C'
    sources:
      binary: variadic-ex3.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_variadic-ex3_6991:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex3.C'
    sources:
      binary: variadic-ex3.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_variadic-ex4_3233:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex4.C'
    sources:
      binary: variadic-ex4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_variadic-ex4_3234:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex4.C'
    sources:
      binary: variadic-ex4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_variadic-ex4_6992:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex4.C'
    sources:
      binary: variadic-ex4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_variadic-ex4_6993:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex4.C'
    sources:
      binary: variadic-ex4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_variadic-ex5_3235:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex5.C'
    sources:
      binary: variadic-ex5.s
  group: GRPSERIAL
test_variadic-ex5_3236:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex5.C'
    sources:
      binary: variadic-ex5.s
  group: GRPSERIAL
test_variadic-ex5_6994:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex5.C'
    sources:
      binary: variadic-ex5.s
  group: GRPSERIAL
test_variadic-ex5_6995:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex5.C'
    sources:
      binary: variadic-ex5.s
  group: GRPSERIAL
test_variadic-ex6_3237:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex6.C'
    sources:
      binary: variadic-ex6.s
  group: GRPSERIAL
test_variadic-ex6_3238:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex6.C'
    sources:
      binary: variadic-ex6.s
  group: GRPSERIAL
test_variadic-ex6_6996:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex6.C'
    sources:
      binary: variadic-ex6.s
  group: GRPSERIAL
test_variadic-ex6_6997:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex6.C'
    sources:
      binary: variadic-ex6.s
  group: GRPSERIAL
test_variadic-ex7_3239:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex7.C'
    sources:
      binary: variadic-ex7.s
  group: GRPSERIAL
test_variadic-ex7_3240:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex7.C'
    sources:
      binary: variadic-ex7.s
  group: GRPSERIAL
test_variadic-ex7_6998:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex7.C'
    sources:
      binary: variadic-ex7.s
  group: GRPSERIAL
test_variadic-ex7_6999:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex7.C'
    sources:
      binary: variadic-ex7.s
  group: GRPSERIAL
test_variadic-ex8_3241:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex8.C'
    sources:
      binary: variadic-ex8.s
  group: GRPSERIAL
test_variadic-ex8_3242:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex8.C'
    sources:
      binary: variadic-ex8.s
  group: GRPSERIAL
test_variadic-ex8_7000:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex8.C'
    sources:
      binary: variadic-ex8.s
  group: GRPSERIAL
test_variadic-ex8_7001:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex8.C'
    sources:
      binary: variadic-ex8.s
  group: GRPSERIAL
test_variadic-ex9_3243:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex9.C'
    sources:
      binary: variadic-ex9.s
  group: GRPSERIAL
test_variadic-ex9_3244:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex9.C'
    sources:
      binary: variadic-ex9.s
  group: GRPSERIAL
test_variadic-ex9_7002:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex9.C'
    sources:
      binary: variadic-ex9.s
  group: GRPSERIAL
test_variadic-ex9_7003:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ex9.C'
    sources:
      binary: variadic-ex9.s
  group: GRPSERIAL
test_variadic-explicit1_3245:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-explicit1.C'
    sources:
      binary: variadic-explicit1.s
  group: GRPSERIAL
test_variadic-explicit1_3246:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-explicit1.C'
    sources:
      binary: variadic-explicit1.s
  group: GRPSERIAL
test_variadic-explicit1_7004:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-explicit1.C'
    sources:
      binary: variadic-explicit1.s
  group: GRPSERIAL
test_variadic-explicit1_7005:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-explicit1.C'
    sources:
      binary: variadic-explicit1.s
  group: GRPSERIAL
test_variadic-explicit2_3247:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-explicit2.C'
    sources:
      binary: variadic-explicit2.s
  group: GRPSERIAL
test_variadic-explicit2_3248:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-explicit2.C'
    sources:
      binary: variadic-explicit2.s
  group: GRPSERIAL
test_variadic-explicit2_7006:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-explicit2.C'
    sources:
      binary: variadic-explicit2.s
  group: GRPSERIAL
test_variadic-explicit2_7007:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-explicit2.C'
    sources:
      binary: variadic-explicit2.s
  group: GRPSERIAL
test_variadic-function_3249:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-function.C'
    sources:
      binary: ./variadic-function.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-function_3250:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-function.C'
    sources:
      binary: ./variadic-function.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-function_7008:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-function.C'
    sources:
      binary: ./variadic-function.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-function_7009:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-function.C'
    sources:
      binary: ./variadic-function.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-init2_3253:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-init2.C'
    sources:
      binary: variadic-init2.s
  group: GRPSERIAL
test_variadic-init2_3254:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-init2.C'
    sources:
      binary: variadic-init2.s
  group: GRPSERIAL
test_variadic-init2_7012:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-init2.C'
    sources:
      binary: variadic-init2.s
  group: GRPSERIAL
test_variadic-init2_7013:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-init2.C'
    sources:
      binary: variadic-init2.s
  group: GRPSERIAL
test_variadic-init_3251:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-init.C'
    sources:
      binary: ./variadic-init.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-init_3252:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-init.C'
    sources:
      binary: ./variadic-init.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-init_7010:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-init.C'
    sources:
      binary: ./variadic-init.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-init_7011:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-init.C'
    sources:
      binary: ./variadic-init.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-lambda_3255:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-lambda.C'
    sources:
      binary: variadic-lambda.s
  group: GRPSERIAL
test_variadic-lambda_3256:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-lambda.C'
    sources:
      binary: variadic-lambda.s
  group: GRPSERIAL
test_variadic-lambda_7014:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-lambda.C'
    sources:
      binary: variadic-lambda.s
  group: GRPSERIAL
test_variadic-lambda_7015:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-lambda.C'
    sources:
      binary: variadic-lambda.s
  group: GRPSERIAL
test_variadic-mangle1_3257:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle1.C'
    sources:
      binary: variadic-mangle1.s
  group: GRPSERIAL
test_variadic-mangle1_3258:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle1.C'
    sources:
      binary: variadic-mangle1.s
  group: GRPSERIAL
test_variadic-mangle1_7016:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle1.C'
    sources:
      binary: variadic-mangle1.s
  group: GRPSERIAL
test_variadic-mangle1_7017:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle1.C'
    sources:
      binary: variadic-mangle1.s
  group: GRPSERIAL
test_variadic-mangle1a_3259:
  build:
    cflags: "-std=gnu++11 -fabi-version=9 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle1a.C'
    sources:
      binary: variadic-mangle1a.s
  group: GRPSERIAL
test_variadic-mangle1a_3260:
  build:
    cflags: "-std=gnu++14 -fabi-version=9 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle1a.C'
    sources:
      binary: variadic-mangle1a.s
  group: GRPSERIAL
test_variadic-mangle1a_7018:
  build:
    cflags: "-std=gnu++11 -fabi-version=9 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle1a.C'
    sources:
      binary: variadic-mangle1a.s
  group: GRPSERIAL
test_variadic-mangle1a_7019:
  build:
    cflags: "-std=gnu++14 -fabi-version=9 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle1a.C'
    sources:
      binary: variadic-mangle1a.s
  group: GRPSERIAL
test_variadic-mangle2_3261:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle2.C'
    sources:
      binary: variadic-mangle2.s
  group: GRPSERIAL
test_variadic-mangle2_3262:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle2.C'
    sources:
      binary: variadic-mangle2.s
  group: GRPSERIAL
test_variadic-mangle2_7020:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle2.C'
    sources:
      binary: variadic-mangle2.s
  group: GRPSERIAL
test_variadic-mangle2_7021:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle2.C'
    sources:
      binary: variadic-mangle2.s
  group: GRPSERIAL
test_variadic-mangle2a_3263:
  build:
    cflags: "-std=gnu++11 -fabi-version=9 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle2a.C'
    sources:
      binary: variadic-mangle2a.s
  group: GRPSERIAL
test_variadic-mangle2a_3264:
  build:
    cflags: "-std=gnu++14 -fabi-version=9 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle2a.C'
    sources:
      binary: variadic-mangle2a.s
  group: GRPSERIAL
test_variadic-mangle2a_7022:
  build:
    cflags: "-std=gnu++11 -fabi-version=9 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle2a.C'
    sources:
      binary: variadic-mangle2a.s
  group: GRPSERIAL
test_variadic-mangle2a_7023:
  build:
    cflags: "-std=gnu++14 -fabi-version=9 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle2a.C'
    sources:
      binary: variadic-mangle2a.s
  group: GRPSERIAL
test_variadic-mangle3_3265:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle3.C'
    sources:
      binary: variadic-mangle3.s
  group: GRPSERIAL
test_variadic-mangle3_3266:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle3.C'
    sources:
      binary: variadic-mangle3.s
  group: GRPSERIAL
test_variadic-mangle3_7024:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle3.C'
    sources:
      binary: variadic-mangle3.s
  group: GRPSERIAL
test_variadic-mangle3_7025:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle3.C'
    sources:
      binary: variadic-mangle3.s
  group: GRPSERIAL
test_variadic-mangle3a_3267:
  build:
    cflags: "-std=gnu++11 -fabi-version=9 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle3a.C'
    sources:
      binary: variadic-mangle3a.s
  group: GRPSERIAL
test_variadic-mangle3a_3268:
  build:
    cflags: "-std=gnu++14 -fabi-version=9 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle3a.C'
    sources:
      binary: variadic-mangle3a.s
  group: GRPSERIAL
test_variadic-mangle3a_7026:
  build:
    cflags: "-std=gnu++11 -fabi-version=9 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle3a.C'
    sources:
      binary: variadic-mangle3a.s
  group: GRPSERIAL
test_variadic-mangle3a_7027:
  build:
    cflags: "-std=gnu++14 -fabi-version=9 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mangle3a.C'
    sources:
      binary: variadic-mangle3a.s
  group: GRPSERIAL
test_variadic-mem_fn2_3271:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mem_fn2.C'
    sources:
      binary: variadic-mem_fn2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-mem_fn2_3272:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mem_fn2.C'
    sources:
      binary: variadic-mem_fn2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-mem_fn2_7030:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mem_fn2.C'
    sources:
      binary: variadic-mem_fn2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-mem_fn2_7031:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mem_fn2.C'
    sources:
      binary: variadic-mem_fn2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-mem_fn_3269:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mem_fn.C'
    sources:
      binary: ./variadic-mem_fn.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-mem_fn_3270:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mem_fn.C'
    sources:
      binary: ./variadic-mem_fn.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-mem_fn_7028:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mem_fn.C'
    sources:
      binary: ./variadic-mem_fn.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-mem_fn_7029:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-mem_fn.C'
    sources:
      binary: ./variadic-mem_fn.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-nested1_3273:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-nested1.C'
    sources:
      binary: variadic-nested1.s
  group: GRPSERIAL
test_variadic-nested1_3274:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-nested1.C'
    sources:
      binary: variadic-nested1.s
  group: GRPSERIAL
test_variadic-nested1_7032:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-nested1.C'
    sources:
      binary: variadic-nested1.s
  group: GRPSERIAL
test_variadic-nested1_7033:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-nested1.C'
    sources:
      binary: variadic-nested1.s
  group: GRPSERIAL
test_variadic-new2_3277:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-new2.C'
    sources:
      binary: ./variadic-new2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-new2_3278:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-new2.C'
    sources:
      binary: ./variadic-new2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-new2_7036:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-new2.C'
    sources:
      binary: ./variadic-new2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-new2_7037:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-new2.C'
    sources:
      binary: ./variadic-new2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-new_3275:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-new.C'
    sources:
      binary: ./variadic-new.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-new_3276:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-new.C'
    sources:
      binary: ./variadic-new.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-new_7034:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-new.C'
    sources:
      binary: ./variadic-new.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-new_7035:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-new.C'
    sources:
      binary: ./variadic-new.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-nondeduce1_3279:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-nondeduce1.C'
    sources:
      binary: variadic-nondeduce1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-nondeduce1_3280:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-nondeduce1.C'
    sources:
      binary: variadic-nondeduce1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-nondeduce1_7038:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-nondeduce1.C'
    sources:
      binary: variadic-nondeduce1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-nondeduce1_7039:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-nondeduce1.C'
    sources:
      binary: variadic-nondeduce1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic-nondeduce2_3281:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-nondeduce2.C'
    sources:
      binary: variadic-nondeduce2.s
  group: GRPSERIAL
test_variadic-nondeduce2_3282:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-nondeduce2.C'
    sources:
      binary: variadic-nondeduce2.s
  group: GRPSERIAL
test_variadic-nondeduce2_7040:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-nondeduce2.C'
    sources:
      binary: variadic-nondeduce2.s
  group: GRPSERIAL
test_variadic-nondeduce2_7041:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-nondeduce2.C'
    sources:
      binary: variadic-nondeduce2.s
  group: GRPSERIAL
test_variadic-partial1_3283:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-partial1.C'
    sources:
      binary: variadic-partial1.s
  group: GRPSERIAL
test_variadic-partial1_3284:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-partial1.C'
    sources:
      binary: variadic-partial1.s
  group: GRPSERIAL
test_variadic-partial1_7042:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-partial1.C'
    sources:
      binary: variadic-partial1.s
  group: GRPSERIAL
test_variadic-partial1_7043:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-partial1.C'
    sources:
      binary: variadic-partial1.s
  group: GRPSERIAL
test_variadic-ref1_3285:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ref1.C'
    sources:
      binary: variadic-ref1.s
  group: GRPSERIAL
test_variadic-ref1_3286:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ref1.C'
    sources:
      binary: variadic-ref1.s
  group: GRPSERIAL
test_variadic-ref1_7044:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ref1.C'
    sources:
      binary: variadic-ref1.s
  group: GRPSERIAL
test_variadic-ref1_7045:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ref1.C'
    sources:
      binary: variadic-ref1.s
  group: GRPSERIAL
test_variadic-rref_3287:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-rref.C'
    sources:
      binary: variadic-rref.s
  group: GRPSERIAL
test_variadic-rref_3288:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-rref.C'
    sources:
      binary: variadic-rref.s
  group: GRPSERIAL
test_variadic-rref_7046:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-rref.C'
    sources:
      binary: variadic-rref.s
  group: GRPSERIAL
test_variadic-rref_7047:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-rref.C'
    sources:
      binary: variadic-rref.s
  group: GRPSERIAL
test_variadic-sizeof1_3289:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof1.C'
    sources:
      binary: variadic-sizeof1.s
  group: GRPSERIAL
test_variadic-sizeof1_3290:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof1.C'
    sources:
      binary: variadic-sizeof1.s
  group: GRPSERIAL
test_variadic-sizeof1_7048:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof1.C'
    sources:
      binary: variadic-sizeof1.s
  group: GRPSERIAL
test_variadic-sizeof1_7049:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof1.C'
    sources:
      binary: variadic-sizeof1.s
  group: GRPSERIAL
test_variadic-sizeof2_3291:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof2.C'
    sources:
      binary: variadic-sizeof2.s
  group: GRPSERIAL
test_variadic-sizeof2_3292:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof2.C'
    sources:
      binary: variadic-sizeof2.s
  group: GRPSERIAL
test_variadic-sizeof2_7050:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof2.C'
    sources:
      binary: variadic-sizeof2.s
  group: GRPSERIAL
test_variadic-sizeof2_7051:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof2.C'
    sources:
      binary: variadic-sizeof2.s
  group: GRPSERIAL
test_variadic-sizeof3_3293:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof3.C'
    sources:
      binary: variadic-sizeof3.s
  group: GRPSERIAL
test_variadic-sizeof3_3294:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof3.C'
    sources:
      binary: variadic-sizeof3.s
  group: GRPSERIAL
test_variadic-sizeof3_7052:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof3.C'
    sources:
      binary: variadic-sizeof3.s
  group: GRPSERIAL
test_variadic-sizeof3_7053:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof3.C'
    sources:
      binary: variadic-sizeof3.s
  group: GRPSERIAL
test_variadic-sizeof4_3295:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof4.C'
    sources:
      binary: variadic-sizeof4.s
  group: GRPSERIAL
test_variadic-sizeof4_3296:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof4.C'
    sources:
      binary: variadic-sizeof4.s
  group: GRPSERIAL
test_variadic-sizeof4_7054:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof4.C'
    sources:
      binary: variadic-sizeof4.s
  group: GRPSERIAL
test_variadic-sizeof4_7055:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof4.C'
    sources:
      binary: variadic-sizeof4.s
  group: GRPSERIAL
test_variadic-sizeof4a_3297:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof4a.C'
    sources:
      binary: variadic-sizeof4a.s
  group: GRPSERIAL
test_variadic-sizeof4a_3298:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof4a.C'
    sources:
      binary: variadic-sizeof4a.s
  group: GRPSERIAL
test_variadic-sizeof4a_7056:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof4a.C'
    sources:
      binary: variadic-sizeof4a.s
  group: GRPSERIAL
test_variadic-sizeof4a_7057:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-sizeof4a.C'
    sources:
      binary: variadic-sizeof4a.s
  group: GRPSERIAL
test_variadic-throw_3299:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-throw.C'
    sources:
      binary: variadic-throw.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_variadic-throw_3300:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-throw.C'
    sources:
      binary: variadic-throw.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_variadic-throw_7058:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-throw.C'
    sources:
      binary: variadic-throw.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_variadic-throw_7059:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-throw.C'
    sources:
      binary: variadic-throw.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_variadic-ttp2_3303:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp2.C'
    sources:
      binary: variadic-ttp2.s
  group: GRPSERIAL
test_variadic-ttp2_3304:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp2.C'
    sources:
      binary: variadic-ttp2.s
  group: GRPSERIAL
test_variadic-ttp2_7062:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp2.C'
    sources:
      binary: variadic-ttp2.s
  group: GRPSERIAL
test_variadic-ttp2_7063:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp2.C'
    sources:
      binary: variadic-ttp2.s
  group: GRPSERIAL
test_variadic-ttp3_3305:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp3.C'
    sources:
      binary: variadic-ttp3.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_variadic-ttp3_3306:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp3.C'
    sources:
      binary: variadic-ttp3.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_variadic-ttp3_7064:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp3.C'
    sources:
      binary: variadic-ttp3.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_variadic-ttp3_7065:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp3.C'
    sources:
      binary: variadic-ttp3.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous")[^\n]*\n?)+'
test_variadic-ttp3a_3307:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp3a.C'
    sources:
      binary: variadic-ttp3a.s
  group: GRPSERIAL
test_variadic-ttp3a_3308:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp3a.C'
    sources:
      binary: variadic-ttp3a.s
  group: GRPSERIAL
test_variadic-ttp3a_7066:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp3a.C'
    sources:
      binary: variadic-ttp3a.s
  group: GRPSERIAL
test_variadic-ttp3a_7067:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp3a.C'
    sources:
      binary: variadic-ttp3a.s
  group: GRPSERIAL
test_variadic-ttp4_3309:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp4.C'
    sources:
      binary: variadic-ttp4.s
  group: GRPSERIAL
test_variadic-ttp4_3310:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp4.C'
    sources:
      binary: variadic-ttp4.s
  group: GRPSERIAL
test_variadic-ttp4_7068:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp4.C'
    sources:
      binary: variadic-ttp4.s
  group: GRPSERIAL
test_variadic-ttp4_7069:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp4.C'
    sources:
      binary: variadic-ttp4.s
  group: GRPSERIAL
test_variadic-ttp5_3311:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp5.C'
    sources:
      binary: variadic-ttp5.s
  group: GRPSERIAL
test_variadic-ttp5_3312:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp5.C'
    sources:
      binary: variadic-ttp5.s
  group: GRPSERIAL
test_variadic-ttp5_7070:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp5.C'
    sources:
      binary: variadic-ttp5.s
  group: GRPSERIAL
test_variadic-ttp5_7071:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp5.C'
    sources:
      binary: variadic-ttp5.s
  group: GRPSERIAL
test_variadic-ttp6_3313:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp6.C'
    sources:
      binary: variadic-ttp6.s
  group: GRPSERIAL
test_variadic-ttp6_3314:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp6.C'
    sources:
      binary: variadic-ttp6.s
  group: GRPSERIAL
test_variadic-ttp6_7072:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp6.C'
    sources:
      binary: variadic-ttp6.s
  group: GRPSERIAL
test_variadic-ttp6_7073:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp6.C'
    sources:
      binary: variadic-ttp6.s
  group: GRPSERIAL
test_variadic-ttp7_3315:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp7.C'
    sources:
      binary: variadic-ttp7.s
  group: GRPSERIAL
test_variadic-ttp7_3316:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp7.C'
    sources:
      binary: variadic-ttp7.s
  group: GRPSERIAL
test_variadic-ttp7_7074:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp7.C'
    sources:
      binary: variadic-ttp7.s
  group: GRPSERIAL
test_variadic-ttp7_7075:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp7.C'
    sources:
      binary: variadic-ttp7.s
  group: GRPSERIAL
test_variadic-ttp8_3317:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp8.C'
    sources:
      binary: variadic-ttp8.s
  group: GRPSERIAL
test_variadic-ttp8_3318:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp8.C'
    sources:
      binary: variadic-ttp8.s
  group: GRPSERIAL
test_variadic-ttp8_7076:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp8.C'
    sources:
      binary: variadic-ttp8.s
  group: GRPSERIAL
test_variadic-ttp8_7077:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp8.C'
    sources:
      binary: variadic-ttp8.s
  group: GRPSERIAL
test_variadic-ttp_3301:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp.C'
    sources:
      binary: variadic-ttp.s
  group: GRPSERIAL
test_variadic-ttp_3302:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp.C'
    sources:
      binary: variadic-ttp.s
  group: GRPSERIAL
test_variadic-ttp_7060:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp.C'
    sources:
      binary: variadic-ttp.s
  group: GRPSERIAL
test_variadic-ttp_7061:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-ttp.C'
    sources:
      binary: variadic-ttp.s
  group: GRPSERIAL
test_variadic-tuple2_3321:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-tuple2.C'
    sources:
      binary: variadic-tuple2.s
  group: GRPSERIAL
test_variadic-tuple2_3322:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-tuple2.C'
    sources:
      binary: variadic-tuple2.s
  group: GRPSERIAL
test_variadic-tuple2_7080:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-tuple2.C'
    sources:
      binary: variadic-tuple2.s
  group: GRPSERIAL
test_variadic-tuple2_7081:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-tuple2.C'
    sources:
      binary: variadic-tuple2.s
  group: GRPSERIAL
test_variadic-tuple_3319:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-tuple.C'
    sources:
      binary: ./variadic-tuple.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-tuple_3320:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-tuple.C'
    sources:
      binary: ./variadic-tuple.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-tuple_7078:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-tuple.C'
    sources:
      binary: ./variadic-tuple.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-tuple_7079:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-tuple.C'
    sources:
      binary: ./variadic-tuple.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-unify-2_3323:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unify-2.C'
    sources:
      binary: variadic-unify-2.s
  group: GRPSERIAL
test_variadic-unify-2_3324:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unify-2.C'
    sources:
      binary: variadic-unify-2.s
  group: GRPSERIAL
test_variadic-unify-2_7082:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unify-2.C'
    sources:
      binary: variadic-unify-2.s
  group: GRPSERIAL
test_variadic-unify-2_7083:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unify-2.C'
    sources:
      binary: variadic-unify-2.s
  group: GRPSERIAL
test_variadic-unify-3_3325:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unify-3.C'
    sources:
      binary: variadic-unify-3.s
  group: GRPSERIAL
test_variadic-unify-3_3326:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unify-3.C'
    sources:
      binary: variadic-unify-3.s
  group: GRPSERIAL
test_variadic-unify-3_7084:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unify-3.C'
    sources:
      binary: variadic-unify-3.s
  group: GRPSERIAL
test_variadic-unify-3_7085:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unify-3.C'
    sources:
      binary: variadic-unify-3.s
  group: GRPSERIAL
test_variadic-unify_3327:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unify.C'
    sources:
      binary: variadic-unify.s
  group: GRPSERIAL
test_variadic-unify_3328:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unify.C'
    sources:
      binary: variadic-unify.s
  group: GRPSERIAL
test_variadic-unify_7086:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unify.C'
    sources:
      binary: variadic-unify.s
  group: GRPSERIAL
test_variadic-unify_7087:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unify.C'
    sources:
      binary: variadic-unify.s
  group: GRPSERIAL
test_variadic-unresolved_3329:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unresolved.C'
    sources:
      binary: variadic-unresolved.s
  group: GRPSERIAL
test_variadic-unresolved_3330:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unresolved.C'
    sources:
      binary: variadic-unresolved.s
  group: GRPSERIAL
test_variadic-unresolved_7088:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unresolved.C'
    sources:
      binary: variadic-unresolved.s
  group: GRPSERIAL
test_variadic-unresolved_7089:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-unresolved.C'
    sources:
      binary: variadic-unresolved.s
  group: GRPSERIAL
test_variadic-value1_3331:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-value1.C'
    sources:
      binary: ./variadic-value1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-value1_3332:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-value1.C'
    sources:
      binary: ./variadic-value1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-value1_7090:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-value1.C'
    sources:
      binary: ./variadic-value1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic-value1_7091:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic-value1.C'
    sources:
      binary: ./variadic-value1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic100_3337:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic100.C'
    sources:
      binary: variadic100.s
  group: GRPSERIAL
test_variadic100_3338:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic100.C'
    sources:
      binary: variadic100.s
  group: GRPSERIAL
test_variadic100_7096:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic100.C'
    sources:
      binary: variadic100.s
  group: GRPSERIAL
test_variadic100_7097:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic100.C'
    sources:
      binary: variadic100.s
  group: GRPSERIAL
test_variadic101_3339:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic101.C'
    sources:
      binary: variadic101.s
  group: GRPSERIAL
test_variadic101_3340:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic101.C'
    sources:
      binary: variadic101.s
  group: GRPSERIAL
test_variadic101_7098:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic101.C'
    sources:
      binary: variadic101.s
  group: GRPSERIAL
test_variadic101_7099:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic101.C'
    sources:
      binary: variadic101.s
  group: GRPSERIAL
test_variadic102_3341:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic102.C'
    sources:
      binary: variadic102.s
  group: GRPSERIAL
test_variadic102_3342:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic102.C'
    sources:
      binary: variadic102.s
  group: GRPSERIAL
test_variadic102_7100:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic102.C'
    sources:
      binary: variadic102.s
  group: GRPSERIAL
test_variadic102_7101:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic102.C'
    sources:
      binary: variadic102.s
  group: GRPSERIAL
test_variadic103_3343:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic103.C'
    sources:
      binary: variadic103.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_variadic103_3344:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic103.C'
    sources:
      binary: variadic103.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_variadic103_7102:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic103.C'
    sources:
      binary: variadic103.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_variadic103_7103:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic103.C'
    sources:
      binary: variadic103.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_variadic105_3345:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic105.C'
    sources:
      binary: variadic105.s
  group: GRPSERIAL
test_variadic105_3346:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic105.C'
    sources:
      binary: variadic105.s
  group: GRPSERIAL
test_variadic105_7104:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic105.C'
    sources:
      binary: variadic105.s
  group: GRPSERIAL
test_variadic105_7105:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic105.C'
    sources:
      binary: variadic105.s
  group: GRPSERIAL
test_variadic106_3347:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic106.C'
    sources:
      binary: variadic106.s
  group: GRPSERIAL
test_variadic106_3348:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic106.C'
    sources:
      binary: variadic106.s
  group: GRPSERIAL
test_variadic106_7106:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic106.C'
    sources:
      binary: variadic106.s
  group: GRPSERIAL
test_variadic106_7107:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic106.C'
    sources:
      binary: variadic106.s
  group: GRPSERIAL
test_variadic107_3349:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic107.C'
    sources:
      binary: variadic107.s
  group: GRPSERIAL
test_variadic107_3350:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic107.C'
    sources:
      binary: variadic107.s
  group: GRPSERIAL
test_variadic107_7108:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic107.C'
    sources:
      binary: variadic107.s
  group: GRPSERIAL
test_variadic107_7109:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic107.C'
    sources:
      binary: variadic107.s
  group: GRPSERIAL
test_variadic108_3351:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic108.C'
    sources:
      binary: variadic108.s
  group: GRPSERIAL
test_variadic108_3352:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic108.C'
    sources:
      binary: variadic108.s
  group: GRPSERIAL
test_variadic108_7110:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic108.C'
    sources:
      binary: variadic108.s
  group: GRPSERIAL
test_variadic108_7111:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic108.C'
    sources:
      binary: variadic108.s
  group: GRPSERIAL
test_variadic109_3353:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic109.C'
    sources:
      binary: variadic109.s
  group: GRPSERIAL
test_variadic109_3354:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic109.C'
    sources:
      binary: variadic109.s
  group: GRPSERIAL
test_variadic109_7112:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic109.C'
    sources:
      binary: variadic109.s
  group: GRPSERIAL
test_variadic109_7113:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic109.C'
    sources:
      binary: variadic109.s
  group: GRPSERIAL
test_variadic10_3335:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic10.C'
    sources:
      binary: variadic10.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack lengths")[^\n]*\n?)+'
test_variadic10_3336:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic10.C'
    sources:
      binary: variadic10.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack lengths")[^\n]*\n?)+'
test_variadic10_7094:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic10.C'
    sources:
      binary: variadic10.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack lengths")[^\n]*\n?)+'
test_variadic10_7095:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic10.C'
    sources:
      binary: variadic10.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack lengths")[^\n]*\n?)+'
test_variadic110_3357:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic110.C'
    sources:
      binary: variadic110.s
  group: GRPSERIAL
test_variadic110_3358:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic110.C'
    sources:
      binary: variadic110.s
  group: GRPSERIAL
test_variadic110_7116:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic110.C'
    sources:
      binary: variadic110.s
  group: GRPSERIAL
test_variadic110_7117:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic110.C'
    sources:
      binary: variadic110.s
  group: GRPSERIAL
test_variadic111_3359:
  build:
    cflags: "-std=gnu++11 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic111.C'
    sources:
      binary: variadic111.s
  group: GRPSERIAL
test_variadic111_3360:
  build:
    cflags: "-std=gnu++14 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic111.C'
    sources:
      binary: variadic111.s
  group: GRPSERIAL
test_variadic111_7118:
  build:
    cflags: "-std=gnu++11 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic111.C'
    sources:
      binary: variadic111.s
  group: GRPSERIAL
test_variadic111_7119:
  build:
    cflags: "-std=gnu++14 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic111.C'
    sources:
      binary: variadic111.s
  group: GRPSERIAL
test_variadic112_3361:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic112.C'
    sources:
      binary: variadic112.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type")[^\n]*\n?)+'
test_variadic112_3362:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic112.C'
    sources:
      binary: variadic112.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type")[^\n]*\n?)+'
test_variadic112_7120:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic112.C'
    sources:
      binary: variadic112.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type")[^\n]*\n?)+'
test_variadic112_7121:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic112.C'
    sources:
      binary: variadic112.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no type")[^\n]*\n?)+'
test_variadic113_3363:
  build:
    cflags: "-std=gnu++11 -Wunused-parameter\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic113.C'
    sources:
      binary: variadic113.s
  group: GRPSERIAL
test_variadic113_3364:
  build:
    cflags: "-std=gnu++14 -Wunused-parameter\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic113.C'
    sources:
      binary: variadic113.s
  group: GRPSERIAL
test_variadic113_7122:
  build:
    cflags: "-std=gnu++11 -Wunused-parameter\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic113.C'
    sources:
      binary: variadic113.s
  group: GRPSERIAL
test_variadic113_7123:
  build:
    cflags: "-std=gnu++14 -Wunused-parameter\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic113.C'
    sources:
      binary: variadic113.s
  group: GRPSERIAL
test_variadic114_3365:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic114.C'
    sources:
      binary: variadic114.s
  group: GRPSERIAL
test_variadic114_3366:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic114.C'
    sources:
      binary: variadic114.s
  group: GRPSERIAL
test_variadic114_7124:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic114.C'
    sources:
      binary: variadic114.s
  group: GRPSERIAL
test_variadic114_7125:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic114.C'
    sources:
      binary: variadic114.s
  group: GRPSERIAL
test_variadic115_3367:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic115.C'
    sources:
      binary: variadic115.s
  group: GRPSERIAL
test_variadic115_3368:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic115.C'
    sources:
      binary: variadic115.s
  group: GRPSERIAL
test_variadic115_7126:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic115.C'
    sources:
      binary: variadic115.s
  group: GRPSERIAL
test_variadic115_7127:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic115.C'
    sources:
      binary: variadic115.s
  group: GRPSERIAL
test_variadic116_3369:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic116.C'
    sources:
      binary: variadic116.s
  group: GRPSERIAL
test_variadic116_3370:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic116.C'
    sources:
      binary: variadic116.s
  group: GRPSERIAL
test_variadic116_7128:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic116.C'
    sources:
      binary: variadic116.s
  group: GRPSERIAL
test_variadic116_7129:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic116.C'
    sources:
      binary: variadic116.s
  group: GRPSERIAL
test_variadic117_3371:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic117.C'
    sources:
      binary: variadic117.s
  group: GRPSERIAL
test_variadic117_3372:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic117.C'
    sources:
      binary: variadic117.s
  group: GRPSERIAL
test_variadic117_7130:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic117.C'
    sources:
      binary: variadic117.s
  group: GRPSERIAL
test_variadic117_7131:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic117.C'
    sources:
      binary: variadic117.s
  group: GRPSERIAL
test_variadic118_3373:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic118.C'
    sources:
      binary: variadic118.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic118_3374:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic118.C'
    sources:
      binary: variadic118.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic118_7132:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic118.C'
    sources:
      binary: variadic118.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic118_7133:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic118.C'
    sources:
      binary: variadic118.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic119_3375:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic119.C'
    sources:
      binary: variadic119.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded")[^\n]*\n?)+'
test_variadic119_3376:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic119.C'
    sources:
      binary: variadic119.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded")[^\n]*\n?)+'
test_variadic119_7134:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic119.C'
    sources:
      binary: variadic119.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded")[^\n]*\n?)+'
test_variadic119_7135:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic119.C'
    sources:
      binary: variadic119.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded")[^\n]*\n?)+'
test_variadic11_3355:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic11.C'
    sources:
      binary: variadic11.s
  group: GRPSERIAL
test_variadic11_3356:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic11.C'
    sources:
      binary: variadic11.s
  group: GRPSERIAL
test_variadic11_7114:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic11.C'
    sources:
      binary: variadic11.s
  group: GRPSERIAL
test_variadic11_7115:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic11.C'
    sources:
      binary: variadic11.s
  group: GRPSERIAL
test_variadic120_3379:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic120.C'
    sources:
      binary: variadic120.s
  group: GRPSERIAL
test_variadic120_3380:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic120.C'
    sources:
      binary: variadic120.s
  group: GRPSERIAL
test_variadic120_7138:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic120.C'
    sources:
      binary: variadic120.s
  group: GRPSERIAL
test_variadic120_7139:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic120.C'
    sources:
      binary: variadic120.s
  group: GRPSERIAL
test_variadic121_3381:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic121.C'
    sources:
      binary: variadic121.s
  group: GRPSERIAL
test_variadic121_3382:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic121.C'
    sources:
      binary: variadic121.s
  group: GRPSERIAL
test_variadic121_7140:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic121.C'
    sources:
      binary: variadic121.s
  group: GRPSERIAL
test_variadic121_7141:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic121.C'
    sources:
      binary: variadic121.s
  group: GRPSERIAL
test_variadic122_3383:
  build:
    cflags: "-std=gnu++11 -Wreturn-type\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic122.C'
    sources:
      binary: variadic122.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("no return")[^\n]*\n?)+'
test_variadic122_3384:
  build:
    cflags: "-std=gnu++14 -Wreturn-type\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic122.C'
    sources:
      binary: variadic122.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("no return")[^\n]*\n?)+'
test_variadic122_7142:
  build:
    cflags: "-std=gnu++11 -Wreturn-type\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic122.C'
    sources:
      binary: variadic122.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("no return")[^\n]*\n?)+'
test_variadic122_7143:
  build:
    cflags: "-std=gnu++14 -Wreturn-type\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic122.C'
    sources:
      binary: variadic122.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("no return")[^\n]*\n?)+'
test_variadic123_3385:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic123.C'
    sources:
      binary: variadic123.s
  group: GRPSERIAL
test_variadic123_3386:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic123.C'
    sources:
      binary: variadic123.s
  group: GRPSERIAL
test_variadic123_7144:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic123.C'
    sources:
      binary: variadic123.s
  group: GRPSERIAL
test_variadic123_7145:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic123.C'
    sources:
      binary: variadic123.s
  group: GRPSERIAL
test_variadic124_3387:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic124.C'
    sources:
      binary: variadic124.s
  group: GRPSERIAL
test_variadic124_3388:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic124.C'
    sources:
      binary: variadic124.s
  group: GRPSERIAL
test_variadic124_7146:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic124.C'
    sources:
      binary: variadic124.s
  group: GRPSERIAL
test_variadic124_7147:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic124.C'
    sources:
      binary: variadic124.s
  group: GRPSERIAL
test_variadic125_3389:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic125.C'
    sources:
      binary: variadic125.s
  group: GRPSERIAL
test_variadic125_3390:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic125.C'
    sources:
      binary: variadic125.s
  group: GRPSERIAL
test_variadic125_7148:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic125.C'
    sources:
      binary: variadic125.s
  group: GRPSERIAL
test_variadic125_7149:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic125.C'
    sources:
      binary: variadic125.s
  group: GRPSERIAL
test_variadic126_3391:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic126.C'
    sources:
      binary: variadic126.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
test_variadic126_3392:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic126.C'
    sources:
      binary: variadic126.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
test_variadic126_7150:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic126.C'
    sources:
      binary: variadic126.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
test_variadic126_7151:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic126.C'
    sources:
      binary: variadic126.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'
test_variadic127_3393:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic127.C'
    sources:
      binary: variadic127.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic127_3394:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic127.C'
    sources:
      binary: variadic127.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic127_7152:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic127.C'
    sources:
      binary: variadic127.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic127_7153:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic127.C'
    sources:
      binary: variadic127.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic128_3395:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic128.C'
    sources:
      binary: variadic128.s
  group: GRPSERIAL
test_variadic128_3396:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic128.C'
    sources:
      binary: variadic128.s
  group: GRPSERIAL
test_variadic128_7154:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic128.C'
    sources:
      binary: variadic128.s
  group: GRPSERIAL
test_variadic128_7155:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic128.C'
    sources:
      binary: variadic128.s
  group: GRPSERIAL
test_variadic129_3397:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic129.C'
    sources:
      binary: variadic129.s
  group: GRPSERIAL
test_variadic129_3398:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic129.C'
    sources:
      binary: variadic129.s
  group: GRPSERIAL
test_variadic129_7156:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic129.C'
    sources:
      binary: variadic129.s
  group: GRPSERIAL
test_variadic129_7157:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic129.C'
    sources:
      binary: variadic129.s
  group: GRPSERIAL
test_variadic12_3377:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic12.C'
    sources:
      binary: variadic12.s
  group: GRPSERIAL
test_variadic12_3378:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic12.C'
    sources:
      binary: variadic12.s
  group: GRPSERIAL
test_variadic12_7136:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic12.C'
    sources:
      binary: variadic12.s
  group: GRPSERIAL
test_variadic12_7137:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic12.C'
    sources:
      binary: variadic12.s
  group: GRPSERIAL
test_variadic130_3401:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic130.C'
    sources:
      binary: variadic130.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not more specialized")[^\n]*\n?)+'
test_variadic130_3402:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic130.C'
    sources:
      binary: variadic130.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not more specialized")[^\n]*\n?)+'
test_variadic130_7160:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic130.C'
    sources:
      binary: variadic130.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not more specialized")[^\n]*\n?)+'
test_variadic130_7161:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic130.C'
    sources:
      binary: variadic130.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not more specialized")[^\n]*\n?)+'
test_variadic131_3403:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic131.C'
    sources:
      binary: variadic131.s
  group: GRPSERIAL
test_variadic131_3404:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic131.C'
    sources:
      binary: variadic131.s
  group: GRPSERIAL
test_variadic131_7162:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic131.C'
    sources:
      binary: variadic131.s
  group: GRPSERIAL
test_variadic131_7163:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic131.C'
    sources:
      binary: variadic131.s
  group: GRPSERIAL
test_variadic132_3405:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic132.C'
    sources:
      binary: variadic132.s
  group: GRPSERIAL
test_variadic132_3406:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic132.C'
    sources:
      binary: variadic132.s
  group: GRPSERIAL
test_variadic132_7164:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic132.C'
    sources:
      binary: variadic132.s
  group: GRPSERIAL
test_variadic132_7165:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic132.C'
    sources:
      binary: variadic132.s
  group: GRPSERIAL
test_variadic133_3407:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic133.C'
    sources:
      binary: variadic133.s
  group: GRPSERIAL
test_variadic133_3408:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic133.C'
    sources:
      binary: variadic133.s
  group: GRPSERIAL
test_variadic133_7166:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic133.C'
    sources:
      binary: variadic133.s
  group: GRPSERIAL
test_variadic133_7167:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic133.C'
    sources:
      binary: variadic133.s
  group: GRPSERIAL
test_variadic134_3409:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic134.C'
    sources:
      binary: variadic134.s
  group: GRPSERIAL
test_variadic134_3410:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic134.C'
    sources:
      binary: variadic134.s
  group: GRPSERIAL
test_variadic134_7168:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic134.C'
    sources:
      binary: variadic134.s
  group: GRPSERIAL
test_variadic134_7169:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic134.C'
    sources:
      binary: variadic134.s
  group: GRPSERIAL
test_variadic135_3411:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic135.C'
    sources:
      binary: variadic135.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template argument
          2 is invalid")[^\n]*\n?)+'
test_variadic135_3412:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic135.C'
    sources:
      binary: variadic135.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template argument
          2 is invalid")[^\n]*\n?)+'
test_variadic135_7170:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic135.C'
    sources:
      binary: variadic135.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template argument
          2 is invalid")[^\n]*\n?)+'
test_variadic135_7171:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic135.C'
    sources:
      binary: variadic135.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template argument
          2 is invalid")[^\n]*\n?)+'
test_variadic139_3413:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic139.C'
    sources:
      binary: variadic139.s
  group: GRPSERIAL
test_variadic139_3414:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic139.C'
    sources:
      binary: variadic139.s
  group: GRPSERIAL
test_variadic139_7172:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic139.C'
    sources:
      binary: variadic139.s
  group: GRPSERIAL
test_variadic139_7173:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic139.C'
    sources:
      binary: variadic139.s
  group: GRPSERIAL
test_variadic13_3399:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic13.C'
    sources:
      binary: variadic13.s
  group: GRPSERIAL
test_variadic13_3400:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic13.C'
    sources:
      binary: variadic13.s
  group: GRPSERIAL
test_variadic13_7158:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic13.C'
    sources:
      binary: variadic13.s
  group: GRPSERIAL
test_variadic13_7159:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic13.C'
    sources:
      binary: variadic13.s
  group: GRPSERIAL
test_variadic140_3417:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic140.C'
    sources:
      binary: variadic140.s
  group: GRPSERIAL
test_variadic140_3418:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic140.C'
    sources:
      binary: variadic140.s
  group: GRPSERIAL
test_variadic140_7176:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic140.C'
    sources:
      binary: variadic140.s
  group: GRPSERIAL
test_variadic140_7177:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic140.C'
    sources:
      binary: variadic140.s
  group: GRPSERIAL
test_variadic141_3419:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic141.C'
    sources:
      binary: variadic141.s
  group: GRPSERIAL
test_variadic141_3420:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic141.C'
    sources:
      binary: variadic141.s
  group: GRPSERIAL
test_variadic141_7178:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic141.C'
    sources:
      binary: variadic141.s
  group: GRPSERIAL
test_variadic141_7179:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic141.C'
    sources:
      binary: variadic141.s
  group: GRPSERIAL
test_variadic142_3421:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic142.C'
    sources:
      binary: variadic142.s
  group: GRPSERIAL
test_variadic142_3422:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic142.C'
    sources:
      binary: variadic142.s
  group: GRPSERIAL
test_variadic142_7180:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic142.C'
    sources:
      binary: variadic142.s
  group: GRPSERIAL
test_variadic142_7181:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic142.C'
    sources:
      binary: variadic142.s
  group: GRPSERIAL
test_variadic143_3423:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic143.C'
    sources:
      binary: variadic143.s
  group: GRPSERIAL
test_variadic143_3424:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic143.C'
    sources:
      binary: variadic143.s
  group: GRPSERIAL
test_variadic143_7182:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic143.C'
    sources:
      binary: variadic143.s
  group: GRPSERIAL
test_variadic143_7183:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic143.C'
    sources:
      binary: variadic143.s
  group: GRPSERIAL
test_variadic144_3425:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic144.C'
    sources:
      binary: variadic144.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be used")[^\n]*\n?)+'
test_variadic144_3426:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic144.C'
    sources:
      binary: variadic144.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be used")[^\n]*\n?)+'
test_variadic144_7184:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic144.C'
    sources:
      binary: variadic144.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be used")[^\n]*\n?)+'
test_variadic144_7185:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic144.C'
    sources:
      binary: variadic144.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be used")[^\n]*\n?)+'
test_variadic145_3427:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic145.C'
    sources:
      binary: variadic145.s
  group: GRPSERIAL
test_variadic145_3428:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic145.C'
    sources:
      binary: variadic145.s
  group: GRPSERIAL
test_variadic145_7186:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic145.C'
    sources:
      binary: variadic145.s
  group: GRPSERIAL
test_variadic145_7187:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic145.C'
    sources:
      binary: variadic145.s
  group: GRPSERIAL
test_variadic146_3429:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic146.C'
    sources:
      binary: variadic146.s
  group: GRPSERIAL
test_variadic146_3430:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic146.C'
    sources:
      binary: variadic146.s
  group: GRPSERIAL
test_variadic146_7188:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic146.C'
    sources:
      binary: variadic146.s
  group: GRPSERIAL
test_variadic146_7189:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic146.C'
    sources:
      binary: variadic146.s
  group: GRPSERIAL
test_variadic147_3431:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic147.C'
    sources:
      binary: variadic147.s
  group: GRPSERIAL
test_variadic147_3432:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic147.C'
    sources:
      binary: variadic147.s
  group: GRPSERIAL
test_variadic147_7190:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic147.C'
    sources:
      binary: variadic147.s
  group: GRPSERIAL
test_variadic147_7191:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic147.C'
    sources:
      binary: variadic147.s
  group: GRPSERIAL
test_variadic148_3433:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic148.C'
    sources:
      binary: variadic148.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_variadic148_3434:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic148.C'
    sources:
      binary: variadic148.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_variadic148_7192:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic148.C'
    sources:
      binary: variadic148.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_variadic148_7193:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic148.C'
    sources:
      binary: variadic148.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_variadic149_3435:
  build:
    cflags: "-std=gnu++11 -g -fabi-version=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic149.C'
    sources:
      binary: variadic149.s
  group: GRPSERIAL
test_variadic149_3436:
  build:
    cflags: "-std=gnu++14 -g -fabi-version=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic149.C'
    sources:
      binary: variadic149.s
  group: GRPSERIAL
test_variadic149_7194:
  build:
    cflags: "-std=gnu++11 -g -fabi-version=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic149.C'
    sources:
      binary: variadic149.s
  group: GRPSERIAL
test_variadic149_7195:
  build:
    cflags: "-std=gnu++14 -g -fabi-version=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic149.C'
    sources:
      binary: variadic149.s
  group: GRPSERIAL
test_variadic14_3415:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic14.C'
    sources:
      binary: variadic14.s
  group: GRPSERIAL
test_variadic14_3416:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic14.C'
    sources:
      binary: variadic14.s
  group: GRPSERIAL
test_variadic14_7174:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic14.C'
    sources:
      binary: variadic14.s
  group: GRPSERIAL
test_variadic14_7175:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic14.C'
    sources:
      binary: variadic14.s
  group: GRPSERIAL
test_variadic150_3439:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic150.C'
    sources:
      binary: variadic150.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic150_3440:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic150.C'
    sources:
      binary: variadic150.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic150_7198:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic150.C'
    sources:
      binary: variadic150.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic150_7199:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic150.C'
    sources:
      binary: variadic150.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic151_3441:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic151.C'
    sources:
      binary: variadic151.s
  group: GRPSERIAL
test_variadic151_3442:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic151.C'
    sources:
      binary: variadic151.s
  group: GRPSERIAL
test_variadic151_7200:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic151.C'
    sources:
      binary: variadic151.s
  group: GRPSERIAL
test_variadic151_7201:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic151.C'
    sources:
      binary: variadic151.s
  group: GRPSERIAL
test_variadic152_3443:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic152.C'
    sources:
      binary: variadic152.s
  group: GRPSERIAL
test_variadic152_3444:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic152.C'
    sources:
      binary: variadic152.s
  group: GRPSERIAL
test_variadic152_7202:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic152.C'
    sources:
      binary: variadic152.s
  group: GRPSERIAL
test_variadic152_7203:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic152.C'
    sources:
      binary: variadic152.s
  group: GRPSERIAL
test_variadic153_3445:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic153.C'
    sources:
      binary: variadic153.s
  group: GRPSERIAL
test_variadic153_3446:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic153.C'
    sources:
      binary: variadic153.s
  group: GRPSERIAL
test_variadic153_7204:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic153.C'
    sources:
      binary: variadic153.s
  group: GRPSERIAL
test_variadic153_7205:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic153.C'
    sources:
      binary: variadic153.s
  group: GRPSERIAL
test_variadic154_3447:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic154.C'
    sources:
      binary: variadic154.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typename|partial|T")[^\n]*\n?)+'
test_variadic154_3448:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic154.C'
    sources:
      binary: variadic154.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typename|partial|T")[^\n]*\n?)+'
test_variadic154_7206:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic154.C'
    sources:
      binary: variadic154.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typename|partial|T")[^\n]*\n?)+'
test_variadic154_7207:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic154.C'
    sources:
      binary: variadic154.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typename|partial|T")[^\n]*\n?)+'
test_variadic155_3449:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic155.C'
    sources:
      binary: variadic155.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
test_variadic155_3450:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic155.C'
    sources:
      binary: variadic155.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
test_variadic155_7208:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic155.C'
    sources:
      binary: variadic155.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
test_variadic155_7209:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic155.C'
    sources:
      binary: variadic155.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'
test_variadic156_3451:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic156.C'
    sources:
      binary: variadic156.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|type")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("matching")[^\n]*\n?)+'
test_variadic156_3452:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic156.C'
    sources:
      binary: variadic156.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|type")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("matching")[^\n]*\n?)+'
test_variadic156_7210:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic156.C'
    sources:
      binary: variadic156.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|type")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("matching")[^\n]*\n?)+'
test_variadic156_7211:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic156.C'
    sources:
      binary: variadic156.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|type")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("matching")[^\n]*\n?)+'
test_variadic157_3453:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic157.C'
    sources:
      binary: variadic157.s
  group: GRPSERIAL
test_variadic157_3454:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic157.C'
    sources:
      binary: variadic157.s
  group: GRPSERIAL
test_variadic157_7212:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic157.C'
    sources:
      binary: variadic157.s
  group: GRPSERIAL
test_variadic157_7213:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic157.C'
    sources:
      binary: variadic157.s
  group: GRPSERIAL
test_variadic158_3455:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic158.C'
    sources:
      binary: variadic158.s
  group: GRPSERIAL
test_variadic158_3456:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic158.C'
    sources:
      binary: variadic158.s
  group: GRPSERIAL
test_variadic158_7214:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic158.C'
    sources:
      binary: variadic158.s
  group: GRPSERIAL
test_variadic158_7215:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic158.C'
    sources:
      binary: variadic158.s
  group: GRPSERIAL
test_variadic159_3457:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic159.C'
    sources:
      binary: variadic159.s
  group: GRPSERIAL
test_variadic159_3458:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic159.C'
    sources:
      binary: variadic159.s
  group: GRPSERIAL
test_variadic159_7216:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic159.C'
    sources:
      binary: variadic159.s
  group: GRPSERIAL
test_variadic159_7217:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic159.C'
    sources:
      binary: variadic159.s
  group: GRPSERIAL
test_variadic15_3437:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic15.C'
    sources:
      binary: variadic15.s
  group: GRPSERIAL
test_variadic15_3438:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic15.C'
    sources:
      binary: variadic15.s
  group: GRPSERIAL
test_variadic15_7196:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic15.C'
    sources:
      binary: variadic15.s
  group: GRPSERIAL
test_variadic15_7197:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic15.C'
    sources:
      binary: variadic15.s
  group: GRPSERIAL
test_variadic160_3461:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic160.C'
    sources:
      binary: variadic160.s
  group: GRPSERIAL
test_variadic160_3462:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic160.C'
    sources:
      binary: variadic160.s
  group: GRPSERIAL
test_variadic160_7220:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic160.C'
    sources:
      binary: variadic160.s
  group: GRPSERIAL
test_variadic160_7221:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic160.C'
    sources:
      binary: variadic160.s
  group: GRPSERIAL
test_variadic161_3463:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic161.C'
    sources:
      binary: variadic161.s
  group: GRPSERIAL
test_variadic161_3464:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic161.C'
    sources:
      binary: variadic161.s
  group: GRPSERIAL
test_variadic161_7222:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic161.C'
    sources:
      binary: variadic161.s
  group: GRPSERIAL
test_variadic161_7223:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic161.C'
    sources:
      binary: variadic161.s
  group: GRPSERIAL
test_variadic162_3465:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic162.C'
    sources:
      binary: variadic162.s
  group: GRPSERIAL
test_variadic162_3466:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic162.C'
    sources:
      binary: variadic162.s
  group: GRPSERIAL
test_variadic162_7224:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic162.C'
    sources:
      binary: variadic162.s
  group: GRPSERIAL
test_variadic162_7225:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic162.C'
    sources:
      binary: variadic162.s
  group: GRPSERIAL
test_variadic163_3467:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic163.C'
    sources:
      binary: variadic163.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded")[^\n]*\n?)+'
test_variadic163_3468:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic163.C'
    sources:
      binary: variadic163.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded")[^\n]*\n?)+'
test_variadic163_7226:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic163.C'
    sources:
      binary: variadic163.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded")[^\n]*\n?)+'
test_variadic163_7227:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic163.C'
    sources:
      binary: variadic163.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded")[^\n]*\n?)+'
test_variadic164_3469:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic164.C'
    sources:
      binary: variadic164.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_variadic164_3470:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic164.C'
    sources:
      binary: variadic164.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_variadic164_7228:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic164.C'
    sources:
      binary: variadic164.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_variadic164_7229:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic164.C'
    sources:
      binary: variadic164.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_variadic165_3471:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic165.C'
    sources:
      binary: variadic165.s
  group: GRPSERIAL
test_variadic165_3472:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic165.C'
    sources:
      binary: variadic165.s
  group: GRPSERIAL
test_variadic165_7230:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic165.C'
    sources:
      binary: variadic165.s
  group: GRPSERIAL
test_variadic165_7231:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic165.C'
    sources:
      binary: variadic165.s
  group: GRPSERIAL
test_variadic166_3473:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic166.C'
    sources:
      binary: variadic166.s
  group: GRPSERIAL
test_variadic166_3474:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic166.C'
    sources:
      binary: variadic166.s
  group: GRPSERIAL
test_variadic166_7232:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic166.C'
    sources:
      binary: variadic166.s
  group: GRPSERIAL
test_variadic166_7233:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic166.C'
    sources:
      binary: variadic166.s
  group: GRPSERIAL
test_variadic167_3475:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic167.C'
    sources:
      binary: variadic167.s
  group: GRPSERIAL
test_variadic167_3476:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic167.C'
    sources:
      binary: variadic167.s
  group: GRPSERIAL
test_variadic167_7234:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic167.C'
    sources:
      binary: variadic167.s
  group: GRPSERIAL
test_variadic167_7235:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic167.C'
    sources:
      binary: variadic167.s
  group: GRPSERIAL
test_variadic168_3477:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic168.C'
    sources:
      binary: variadic168.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic168_3478:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic168.C'
    sources:
      binary: variadic168.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic168_7236:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic168.C'
    sources:
      binary: variadic168.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic168_7237:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic168.C'
    sources:
      binary: variadic168.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic169_3479:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic169.C'
    sources:
      binary: variadic169.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too few arguments")[^\n]*\n?)+'
test_variadic169_3480:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic169.C'
    sources:
      binary: variadic169.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too few arguments")[^\n]*\n?)+'
test_variadic169_7238:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic169.C'
    sources:
      binary: variadic169.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too few arguments")[^\n]*\n?)+'
test_variadic169_7239:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic169.C'
    sources:
      binary: variadic169.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too few arguments")[^\n]*\n?)+'
test_variadic16_3459:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic16.C'
    sources:
      binary: variadic16.s
  group: GRPSERIAL
test_variadic16_3460:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic16.C'
    sources:
      binary: variadic16.s
  group: GRPSERIAL
test_variadic16_7218:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic16.C'
    sources:
      binary: variadic16.s
  group: GRPSERIAL
test_variadic16_7219:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic16.C'
    sources:
      binary: variadic16.s
  group: GRPSERIAL
test_variadic171_3483:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic171.C'
    sources:
      binary: variadic171.s
  group: GRPSERIAL
test_variadic171_3484:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic171.C'
    sources:
      binary: variadic171.s
  group: GRPSERIAL
test_variadic171_7242:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic171.C'
    sources:
      binary: variadic171.s
  group: GRPSERIAL
test_variadic171_7243:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic171.C'
    sources:
      binary: variadic171.s
  group: GRPSERIAL
test_variadic17_3481:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic17.C'
    sources:
      binary: variadic17.s
  group: GRPSERIAL
test_variadic17_3482:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic17.C'
    sources:
      binary: variadic17.s
  group: GRPSERIAL
test_variadic17_7240:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic17.C'
    sources:
      binary: variadic17.s
  group: GRPSERIAL
test_variadic17_7241:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic17.C'
    sources:
      binary: variadic17.s
  group: GRPSERIAL
test_variadic18_3485:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic18.C'
    sources:
      binary: variadic18.s
  group: GRPSERIAL
test_variadic18_3486:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic18.C'
    sources:
      binary: variadic18.s
  group: GRPSERIAL
test_variadic18_7244:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic18.C'
    sources:
      binary: variadic18.s
  group: GRPSERIAL
test_variadic18_7245:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic18.C'
    sources:
      binary: variadic18.s
  group: GRPSERIAL
test_variadic19_3487:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic19.C'
    sources:
      binary: variadic19.s
  group: GRPSERIAL
test_variadic19_3488:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic19.C'
    sources:
      binary: variadic19.s
  group: GRPSERIAL
test_variadic19_7246:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic19.C'
    sources:
      binary: variadic19.s
  group: GRPSERIAL
test_variadic19_7247:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic19.C'
    sources:
      binary: variadic19.s
  group: GRPSERIAL
test_variadic1_3333:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic1.C'
    sources:
      binary: variadic1.s
  group: GRPSERIAL
test_variadic1_3334:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic1.C'
    sources:
      binary: variadic1.s
  group: GRPSERIAL
test_variadic1_7092:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic1.C'
    sources:
      binary: variadic1.s
  group: GRPSERIAL
test_variadic1_7093:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic1.C'
    sources:
      binary: variadic1.s
  group: GRPSERIAL
test_variadic20_3491:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic20.C'
    sources:
      binary: variadic20.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous|array
          bound")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous|array
          bound")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_variadic20_3492:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic20.C'
    sources:
      binary: variadic20.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous|array
          bound")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous|array
          bound")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_variadic20_7250:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic20.C'
    sources:
      binary: variadic20.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous|array
          bound")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous|array
          bound")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_variadic20_7251:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic20.C'
    sources:
      binary: variadic20.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous|array
          bound")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ambiguous|array
          bound")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_variadic21_3493:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic21.C'
    sources:
      binary: variadic21.s
  group: GRPSERIAL
test_variadic21_3494:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic21.C'
    sources:
      binary: variadic21.s
  group: GRPSERIAL
test_variadic21_7252:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic21.C'
    sources:
      binary: variadic21.s
  group: GRPSERIAL
test_variadic21_7253:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic21.C'
    sources:
      binary: variadic21.s
  group: GRPSERIAL
test_variadic22_3495:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic22.C'
    sources:
      binary: variadic22.s
  group: GRPSERIAL
test_variadic22_3496:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic22.C'
    sources:
      binary: variadic22.s
  group: GRPSERIAL
test_variadic22_7254:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic22.C'
    sources:
      binary: variadic22.s
  group: GRPSERIAL
test_variadic22_7255:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic22.C'
    sources:
      binary: variadic22.s
  group: GRPSERIAL
test_variadic23_3497:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic23.C'
    sources:
      binary: variadic23.s
  group: GRPSERIAL
test_variadic23_3498:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic23.C'
    sources:
      binary: variadic23.s
  group: GRPSERIAL
test_variadic23_7256:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic23.C'
    sources:
      binary: variadic23.s
  group: GRPSERIAL
test_variadic23_7257:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic23.C'
    sources:
      binary: variadic23.s
  group: GRPSERIAL
test_variadic24_3499:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic24.C'
    sources:
      binary: variadic24.s
  group: GRPSERIAL
test_variadic24_3500:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic24.C'
    sources:
      binary: variadic24.s
  group: GRPSERIAL
test_variadic24_7258:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic24.C'
    sources:
      binary: variadic24.s
  group: GRPSERIAL
test_variadic24_7259:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic24.C'
    sources:
      binary: variadic24.s
  group: GRPSERIAL
test_variadic25_3501:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic25.C'
    sources:
      binary: variadic25.s
  group: GRPSERIAL
test_variadic25_3502:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic25.C'
    sources:
      binary: variadic25.s
  group: GRPSERIAL
test_variadic25_7260:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic25.C'
    sources:
      binary: variadic25.s
  group: GRPSERIAL
test_variadic25_7261:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic25.C'
    sources:
      binary: variadic25.s
  group: GRPSERIAL
test_variadic26_3503:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic26.C'
    sources:
      binary: variadic26.s
  group: GRPSERIAL
test_variadic26_3504:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic26.C'
    sources:
      binary: variadic26.s
  group: GRPSERIAL
test_variadic26_7262:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic26.C'
    sources:
      binary: variadic26.s
  group: GRPSERIAL
test_variadic26_7263:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic26.C'
    sources:
      binary: variadic26.s
  group: GRPSERIAL
test_variadic27_3505:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic27.C'
    sources:
      binary: variadic27.s
  group: GRPSERIAL
test_variadic27_3506:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic27.C'
    sources:
      binary: variadic27.s
  group: GRPSERIAL
test_variadic27_7264:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic27.C'
    sources:
      binary: variadic27.s
  group: GRPSERIAL
test_variadic27_7265:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic27.C'
    sources:
      binary: variadic27.s
  group: GRPSERIAL
test_variadic28_3507:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic28.C'
    sources:
      binary: variadic28.s
  group: GRPSERIAL
test_variadic28_3508:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic28.C'
    sources:
      binary: variadic28.s
  group: GRPSERIAL
test_variadic28_7266:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic28.C'
    sources:
      binary: variadic28.s
  group: GRPSERIAL
test_variadic28_7267:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic28.C'
    sources:
      binary: variadic28.s
  group: GRPSERIAL
test_variadic29_3509:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic29.C'
    sources:
      binary: variadic29.s
  group: GRPSERIAL
test_variadic29_3510:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic29.C'
    sources:
      binary: variadic29.s
  group: GRPSERIAL
test_variadic29_7268:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic29.C'
    sources:
      binary: variadic29.s
  group: GRPSERIAL
test_variadic29_7269:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic29.C'
    sources:
      binary: variadic29.s
  group: GRPSERIAL
test_variadic2_3489:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic2.C'
    sources:
      binary: variadic2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("at least 2")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("two_or_more<int,
          float>")[^\n]*\n?)+'
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default argument")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default argument")[^\n]*\n?)+'
test_variadic2_3490:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic2.C'
    sources:
      binary: variadic2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("at least 2")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("two_or_more<int,
          float>")[^\n]*\n?)+'
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default argument")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default argument")[^\n]*\n?)+'
test_variadic2_7248:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic2.C'
    sources:
      binary: variadic2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("at least 2")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("two_or_more<int,
          float>")[^\n]*\n?)+'
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default argument")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default argument")[^\n]*\n?)+'
test_variadic2_7249:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic2.C'
    sources:
      binary: variadic2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("at least 2")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("two_or_more<int,
          float>")[^\n]*\n?)+'
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default argument")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("default argument")[^\n]*\n?)+'
test_variadic30_3513:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic30.C'
    sources:
      binary: variadic30.s
  group: GRPSERIAL
test_variadic30_3514:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic30.C'
    sources:
      binary: variadic30.s
  group: GRPSERIAL
test_variadic30_7272:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic30.C'
    sources:
      binary: variadic30.s
  group: GRPSERIAL
test_variadic30_7273:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic30.C'
    sources:
      binary: variadic30.s
  group: GRPSERIAL
test_variadic31_3515:
  build:
    cflags: "-std=gnu++11 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic31.C'
    sources:
      binary: variadic31.s
  group: GRPSERIAL
test_variadic31_3516:
  build:
    cflags: "-std=gnu++14 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic31.C'
    sources:
      binary: variadic31.s
  group: GRPSERIAL
test_variadic31_7274:
  build:
    cflags: "-std=gnu++11 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic31.C'
    sources:
      binary: variadic31.s
  group: GRPSERIAL
test_variadic31_7275:
  build:
    cflags: "-std=gnu++14 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic31.C'
    sources:
      binary: variadic31.s
  group: GRPSERIAL
test_variadic32_3517:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic32.C'
    sources:
      binary: variadic32.s
  group: GRPSERIAL
test_variadic32_3518:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic32.C'
    sources:
      binary: variadic32.s
  group: GRPSERIAL
test_variadic32_7276:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic32.C'
    sources:
      binary: variadic32.s
  group: GRPSERIAL
test_variadic32_7277:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic32.C'
    sources:
      binary: variadic32.s
  group: GRPSERIAL
test_variadic33_3519:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic33.C'
    sources:
      binary: variadic33.s
  group: GRPSERIAL
test_variadic33_3520:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic33.C'
    sources:
      binary: variadic33.s
  group: GRPSERIAL
test_variadic33_7278:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic33.C'
    sources:
      binary: variadic33.s
  group: GRPSERIAL
test_variadic33_7279:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic33.C'
    sources:
      binary: variadic33.s
  group: GRPSERIAL
test_variadic34_3521:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic34.C'
    sources:
      binary: variadic34.s
  group: GRPSERIAL
test_variadic34_3522:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic34.C'
    sources:
      binary: variadic34.s
  group: GRPSERIAL
test_variadic34_7280:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic34.C'
    sources:
      binary: variadic34.s
  group: GRPSERIAL
test_variadic34_7281:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic34.C'
    sources:
      binary: variadic34.s
  group: GRPSERIAL
test_variadic35_3523:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic35.C'
    sources:
      binary: variadic35.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too few arguments")[^\n]*\n?)+'
test_variadic35_3524:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic35.C'
    sources:
      binary: variadic35.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too few arguments")[^\n]*\n?)+'
test_variadic35_7282:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic35.C'
    sources:
      binary: variadic35.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too few arguments")[^\n]*\n?)+'
test_variadic35_7283:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic35.C'
    sources:
      binary: variadic35.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too few arguments")[^\n]*\n?)+'
test_variadic36_3525:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic36.C'
    sources:
      binary: variadic36.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("packs not expanded")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("4:parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic36_3526:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic36.C'
    sources:
      binary: variadic36.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("packs not expanded")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("4:parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic36_7284:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic36.C'
    sources:
      binary: variadic36.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("packs not expanded")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("4:parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic36_7285:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic36.C'
    sources:
      binary: variadic36.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("packs not expanded")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("4:parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic37_3527:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic37.C'
    sources:
      binary: variadic37.s
  group: GRPSERIAL
test_variadic37_3528:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic37.C'
    sources:
      binary: variadic37.s
  group: GRPSERIAL
test_variadic37_7286:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic37.C'
    sources:
      binary: variadic37.s
  group: GRPSERIAL
test_variadic37_7287:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic37.C'
    sources:
      binary: variadic37.s
  group: GRPSERIAL
test_variadic38_3529:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic38.C'
    sources:
      binary: variadic38.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("involves template
          parameter")[^\n]*\n?)+'
test_variadic38_3530:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic38.C'
    sources:
      binary: variadic38.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("involves template
          parameter")[^\n]*\n?)+'
test_variadic38_7288:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic38.C'
    sources:
      binary: variadic38.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("involves template
          parameter")[^\n]*\n?)+'
test_variadic38_7289:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic38.C'
    sources:
      binary: variadic38.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("involves template
          parameter")[^\n]*\n?)+'
test_variadic39_3531:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic39.C'
    sources:
      binary: variadic39.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end")[^\n]*\n?)+'
test_variadic39_3532:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic39.C'
    sources:
      binary: variadic39.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end")[^\n]*\n?)+'
test_variadic39_7290:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic39.C'
    sources:
      binary: variadic39.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end")[^\n]*\n?)+'
test_variadic39_7291:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic39.C'
    sources:
      binary: variadic39.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end")[^\n]*\n?)+'
test_variadic3_3511:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic3.C'
    sources:
      binary: variadic3.s
  group: GRPSERIAL
test_variadic3_3512:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic3.C'
    sources:
      binary: variadic3.s
  group: GRPSERIAL
test_variadic3_7270:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic3.C'
    sources:
      binary: variadic3.s
  group: GRPSERIAL
test_variadic3_7271:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic3.C'
    sources:
      binary: variadic3.s
  group: GRPSERIAL
test_variadic40_3535:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic40.C'
    sources:
      binary: variadic40.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end")[^\n]*\n?)+'
test_variadic40_3536:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic40.C'
    sources:
      binary: variadic40.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end")[^\n]*\n?)+'
test_variadic40_7294:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic40.C'
    sources:
      binary: variadic40.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end")[^\n]*\n?)+'
test_variadic40_7295:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic40.C'
    sources:
      binary: variadic40.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("end")[^\n]*\n?)+'
test_variadic41_3537:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic41.C'
    sources:
      binary: variadic41.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_variadic41_3538:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic41.C'
    sources:
      binary: variadic41.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_variadic41_7296:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic41.C'
    sources:
      binary: variadic41.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_variadic41_7297:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic41.C'
    sources:
      binary: variadic41.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no match")[^\n]*\n?)+'
test_variadic42_3539:
  build:
    cflags: "-std=gnu++11 -fabi-version=5 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic42.C'
    sources:
      binary: variadic42.s
  group: GRPSERIAL
test_variadic42_3540:
  build:
    cflags: "-std=gnu++14 -fabi-version=5 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic42.C'
    sources:
      binary: variadic42.s
  group: GRPSERIAL
test_variadic42_7298:
  build:
    cflags: "-std=gnu++11 -fabi-version=5 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic42.C'
    sources:
      binary: variadic42.s
  group: GRPSERIAL
test_variadic42_7299:
  build:
    cflags: "-std=gnu++14 -fabi-version=5 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic42.C'
    sources:
      binary: variadic42.s
  group: GRPSERIAL
test_variadic43_3541:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic43.C'
    sources:
      binary: variadic43.s
  group: GRPSERIAL
test_variadic43_3542:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic43.C'
    sources:
      binary: variadic43.s
  group: GRPSERIAL
test_variadic43_7300:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic43.C'
    sources:
      binary: variadic43.s
  group: GRPSERIAL
test_variadic43_7301:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic43.C'
    sources:
      binary: variadic43.s
  group: GRPSERIAL
test_variadic44_3543:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic44.C'
    sources:
      binary: variadic44.s
  group: GRPSERIAL
test_variadic44_3544:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic44.C'
    sources:
      binary: variadic44.s
  group: GRPSERIAL
test_variadic44_7302:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic44.C'
    sources:
      binary: variadic44.s
  group: GRPSERIAL
test_variadic44_7303:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic44.C'
    sources:
      binary: variadic44.s
  group: GRPSERIAL
test_variadic45_3545:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic45.C'
    sources:
      binary: variadic45.s
  group: GRPSERIAL
test_variadic45_3546:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic45.C'
    sources:
      binary: variadic45.s
  group: GRPSERIAL
test_variadic45_7304:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic45.C'
    sources:
      binary: variadic45.s
  group: GRPSERIAL
test_variadic45_7305:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic45.C'
    sources:
      binary: variadic45.s
  group: GRPSERIAL
test_variadic46_3547:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic46.C'
    sources:
      binary: variadic46.s
  group: GRPSERIAL
test_variadic46_3548:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic46.C'
    sources:
      binary: variadic46.s
  group: GRPSERIAL
test_variadic46_7306:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic46.C'
    sources:
      binary: variadic46.s
  group: GRPSERIAL
test_variadic46_7307:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic46.C'
    sources:
      binary: variadic46.s
  group: GRPSERIAL
test_variadic47_3549:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic47.C'
    sources:
      binary: variadic47.s
  group: GRPSERIAL
test_variadic47_3550:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic47.C'
    sources:
      binary: variadic47.s
  group: GRPSERIAL
test_variadic47_7308:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic47.C'
    sources:
      binary: variadic47.s
  group: GRPSERIAL
test_variadic47_7309:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic47.C'
    sources:
      binary: variadic47.s
  group: GRPSERIAL
test_variadic48_3551:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic48.C'
    sources:
      binary: variadic48.s
  group: GRPSERIAL
test_variadic48_3552:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic48.C'
    sources:
      binary: variadic48.s
  group: GRPSERIAL
test_variadic48_7310:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic48.C'
    sources:
      binary: variadic48.s
  group: GRPSERIAL
test_variadic48_7311:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic48.C'
    sources:
      binary: variadic48.s
  group: GRPSERIAL
test_variadic49_3553:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic49.C'
    sources:
      binary: variadic49.s
  group: GRPSERIAL
test_variadic49_3554:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic49.C'
    sources:
      binary: variadic49.s
  group: GRPSERIAL
test_variadic49_7312:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic49.C'
    sources:
      binary: variadic49.s
  group: GRPSERIAL
test_variadic49_7313:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic49.C'
    sources:
      binary: variadic49.s
  group: GRPSERIAL
test_variadic4_3533:
  build:
    cflags: "-std=gnu++11 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic4.C'
    sources:
      binary: variadic4.s
  group: GRPSERIAL
test_variadic4_3534:
  build:
    cflags: "-std=gnu++14 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic4.C'
    sources:
      binary: variadic4.s
  group: GRPSERIAL
test_variadic4_7292:
  build:
    cflags: "-std=gnu++11 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic4.C'
    sources:
      binary: variadic4.s
  group: GRPSERIAL
test_variadic4_7293:
  build:
    cflags: "-std=gnu++14 -fabi-version=0 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic4.C'
    sources:
      binary: variadic4.s
  group: GRPSERIAL
test_variadic50_3557:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic50.C'
    sources:
      binary: variadic50.s
  group: GRPSERIAL
test_variadic50_3558:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic50.C'
    sources:
      binary: variadic50.s
  group: GRPSERIAL
test_variadic50_7316:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic50.C'
    sources:
      binary: variadic50.s
  group: GRPSERIAL
test_variadic50_7317:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic50.C'
    sources:
      binary: variadic50.s
  group: GRPSERIAL
test_variadic51_3559:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic51.C'
    sources:
      binary: variadic51.s
  group: GRPSERIAL
test_variadic51_3560:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic51.C'
    sources:
      binary: variadic51.s
  group: GRPSERIAL
test_variadic51_7318:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic51.C'
    sources:
      binary: variadic51.s
  group: GRPSERIAL
test_variadic51_7319:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic51.C'
    sources:
      binary: variadic51.s
  group: GRPSERIAL
test_variadic52_3561:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic52.C'
    sources:
      binary: variadic52.s
  group: GRPSERIAL
test_variadic52_3562:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic52.C'
    sources:
      binary: variadic52.s
  group: GRPSERIAL
test_variadic52_7320:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic52.C'
    sources:
      binary: variadic52.s
  group: GRPSERIAL
test_variadic52_7321:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic52.C'
    sources:
      binary: variadic52.s
  group: GRPSERIAL
test_variadic53_3563:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic53.C'
    sources:
      binary: variadic53.s
  group: GRPSERIAL
test_variadic53_3564:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic53.C'
    sources:
      binary: variadic53.s
  group: GRPSERIAL
test_variadic53_7322:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic53.C'
    sources:
      binary: variadic53.s
  group: GRPSERIAL
test_variadic53_7323:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic53.C'
    sources:
      binary: variadic53.s
  group: GRPSERIAL
test_variadic54_3565:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic54.C'
    sources:
      binary: variadic54.s
  group: GRPSERIAL
test_variadic54_3566:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic54.C'
    sources:
      binary: variadic54.s
  group: GRPSERIAL
test_variadic54_7324:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic54.C'
    sources:
      binary: variadic54.s
  group: GRPSERIAL
test_variadic54_7325:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic54.C'
    sources:
      binary: variadic54.s
  group: GRPSERIAL
test_variadic55_3567:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic55.C'
    sources:
      binary: variadic55.s
  group: GRPSERIAL
test_variadic55_3568:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic55.C'
    sources:
      binary: variadic55.s
  group: GRPSERIAL
test_variadic55_7326:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic55.C'
    sources:
      binary: variadic55.s
  group: GRPSERIAL
test_variadic55_7327:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic55.C'
    sources:
      binary: variadic55.s
  group: GRPSERIAL
test_variadic56_3569:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic56.C'
    sources:
      binary: variadic56.s
  group: GRPSERIAL
test_variadic56_3570:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic56.C'
    sources:
      binary: variadic56.s
  group: GRPSERIAL
test_variadic56_7328:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic56.C'
    sources:
      binary: variadic56.s
  group: GRPSERIAL
test_variadic56_7329:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic56.C'
    sources:
      binary: variadic56.s
  group: GRPSERIAL
test_variadic57_3571:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic57.C'
    sources:
      binary: variadic57.s
  group: GRPSERIAL
test_variadic57_3572:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic57.C'
    sources:
      binary: variadic57.s
  group: GRPSERIAL
test_variadic57_7330:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic57.C'
    sources:
      binary: variadic57.s
  group: GRPSERIAL
test_variadic57_7331:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic57.C'
    sources:
      binary: variadic57.s
  group: GRPSERIAL
test_variadic58_3573:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic58.C'
    sources:
      binary: variadic58.s
  group: GRPSERIAL
test_variadic58_3574:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic58.C'
    sources:
      binary: variadic58.s
  group: GRPSERIAL
test_variadic58_7332:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic58.C'
    sources:
      binary: variadic58.s
  group: GRPSERIAL
test_variadic58_7333:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic58.C'
    sources:
      binary: variadic58.s
  group: GRPSERIAL
test_variadic59_3575:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic59.C'
    sources:
      binary: variadic59.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("packs not expanded")[^\n]*\n?)+'
test_variadic59_3576:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic59.C'
    sources:
      binary: variadic59.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("packs not expanded")[^\n]*\n?)+'
test_variadic59_7334:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic59.C'
    sources:
      binary: variadic59.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("packs not expanded")[^\n]*\n?)+'
test_variadic59_7335:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic59.C'
    sources:
      binary: variadic59.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("packs not expanded")[^\n]*\n?)+'
test_variadic5_3555:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic5.C'
    sources:
      binary: variadic5.s
  group: GRPSERIAL
test_variadic5_3556:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic5.C'
    sources:
      binary: variadic5.s
  group: GRPSERIAL
test_variadic5_7314:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic5.C'
    sources:
      binary: variadic5.s
  group: GRPSERIAL
test_variadic5_7315:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic5.C'
    sources:
      binary: variadic5.s
  group: GRPSERIAL
test_variadic60_3579:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic60.C'
    sources:
      binary: variadic60.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variadic templates")[^\n]*\n?)+'
test_variadic60_3580:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic60.C'
    sources:
      binary: variadic60.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variadic templates")[^\n]*\n?)+'
test_variadic60_3581:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic60.C'
    sources:
      binary: variadic60.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variadic templates")[^\n]*\n?)+'
test_variadic60_7338:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic60.C'
    sources:
      binary: variadic60.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variadic templates")[^\n]*\n?)+'
test_variadic60_7339:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic60.C'
    sources:
      binary: variadic60.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variadic templates")[^\n]*\n?)+'
test_variadic60_7340:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic60.C'
    sources:
      binary: variadic60.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variadic templates")[^\n]*\n?)+'
test_variadic61_3582:
  build:
    cflags: "-std=gnu++98 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic61.C'
    sources:
      binary: variadic61.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("variadic templates")[^\n]*\n?)+'
test_variadic61_7341:
  build:
    cflags: "-std=gnu++98 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic61.C'
    sources:
      binary: variadic61.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("variadic templates")[^\n]*\n?)+'
test_variadic62_3583:
  build:
    cflags: "-std=gnu++98 -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic62.C'
    sources:
      binary: variadic62.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variadic templates")[^\n]*\n?)+'
test_variadic62_7342:
  build:
    cflags: "-std=gnu++98 -pedantic-errors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic62.C'
    sources:
      binary: variadic62.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variadic templates")[^\n]*\n?)+'
test_variadic63_3584:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic63.C'
    sources:
      binary: variadic63.s
  group: GRPSERIAL
test_variadic63_3585:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic63.C'
    sources:
      binary: variadic63.s
  group: GRPSERIAL
test_variadic63_7343:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic63.C'
    sources:
      binary: variadic63.s
  group: GRPSERIAL
test_variadic63_7344:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic63.C'
    sources:
      binary: variadic63.s
  group: GRPSERIAL
test_variadic64_3586:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic64.C'
    sources:
      binary: variadic64.s
  group: GRPSERIAL
test_variadic64_3587:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic64.C'
    sources:
      binary: variadic64.s
  group: GRPSERIAL
test_variadic64_7345:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic64.C'
    sources:
      binary: variadic64.s
  group: GRPSERIAL
test_variadic64_7346:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic64.C'
    sources:
      binary: variadic64.s
  group: GRPSERIAL
test_variadic65_3588:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic65.C'
    sources:
      binary: variadic65.s
  group: GRPSERIAL
test_variadic65_3589:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic65.C'
    sources:
      binary: variadic65.s
  group: GRPSERIAL
test_variadic65_7347:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic65.C'
    sources:
      binary: variadic65.s
  group: GRPSERIAL
test_variadic65_7348:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic65.C'
    sources:
      binary: variadic65.s
  group: GRPSERIAL
test_variadic66_3590:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic66.C'
    sources:
      binary: variadic66.s
  group: GRPSERIAL
test_variadic66_3591:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic66.C'
    sources:
      binary: variadic66.s
  group: GRPSERIAL
test_variadic66_7349:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic66.C'
    sources:
      binary: variadic66.s
  group: GRPSERIAL
test_variadic66_7350:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic66.C'
    sources:
      binary: variadic66.s
  group: GRPSERIAL
test_variadic67_3592:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic67.C'
    sources:
      binary: variadic67.s
  group: GRPSERIAL
test_variadic67_3593:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic67.C'
    sources:
      binary: variadic67.s
  group: GRPSERIAL
test_variadic67_7351:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic67.C'
    sources:
      binary: variadic67.s
  group: GRPSERIAL
test_variadic67_7352:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic67.C'
    sources:
      binary: variadic67.s
  group: GRPSERIAL
test_variadic68_3594:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic68.C'
    sources:
      binary: ./variadic68.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic68_3595:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic68.C'
    sources:
      binary: ./variadic68.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic68_7353:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic68.C'
    sources:
      binary: ./variadic68.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic68_7354:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic68.C'
    sources:
      binary: ./variadic68.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic69_3596:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic69.C'
    sources:
      binary: variadic69.s
  group: GRPSERIAL
test_variadic69_3597:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic69.C'
    sources:
      binary: variadic69.s
  group: GRPSERIAL
test_variadic69_7355:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic69.C'
    sources:
      binary: variadic69.s
  group: GRPSERIAL
test_variadic69_7356:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic69.C'
    sources:
      binary: variadic69.s
  group: GRPSERIAL
test_variadic6_3577:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic6.C'
    sources:
      binary: variadic6.s
  group: GRPSERIAL
test_variadic6_3578:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic6.C'
    sources:
      binary: variadic6.s
  group: GRPSERIAL
test_variadic6_7336:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic6.C'
    sources:
      binary: variadic6.s
  group: GRPSERIAL
test_variadic6_7337:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic6.C'
    sources:
      binary: variadic6.s
  group: GRPSERIAL
test_variadic70_3600:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic70.C'
    sources:
      binary: ./variadic70.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic70_3601:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic70.C'
    sources:
      binary: ./variadic70.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic70_7359:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic70.C'
    sources:
      binary: ./variadic70.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic70_7360:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic70.C'
    sources:
      binary: ./variadic70.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic71_3602:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic71.C'
    sources:
      binary: variadic71.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic71_3603:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic71.C'
    sources:
      binary: variadic71.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic71_7361:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic71.C'
    sources:
      binary: variadic71.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic71_7362:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic71.C'
    sources:
      binary: variadic71.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs
          not expanded")[^\n]*\n?)+'
test_variadic72_3604:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic72.C'
    sources:
      binary: variadic72.s
  group: GRPSERIAL
test_variadic72_3605:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic72.C'
    sources:
      binary: variadic72.s
  group: GRPSERIAL
test_variadic72_7363:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic72.C'
    sources:
      binary: variadic72.s
  group: GRPSERIAL
test_variadic72_7364:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic72.C'
    sources:
      binary: variadic72.s
  group: GRPSERIAL
test_variadic73_3606:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic73.C'
    sources:
      binary: ./variadic73.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_variadic73_3607:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic73.C'
    sources:
      binary: ./variadic73.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_variadic73_7365:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic73.C'
    sources:
      binary: ./variadic73.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_variadic73_7366:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic73.C'
    sources:
      binary: ./variadic73.exe
  group: GRPSERIAL
  run:
    cwd: .
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_variadic74_3608:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic74.C'
    sources:
      binary: variadic74.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of template arguments")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of template arguments")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a valid type
          for a template non-type parameter")[^\n]*\n?)+'
test_variadic74_3609:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic74.C'
    sources:
      binary: variadic74.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of template arguments")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of template arguments")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a valid type
          for a template non-type parameter")[^\n]*\n?)+'
test_variadic74_7367:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic74.C'
    sources:
      binary: variadic74.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of template arguments")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of template arguments")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a valid type
          for a template non-type parameter")[^\n]*\n?)+'
test_variadic74_7368:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic74.C'
    sources:
      binary: variadic74.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of template arguments")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of template arguments")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a valid type
          for a template non-type parameter")[^\n]*\n?)+'
test_variadic75_3610:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic75.C'
    sources:
      binary: variadic75.s
  group: GRPSERIAL
test_variadic75_3611:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic75.C'
    sources:
      binary: variadic75.s
  group: GRPSERIAL
test_variadic75_7369:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic75.C'
    sources:
      binary: variadic75.s
  group: GRPSERIAL
test_variadic75_7370:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic75.C'
    sources:
      binary: variadic75.s
  group: GRPSERIAL
test_variadic76_3612:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic76.C'
    sources:
      binary: variadic76.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic76_3613:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic76.C'
    sources:
      binary: variadic76.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic76_7371:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic76.C'
    sources:
      binary: variadic76.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic76_7372:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic76.C'
    sources:
      binary: variadic76.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic77_3614:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic77.C'
    sources:
      binary: variadic77.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic77_3615:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic77.C'
    sources:
      binary: variadic77.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic77_7373:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic77.C'
    sources:
      binary: variadic77.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic77_7374:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic77.C'
    sources:
      binary: variadic77.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic78_3616:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic78.C'
    sources:
      binary: variadic78.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack lengths")[^\n]*\n?)+'
test_variadic78_3617:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic78.C'
    sources:
      binary: variadic78.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack lengths")[^\n]*\n?)+'
test_variadic78_7375:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic78.C'
    sources:
      binary: variadic78.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack lengths")[^\n]*\n?)+'
test_variadic78_7376:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic78.C'
    sources:
      binary: variadic78.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatched argument
          pack lengths")[^\n]*\n?)+'
test_variadic79_3618:
  build:
    cflags: "-std=gnu++11 -fno-new-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic79.C'
    sources:
      binary: variadic79.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|\''template<class
          ...> class ... B ...\''")[^\n]*\n?)+'
test_variadic79_3619:
  build:
    cflags: "-std=gnu++14 -fno-new-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic79.C'
    sources:
      binary: variadic79.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|\''template<class
          ...> class ... B ...\''")[^\n]*\n?)+'
test_variadic79_7377:
  build:
    cflags: "-std=gnu++11 -fno-new-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic79.C'
    sources:
      binary: variadic79.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|\''template<class
          ...> class ... B ...\''")[^\n]*\n?)+'
test_variadic79_7378:
  build:
    cflags: "-std=gnu++14 -fno-new-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic79.C'
    sources:
      binary: variadic79.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|\''template<class
          ...> class ... B ...\''")[^\n]*\n?)+'
test_variadic79a_3620:
  build:
    cflags: "-std=gnu++11 -fnew-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic79a.C'
    sources:
      binary: variadic79a.s
  group: GRPSERIAL
test_variadic79a_3621:
  build:
    cflags: "-std=gnu++14 -fnew-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic79a.C'
    sources:
      binary: variadic79a.s
  group: GRPSERIAL
test_variadic79a_7379:
  build:
    cflags: "-std=gnu++11 -fnew-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic79a.C'
    sources:
      binary: variadic79a.s
  group: GRPSERIAL
test_variadic79a_7380:
  build:
    cflags: "-std=gnu++14 -fnew-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic79a.C'
    sources:
      binary: variadic79a.s
  group: GRPSERIAL
test_variadic7_3598:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic7.C'
    sources:
      binary: variadic7.s
  group: GRPSERIAL
test_variadic7_3599:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic7.C'
    sources:
      binary: variadic7.s
  group: GRPSERIAL
test_variadic7_7357:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic7.C'
    sources:
      binary: variadic7.s
  group: GRPSERIAL
test_variadic7_7358:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic7.C'
    sources:
      binary: variadic7.s
  group: GRPSERIAL
test_variadic80_3624:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic80.C'
    sources:
      binary: ./variadic80.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic80_3625:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic80.C'
    sources:
      binary: ./variadic80.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic80_7383:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic80.C'
    sources:
      binary: ./variadic80.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic80_7384:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic80.C'
    sources:
      binary: ./variadic80.exe
  group: GRPSERIAL
  run:
    cwd: .
test_variadic81_3626:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic81.C'
    sources:
      binary: variadic81.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T|not
          used|T")[^\n]*\n?)+'
test_variadic81_3627:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic81.C'
    sources:
      binary: variadic81.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T|not
          used|T")[^\n]*\n?)+'
test_variadic81_7385:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic81.C'
    sources:
      binary: variadic81.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T|not
          used|T")[^\n]*\n?)+'
test_variadic81_7386:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic81.C'
    sources:
      binary: variadic81.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T|not
          used|T")[^\n]*\n?)+'
test_variadic82_3628:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic82.C'
    sources:
      binary: variadic82.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic82_3629:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic82.C'
    sources:
      binary: variadic82.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic82_7387:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic82.C'
    sources:
      binary: variadic82.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic82_7388:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic82.C'
    sources:
      binary: variadic82.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic83_3630:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic83.C'
    sources:
      binary: variadic83.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic83_3631:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic83.C'
    sources:
      binary: variadic83.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic83_7389:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic83.C'
    sources:
      binary: variadic83.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic83_7390:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic83.C'
    sources:
      binary: variadic83.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_variadic84_3632:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic84.C'
    sources:
      binary: variadic84.s
  group: GRPSERIAL
test_variadic84_3633:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic84.C'
    sources:
      binary: variadic84.s
  group: GRPSERIAL
test_variadic84_7391:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic84.C'
    sources:
      binary: variadic84.s
  group: GRPSERIAL
test_variadic84_7392:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic84.C'
    sources:
      binary: variadic84.s
  group: GRPSERIAL
test_variadic85_3634:
  build:
    cflags: "-std=gnu++11 -fno-new-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic85.C'
    sources:
      binary: variadic85.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_variadic85_3635:
  build:
    cflags: "-std=gnu++14 -fno-new-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic85.C'
    sources:
      binary: variadic85.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_variadic85_7393:
  build:
    cflags: "-std=gnu++11 -fno-new-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic85.C'
    sources:
      binary: variadic85.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_variadic85_7394:
  build:
    cflags: "-std=gnu++14 -fno-new-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic85.C'
    sources:
      binary: variadic85.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_variadic85a_3636:
  build:
    cflags: "-std=gnu++11 -fnew-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic85a.C'
    sources:
      binary: variadic85a.s
  group: GRPSERIAL
test_variadic85a_3637:
  build:
    cflags: "-std=gnu++14 -fnew-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic85a.C'
    sources:
      binary: variadic85a.s
  group: GRPSERIAL
test_variadic85a_7395:
  build:
    cflags: "-std=gnu++11 -fnew-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic85a.C'
    sources:
      binary: variadic85a.s
  group: GRPSERIAL
test_variadic85a_7396:
  build:
    cflags: "-std=gnu++14 -fnew-ttp-matching\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic85a.C'
    sources:
      binary: variadic85a.s
  group: GRPSERIAL
test_variadic86_3638:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic86.C'
    sources:
      binary: variadic86.s
  group: GRPSERIAL
test_variadic86_3639:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic86.C'
    sources:
      binary: variadic86.s
  group: GRPSERIAL
test_variadic86_7397:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic86.C'
    sources:
      binary: variadic86.s
  group: GRPSERIAL
test_variadic86_7398:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic86.C'
    sources:
      binary: variadic86.s
  group: GRPSERIAL
test_variadic87_3640:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic87.C'
    sources:
      binary: variadic87.s
  group: GRPSERIAL
test_variadic87_3641:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic87.C'
    sources:
      binary: variadic87.s
  group: GRPSERIAL
test_variadic87_7399:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic87.C'
    sources:
      binary: variadic87.s
  group: GRPSERIAL
test_variadic87_7400:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic87.C'
    sources:
      binary: variadic87.s
  group: GRPSERIAL
test_variadic88_3642:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic88.C'
    sources:
      binary: variadic88.s
  group: GRPSERIAL
test_variadic88_3643:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic88.C'
    sources:
      binary: variadic88.s
  group: GRPSERIAL
test_variadic88_7401:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic88.C'
    sources:
      binary: variadic88.s
  group: GRPSERIAL
test_variadic88_7402:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic88.C'
    sources:
      binary: variadic88.s
  group: GRPSERIAL
test_variadic89_3644:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic89.C'
    sources:
      binary: variadic89.s
  group: GRPSERIAL
test_variadic89_3645:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic89.C'
    sources:
      binary: variadic89.s
  group: GRPSERIAL
test_variadic89_7403:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic89.C'
    sources:
      binary: variadic89.s
  group: GRPSERIAL
test_variadic89_7404:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic89.C'
    sources:
      binary: variadic89.s
  group: GRPSERIAL
test_variadic8_3622:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic8.C'
    sources:
      binary: variadic8.s
  group: GRPSERIAL
test_variadic8_3623:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic8.C'
    sources:
      binary: variadic8.s
  group: GRPSERIAL
test_variadic8_7381:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic8.C'
    sources:
      binary: variadic8.s
  group: GRPSERIAL
test_variadic8_7382:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic8.C'
    sources:
      binary: variadic8.s
  group: GRPSERIAL
test_variadic90_3648:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic90.C'
    sources:
      binary: variadic90.s
  group: GRPSERIAL
test_variadic90_3649:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic90.C'
    sources:
      binary: variadic90.s
  group: GRPSERIAL
test_variadic90_7407:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic90.C'
    sources:
      binary: variadic90.s
  group: GRPSERIAL
test_variadic90_7408:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic90.C'
    sources:
      binary: variadic90.s
  group: GRPSERIAL
test_variadic91_3650:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic91.C'
    sources:
      binary: variadic91.s
  group: GRPSERIAL
test_variadic91_3651:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic91.C'
    sources:
      binary: variadic91.s
  group: GRPSERIAL
test_variadic91_7409:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic91.C'
    sources:
      binary: variadic91.s
  group: GRPSERIAL
test_variadic91_7410:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic91.C'
    sources:
      binary: variadic91.s
  group: GRPSERIAL
test_variadic92_3652:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic92.C'
    sources:
      binary: variadic92.s
  group: GRPSERIAL
test_variadic92_3653:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic92.C'
    sources:
      binary: variadic92.s
  group: GRPSERIAL
test_variadic92_7411:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic92.C'
    sources:
      binary: variadic92.s
  group: GRPSERIAL
test_variadic92_7412:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic92.C'
    sources:
      binary: variadic92.s
  group: GRPSERIAL
test_variadic93_3654:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic93.C'
    sources:
      binary: variadic93.s
  group: GRPSERIAL
test_variadic93_3655:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic93.C'
    sources:
      binary: variadic93.s
  group: GRPSERIAL
test_variadic93_7413:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic93.C'
    sources:
      binary: variadic93.s
  group: GRPSERIAL
test_variadic93_7414:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic93.C'
    sources:
      binary: variadic93.s
  group: GRPSERIAL
test_variadic94_3656:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic94.C'
    sources:
      binary: variadic94.s
  group: GRPSERIAL
test_variadic94_3657:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic94.C'
    sources:
      binary: variadic94.s
  group: GRPSERIAL
test_variadic94_7415:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic94.C'
    sources:
      binary: variadic94.s
  group: GRPSERIAL
test_variadic94_7416:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic94.C'
    sources:
      binary: variadic94.s
  group: GRPSERIAL
test_variadic95_3658:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic95.C'
    sources:
      binary: variadic95.s
  group: GRPSERIAL
test_variadic95_3659:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic95.C'
    sources:
      binary: variadic95.s
  group: GRPSERIAL
test_variadic95_7417:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic95.C'
    sources:
      binary: variadic95.s
  group: GRPSERIAL
test_variadic95_7418:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic95.C'
    sources:
      binary: variadic95.s
  group: GRPSERIAL
test_variadic96_3660:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic96.C'
    sources:
      binary: variadic96.s
  group: GRPSERIAL
test_variadic96_3661:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic96.C'
    sources:
      binary: variadic96.s
  group: GRPSERIAL
test_variadic96_7419:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic96.C'
    sources:
      binary: variadic96.s
  group: GRPSERIAL
test_variadic96_7420:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic96.C'
    sources:
      binary: variadic96.s
  group: GRPSERIAL
test_variadic97_3662:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic97.C'
    sources:
      binary: variadic97.s
  group: GRPSERIAL
test_variadic97_3663:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic97.C'
    sources:
      binary: variadic97.s
  group: GRPSERIAL
test_variadic97_7421:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic97.C'
    sources:
      binary: variadic97.s
  group: GRPSERIAL
test_variadic97_7422:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic97.C'
    sources:
      binary: variadic97.s
  group: GRPSERIAL
test_variadic98_3664:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -c"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic98.C'
    sources:
      binary: variadic98.o
  group: GRPSERIAL
test_variadic98_3665:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -c"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic98.C'
    sources:
      binary: variadic98.o
  group: GRPSERIAL
test_variadic98_7423:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -c"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic98.C'
    sources:
      binary: variadic98.o
  group: GRPSERIAL
test_variadic98_7424:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -c"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic98.C'
    sources:
      binary: variadic98.o
  group: GRPSERIAL
test_variadic99_3666:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic99.C'
    sources:
      binary: variadic99.s
  group: GRPSERIAL
test_variadic99_3667:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic99.C'
    sources:
      binary: variadic99.s
  group: GRPSERIAL
test_variadic99_7425:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic99.C'
    sources:
      binary: variadic99.s
  group: GRPSERIAL
test_variadic99_7426:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic99.C'
    sources:
      binary: variadic99.s
  group: GRPSERIAL
test_variadic9_3646:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic9.C'
    sources:
      binary: variadic9.s
  group: GRPSERIAL
test_variadic9_3647:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic9.C'
    sources:
      binary: variadic9.s
  group: GRPSERIAL
test_variadic9_7405:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic9.C'
    sources:
      binary: variadic9.s
  group: GRPSERIAL
test_variadic9_7406:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/variadic9.C'
    sources:
      binary: variadic9.s
  group: GRPSERIAL
test_vt-33964_3668:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-33964.C'
    sources:
      binary: vt-33964.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not deducible|Args")[^\n]*\n?)+'
test_vt-33964_3669:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-33964.C'
    sources:
      binary: vt-33964.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not deducible|Args")[^\n]*\n?)+'
test_vt-33964_7427:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-33964.C'
    sources:
      binary: vt-33964.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not deducible|Args")[^\n]*\n?)+'
test_vt-33964_7428:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-33964.C'
    sources:
      binary: vt-33964.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not deducible|Args")[^\n]*\n?)+'
test_vt-34050_3670:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34050.C'
    sources:
      binary: vt-34050.s
  group: GRPSERIAL
test_vt-34050_3671:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34050.C'
    sources:
      binary: vt-34050.s
  group: GRPSERIAL
test_vt-34050_7429:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34050.C'
    sources:
      binary: vt-34050.s
  group: GRPSERIAL
test_vt-34050_7430:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34050.C'
    sources:
      binary: vt-34050.s
  group: GRPSERIAL
test_vt-34051-2_3672:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34051-2.C'
    sources:
      binary: vt-34051-2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34051-2_3673:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34051-2.C'
    sources:
      binary: vt-34051-2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34051-2_7431:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34051-2.C'
    sources:
      binary: vt-34051-2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34051-2_7432:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34051-2.C'
    sources:
      binary: vt-34051-2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34051_3674:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34051.C'
    sources:
      binary: vt-34051.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34051_3675:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34051.C'
    sources:
      binary: vt-34051.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34051_7433:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34051.C'
    sources:
      binary: vt-34051.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34051_7434:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34051.C'
    sources:
      binary: vt-34051.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34052_3676:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34052.C'
    sources:
      binary: vt-34052.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|constant|wrong|invalid")[^\n]*\n?)+'
test_vt-34052_3677:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34052.C'
    sources:
      binary: vt-34052.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|constant|wrong|invalid")[^\n]*\n?)+'
test_vt-34052_7435:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34052.C'
    sources:
      binary: vt-34052.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|constant|wrong|invalid")[^\n]*\n?)+'
test_vt-34052_7436:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34052.C'
    sources:
      binary: vt-34052.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter pack")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mismatch|constant|wrong|invalid")[^\n]*\n?)+'
test_vt-34055_3678:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34055.C'
    sources:
      binary: vt-34055.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34055_3679:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34055.C'
    sources:
      binary: vt-34055.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34055_7437:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34055.C'
    sources:
      binary: vt-34055.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34055_7438:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34055.C'
    sources:
      binary: vt-34055.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid declarator")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34102_3680:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34102.C'
    sources:
      binary: vt-34102.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34102_3681:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34102.C'
    sources:
      binary: vt-34102.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34102_7439:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34102.C'
    sources:
      binary: vt-34102.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34102_7440:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34102.C'
    sources:
      binary: vt-34102.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34103_3682:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34103.C'
    sources:
      binary: vt-34103.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34103_3683:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34103.C'
    sources:
      binary: vt-34103.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34103_7441:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34103.C'
    sources:
      binary: vt-34103.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34103_7442:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34103.C'
    sources:
      binary: vt-34103.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34219-2_3684:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34219-2.C'
    sources:
      binary: vt-34219-2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34219-2_3685:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34219-2.C'
    sources:
      binary: vt-34219-2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34219-2_7443:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34219-2.C'
    sources:
      binary: vt-34219-2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34219-2_7444:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34219-2.C'
    sources:
      binary: vt-34219-2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-34219_3686:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34219.C'
    sources:
      binary: vt-34219.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|Params")[^\n]*\n?)+'
test_vt-34219_3687:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34219.C'
    sources:
      binary: vt-34219.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|Params")[^\n]*\n?)+'
test_vt-34219_7445:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34219.C'
    sources:
      binary: vt-34219.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|Params")[^\n]*\n?)+'
test_vt-34219_7446:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34219.C'
    sources:
      binary: vt-34219.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|Params")[^\n]*\n?)+'
test_vt-34314_3688:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34314.C'
    sources:
      binary: vt-34314.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template parameter")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared here")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template parameter")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template parameter")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared here")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared here")[^\n]*\n?)+'
test_vt-34314_3689:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34314.C'
    sources:
      binary: vt-34314.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template parameter")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared here")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template parameter")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template parameter")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared here")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared here")[^\n]*\n?)+'
test_vt-34314_7447:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34314.C'
    sources:
      binary: vt-34314.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template parameter")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared here")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template parameter")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template parameter")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared here")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared here")[^\n]*\n?)+'
test_vt-34314_7448:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34314.C'
    sources:
      binary: vt-34314.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template parameter")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared here")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template parameter")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template parameter")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared here")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared here")[^\n]*\n?)+'
test_vt-34399_3690:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34399.C'
    sources:
      binary: vt-34399.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared as friend")[^\n]*\n?)+'
test_vt-34399_3691:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34399.C'
    sources:
      binary: vt-34399.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared as friend")[^\n]*\n?)+'
test_vt-34399_7449:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34399.C'
    sources:
      binary: vt-34399.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared as friend")[^\n]*\n?)+'
test_vt-34399_7450:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34399.C'
    sources:
      binary: vt-34399.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declared as friend")[^\n]*\n?)+'
test_vt-34606_3692:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34606.C'
    sources:
      binary: vt-34606.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|U")[^\n]*\n?)+'
test_vt-34606_3693:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34606.C'
    sources:
      binary: vt-34606.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|U")[^\n]*\n?)+'
test_vt-34606_7451:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34606.C'
    sources:
      binary: vt-34606.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|U")[^\n]*\n?)+'
test_vt-34606_7452:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34606.C'
    sources:
      binary: vt-34606.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|U")[^\n]*\n?)+'
test_vt-34751_3694:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34751.C'
    sources:
      binary: vt-34751.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument|no default argument")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument|no default argument")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument")[^\n]*\n?)+'
test_vt-34751_3695:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34751.C'
    sources:
      binary: vt-34751.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument|no default argument")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument|no default argument")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument")[^\n]*\n?)+'
test_vt-34751_7453:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34751.C'
    sources:
      binary: vt-34751.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument|no default argument")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument|no default argument")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument")[^\n]*\n?)+'
test_vt-34751_7454:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34751.C'
    sources:
      binary: vt-34751.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument|no default argument")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument|no default argument")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot have a
          default argument")[^\n]*\n?)+'
test_vt-34753_3696:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34753.C'
    sources:
      binary: vt-34753.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-34753_3697:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34753.C'
    sources:
      binary: vt-34753.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-34753_7455:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34753.C'
    sources:
      binary: vt-34753.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-34753_7456:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34753.C'
    sources:
      binary: vt-34753.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-34754_3698:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34754.C'
    sources:
      binary: vt-34754.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-34754_3699:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34754.C'
    sources:
      binary: vt-34754.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-34754_7457:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34754.C'
    sources:
      binary: vt-34754.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-34754_7458:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34754.C'
    sources:
      binary: vt-34754.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-34755_3700:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34755.C'
    sources:
      binary: vt-34755.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not match")[^\n]*\n?)+'
test_vt-34755_3701:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34755.C'
    sources:
      binary: vt-34755.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not match")[^\n]*\n?)+'
test_vt-34755_7459:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34755.C'
    sources:
      binary: vt-34755.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not match")[^\n]*\n?)+'
test_vt-34755_7460:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34755.C'
    sources:
      binary: vt-34755.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not match")[^\n]*\n?)+'
test_vt-34919_3702:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34919.C'
    sources:
      binary: vt-34919.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|N")[^\n]*\n?)+'
test_vt-34919_3703:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34919.C'
    sources:
      binary: vt-34919.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|N")[^\n]*\n?)+'
test_vt-34919_7461:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34919.C'
    sources:
      binary: vt-34919.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|N")[^\n]*\n?)+'
test_vt-34919_7462:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34919.C'
    sources:
      binary: vt-34919.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|N")[^\n]*\n?)+'
test_vt-34961_3704:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34961.C'
    sources:
      binary: vt-34961.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-34961_3705:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34961.C'
    sources:
      binary: vt-34961.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-34961_7463:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34961.C'
    sources:
      binary: vt-34961.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-34961_7464:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-34961.C'
    sources:
      binary: vt-34961.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-35023_3706:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35023.C'
    sources:
      binary: vt-35023.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35023_3707:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35023.C'
    sources:
      binary: vt-35023.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35023_7465:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35023.C'
    sources:
      binary: vt-35023.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35023_7466:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35023.C'
    sources:
      binary: vt-35023.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35024_3708:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35024.C'
    sources:
      binary: vt-35024.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35024_3709:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35024.C'
    sources:
      binary: vt-35024.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35024_7467:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35024.C'
    sources:
      binary: vt-35024.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35024_7468:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35024.C'
    sources:
      binary: vt-35024.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35026_3710:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35026.C'
    sources:
      binary: vt-35026.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35026_3711:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35026.C'
    sources:
      binary: vt-35026.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35026_7469:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35026.C'
    sources:
      binary: vt-35026.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35026_7470:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35026.C'
    sources:
      binary: vt-35026.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35147_3712:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35147.C'
    sources:
      binary: vt-35147.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-35147_3713:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35147.C'
    sources:
      binary: vt-35147.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-35147_7471:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35147.C'
    sources:
      binary: vt-35147.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-35147_7472:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35147.C'
    sources:
      binary: vt-35147.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-35242_3714:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35242.C'
    sources:
      binary: vt-35242.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35242_3715:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35242.C'
    sources:
      binary: vt-35242.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35242_7473:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35242.C'
    sources:
      binary: vt-35242.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35242_7474:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35242.C'
    sources:
      binary: vt-35242.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs|T")[^\n]*\n?)+'
test_vt-35243_3716:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35243.C'
    sources:
      binary: vt-35243.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
test_vt-35243_3717:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35243.C'
    sources:
      binary: vt-35243.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
test_vt-35243_7475:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35243.C'
    sources:
      binary: vt-35243.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
test_vt-35243_7476:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35243.C'
    sources:
      binary: vt-35243.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
test_vt-35331_3718:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35331.C'
    sources:
      binary: vt-35331.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-35331_3719:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35331.C'
    sources:
      binary: vt-35331.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-35331_7477:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35331.C'
    sources:
      binary: vt-35331.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-35331_7478:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-35331.C'
    sources:
      binary: vt-35331.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not expanded|T")[^\n]*\n?)+'
test_vt-37737-1_3720:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-37737-1.C'
    sources:
      binary: vt-37737-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-37737-1_3721:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-37737-1.C'
    sources:
      binary: vt-37737-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-37737-1_7479:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-37737-1.C'
    sources:
      binary: vt-37737-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-37737-1_7480:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-37737-1.C'
    sources:
      binary: vt-37737-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-37737-2_3722:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-37737-2.C'
    sources:
      binary: vt-37737-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template-id")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-37737-2_3723:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-37737-2.C'
    sources:
      binary: vt-37737-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template-id")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-37737-2_7481:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-37737-2.C'
    sources:
      binary: vt-37737-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template-id")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-37737-2_7482:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-37737-2.C'
    sources:
      binary: vt-37737-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("template-id")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-40092_3724:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-40092.C'
    sources:
      binary: vt-40092.s
  group: GRPSERIAL
test_vt-40092_3725:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-40092.C'
    sources:
      binary: vt-40092.s
  group: GRPSERIAL
test_vt-40092_7483:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-40092.C'
    sources:
      binary: vt-40092.s
  group: GRPSERIAL
test_vt-40092_7484:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-40092.C'
    sources:
      binary: vt-40092.s
  group: GRPSERIAL
test_vt-51314_3726:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-51314.C'
    sources:
      binary: vt-51314.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("surrounded by
          parentheses")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("surrounded by
          parentheses")[^\n]*\n?)+'
test_vt-51314_3727:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-51314.C'
    sources:
      binary: vt-51314.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("surrounded by
          parentheses")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("surrounded by
          parentheses")[^\n]*\n?)+'
test_vt-51314_7485:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-51314.C'
    sources:
      binary: vt-51314.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("surrounded by
          parentheses")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("surrounded by
          parentheses")[^\n]*\n?)+'
test_vt-51314_7486:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-51314.C'
    sources:
      binary: vt-51314.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("surrounded by
          parentheses")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("surrounded by
          parentheses")[^\n]*\n?)+'
test_vt-55323_3728:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-55323.C'
    sources:
      binary: vt-55323.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs")[^\n]*\n?)+'
test_vt-55323_3729:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-55323.C'
    sources:
      binary: vt-55323.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs")[^\n]*\n?)+'
test_vt-55323_7487:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-55323.C'
    sources:
      binary: vt-55323.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs")[^\n]*\n?)+'
test_vt-55323_7488:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-55323.C'
    sources:
      binary: vt-55323.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter packs")[^\n]*\n?)+'
test_vt-55542_3730:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-55542.C'
    sources:
      binary: vt-55542.s
  group: GRPSERIAL
test_vt-55542_3731:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-55542.C'
    sources:
      binary: vt-55542.s
  group: GRPSERIAL
test_vt-55542_7489:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-55542.C'
    sources:
      binary: vt-55542.s
  group: GRPSERIAL
test_vt-55542_7490:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-55542.C'
    sources:
      binary: vt-55542.s
  group: GRPSERIAL
test_vt-57397-1_3732:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-57397-1.C'
    sources:
      binary: vt-57397-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-57397-1_3733:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-57397-1.C'
    sources:
      binary: vt-57397-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-57397-1_7491:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-57397-1.C'
    sources:
      binary: vt-57397-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-57397-1_7492:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-57397-1.C'
    sources:
      binary: vt-57397-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-57397-2_3734:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-57397-2.C'
    sources:
      binary: vt-57397-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-57397-2_3735:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-57397-2.C'
    sources:
      binary: vt-57397-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-57397-2_7493:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-57397-2.C'
    sources:
      binary: vt-57397-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-57397-2_7494:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-57397-2.C'
    sources:
      binary: vt-57397-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no matching")[^\n]*\n?)+'
test_vt-57626_3736:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-57626.C'
    sources:
      binary: vt-57626.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pack expansion")[^\n]*\n?)+'
test_vt-57626_3737:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-57626.C'
    sources:
      binary: vt-57626.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pack expansion")[^\n]*\n?)+'
test_vt-57626_7495:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-57626.C'
    sources:
      binary: vt-57626.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pack expansion")[^\n]*\n?)+'
test_vt-57626_7496:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-57626.C'
    sources:
      binary: vt-57626.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pack expansion")[^\n]*\n?)+'
test_vt-59361_3738:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-59361.C'
    sources:
      binary: vt-59361.s
  group: GRPSERIAL
test_vt-59361_3739:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-59361.C'
    sources:
      binary: vt-59361.s
  group: GRPSERIAL
test_vt-59361_7497:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-59361.C'
    sources:
      binary: vt-59361.s
  group: GRPSERIAL
test_vt-59361_7498:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-59361.C'
    sources:
      binary: vt-59361.s
  group: GRPSERIAL
test_vt-59988_3740:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-59988.C'
    sources:
      binary: vt-59988.s
  group: GRPSERIAL
test_vt-59988_3741:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-59988.C'
    sources:
      binary: vt-59988.s
  group: GRPSERIAL
test_vt-59988_7499:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-59988.C'
    sources:
      binary: vt-59988.s
  group: GRPSERIAL
test_vt-59988_7500:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-59988.C'
    sources:
      binary: vt-59988.s
  group: GRPSERIAL
test_vt-60130_3742:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-60130.C'
    sources:
      binary: vt-60130.s
  group: GRPSERIAL
test_vt-60130_3743:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-60130.C'
    sources:
      binary: vt-60130.s
  group: GRPSERIAL
test_vt-60130_7501:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-60130.C'
    sources:
      binary: vt-60130.s
  group: GRPSERIAL
test_vt-60130_7502:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-60130.C'
    sources:
      binary: vt-60130.s
  group: GRPSERIAL
test_vt-62276_3744:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-62276.C'
    sources:
      binary: vt-62276.s
  group: GRPSERIAL
test_vt-62276_3745:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-62276.C'
    sources:
      binary: vt-62276.s
  group: GRPSERIAL
test_vt-62276_7503:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-62276.C'
    sources:
      binary: vt-62276.s
  group: GRPSERIAL
test_vt-62276_7504:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-62276.C'
    sources:
      binary: vt-62276.s
  group: GRPSERIAL
test_vt-65071_3746:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-65071.C'
    sources:
      binary: vt-65071.s
  group: GRPSERIAL
test_vt-65071_3747:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-65071.C'
    sources:
      binary: vt-65071.s
  group: GRPSERIAL
test_vt-65071_7505:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-65071.C'
    sources:
      binary: vt-65071.s
  group: GRPSERIAL
test_vt-65071_7506:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-65071.C'
    sources:
      binary: vt-65071.s
  group: GRPSERIAL
test_vt-65790_3748:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-65790.C'
    sources:
      binary: vt-65790.s
  group: GRPSERIAL
test_vt-65790_3749:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-65790.C'
    sources:
      binary: vt-65790.s
  group: GRPSERIAL
test_vt-65790_7507:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-65790.C'
    sources:
      binary: vt-65790.s
  group: GRPSERIAL
test_vt-65790_7508:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/vt-65790.C'
    sources:
      binary: vt-65790.s
  group: GRPSERIAL
test_warn-ovl1_3750:
  build:
    cflags: "-std=gnu++11 -O2 -Woverflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn-ovl1.C'
    sources:
      binary: warn-ovl1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_warn-ovl1_3751:
  build:
    cflags: "-std=gnu++14 -O2 -Woverflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn-ovl1.C'
    sources:
      binary: warn-ovl1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_warn-ovl1_7509:
  build:
    cflags: "-std=gnu++11 -O2 -Woverflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn-ovl1.C'
    sources:
      binary: warn-ovl1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_warn-ovl1_7510:
  build:
    cflags: "-std=gnu++14 -O2 -Woverflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn-ovl1.C'
    sources:
      binary: warn-ovl1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_warn-ovl2_3752:
  build:
    cflags: "-std=gnu++11 -O2 -Woverflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn-ovl2.C'
    sources:
      binary: warn-ovl2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_warn-ovl2_3753:
  build:
    cflags: "-std=gnu++14 -O2 -Woverflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn-ovl2.C'
    sources:
      binary: warn-ovl2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_warn-ovl2_7511:
  build:
    cflags: "-std=gnu++11 -O2 -Woverflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn-ovl2.C'
    sources:
      binary: warn-ovl2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_warn-ovl2_7512:
  build:
    cflags: "-std=gnu++14 -O2 -Woverflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn-ovl2.C'
    sources:
      binary: warn-ovl2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_warn_cxx0x2_3755:
  build:
    cflags: "-std=gnu++98 -Wc++11-compat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn_cxx0x2.C'
    sources:
      binary: warn_cxx0x2.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("narrowing")[^\n]*\n?)+'
test_warn_cxx0x2_7514:
  build:
    cflags: "-std=gnu++98 -Wc++11-compat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn_cxx0x2.C'
    sources:
      binary: warn_cxx0x2.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("narrowing")[^\n]*\n?)+'
test_warn_cxx0x3_3756:
  build:
    cflags: "-std=gnu++98 -Wc++11-compat -Wno-narrowing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn_cxx0x3.C'
    sources:
      binary: warn_cxx0x3.s
  group: GRPSERIAL
test_warn_cxx0x3_7515:
  build:
    cflags: "-std=gnu++98 -Wc++11-compat -Wno-narrowing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn_cxx0x3.C'
    sources:
      binary: warn_cxx0x3.s
  group: GRPSERIAL
test_warn_cxx0x4_3757:
  build:
    cflags: "-std=gnu++98 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn_cxx0x4.C'
    sources:
      binary: warn_cxx0x4.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("macro")[^\n]*\n?)+'
test_warn_cxx0x4_3758:
  build:
    cflags: "-std=gnu++11 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn_cxx0x4.C'
    sources:
      binary: warn_cxx0x4.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("macro")[^\n]*\n?)+'
test_warn_cxx0x4_3759:
  build:
    cflags: "-std=gnu++14 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn_cxx0x4.C'
    sources:
      binary: warn_cxx0x4.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("macro")[^\n]*\n?)+'
test_warn_cxx0x4_7516:
  build:
    cflags: "-std=gnu++98 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn_cxx0x4.C'
    sources:
      binary: warn_cxx0x4.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("macro")[^\n]*\n?)+'
test_warn_cxx0x4_7517:
  build:
    cflags: "-std=gnu++11 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn_cxx0x4.C'
    sources:
      binary: warn_cxx0x4.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("macro")[^\n]*\n?)+'
test_warn_cxx0x4_7518:
  build:
    cflags: "-std=gnu++14 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn_cxx0x4.C'
    sources:
      binary: warn_cxx0x4.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("macro")[^\n]*\n?)+'
test_warn_cxx0x_3754:
  build:
    cflags: "-std=gnu++98 -Wc++11-compat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn_cxx0x.C'
    sources:
      binary: warn_cxx0x.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("is a keyword")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("is a keyword")[^\n]*\n?)+'
test_warn_cxx0x_7513:
  build:
    cflags: "-std=gnu++98 -Wc++11-compat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/cpp0x/warn_cxx0x.C'
    sources:
      binary: warn_cxx0x.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("is a keyword")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("is a keyword")[^\n]*\n?)+'
