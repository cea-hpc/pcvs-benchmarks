test_alias-canon2_1546:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon2.C'
    sources: {binary: alias-canon2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-canon2_1547:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon2.C'
    sources: {binary: alias-canon2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-canon2_1548:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon2.C'
    sources: {binary: alias-canon2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-canon2_4:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon2.C'
    sources: {binary: alias-canon2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-canon2_5:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon2.C'
    sources: {binary: alias-canon2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-canon2_6:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon2.C'
    sources: {binary: alias-canon2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-canon3_1549:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon3.C'
    sources: {binary: alias-canon3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-canon3_1550:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon3.C'
    sources: {binary: alias-canon3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-canon3_1551:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon3.C'
    sources: {binary: alias-canon3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-canon3_7:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon3.C'
    sources: {binary: alias-canon3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-canon3_8:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon3.C'
    sources: {binary: alias-canon3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-canon3_9:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon3.C'
    sources: {binary: alias-canon3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-canon_1:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon.C'
    sources: {binary: alias-canon.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_alias-canon_1543:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon.C'
    sources: {binary: alias-canon.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_alias-canon_1544:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon.C'
    sources: {binary: alias-canon.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_alias-canon_1545:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon.C'
    sources: {binary: alias-canon.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_alias-canon_2:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon.C'
    sources: {binary: alias-canon.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_alias-canon_3:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-canon.C'
    sources: {binary: alias-canon.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_alias-decl-attr1_10:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr1.C'
    sources: {binary: alias-decl-attr1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-decl-attr1_11:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr1.C'
    sources: {binary: alias-decl-attr1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-decl-attr1_1552:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr1.C'
    sources: {binary: alias-decl-attr1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-decl-attr1_1553:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr1.C'
    sources: {binary: alias-decl-attr1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-decl-attr2_12:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr2.C'
    sources: {binary: alias-decl-attr2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-decl-attr2_13:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr2.C'
    sources: {binary: alias-decl-attr2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-decl-attr2_1554:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr2.C'
    sources: {binary: alias-decl-attr2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-decl-attr2_1555:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr2.C'
    sources: {binary: alias-decl-attr2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alias-decl-attr3_14:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr3.C'
    sources: {binary: ./alias-decl-attr3.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alias-decl-attr3_15:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr3.C'
    sources: {binary: ./alias-decl-attr3.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alias-decl-attr3_1556:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr3.C'
    sources: {binary: ./alias-decl-attr3.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alias-decl-attr3_1557:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr3.C'
    sources: {binary: ./alias-decl-attr3.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alias-decl-attr4_1558:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr4.C'
    sources: {binary: ./alias-decl-attr4.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alias-decl-attr4_1559:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr4.C'
    sources: {binary: ./alias-decl-attr4.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alias-decl-attr4_16:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr4.C'
    sources: {binary: ./alias-decl-attr4.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alias-decl-attr4_17:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-decl-attr4.C'
    sources: {binary: ./alias-decl-attr4.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alias-mangle_1560:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-mangle.C'
    sources: {binary: alias-mangle.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes on template argument")[^\n]*\n?)+'}
test_alias-mangle_1561:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-mangle.C'
    sources: {binary: alias-mangle.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes on template argument")[^\n]*\n?)+'}
test_alias-mangle_1562:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-mangle.C'
    sources: {binary: alias-mangle.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes on template argument")[^\n]*\n?)+'}
test_alias-mangle_18:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-mangle.C'
    sources: {binary: alias-mangle.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes on template argument")[^\n]*\n?)+'}
test_alias-mangle_19:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-mangle.C'
    sources: {binary: alias-mangle.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes on template argument")[^\n]*\n?)+'}
test_alias-mangle_20:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alias-mangle.C'
    sources: {binary: alias-mangle.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes on template argument")[^\n]*\n?)+'}
test_align1_1563:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/align1.C'
    sources: {binary: align1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_align1_1564:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/align1.C'
    sources: {binary: align1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_align1_1565:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/align1.C'
    sources: {binary: align1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_align1_21:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/align1.C'
    sources: {binary: align1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_align1_22:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/align1.C'
    sources: {binary: align1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_align1_23:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/align1.C'
    sources: {binary: align1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_align2_1566:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/align2.C'
    sources: {binary: align2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_align2_1567:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/align2.C'
    sources: {binary: align2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_align2_1568:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/align2.C'
    sources: {binary: align2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_align2_24:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/align2.C'
    sources: {binary: align2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_align2_25:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/align2.C'
    sources: {binary: align2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_align2_26:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/align2.C'
    sources: {binary: align2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_alignof1_1569:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alignof1.C'
    sources: {binary: ./alignof1.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alignof1_1570:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alignof1.C'
    sources: {binary: ./alignof1.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alignof1_1571:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alignof1.C'
    sources: {binary: ./alignof1.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alignof1_27:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alignof1.C'
    sources: {binary: ./alignof1.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alignof1_28:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alignof1.C'
    sources: {binary: ./alignof1.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alignof1_29:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alignof1.C'
    sources: {binary: ./alignof1.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alignof2_1572:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alignof2.C'
    sources: {binary: ./alignof2.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alignof2_1573:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alignof2.C'
    sources: {binary: ./alignof2.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alignof2_1574:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alignof2.C'
    sources: {binary: ./alignof2.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alignof2_30:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alignof2.C'
    sources: {binary: ./alignof2.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alignof2_31:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alignof2.C'
    sources: {binary: ./alignof2.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_alignof2_32:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/alignof2.C'
    sources: {binary: ./alignof2.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_always_inline-1_1575:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-1.C'
    sources: {binary: always_inline-1.s, cflags: "-std=gnu++98 -O0\n -S"}
  group: GRPSERIAL
test_always_inline-1_1576:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-1.C'
    sources: {binary: always_inline-1.s, cflags: "-std=gnu++11 -O0\n -S"}
  group: GRPSERIAL
test_always_inline-1_1577:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-1.C'
    sources: {binary: always_inline-1.s, cflags: "-std=gnu++14 -O0\n -S"}
  group: GRPSERIAL
test_always_inline-1_33:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-1.C'
    sources: {binary: always_inline-1.s, cflags: "-std=gnu++98 -O0\n -S"}
  group: GRPSERIAL
test_always_inline-1_34:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-1.C'
    sources: {binary: always_inline-1.s, cflags: "-std=gnu++11 -O0\n -S"}
  group: GRPSERIAL
test_always_inline-1_35:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-1.C'
    sources: {binary: always_inline-1.s, cflags: "-std=gnu++14 -O0\n -S"}
  group: GRPSERIAL
test_always_inline-2_1578:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-2.C'
    sources: {binary: always_inline-2.s, cflags: "-std=gnu++98 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-2_1579:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-2.C'
    sources: {binary: always_inline-2.s, cflags: "-std=gnu++11 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-2_1580:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-2.C'
    sources: {binary: always_inline-2.s, cflags: "-std=gnu++14 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-2_36:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-2.C'
    sources: {binary: always_inline-2.s, cflags: "-std=gnu++98 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-2_37:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-2.C'
    sources: {binary: always_inline-2.s, cflags: "-std=gnu++11 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-2_38:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-2.C'
    sources: {binary: always_inline-2.s, cflags: "-std=gnu++14 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-3_1581:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-3.C'
    sources: {binary: always_inline-3.s, cflags: "-std=gnu++98 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-3_1582:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-3.C'
    sources: {binary: always_inline-3.s, cflags: "-std=gnu++11 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-3_1583:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-3.C'
    sources: {binary: always_inline-3.s, cflags: "-std=gnu++14 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-3_39:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-3.C'
    sources: {binary: always_inline-3.s, cflags: "-std=gnu++98 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-3_40:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-3.C'
    sources: {binary: always_inline-3.s, cflags: "-std=gnu++11 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-3_41:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-3.C'
    sources: {binary: always_inline-3.s, cflags: "-std=gnu++14 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-4_1584:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-4.C'
    sources: {binary: always_inline-4.s, cflags: "-std=gnu++98 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-4_1585:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-4.C'
    sources: {binary: always_inline-4.s, cflags: "-std=gnu++11 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-4_1586:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-4.C'
    sources: {binary: always_inline-4.s, cflags: "-std=gnu++14 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-4_42:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-4.C'
    sources: {binary: always_inline-4.s, cflags: "-std=gnu++98 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-4_43:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-4.C'
    sources: {binary: always_inline-4.s, cflags: "-std=gnu++11 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-4_44:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-4.C'
    sources: {binary: always_inline-4.s, cflags: "-std=gnu++14 -O0 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_always_inline-5_1587:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-5.C'
    sources: {binary: always_inline-5.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_always_inline-5_1588:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-5.C'
    sources: {binary: always_inline-5.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_always_inline-5_1589:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-5.C'
    sources: {binary: always_inline-5.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_always_inline-5_45:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-5.C'
    sources: {binary: always_inline-5.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_always_inline-5_46:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-5.C'
    sources: {binary: always_inline-5.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_always_inline-5_47:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/always_inline-5.C'
    sources: {binary: always_inline-5.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_anon-struct1_1590:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct1.C'
    sources: {binary: anon-struct1.s, cflags: "-std=gnu++98 -ansi -pedantic -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
test_anon-struct1_1591:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct1.C'
    sources: {binary: anon-struct1.s, cflags: "-std=gnu++11 -ansi -pedantic -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
test_anon-struct1_1592:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct1.C'
    sources: {binary: anon-struct1.s, cflags: "-std=gnu++14 -ansi -pedantic -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
test_anon-struct1_48:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct1.C'
    sources: {binary: anon-struct1.s, cflags: "-std=gnu++98 -ansi -pedantic -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
test_anon-struct1_49:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct1.C'
    sources: {binary: anon-struct1.s, cflags: "-std=gnu++11 -ansi -pedantic -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
test_anon-struct1_50:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct1.C'
    sources: {binary: anon-struct1.s, cflags: "-std=gnu++14 -ansi -pedantic -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
test_anon-struct2_1593:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct2.C'
    sources: {binary: anon-struct2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_anon-struct2_1594:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct2.C'
    sources: {binary: anon-struct2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_anon-struct2_1595:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct2.C'
    sources: {binary: anon-struct2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_anon-struct2_51:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct2.C'
    sources: {binary: anon-struct2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_anon-struct2_52:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct2.C'
    sources: {binary: anon-struct2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_anon-struct2_53:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct2.C'
    sources: {binary: anon-struct2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_anon-struct3_1596:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct3.C'
    sources: {binary: anon-struct3.s, cflags: "-std=gnu++98 -fms-extensions\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_anon-struct3_1597:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct3.C'
    sources: {binary: anon-struct3.s, cflags: "-std=gnu++11 -fms-extensions\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_anon-struct3_1598:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct3.C'
    sources: {binary: anon-struct3.s, cflags: "-std=gnu++14 -fms-extensions\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_anon-struct3_54:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct3.C'
    sources: {binary: anon-struct3.s, cflags: "-std=gnu++98 -fms-extensions\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_anon-struct3_55:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct3.C'
    sources: {binary: anon-struct3.s, cflags: "-std=gnu++11 -fms-extensions\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_anon-struct3_56:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct3.C'
    sources: {binary: anon-struct3.s, cflags: "-std=gnu++14 -fms-extensions\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_anon-struct4_1599:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct4.C'
    sources: {binary: anon-struct4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("unnamed")[^\n]*\n?)+'}
test_anon-struct4_1600:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct4.C'
    sources: {binary: anon-struct4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("unnamed")[^\n]*\n?)+'}
test_anon-struct4_1601:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct4.C'
    sources: {binary: anon-struct4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("unnamed")[^\n]*\n?)+'}
test_anon-struct4_57:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct4.C'
    sources: {binary: anon-struct4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("unnamed")[^\n]*\n?)+'}
test_anon-struct4_58:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct4.C'
    sources: {binary: anon-struct4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("unnamed")[^\n]*\n?)+'}
test_anon-struct4_59:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct4.C'
    sources: {binary: anon-struct4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("unnamed")[^\n]*\n?)+'}
test_anon-struct5_1602:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct5.C'
    sources: {binary: anon-struct5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("an
          anonymous union|member of a union|unnamed class")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs|an anonymous struct|unnamed class")[^\n]*\n?)+'}
test_anon-struct5_1603:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct5.C'
    sources: {binary: anon-struct5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("an
          anonymous union|member of a union|unnamed class")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs|an anonymous struct|unnamed class")[^\n]*\n?)+'}
test_anon-struct5_1604:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct5.C'
    sources: {binary: anon-struct5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("an
          anonymous union|member of a union|unnamed class")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs|an anonymous struct|unnamed class")[^\n]*\n?)+'}
test_anon-struct5_60:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct5.C'
    sources: {binary: anon-struct5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("an
          anonymous union|member of a union|unnamed class")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs|an anonymous struct|unnamed class")[^\n]*\n?)+'}
test_anon-struct5_61:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct5.C'
    sources: {binary: anon-struct5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("an
          anonymous union|member of a union|unnamed class")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs|an anonymous struct|unnamed class")[^\n]*\n?)+'}
test_anon-struct5_62:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct5.C'
    sources: {binary: anon-struct5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("an
          anonymous union|member of a union|unnamed class")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs|an anonymous struct|unnamed class")[^\n]*\n?)+'}
test_anon-struct6_1605:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct6.C'
    sources: {binary: anon-struct6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("anonymous
          struct cannot have function members")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs|non-static data members|unnamed class")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
test_anon-struct6_1606:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct6.C'
    sources: {binary: anon-struct6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("anonymous
          struct cannot have function members")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs|non-static data members|unnamed class")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
test_anon-struct6_1607:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct6.C'
    sources: {binary: anon-struct6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("anonymous
          struct cannot have function members")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs|non-static data members|unnamed class")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
test_anon-struct6_63:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct6.C'
    sources: {binary: anon-struct6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("anonymous
          struct cannot have function members")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs|non-static data members|unnamed class")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
test_anon-struct6_64:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct6.C'
    sources: {binary: anon-struct6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("anonymous
          struct cannot have function members")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs|non-static data members|unnamed class")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
test_anon-struct6_65:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct6.C'
    sources: {binary: anon-struct6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("anonymous
          struct cannot have function members")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs|non-static data members|unnamed class")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("prohibits
          anonymous structs")[^\n]*\n?)+'}
test_anon-struct7_1608:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct7.C'
    sources: {binary: ./anon-struct7.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_anon-struct7_1609:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct7.C'
    sources: {binary: ./anon-struct7.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_anon-struct7_66:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct7.C'
    sources: {binary: ./anon-struct7.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_anon-struct7_67:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/anon-struct7.C'
    sources: {binary: ./anon-struct7.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_array1_1610:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array1.C'
    sources: {binary: array1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_array1_1611:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array1.C'
    sources: {binary: array1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_array1_1612:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array1.C'
    sources: {binary: array1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_array1_68:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array1.C'
    sources: {binary: array1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_array1_69:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array1.C'
    sources: {binary: array1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_array1_70:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array1.C'
    sources: {binary: array1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_array2_1613:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array2.C'
    sources: {binary: array2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_array2_1614:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array2.C'
    sources: {binary: array2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_array2_1615:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array2.C'
    sources: {binary: array2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_array2_71:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array2.C'
    sources: {binary: array2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_array2_72:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array2.C'
    sources: {binary: array2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_array2_73:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array2.C'
    sources: {binary: array2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_array3_1616:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array3.C'
    sources: {binary: array3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_array3_1617:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array3.C'
    sources: {binary: array3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_array3_1618:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array3.C'
    sources: {binary: array3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_array3_74:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array3.C'
    sources: {binary: array3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_array3_75:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array3.C'
    sources: {binary: array3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_array3_76:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/array3.C'
    sources: {binary: array3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_asm10_1622:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm10.C'
    sources: {binary: asm10.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
test_asm10_1623:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm10.C'
    sources: {binary: asm10.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
test_asm10_1624:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm10.C'
    sources: {binary: asm10.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
test_asm10_80:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm10.C'
    sources: {binary: asm10.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
test_asm10_81:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm10.C'
    sources: {binary: asm10.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
test_asm10_82:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm10.C'
    sources: {binary: asm10.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("impossible
          constraint|non-memory input")[^\n]*\n?)+'}
test_asm11_1625:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm11.C'
    sources: {binary: asm11.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
test_asm11_1626:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm11.C'
    sources: {binary: asm11.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
test_asm11_1627:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm11.C'
    sources: {binary: asm11.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
test_asm11_83:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm11.C'
    sources: {binary: asm11.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
test_asm11_84:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm11.C'
    sources: {binary: asm11.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
test_asm11_85:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm11.C'
    sources: {binary: asm11.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          string-literal before")[^\n]*\n?)+'}
test_asm12_1628:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm12.C'
    sources: {binary: asm12.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm12_1629:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm12.C'
    sources: {binary: asm12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm12_1630:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm12.C'
    sources: {binary: asm12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm12_86:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm12.C'
    sources: {binary: asm12.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm12_87:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm12.C'
    sources: {binary: asm12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm12_88:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm12.C'
    sources: {binary: asm12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm13_1631:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm13.C'
    sources: {binary: asm13.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
test_asm13_1632:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm13.C'
    sources: {binary: asm13.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
test_asm13_1633:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm13.C'
    sources: {binary: asm13.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
test_asm13_89:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm13.C'
    sources: {binary: asm13.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
test_asm13_90:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm13.C'
    sources: {binary: asm13.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
test_asm13_91:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm13.C'
    sources: {binary: asm13.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
test_asm1_1619:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm1.C'
    sources: {binary: asm1.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asm1_1620:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm1.C'
    sources: {binary: asm1.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asm1_1621:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm1.C'
    sources: {binary: asm1.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asm1_77:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm1.C'
    sources: {binary: asm1.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asm1_78:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm1.C'
    sources: {binary: asm1.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asm1_79:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm1.C'
    sources: {binary: asm1.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asm2_1634:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm2.C'
    sources: {binary: asm2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm2_1635:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm2.C'
    sources: {binary: asm2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm2_1636:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm2.C'
    sources: {binary: asm2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm2_92:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm2.C'
    sources: {binary: asm2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm2_93:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm2.C'
    sources: {binary: asm2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm2_94:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm2.C'
    sources: {binary: asm2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm3_1637:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm3.C'
    sources: {binary: asm3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm3_1638:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm3.C'
    sources: {binary: asm3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm3_1639:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm3.C'
    sources: {binary: asm3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm3_95:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm3.C'
    sources: {binary: asm3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm3_96:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm3.C'
    sources: {binary: asm3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm3_97:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm3.C'
    sources: {binary: asm3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm4_100:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm4.C'
    sources: {binary: asm4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm4_1640:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm4.C'
    sources: {binary: asm4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm4_1641:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm4.C'
    sources: {binary: asm4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm4_1642:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm4.C'
    sources: {binary: asm4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm4_98:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm4.C'
    sources: {binary: asm4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm4_99:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm4.C'
    sources: {binary: asm4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm5_101:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm5.C'
    sources: {binary: asm5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm5_102:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm5.C'
    sources: {binary: asm5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm5_103:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm5.C'
    sources: {binary: asm5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm5_1643:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm5.C'
    sources: {binary: asm5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm5_1644:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm5.C'
    sources: {binary: asm5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm5_1645:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm5.C'
    sources: {binary: asm5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm6_104:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm6.C'
    sources: {binary: asm6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm6_105:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm6.C'
    sources: {binary: asm6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm6_106:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm6.C'
    sources: {binary: asm6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm6_1646:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm6.C'
    sources: {binary: asm6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm6_1647:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm6.C'
    sources: {binary: asm6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm6_1648:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm6.C'
    sources: {binary: asm6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_asm7_107:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm7.C'
    sources: {binary: asm7.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only
          parameter")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only
          variable")[^\n]*\n?)+'}
test_asm7_108:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm7.C'
    sources: {binary: asm7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only
          parameter")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only
          variable")[^\n]*\n?)+'}
test_asm7_109:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm7.C'
    sources: {binary: asm7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only
          parameter")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only
          variable")[^\n]*\n?)+'}
test_asm7_1649:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm7.C'
    sources: {binary: asm7.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only
          parameter")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only
          variable")[^\n]*\n?)+'}
test_asm7_1650:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm7.C'
    sources: {binary: asm7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only
          parameter")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only
          variable")[^\n]*\n?)+'}
test_asm7_1651:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm7.C'
    sources: {binary: asm7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only
          parameter")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only
          variable")[^\n]*\n?)+'}
test_asm8_110:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm8.C'
    sources: {binary: asm8.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asm8_111:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm8.C'
    sources: {binary: asm8.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asm8_112:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm8.C'
    sources: {binary: asm8.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asm8_1652:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm8.C'
    sources: {binary: asm8.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asm8_1653:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm8.C'
    sources: {binary: asm8.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asm8_1654:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm8.C'
    sources: {binary: asm8.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asm9_113:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm9.C'
    sources: {binary: asm9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
test_asm9_114:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm9.C'
    sources: {binary: asm9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
test_asm9_115:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm9.C'
    sources: {binary: asm9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
test_asm9_1655:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm9.C'
    sources: {binary: asm9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
test_asm9_1656:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm9.C'
    sources: {binary: asm9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
test_asm9_1657:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asm9.C'
    sources: {binary: asm9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
test_asmgoto1_116:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmgoto1.C'
    sources: {binary: asmgoto1.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
test_asmgoto1_117:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmgoto1.C'
    sources: {binary: asmgoto1.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
test_asmgoto1_118:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmgoto1.C'
    sources: {binary: asmgoto1.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
test_asmgoto1_1658:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmgoto1.C'
    sources: {binary: asmgoto1.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
test_asmgoto1_1659:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmgoto1.C'
    sources: {binary: asmgoto1.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
test_asmgoto1_1660:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmgoto1.C'
    sources: {binary: asmgoto1.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
test_asmspec1_119:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspec1.C'
    sources: {binary: asmspec1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_asmspec1_120:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspec1.C'
    sources: {binary: asmspec1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_asmspec1_121:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspec1.C'
    sources: {binary: asmspec1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_asmspec1_1661:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspec1.C'
    sources: {binary: asmspec1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_asmspec1_1662:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspec1.C'
    sources: {binary: asmspec1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_asmspec1_1663:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspec1.C'
    sources: {binary: asmspec1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_asmspecInvalid_122:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspecInvalid.C'
    sources: {binary: asmspecInvalid.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specifiers
          are not permitted")[^\n]*\n?)+'}
test_asmspecInvalid_123:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspecInvalid.C'
    sources: {binary: asmspecInvalid.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specifiers
          are not permitted")[^\n]*\n?)+'}
test_asmspecInvalid_124:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspecInvalid.C'
    sources: {binary: asmspecInvalid.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specifiers
          are not permitted")[^\n]*\n?)+'}
test_asmspecInvalid_1664:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspecInvalid.C'
    sources: {binary: asmspecInvalid.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specifiers
          are not permitted")[^\n]*\n?)+'}
test_asmspecInvalid_1665:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspecInvalid.C'
    sources: {binary: asmspecInvalid.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specifiers
          are not permitted")[^\n]*\n?)+'}
test_asmspecInvalid_1666:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspecInvalid.C'
    sources: {binary: asmspecInvalid.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("specifiers
          are not permitted")[^\n]*\n?)+'}
test_asmspecValid_125:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspecValid.C'
    sources: {binary: asmspecValid.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asmspecValid_126:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspecValid.C'
    sources: {binary: asmspecValid.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asmspecValid_127:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspecValid.C'
    sources: {binary: asmspecValid.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asmspecValid_1667:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspecValid.C'
    sources: {binary: asmspecValid.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asmspecValid_1668:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspecValid.C'
    sources: {binary: asmspecValid.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_asmspecValid_1669:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/asmspecValid.C'
    sources: {binary: asmspecValid.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_atomic-1_128:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-1.C'
    sources: {binary: atomic-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-1_129:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-1.C'
    sources: {binary: atomic-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-1_130:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-1.C'
    sources: {binary: atomic-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-1_1670:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-1.C'
    sources: {binary: atomic-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-1_1671:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-1.C'
    sources: {binary: atomic-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-1_1672:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-1.C'
    sources: {binary: atomic-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-2_131:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-2.C'
    sources: {binary: atomic-2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-2_132:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-2.C'
    sources: {binary: atomic-2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-2_133:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-2.C'
    sources: {binary: atomic-2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-2_1673:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-2.C'
    sources: {binary: atomic-2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-2_1674:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-2.C'
    sources: {binary: atomic-2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-2_1675:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-2.C'
    sources: {binary: atomic-2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-3_134:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-3.C'
    sources: {binary: atomic-3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-3_135:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-3.C'
    sources: {binary: atomic-3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-3_1676:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-3.C'
    sources: {binary: atomic-3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_atomic-3_1677:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/atomic-3.C'
    sources: {binary: atomic-3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attr-alias-1_136:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-1.C'
    sources: {binary: ./attr-alias-1.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-alias-1_137:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-1.C'
    sources: {binary: ./attr-alias-1.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-alias-1_138:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-1.C'
    sources: {binary: ./attr-alias-1.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-alias-1_1678:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-1.C'
    sources: {binary: ./attr-alias-1.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-alias-1_1679:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-1.C'
    sources: {binary: ./attr-alias-1.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-alias-1_1680:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-1.C'
    sources: {binary: ./attr-alias-1.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-alias-2_139:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-2.C'
    sources: {binary: ./attr-alias-2.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-alias-2_140:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-2.C'
    sources: {binary: ./attr-alias-2.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-alias-2_141:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-2.C'
    sources: {binary: ./attr-alias-2.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-alias-2_1681:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-2.C'
    sources: {binary: ./attr-alias-2.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-alias-2_1682:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-2.C'
    sources: {binary: ./attr-alias-2.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-alias-2_1683:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-2.C'
    sources: {binary: ./attr-alias-2.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-alias-3_142:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-3.C'
    sources: {binary: attr-alias-3.s, cflags: "-std=gnu++98 -g\n -S"}
  group: GRPSERIAL
test_attr-alias-3_143:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-3.C'
    sources: {binary: attr-alias-3.s, cflags: "-std=gnu++11 -g\n -S"}
  group: GRPSERIAL
test_attr-alias-3_144:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-3.C'
    sources: {binary: attr-alias-3.s, cflags: "-std=gnu++14 -g\n -S"}
  group: GRPSERIAL
test_attr-alias-3_1684:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-3.C'
    sources: {binary: attr-alias-3.s, cflags: "-std=gnu++98 -g\n -S"}
  group: GRPSERIAL
test_attr-alias-3_1685:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-3.C'
    sources: {binary: attr-alias-3.s, cflags: "-std=gnu++11 -g\n -S"}
  group: GRPSERIAL
test_attr-alias-3_1686:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-alias-3.C'
    sources: {binary: attr-alias-3.s, cflags: "-std=gnu++14 -g\n -S"}
  group: GRPSERIAL
test_attr-aligned01_145:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-aligned01.C'
    sources: {binary: attr-aligned01.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
test_attr-aligned01_146:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-aligned01.C'
    sources: {binary: attr-aligned01.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
test_attr-aligned01_147:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-aligned01.C'
    sources: {binary: attr-aligned01.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
test_attr-aligned01_1687:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-aligned01.C'
    sources: {binary: attr-aligned01.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
test_attr-aligned01_1688:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-aligned01.C'
    sources: {binary: attr-aligned01.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
test_attr-aligned01_1689:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-aligned01.C'
    sources: {binary: attr-aligned01.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes")[^\n]*\n?)+'}
test_attr-constructor1_148:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-constructor1.C'
    sources: {binary: attr-constructor1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integer")[^\n]*\n?)+'}
test_attr-constructor1_149:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-constructor1.C'
    sources: {binary: attr-constructor1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integer")[^\n]*\n?)+'}
test_attr-constructor1_1690:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-constructor1.C'
    sources: {binary: attr-constructor1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integer")[^\n]*\n?)+'}
test_attr-constructor1_1691:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-constructor1.C'
    sources: {binary: attr-constructor1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integer")[^\n]*\n?)+'}
test_attr-deprecated-1_150:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-deprecated-1.C'
    sources: {binary: attr-deprecated-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_attr-deprecated-1_151:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-deprecated-1.C'
    sources: {binary: attr-deprecated-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_attr-deprecated-1_152:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-deprecated-1.C'
    sources: {binary: attr-deprecated-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_attr-deprecated-1_1692:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-deprecated-1.C'
    sources: {binary: attr-deprecated-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_attr-deprecated-1_1693:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-deprecated-1.C'
    sources: {binary: attr-deprecated-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_attr-deprecated-1_1694:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-deprecated-1.C'
    sources: {binary: attr-deprecated-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_attr-ifunc-1_153:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-1.C'
    sources: {binary: ./attr-ifunc-1.exe, cflags: -std=gnu++98 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-1_154:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-1.C'
    sources: {binary: ./attr-ifunc-1.exe, cflags: -std=gnu++11 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-1_155:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-1.C'
    sources: {binary: ./attr-ifunc-1.exe, cflags: -std=gnu++14 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-1_1695:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-1.C'
    sources: {binary: ./attr-ifunc-1.exe, cflags: -std=gnu++98 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-1_1696:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-1.C'
    sources: {binary: ./attr-ifunc-1.exe, cflags: -std=gnu++11 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-1_1697:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-1.C'
    sources: {binary: ./attr-ifunc-1.exe, cflags: -std=gnu++14 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-2_156:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-2.C'
    sources: {binary: ./attr-ifunc-2.exe, cflags: -std=gnu++98 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-2_157:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-2.C'
    sources: {binary: ./attr-ifunc-2.exe, cflags: -std=gnu++11 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-2_158:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-2.C'
    sources: {binary: ./attr-ifunc-2.exe, cflags: -std=gnu++14 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-2_1698:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-2.C'
    sources: {binary: ./attr-ifunc-2.exe, cflags: -std=gnu++98 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-2_1699:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-2.C'
    sources: {binary: ./attr-ifunc-2.exe, cflags: -std=gnu++11 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-2_1700:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-2.C'
    sources: {binary: ./attr-ifunc-2.exe, cflags: -std=gnu++14 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-3_159:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-3.C'
    sources: {binary: ./attr-ifunc-3.exe, cflags: -std=gnu++98 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-3_160:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-3.C'
    sources: {binary: ./attr-ifunc-3.exe, cflags: -std=gnu++11 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-3_161:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-3.C'
    sources: {binary: ./attr-ifunc-3.exe, cflags: -std=gnu++14 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-3_1701:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-3.C'
    sources: {binary: ./attr-ifunc-3.exe, cflags: -std=gnu++98 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-3_1702:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-3.C'
    sources: {binary: ./attr-ifunc-3.exe, cflags: -std=gnu++11 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-3_1703:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-3.C'
    sources: {binary: ./attr-ifunc-3.exe, cflags: -std=gnu++14 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-4_162:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-4.C'
    sources: {binary: ./attr-ifunc-4.exe, cflags: -std=gnu++98 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-4_163:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-4.C'
    sources: {binary: ./attr-ifunc-4.exe, cflags: -std=gnu++11 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-4_164:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-4.C'
    sources: {binary: ./attr-ifunc-4.exe, cflags: -std=gnu++14 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-4_1704:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-4.C'
    sources: {binary: ./attr-ifunc-4.exe, cflags: -std=gnu++98 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-4_1705:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-4.C'
    sources: {binary: ./attr-ifunc-4.exe, cflags: -std=gnu++11 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-ifunc-4_1706:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-ifunc-4.C'
    sources: {binary: ./attr-ifunc-4.exe, cflags: -std=gnu++14 -Wno-pmf-conversions}
  group: GRPSERIAL
  run: {cwd: .}
test_attr-used-1_165:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-used-1.C'
    sources: {binary: attr-used-1.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_attr-used-1_166:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-used-1.C'
    sources: {binary: attr-used-1.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_attr-used-1_167:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-used-1.C'
    sources: {binary: attr-used-1.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_attr-used-1_1707:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-used-1.C'
    sources: {binary: attr-used-1.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_attr-used-1_1708:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-used-1.C'
    sources: {binary: attr-used-1.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_attr-used-1_1709:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attr-used-1.C'
    sources: {binary: attr-used-1.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_attrib10_171:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib10.C'
    sources: {binary: attrib10.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib10_1713:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib10.C'
    sources: {binary: attrib10.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib10_1714:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib10.C'
    sources: {binary: attrib10.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib10_1715:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib10.C'
    sources: {binary: attrib10.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib10_172:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib10.C'
    sources: {binary: attrib10.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib10_173:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib10.C'
    sources: {binary: attrib10.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib11_1716:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib11.C'
    sources: {binary: attrib11.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_attrib11_1717:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib11.C'
    sources: {binary: attrib11.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_attrib11_1718:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib11.C'
    sources: {binary: attrib11.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_attrib11_174:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib11.C'
    sources: {binary: attrib11.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_attrib11_175:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib11.C'
    sources: {binary: attrib11.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_attrib11_176:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib11.C'
    sources: {binary: attrib11.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_attrib12_1719:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib12.C'
    sources: {binary: attrib12.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib12_1720:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib12.C'
    sources: {binary: attrib12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib12_1721:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib12.C'
    sources: {binary: attrib12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib12_177:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib12.C'
    sources: {binary: attrib12.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib12_178:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib12.C'
    sources: {binary: attrib12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib12_179:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib12.C'
    sources: {binary: attrib12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib13_1722:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib13.C'
    sources: {binary: attrib13.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib13_1723:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib13.C'
    sources: {binary: attrib13.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib13_1724:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib13.C'
    sources: {binary: attrib13.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib13_180:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib13.C'
    sources: {binary: attrib13.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib13_181:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib13.C'
    sources: {binary: attrib13.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib13_182:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib13.C'
    sources: {binary: attrib13.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib14_1725:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib14.C'
    sources: {binary: attrib14.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib14_1726:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib14.C'
    sources: {binary: attrib14.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib14_1727:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib14.C'
    sources: {binary: attrib14.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib14_183:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib14.C'
    sources: {binary: attrib14.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib14_184:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib14.C'
    sources: {binary: attrib14.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib14_185:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib14.C'
    sources: {binary: attrib14.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib15_1728:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib15.C'
    sources: {binary: attrib15.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib15_1729:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib15.C'
    sources: {binary: attrib15.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib15_1730:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib15.C'
    sources: {binary: attrib15.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib15_186:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib15.C'
    sources: {binary: attrib15.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib15_187:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib15.C'
    sources: {binary: attrib15.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib15_188:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib15.C'
    sources: {binary: attrib15.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib16_1731:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib16.C'
    sources: {binary: attrib16.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib16_1732:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib16.C'
    sources: {binary: attrib16.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib16_1733:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib16.C'
    sources: {binary: attrib16.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib16_189:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib16.C'
    sources: {binary: attrib16.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib16_190:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib16.C'
    sources: {binary: attrib16.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib16_191:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib16.C'
    sources: {binary: attrib16.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib17_1734:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib17.C'
    sources: {binary: attrib17.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib17_1735:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib17.C'
    sources: {binary: attrib17.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib17_1736:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib17.C'
    sources: {binary: attrib17.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib17_192:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib17.C'
    sources: {binary: attrib17.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib17_193:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib17.C'
    sources: {binary: attrib17.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib17_194:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib17.C'
    sources: {binary: attrib17.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib18_1737:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib18.C'
    sources: {binary: attrib18.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib18_1738:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib18.C'
    sources: {binary: attrib18.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib18_1739:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib18.C'
    sources: {binary: attrib18.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib18_195:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib18.C'
    sources: {binary: attrib18.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib18_196:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib18.C'
    sources: {binary: attrib18.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib18_197:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib18.C'
    sources: {binary: attrib18.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib19_1740:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib19.C'
    sources: {binary: attrib19.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib19_1741:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib19.C'
    sources: {binary: attrib19.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib19_1742:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib19.C'
    sources: {binary: attrib19.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib19_198:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib19.C'
    sources: {binary: attrib19.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib19_199:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib19.C'
    sources: {binary: attrib19.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib19_200:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib19.C'
    sources: {binary: attrib19.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib1_168:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib1.C'
    sources: {binary: attrib1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib1_169:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib1.C'
    sources: {binary: attrib1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib1_170:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib1.C'
    sources: {binary: attrib1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib1_1710:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib1.C'
    sources: {binary: attrib1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib1_1711:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib1.C'
    sources: {binary: attrib1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib1_1712:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib1.C'
    sources: {binary: attrib1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib20_1746:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib20.C'
    sources: {binary: attrib20.s, cflags: "-std=gnu++98 -g\n -S"}
  group: GRPSERIAL
test_attrib20_1747:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib20.C'
    sources: {binary: attrib20.s, cflags: "-std=gnu++11 -g\n -S"}
  group: GRPSERIAL
test_attrib20_1748:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib20.C'
    sources: {binary: attrib20.s, cflags: "-std=gnu++14 -g\n -S"}
  group: GRPSERIAL
test_attrib20_204:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib20.C'
    sources: {binary: attrib20.s, cflags: "-std=gnu++98 -g\n -S"}
  group: GRPSERIAL
test_attrib20_205:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib20.C'
    sources: {binary: attrib20.s, cflags: "-std=gnu++11 -g\n -S"}
  group: GRPSERIAL
test_attrib20_206:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib20.C'
    sources: {binary: attrib20.s, cflags: "-std=gnu++14 -g\n -S"}
  group: GRPSERIAL
test_attrib21_1749:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib21.C'
    sources: {binary: attrib21.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib21_1750:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib21.C'
    sources: {binary: attrib21.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib21_1751:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib21.C'
    sources: {binary: attrib21.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib21_207:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib21.C'
    sources: {binary: attrib21.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib21_208:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib21.C'
    sources: {binary: attrib21.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib21_209:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib21.C'
    sources: {binary: attrib21.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib22_1752:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib22.C'
    sources: {binary: attrib22.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_attrib22_1753:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib22.C'
    sources: {binary: attrib22.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_attrib22_1754:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib22.C'
    sources: {binary: attrib22.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_attrib22_210:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib22.C'
    sources: {binary: attrib22.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_attrib22_211:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib22.C'
    sources: {binary: attrib22.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_attrib22_212:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib22.C'
    sources: {binary: attrib22.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_attrib23_1755:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib23.C'
    sources: {binary: attrib23.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
test_attrib23_1756:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib23.C'
    sources: {binary: attrib23.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
test_attrib23_1757:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib23.C'
    sources: {binary: attrib23.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
test_attrib23_213:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib23.C'
    sources: {binary: attrib23.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
test_attrib23_214:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib23.C'
    sources: {binary: attrib23.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
test_attrib23_215:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib23.C'
    sources: {binary: attrib23.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before")[^\n]*\n?)+'}
test_attrib24_1758:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib24.C'
    sources: {binary: attrib24.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without
          previous declaration")[^\n]*\n?)+'}
test_attrib24_1759:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib24.C'
    sources: {binary: attrib24.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without
          previous declaration")[^\n]*\n?)+'}
test_attrib24_1760:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib24.C'
    sources: {binary: attrib24.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without
          previous declaration")[^\n]*\n?)+'}
test_attrib24_216:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib24.C'
    sources: {binary: attrib24.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without
          previous declaration")[^\n]*\n?)+'}
test_attrib24_217:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib24.C'
    sources: {binary: attrib24.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without
          previous declaration")[^\n]*\n?)+'}
test_attrib24_218:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib24.C'
    sources: {binary: attrib24.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without
          previous declaration")[^\n]*\n?)+'}
test_attrib25_1761:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib25.C'
    sources: {binary: attrib25.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("uninstantiated")[^\n]*\n?)+'}
test_attrib25_1762:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib25.C'
    sources: {binary: attrib25.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("uninstantiated")[^\n]*\n?)+'}
test_attrib25_1763:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib25.C'
    sources: {binary: attrib25.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("uninstantiated")[^\n]*\n?)+'}
test_attrib25_219:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib25.C'
    sources: {binary: attrib25.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("uninstantiated")[^\n]*\n?)+'}
test_attrib25_220:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib25.C'
    sources: {binary: attrib25.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("uninstantiated")[^\n]*\n?)+'}
test_attrib25_221:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib25.C'
    sources: {binary: attrib25.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("uninstantiated")[^\n]*\n?)+'}
test_attrib26_1764:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib26.C'
    sources: {binary: attrib26.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib26_1765:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib26.C'
    sources: {binary: attrib26.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib26_1766:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib26.C'
    sources: {binary: attrib26.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib26_222:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib26.C'
    sources: {binary: attrib26.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib26_223:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib26.C'
    sources: {binary: attrib26.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib26_224:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib26.C'
    sources: {binary: attrib26.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib27_1767:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib27.C'
    sources: {binary: attrib27.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typedef-name")[^\n]*\n?)+'}
test_attrib27_1768:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib27.C'
    sources: {binary: attrib27.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typedef-name")[^\n]*\n?)+'}
test_attrib27_1769:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib27.C'
    sources: {binary: attrib27.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typedef-name")[^\n]*\n?)+'}
test_attrib27_225:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib27.C'
    sources: {binary: attrib27.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typedef-name")[^\n]*\n?)+'}
test_attrib27_226:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib27.C'
    sources: {binary: attrib27.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typedef-name")[^\n]*\n?)+'}
test_attrib27_227:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib27.C'
    sources: {binary: attrib27.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("typedef-name")[^\n]*\n?)+'}
test_attrib28_1770:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib28.C'
    sources: {binary: attrib28.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib28_1771:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib28.C'
    sources: {binary: attrib28.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib28_1772:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib28.C'
    sources: {binary: attrib28.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib28_228:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib28.C'
    sources: {binary: attrib28.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib28_229:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib28.C'
    sources: {binary: attrib28.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib28_230:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib28.C'
    sources: {binary: attrib28.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib29_1773:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib29.C'
    sources: {binary: attrib29.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib29_1774:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib29.C'
    sources: {binary: attrib29.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib29_1775:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib29.C'
    sources: {binary: attrib29.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib29_231:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib29.C'
    sources: {binary: attrib29.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib29_232:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib29.C'
    sources: {binary: attrib29.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib29_233:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib29.C'
    sources: {binary: attrib29.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib2_1743:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib2.C'
    sources: {binary: attrib2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib2_1744:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib2.C'
    sources: {binary: attrib2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib2_1745:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib2.C'
    sources: {binary: attrib2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib2_201:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib2.C'
    sources: {binary: attrib2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib2_202:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib2.C'
    sources: {binary: attrib2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib2_203:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib2.C'
    sources: {binary: attrib2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib30_1779:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib30.C'
    sources: {binary: attrib30.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib30_1780:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib30.C'
    sources: {binary: attrib30.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib30_1781:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib30.C'
    sources: {binary: attrib30.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib30_237:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib30.C'
    sources: {binary: attrib30.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib30_238:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib30.C'
    sources: {binary: attrib30.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib30_239:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib30.C'
    sources: {binary: attrib30.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib31_1782:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib31.C'
    sources: {binary: attrib31.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib31_1783:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib31.C'
    sources: {binary: attrib31.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib31_1784:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib31.C'
    sources: {binary: attrib31.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib31_240:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib31.C'
    sources: {binary: attrib31.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib31_241:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib31.C'
    sources: {binary: attrib31.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib31_242:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib31.C'
    sources: {binary: attrib31.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib32_1785:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib32.C'
    sources: {binary: attrib32.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
test_attrib32_1786:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib32.C'
    sources: {binary: attrib32.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
test_attrib32_1787:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib32.C'
    sources: {binary: attrib32.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
test_attrib32_243:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib32.C'
    sources: {binary: attrib32.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
test_attrib32_244:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib32.C'
    sources: {binary: attrib32.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
test_attrib32_245:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib32.C'
    sources: {binary: attrib32.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
test_attrib33_1788:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib33.C'
    sources: {binary: attrib33.s, cflags: "-std=gnu++98 -g\n -S"}
  group: GRPSERIAL
test_attrib33_1789:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib33.C'
    sources: {binary: attrib33.s, cflags: "-std=gnu++11 -g\n -S"}
  group: GRPSERIAL
test_attrib33_1790:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib33.C'
    sources: {binary: attrib33.s, cflags: "-std=gnu++14 -g\n -S"}
  group: GRPSERIAL
test_attrib33_246:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib33.C'
    sources: {binary: attrib33.s, cflags: "-std=gnu++98 -g\n -S"}
  group: GRPSERIAL
test_attrib33_247:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib33.C'
    sources: {binary: attrib33.s, cflags: "-std=gnu++11 -g\n -S"}
  group: GRPSERIAL
test_attrib33_248:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib33.C'
    sources: {binary: attrib33.s, cflags: "-std=gnu++14 -g\n -S"}
  group: GRPSERIAL
test_attrib34_1791:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib34.C'
    sources: {binary: attrib34.s, cflags: "-std=gnu++98 -O2 -fdump-tree-optimized\n
        -S"}
  group: GRPSERIAL
test_attrib34_1792:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib34.C'
    sources: {binary: attrib34.s, cflags: "-std=gnu++11 -O2 -fdump-tree-optimized\n
        -S"}
  group: GRPSERIAL
test_attrib34_1793:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib34.C'
    sources: {binary: attrib34.s, cflags: "-std=gnu++14 -O2 -fdump-tree-optimized\n
        -S"}
  group: GRPSERIAL
test_attrib34_249:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib34.C'
    sources: {binary: attrib34.s, cflags: "-std=gnu++98 -O2 -fdump-tree-optimized\n
        -S"}
  group: GRPSERIAL
test_attrib34_250:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib34.C'
    sources: {binary: attrib34.s, cflags: "-std=gnu++11 -O2 -fdump-tree-optimized\n
        -S"}
  group: GRPSERIAL
test_attrib34_251:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib34.C'
    sources: {binary: attrib34.s, cflags: "-std=gnu++14 -O2 -fdump-tree-optimized\n
        -S"}
  group: GRPSERIAL
test_attrib35_1794:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib35.C'
    sources: {binary: attrib35.s, cflags: "-std=gnu++98 -O3 -msse2\n -S"}
  group: GRPSERIAL
test_attrib35_1795:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib35.C'
    sources: {binary: attrib35.s, cflags: "-std=gnu++11 -O3 -msse2\n -S"}
  group: GRPSERIAL
test_attrib35_1796:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib35.C'
    sources: {binary: attrib35.s, cflags: "-std=gnu++14 -O3 -msse2\n -S"}
  group: GRPSERIAL
test_attrib35_252:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib35.C'
    sources: {binary: attrib35.s, cflags: "-std=gnu++98 -O3 -msse2\n -S"}
  group: GRPSERIAL
test_attrib35_253:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib35.C'
    sources: {binary: attrib35.s, cflags: "-std=gnu++11 -O3 -msse2\n -S"}
  group: GRPSERIAL
test_attrib35_254:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib35.C'
    sources: {binary: attrib35.s, cflags: "-std=gnu++14 -O3 -msse2\n -S"}
  group: GRPSERIAL
test_attrib36_1797:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib36.C'
    sources: {binary: attrib36.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib36_1798:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib36.C'
    sources: {binary: attrib36.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib36_1799:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib36.C'
    sources: {binary: attrib36.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib36_255:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib36.C'
    sources: {binary: attrib36.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib36_256:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib36.C'
    sources: {binary: attrib36.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib36_257:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib36.C'
    sources: {binary: attrib36.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib37_1800:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib37.C'
    sources: {binary: attrib37.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib37_1801:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib37.C'
    sources: {binary: attrib37.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib37_1802:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib37.C'
    sources: {binary: attrib37.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib37_258:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib37.C'
    sources: {binary: attrib37.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib37_259:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib37.C'
    sources: {binary: attrib37.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib37_260:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib37.C'
    sources: {binary: attrib37.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib38_1803:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib38.C'
    sources: {binary: attrib38.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib38_1804:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib38.C'
    sources: {binary: attrib38.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib38_1805:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib38.C'
    sources: {binary: attrib38.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib38_261:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib38.C'
    sources: {binary: attrib38.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib38_262:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib38.C'
    sources: {binary: attrib38.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib38_263:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib38.C'
    sources: {binary: attrib38.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib39_1806:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib39.C'
    sources: {binary: attrib39.s, cflags: "-std=gnu++98 -g\n -S"}
  group: GRPSERIAL
test_attrib39_1807:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib39.C'
    sources: {binary: attrib39.s, cflags: "-std=gnu++11 -g\n -S"}
  group: GRPSERIAL
test_attrib39_1808:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib39.C'
    sources: {binary: attrib39.s, cflags: "-std=gnu++14 -g\n -S"}
  group: GRPSERIAL
test_attrib39_264:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib39.C'
    sources: {binary: attrib39.s, cflags: "-std=gnu++98 -g\n -S"}
  group: GRPSERIAL
test_attrib39_265:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib39.C'
    sources: {binary: attrib39.s, cflags: "-std=gnu++11 -g\n -S"}
  group: GRPSERIAL
test_attrib39_266:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib39.C'
    sources: {binary: attrib39.s, cflags: "-std=gnu++14 -g\n -S"}
  group: GRPSERIAL
test_attrib3_1776:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib3.C'
    sources: {binary: ./attrib3.exe, cflags: -std=gnu++98 -O}
  group: GRPSERIAL
  run: {cwd: .}
test_attrib3_1777:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib3.C'
    sources: {binary: ./attrib3.exe, cflags: -std=gnu++11 -O}
  group: GRPSERIAL
  run: {cwd: .}
test_attrib3_1778:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib3.C'
    sources: {binary: ./attrib3.exe, cflags: -std=gnu++14 -O}
  group: GRPSERIAL
  run: {cwd: .}
test_attrib3_234:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib3.C'
    sources: {binary: ./attrib3.exe, cflags: -std=gnu++98 -O}
  group: GRPSERIAL
  run: {cwd: .}
test_attrib3_235:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib3.C'
    sources: {binary: ./attrib3.exe, cflags: -std=gnu++11 -O}
  group: GRPSERIAL
  run: {cwd: .}
test_attrib3_236:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib3.C'
    sources: {binary: ./attrib3.exe, cflags: -std=gnu++14 -O}
  group: GRPSERIAL
  run: {cwd: .}
test_attrib40_1812:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib40.C'
    sources: {binary: attrib40.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib40_1813:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib40.C'
    sources: {binary: attrib40.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib40_1814:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib40.C'
    sources: {binary: attrib40.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib40_270:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib40.C'
    sources: {binary: attrib40.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib40_271:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib40.C'
    sources: {binary: attrib40.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib40_272:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib40.C'
    sources: {binary: attrib40.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_attrib41_1815:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib41.C'
    sources: {binary: attrib41.s, cflags: "-std=gnu++98 -O\n -S"}
  group: GRPSERIAL
test_attrib41_1816:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib41.C'
    sources: {binary: attrib41.s, cflags: "-std=gnu++11 -O\n -S"}
  group: GRPSERIAL
test_attrib41_1817:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib41.C'
    sources: {binary: attrib41.s, cflags: "-std=gnu++14 -O\n -S"}
  group: GRPSERIAL
test_attrib41_273:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib41.C'
    sources: {binary: attrib41.s, cflags: "-std=gnu++98 -O\n -S"}
  group: GRPSERIAL
test_attrib41_274:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib41.C'
    sources: {binary: attrib41.s, cflags: "-std=gnu++11 -O\n -S"}
  group: GRPSERIAL
test_attrib41_275:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib41.C'
    sources: {binary: attrib41.s, cflags: "-std=gnu++14 -O\n -S"}
  group: GRPSERIAL
test_attrib42_1818:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib42.C'
    sources: {binary: attrib42.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_attrib42_1819:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib42.C'
    sources: {binary: attrib42.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_attrib42_1820:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib42.C'
    sources: {binary: attrib42.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_attrib42_276:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib42.C'
    sources: {binary: attrib42.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_attrib42_277:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib42.C'
    sources: {binary: attrib42.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_attrib42_278:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib42.C'
    sources: {binary: attrib42.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_attrib43_1821:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib43.C'
    sources: {binary: attrib43.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib43_1822:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib43.C'
    sources: {binary: attrib43.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib43_1823:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib43.C'
    sources: {binary: attrib43.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib43_279:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib43.C'
    sources: {binary: attrib43.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib43_280:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib43.C'
    sources: {binary: attrib43.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib43_281:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib43.C'
    sources: {binary: attrib43.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_attrib44_1824:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib44.C'
    sources: {binary: attrib44.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored in declaration of")[^\n]*\n?)+'}
test_attrib44_1825:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib44.C'
    sources: {binary: attrib44.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored in declaration of")[^\n]*\n?)+'}
test_attrib44_1826:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib44.C'
    sources: {binary: attrib44.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored in declaration of")[^\n]*\n?)+'}
test_attrib44_282:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib44.C'
    sources: {binary: attrib44.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored in declaration of")[^\n]*\n?)+'}
test_attrib44_283:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib44.C'
    sources: {binary: attrib44.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored in declaration of")[^\n]*\n?)+'}
test_attrib44_284:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib44.C'
    sources: {binary: attrib44.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored in declaration of")[^\n]*\n?)+'}
test_attrib45_1827:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib45.C'
    sources: {binary: attrib45.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_attrib45_1828:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib45.C'
    sources: {binary: attrib45.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_attrib45_1829:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib45.C'
    sources: {binary: attrib45.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_attrib45_285:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib45.C'
    sources: {binary: attrib45.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_attrib45_286:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib45.C'
    sources: {binary: attrib45.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_attrib45_287:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib45.C'
    sources: {binary: attrib45.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not declare anything")[^\n]*\n?)+'}
test_attrib46_1830:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib46.C'
    sources: {binary: attrib46.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_attrib46_1831:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib46.C'
    sources: {binary: attrib46.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_attrib46_1832:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib46.C'
    sources: {binary: attrib46.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_attrib46_288:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib46.C'
    sources: {binary: attrib46.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_attrib46_289:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib46.C'
    sources: {binary: attrib46.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_attrib46_290:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib46.C'
    sources: {binary: attrib46.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_attrib47_1833:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib47.C'
    sources: {binary: attrib47.s, cflags: "-std=gnu++98 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_attrib47_1834:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib47.C'
    sources: {binary: attrib47.s, cflags: "-std=gnu++11 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_attrib47_1835:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib47.C'
    sources: {binary: attrib47.s, cflags: "-std=gnu++14 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_attrib47_291:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib47.C'
    sources: {binary: attrib47.s, cflags: "-std=gnu++98 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_attrib47_292:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib47.C'
    sources: {binary: attrib47.s, cflags: "-std=gnu++11 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_attrib47_293:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib47.C'
    sources: {binary: attrib47.s, cflags: "-std=gnu++14 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_attrib48_1836:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib48.C'
    sources: {binary: attrib48.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib48_1837:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib48.C'
    sources: {binary: attrib48.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib48_1838:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib48.C'
    sources: {binary: attrib48.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib48_294:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib48.C'
    sources: {binary: attrib48.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib48_295:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib48.C'
    sources: {binary: attrib48.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib48_296:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib48.C'
    sources: {binary: attrib48.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib49_1839:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib49.C'
    sources: {binary: attrib49.s, cflags: "-std=gnu++98 -Wall -Wunused-parameter\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument")[^\n]*\n?)+'}
test_attrib49_1840:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib49.C'
    sources: {binary: attrib49.s, cflags: "-std=gnu++11 -Wall -Wunused-parameter\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument")[^\n]*\n?)+'}
test_attrib49_1841:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib49.C'
    sources: {binary: attrib49.s, cflags: "-std=gnu++14 -Wall -Wunused-parameter\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument")[^\n]*\n?)+'}
test_attrib49_297:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib49.C'
    sources: {binary: attrib49.s, cflags: "-std=gnu++98 -Wall -Wunused-parameter\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument")[^\n]*\n?)+'}
test_attrib49_298:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib49.C'
    sources: {binary: attrib49.s, cflags: "-std=gnu++11 -Wall -Wunused-parameter\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument")[^\n]*\n?)+'}
test_attrib49_299:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib49.C'
    sources: {binary: attrib49.s, cflags: "-std=gnu++14 -Wall -Wunused-parameter\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument")[^\n]*\n?)+'}
test_attrib4_1809:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib4.C'
    sources: {binary: attrib4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib4_1810:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib4.C'
    sources: {binary: attrib4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib4_1811:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib4.C'
    sources: {binary: attrib4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib4_267:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib4.C'
    sources: {binary: attrib4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib4_268:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib4.C'
    sources: {binary: attrib4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib4_269:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib4.C'
    sources: {binary: attrib4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib50_1845:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib50.C'
    sources: {binary: attrib50.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
test_attrib50_1846:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib50.C'
    sources: {binary: attrib50.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
test_attrib50_1847:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib50.C'
    sources: {binary: attrib50.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
test_attrib50_303:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib50.C'
    sources: {binary: attrib50.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
test_attrib50_304:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib50.C'
    sources: {binary: attrib50.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
test_attrib50_305:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib50.C'
    sources: {binary: attrib50.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
test_attrib51_1848:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib51.C'
    sources: {binary: attrib51.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_attrib51_1849:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib51.C'
    sources: {binary: attrib51.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_attrib51_1850:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib51.C'
    sources: {binary: attrib51.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_attrib51_306:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib51.C'
    sources: {binary: attrib51.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_attrib51_307:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib51.C'
    sources: {binary: attrib51.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_attrib51_308:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib51.C'
    sources: {binary: attrib51.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_attrib52_1851:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib52.C'
    sources: {binary: attrib52.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_attrib52_1852:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib52.C'
    sources: {binary: attrib52.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_attrib52_309:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib52.C'
    sources: {binary: attrib52.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_attrib52_310:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib52.C'
    sources: {binary: attrib52.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_attrib53_1853:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib53.C'
    sources: {binary: attrib53.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib53_1854:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib53.C'
    sources: {binary: attrib53.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib53_311:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib53.C'
    sources: {binary: attrib53.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib53_312:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib53.C'
    sources: {binary: attrib53.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib54_1855:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib54.C'
    sources: {binary: attrib54.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib54_1856:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib54.C'
    sources: {binary: attrib54.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib54_1857:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib54.C'
    sources: {binary: attrib54.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib54_313:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib54.C'
    sources: {binary: attrib54.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib54_314:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib54.C'
    sources: {binary: attrib54.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib54_315:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib54.C'
    sources: {binary: attrib54.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib5_1842:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib5.C'
    sources: {binary: attrib5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib5_1843:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib5.C'
    sources: {binary: attrib5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib5_1844:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib5.C'
    sources: {binary: attrib5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib5_300:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib5.C'
    sources: {binary: attrib5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib5_301:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib5.C'
    sources: {binary: attrib5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib5_302:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib5.C'
    sources: {binary: attrib5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib6_1858:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib6.C'
    sources: {binary: attrib6.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attrib6_1859:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib6.C'
    sources: {binary: attrib6.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attrib6_1860:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib6.C'
    sources: {binary: attrib6.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attrib6_316:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib6.C'
    sources: {binary: attrib6.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attrib6_317:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib6.C'
    sources: {binary: attrib6.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attrib6_318:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib6.C'
    sources: {binary: attrib6.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attrib7_1861:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib7.C'
    sources: {binary: attrib7.s, cflags: "-std=gnu++98 -Wunused-parameter\n -S"}
  group: GRPSERIAL
test_attrib7_1862:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib7.C'
    sources: {binary: attrib7.s, cflags: "-std=gnu++11 -Wunused-parameter\n -S"}
  group: GRPSERIAL
test_attrib7_1863:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib7.C'
    sources: {binary: attrib7.s, cflags: "-std=gnu++14 -Wunused-parameter\n -S"}
  group: GRPSERIAL
test_attrib7_319:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib7.C'
    sources: {binary: attrib7.s, cflags: "-std=gnu++98 -Wunused-parameter\n -S"}
  group: GRPSERIAL
test_attrib7_320:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib7.C'
    sources: {binary: attrib7.s, cflags: "-std=gnu++11 -Wunused-parameter\n -S"}
  group: GRPSERIAL
test_attrib7_321:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib7.C'
    sources: {binary: attrib7.s, cflags: "-std=gnu++14 -Wunused-parameter\n -S"}
  group: GRPSERIAL
test_attrib8_1864:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib8.C'
    sources: {binary: attrib8.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib8_1865:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib8.C'
    sources: {binary: attrib8.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib8_1866:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib8.C'
    sources: {binary: attrib8.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib8_322:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib8.C'
    sources: {binary: attrib8.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib8_323:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib8.C'
    sources: {binary: attrib8.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib8_324:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib8.C'
    sources: {binary: attrib8.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_attrib9_1867:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib9.C'
    sources: {binary: attrib9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("already
          defined")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
test_attrib9_1868:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib9.C'
    sources: {binary: attrib9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("already
          defined")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
test_attrib9_1869:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib9.C'
    sources: {binary: attrib9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("already
          defined")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
test_attrib9_325:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib9.C'
    sources: {binary: attrib9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("already
          defined")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
test_attrib9_326:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib9.C'
    sources: {binary: attrib9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("already
          defined")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
test_attrib9_327:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attrib9.C'
    sources: {binary: attrib9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("already
          defined")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("attributes")[^\n]*\n?)+'}
test_attribute-may-alias-1_1870:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-1.C'
    sources: {binary: attribute-may-alias-1.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-1_1871:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-1.C'
    sources: {binary: attribute-may-alias-1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-1_1872:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-1.C'
    sources: {binary: attribute-may-alias-1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-1_328:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-1.C'
    sources: {binary: attribute-may-alias-1.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-1_329:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-1.C'
    sources: {binary: attribute-may-alias-1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-1_330:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-1.C'
    sources: {binary: attribute-may-alias-1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-2_1873:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-2.C'
    sources: {binary: attribute-may-alias-2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-2_1874:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-2.C'
    sources: {binary: attribute-may-alias-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-2_1875:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-2.C'
    sources: {binary: attribute-may-alias-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-2_331:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-2.C'
    sources: {binary: attribute-may-alias-2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-2_332:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-2.C'
    sources: {binary: attribute-may-alias-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-2_333:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-2.C'
    sources: {binary: attribute-may-alias-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-3_1876:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-3.C'
    sources: {binary: attribute-may-alias-3.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-3_1877:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-3.C'
    sources: {binary: attribute-may-alias-3.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-3_334:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-3.C'
    sources: {binary: attribute-may-alias-3.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-3_335:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-3.C'
    sources: {binary: attribute-may-alias-3.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-4_1878:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-4.C'
    sources: {binary: attribute-may-alias-4.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-4_1879:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-4.C'
    sources: {binary: attribute-may-alias-4.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-4_1880:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-4.C'
    sources: {binary: attribute-may-alias-4.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-4_336:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-4.C'
    sources: {binary: attribute-may-alias-4.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-4_337:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-4.C'
    sources: {binary: attribute-may-alias-4.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-4_338:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-4.C'
    sources: {binary: attribute-may-alias-4.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-5_1881:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-5.C'
    sources: {binary: attribute-may-alias-5.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-5_1882:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-5.C'
    sources: {binary: attribute-may-alias-5.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-5_1883:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-5.C'
    sources: {binary: attribute-may-alias-5.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-5_339:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-5.C'
    sources: {binary: attribute-may-alias-5.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-5_340:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-5.C'
    sources: {binary: attribute-may-alias-5.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-may-alias-5_341:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-may-alias-5.C'
    sources: {binary: attribute-may-alias-5.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_attribute-test-1_1884:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-1.C'
    sources: {binary: ./attribute-test-1.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-1_1885:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-1.C'
    sources: {binary: ./attribute-test-1.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-1_1886:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-1.C'
    sources: {binary: ./attribute-test-1.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-1_342:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-1.C'
    sources: {binary: ./attribute-test-1.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-1_343:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-1.C'
    sources: {binary: ./attribute-test-1.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-1_344:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-1.C'
    sources: {binary: ./attribute-test-1.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-2_1887:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-2.C'
    sources: {binary: ./attribute-test-2.exe, cflags: -std=gnu++98 -Wno-abi}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-2_1888:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-2.C'
    sources: {binary: ./attribute-test-2.exe, cflags: -std=gnu++11 -Wno-abi}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-2_1889:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-2.C'
    sources: {binary: ./attribute-test-2.exe, cflags: -std=gnu++14 -Wno-abi}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-2_345:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-2.C'
    sources: {binary: ./attribute-test-2.exe, cflags: -std=gnu++98 -Wno-abi}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-2_346:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-2.C'
    sources: {binary: ./attribute-test-2.exe, cflags: -std=gnu++11 -Wno-abi}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-2_347:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-2.C'
    sources: {binary: ./attribute-test-2.exe, cflags: -std=gnu++14 -Wno-abi}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-3_1890:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-3.C'
    sources: {binary: ./attribute-test-3.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-3_1891:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-3.C'
    sources: {binary: ./attribute-test-3.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-3_1892:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-3.C'
    sources: {binary: ./attribute-test-3.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-3_348:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-3.C'
    sources: {binary: ./attribute-test-3.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-3_349:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-3.C'
    sources: {binary: ./attribute-test-3.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-3_350:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-3.C'
    sources: {binary: ./attribute-test-3.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-4_1893:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-4.C'
    sources: {binary: ./attribute-test-4.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-4_1894:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-4.C'
    sources: {binary: ./attribute-test-4.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-4_1895:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-4.C'
    sources: {binary: ./attribute-test-4.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-4_351:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-4.C'
    sources: {binary: ./attribute-test-4.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-4_352:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-4.C'
    sources: {binary: ./attribute-test-4.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_attribute-test-4_353:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/attribute-test-4.C'
    sources: {binary: ./attribute-test-4.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_bases2_1898:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bases2.C'
    sources: {binary: bases2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_bases2_1899:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bases2.C'
    sources: {binary: bases2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_bases2_356:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bases2.C'
    sources: {binary: bases2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_bases2_357:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bases2.C'
    sources: {binary: bases2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_bases_1896:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bases.C'
    sources: {binary: ./bases.exe, cflags: -std=gnu++11 -w}
  group: GRPSERIAL
  run: {cwd: .}
test_bases_1897:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bases.C'
    sources: {binary: ./bases.exe, cflags: -std=gnu++14 -w}
  group: GRPSERIAL
  run: {cwd: .}
test_bases_354:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bases.C'
    sources: {binary: ./bases.exe, cflags: -std=gnu++11 -w}
  group: GRPSERIAL
  run: {cwd: .}
test_bases_355:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bases.C'
    sources: {binary: ./bases.exe, cflags: -std=gnu++14 -w}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield1_1900:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield1.C'
    sources: {binary: bitfield1.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield1_1901:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield1.C'
    sources: {binary: bitfield1.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield1_1902:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield1.C'
    sources: {binary: bitfield1.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield1_358:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield1.C'
    sources: {binary: bitfield1.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield1_359:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield1.C'
    sources: {binary: bitfield1.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield1_360:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield1.C'
    sources: {binary: bitfield1.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_bitfield2_1903:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield2.C'
    sources: {binary: bitfield2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_bitfield2_1904:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield2.C'
    sources: {binary: bitfield2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_bitfield2_1905:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield2.C'
    sources: {binary: bitfield2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_bitfield2_361:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield2.C'
    sources: {binary: bitfield2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_bitfield2_362:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield2.C'
    sources: {binary: bitfield2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_bitfield2_363:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield2.C'
    sources: {binary: bitfield2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_bitfield3_1906:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield3.C'
    sources: {binary: bitfield3.s, cflags: "-std=gnu++98 -Wno-packed-bitfield-compat\n
        -S"}
  group: GRPSERIAL
test_bitfield3_1907:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield3.C'
    sources: {binary: bitfield3.s, cflags: "-std=gnu++11 -Wno-packed-bitfield-compat\n
        -S"}
  group: GRPSERIAL
test_bitfield3_1908:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield3.C'
    sources: {binary: bitfield3.s, cflags: "-std=gnu++14 -Wno-packed-bitfield-compat\n
        -S"}
  group: GRPSERIAL
test_bitfield3_364:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield3.C'
    sources: {binary: bitfield3.s, cflags: "-std=gnu++98 -Wno-packed-bitfield-compat\n
        -S"}
  group: GRPSERIAL
test_bitfield3_365:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield3.C'
    sources: {binary: bitfield3.s, cflags: "-std=gnu++11 -Wno-packed-bitfield-compat\n
        -S"}
  group: GRPSERIAL
test_bitfield3_366:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield3.C'
    sources: {binary: bitfield3.s, cflags: "-std=gnu++14 -Wno-packed-bitfield-compat\n
        -S"}
  group: GRPSERIAL
test_bitfield4_1909:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield4.C'
    sources: {binary: bitfield4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_bitfield4_1910:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield4.C'
    sources: {binary: bitfield4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_bitfield4_1911:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield4.C'
    sources: {binary: bitfield4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_bitfield4_367:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield4.C'
    sources: {binary: bitfield4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_bitfield4_368:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield4.C'
    sources: {binary: bitfield4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_bitfield4_369:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield4.C'
    sources: {binary: bitfield4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_bitfield5_1912:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield5.C'
    sources: {binary: bitfield5.s, cflags: "-std=gnu++98 -Wno-packed-bitfield-compat\n
        -S"}
  group: GRPSERIAL
test_bitfield5_1913:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield5.C'
    sources: {binary: bitfield5.s, cflags: "-std=gnu++11 -Wno-packed-bitfield-compat\n
        -S"}
  group: GRPSERIAL
test_bitfield5_1914:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield5.C'
    sources: {binary: bitfield5.s, cflags: "-std=gnu++14 -Wno-packed-bitfield-compat\n
        -S"}
  group: GRPSERIAL
test_bitfield5_370:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield5.C'
    sources: {binary: bitfield5.s, cflags: "-std=gnu++98 -Wno-packed-bitfield-compat\n
        -S"}
  group: GRPSERIAL
test_bitfield5_371:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield5.C'
    sources: {binary: bitfield5.s, cflags: "-std=gnu++11 -Wno-packed-bitfield-compat\n
        -S"}
  group: GRPSERIAL
test_bitfield5_372:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/bitfield5.C'
    sources: {binary: bitfield5.s, cflags: "-std=gnu++14 -Wno-packed-bitfield-compat\n
        -S"}
  group: GRPSERIAL
test_builtin-arith-overflow-1_1915:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-arith-overflow-1.C'
    sources: {binary: builtin-arith-overflow-1.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_builtin-arith-overflow-1_1916:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-arith-overflow-1.C'
    sources: {binary: builtin-arith-overflow-1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_builtin-arith-overflow-1_1917:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-arith-overflow-1.C'
    sources: {binary: builtin-arith-overflow-1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_builtin-arith-overflow-1_373:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-arith-overflow-1.C'
    sources: {binary: builtin-arith-overflow-1.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_builtin-arith-overflow-1_374:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-arith-overflow-1.C'
    sources: {binary: builtin-arith-overflow-1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_builtin-arith-overflow-1_375:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-arith-overflow-1.C'
    sources: {binary: builtin-arith-overflow-1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_builtin-arith-overflow-2_1918:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-arith-overflow-2.C'
    sources: {binary: ./builtin-arith-overflow-2.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-arith-overflow-2_1919:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-arith-overflow-2.C'
    sources: {binary: ./builtin-arith-overflow-2.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-arith-overflow-2_1920:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-arith-overflow-2.C'
    sources: {binary: ./builtin-arith-overflow-2.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-arith-overflow-2_376:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-arith-overflow-2.C'
    sources: {binary: ./builtin-arith-overflow-2.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-arith-overflow-2_377:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-arith-overflow-2.C'
    sources: {binary: ./builtin-arith-overflow-2.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-arith-overflow-2_378:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-arith-overflow-2.C'
    sources: {binary: ./builtin-arith-overflow-2.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-bswap1_1921:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-bswap1.C'
    sources: {binary: builtin-bswap1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_builtin-bswap1_1922:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-bswap1.C'
    sources: {binary: builtin-bswap1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_builtin-bswap1_1923:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-bswap1.C'
    sources: {binary: builtin-bswap1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_builtin-bswap1_379:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-bswap1.C'
    sources: {binary: builtin-bswap1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_builtin-bswap1_380:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-bswap1.C'
    sources: {binary: builtin-bswap1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_builtin-bswap1_381:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-bswap1.C'
    sources: {binary: builtin-bswap1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_builtin-line1_1924:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-line1.C'
    sources: {binary: ./builtin-line1.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-line1_1925:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-line1.C'
    sources: {binary: ./builtin-line1.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-line1_1926:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-line1.C'
    sources: {binary: ./builtin-line1.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-line1_382:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-line1.C'
    sources: {binary: ./builtin-line1.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-line1_383:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-line1.C'
    sources: {binary: ./builtin-line1.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-line1_384:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-line1.C'
    sources: {binary: ./builtin-line1.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-object-size1_1927:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size1.C'
    sources: {binary: ./builtin-object-size1.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-object-size1_1928:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size1.C'
    sources: {binary: ./builtin-object-size1.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-object-size1_1929:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size1.C'
    sources: {binary: ./builtin-object-size1.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-object-size1_385:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size1.C'
    sources: {binary: ./builtin-object-size1.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-object-size1_386:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size1.C'
    sources: {binary: ./builtin-object-size1.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-object-size1_387:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size1.C'
    sources: {binary: ./builtin-object-size1.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-object-size2_1930:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size2.C'
    sources: {binary: ./builtin-object-size2.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-object-size2_1931:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size2.C'
    sources: {binary: ./builtin-object-size2.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-object-size2_1932:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size2.C'
    sources: {binary: ./builtin-object-size2.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-object-size2_388:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size2.C'
    sources: {binary: ./builtin-object-size2.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-object-size2_389:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size2.C'
    sources: {binary: ./builtin-object-size2.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-object-size2_390:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size2.C'
    sources: {binary: ./builtin-object-size2.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin-object-size3_1933:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size3.C'
    sources: {binary: builtin-object-size3.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("writing")[^\n]*\n?)+'}
test_builtin-object-size3_1934:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size3.C'
    sources: {binary: builtin-object-size3.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("writing")[^\n]*\n?)+'}
test_builtin-object-size3_1935:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size3.C'
    sources: {binary: builtin-object-size3.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("writing")[^\n]*\n?)+'}
test_builtin-object-size3_391:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size3.C'
    sources: {binary: builtin-object-size3.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("writing")[^\n]*\n?)+'}
test_builtin-object-size3_392:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size3.C'
    sources: {binary: builtin-object-size3.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("writing")[^\n]*\n?)+'}
test_builtin-object-size3_393:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-object-size3.C'
    sources: {binary: builtin-object-size3.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("writing")[^\n]*\n?)+'}
test_builtin-offsetof1_1936:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-offsetof1.C'
    sources: {binary: builtin-offsetof1.s, cflags: "-std=gnu++98 -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("neither
          a single identifier nor a sequence of member accesses and array references")[^\n]*\n?)+'}
test_builtin-offsetof1_1937:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-offsetof1.C'
    sources: {binary: builtin-offsetof1.s, cflags: "-std=gnu++11 -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("neither
          a single identifier nor a sequence of member accesses and array references")[^\n]*\n?)+'}
test_builtin-offsetof1_1938:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-offsetof1.C'
    sources: {binary: builtin-offsetof1.s, cflags: "-std=gnu++14 -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("neither
          a single identifier nor a sequence of member accesses and array references")[^\n]*\n?)+'}
test_builtin-offsetof1_394:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-offsetof1.C'
    sources: {binary: builtin-offsetof1.s, cflags: "-std=gnu++98 -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("neither
          a single identifier nor a sequence of member accesses and array references")[^\n]*\n?)+'}
test_builtin-offsetof1_395:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-offsetof1.C'
    sources: {binary: builtin-offsetof1.s, cflags: "-std=gnu++11 -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("neither
          a single identifier nor a sequence of member accesses and array references")[^\n]*\n?)+'}
test_builtin-offsetof1_396:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin-offsetof1.C'
    sources: {binary: builtin-offsetof1.s, cflags: "-std=gnu++14 -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("neither
          a single identifier nor a sequence of member accesses and array references")[^\n]*\n?)+'}
test_builtin10_1942:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin10.C'
    sources: {binary: builtin10.s, cflags: "-std=gnu++98 -O2 -fdump-tree-optimized\n
        -S"}
  group: GRPSERIAL
test_builtin10_1943:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin10.C'
    sources: {binary: builtin10.s, cflags: "-std=gnu++11 -O2 -fdump-tree-optimized\n
        -S"}
  group: GRPSERIAL
test_builtin10_1944:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin10.C'
    sources: {binary: builtin10.s, cflags: "-std=gnu++14 -O2 -fdump-tree-optimized\n
        -S"}
  group: GRPSERIAL
test_builtin10_400:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin10.C'
    sources: {binary: builtin10.s, cflags: "-std=gnu++98 -O2 -fdump-tree-optimized\n
        -S"}
  group: GRPSERIAL
test_builtin10_401:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin10.C'
    sources: {binary: builtin10.s, cflags: "-std=gnu++11 -O2 -fdump-tree-optimized\n
        -S"}
  group: GRPSERIAL
test_builtin10_402:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin10.C'
    sources: {binary: builtin10.s, cflags: "-std=gnu++14 -O2 -fdump-tree-optimized\n
        -S"}
  group: GRPSERIAL
test_builtin11_1945:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin11.C'
    sources: {binary: builtin11.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared|expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
test_builtin11_1946:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin11.C'
    sources: {binary: builtin11.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared|expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
test_builtin11_1947:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin11.C'
    sources: {binary: builtin11.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared|expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
test_builtin11_403:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin11.C'
    sources: {binary: builtin11.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared|expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
test_builtin11_404:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin11.C'
    sources: {binary: builtin11.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared|expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
test_builtin11_405:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin11.C'
    sources: {binary: builtin11.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared|expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
test_builtin1_1939:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin1.C'
    sources: {binary: builtin1.s, cflags: "-std=gnu++98 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin1_1940:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin1.C'
    sources: {binary: builtin1.s, cflags: "-std=gnu++11 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin1_1941:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin1.C'
    sources: {binary: builtin1.s, cflags: "-std=gnu++14 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin1_397:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin1.C'
    sources: {binary: builtin1.s, cflags: "-std=gnu++98 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin1_398:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin1.C'
    sources: {binary: builtin1.s, cflags: "-std=gnu++11 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin1_399:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin1.C'
    sources: {binary: builtin1.s, cflags: "-std=gnu++14 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin2_1948:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin2.C'
    sources: {binary: builtin2.s, cflags: "-std=gnu++98 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin2_1949:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin2.C'
    sources: {binary: builtin2.s, cflags: "-std=gnu++11 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin2_1950:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin2.C'
    sources: {binary: builtin2.s, cflags: "-std=gnu++14 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin2_406:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin2.C'
    sources: {binary: builtin2.s, cflags: "-std=gnu++98 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin2_407:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin2.C'
    sources: {binary: builtin2.s, cflags: "-std=gnu++11 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin2_408:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin2.C'
    sources: {binary: builtin2.s, cflags: "-std=gnu++14 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin30_1954:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin30.C'
    sources: {binary: builtin30.s, cflags: "-std=gnu++98 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin30_1955:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin30.C'
    sources: {binary: builtin30.s, cflags: "-std=gnu++11 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin30_1956:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin30.C'
    sources: {binary: builtin30.s, cflags: "-std=gnu++14 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin30_412:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin30.C'
    sources: {binary: builtin30.s, cflags: "-std=gnu++98 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin30_413:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin30.C'
    sources: {binary: builtin30.s, cflags: "-std=gnu++11 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin30_414:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin30.C'
    sources: {binary: builtin30.s, cflags: "-std=gnu++14 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin3_1951:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin3.C'
    sources: {binary: builtin3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:\''printf\''
          was not declared")[^\n]*\n?)+'}
test_builtin3_1952:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin3.C'
    sources: {binary: builtin3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:\''printf\''
          was not declared")[^\n]*\n?)+'}
test_builtin3_1953:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin3.C'
    sources: {binary: builtin3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:\''printf\''
          was not declared")[^\n]*\n?)+'}
test_builtin3_409:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin3.C'
    sources: {binary: builtin3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:\''printf\''
          was not declared")[^\n]*\n?)+'}
test_builtin3_410:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin3.C'
    sources: {binary: builtin3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:\''printf\''
          was not declared")[^\n]*\n?)+'}
test_builtin3_411:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin3.C'
    sources: {binary: builtin3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:\''printf\''
          was not declared")[^\n]*\n?)+'}
test_builtin4_1957:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin4.C'
    sources: {binary: builtin4.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects
          a matching")[^\n]*\n?)+'}
test_builtin4_1958:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin4.C'
    sources: {binary: builtin4.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects
          a matching")[^\n]*\n?)+'}
test_builtin4_1959:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin4.C'
    sources: {binary: builtin4.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects
          a matching")[^\n]*\n?)+'}
test_builtin4_415:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin4.C'
    sources: {binary: builtin4.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects
          a matching")[^\n]*\n?)+'}
test_builtin4_416:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin4.C'
    sources: {binary: builtin4.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects
          a matching")[^\n]*\n?)+'}
test_builtin4_417:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin4.C'
    sources: {binary: builtin4.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects
          a matching")[^\n]*\n?)+'}
test_builtin5_1960:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin5.C'
    sources: {binary: builtin5.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("expects
          a matching")[^\n]*\n?)+'}
test_builtin5_1961:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin5.C'
    sources: {binary: builtin5.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("expects
          a matching")[^\n]*\n?)+'}
test_builtin5_1962:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin5.C'
    sources: {binary: builtin5.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("expects
          a matching")[^\n]*\n?)+'}
test_builtin5_418:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin5.C'
    sources: {binary: builtin5.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("expects
          a matching")[^\n]*\n?)+'}
test_builtin5_419:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin5.C'
    sources: {binary: builtin5.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("expects
          a matching")[^\n]*\n?)+'}
test_builtin5_420:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin5.C'
    sources: {binary: builtin5.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("expects
          a matching")[^\n]*\n?)+'}
test_builtin6_1963:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin6.C'
    sources: {binary: builtin6.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin6_1964:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin6.C'
    sources: {binary: builtin6.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin6_1965:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin6.C'
    sources: {binary: builtin6.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin6_421:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin6.C'
    sources: {binary: builtin6.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin6_422:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin6.C'
    sources: {binary: builtin6.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin6_423:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin6.C'
    sources: {binary: builtin6.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_builtin7_1966:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin7.C'
    sources: {binary: ./builtin7.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin7_1967:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin7.C'
    sources: {binary: ./builtin7.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin7_1968:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin7.C'
    sources: {binary: ./builtin7.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin7_424:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin7.C'
    sources: {binary: ./builtin7.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin7_425:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin7.C'
    sources: {binary: ./builtin7.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin7_426:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin7.C'
    sources: {binary: ./builtin7.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_builtin8_1969:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin8.C'
    sources: {binary: builtin8.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_builtin8_1970:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin8.C'
    sources: {binary: builtin8.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_builtin8_1971:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin8.C'
    sources: {binary: builtin8.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_builtin8_427:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin8.C'
    sources: {binary: builtin8.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_builtin8_428:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin8.C'
    sources: {binary: builtin8.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_builtin8_429:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin8.C'
    sources: {binary: builtin8.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_builtin9_1972:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin9.C'
    sources: {binary: builtin9.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_builtin9_1973:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin9.C'
    sources: {binary: builtin9.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_builtin9_1974:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin9.C'
    sources: {binary: builtin9.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_builtin9_430:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin9.C'
    sources: {binary: builtin9.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_builtin9_431:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin9.C'
    sources: {binary: builtin9.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_builtin9_432:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin9.C'
    sources: {binary: builtin9.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_builtin_alloca_1975:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin_alloca.C'
    sources: {binary: builtin_alloca.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("second
          argument to function .__builtin_alloca_with_align. must be a constant integer
          power of 2 between .8. and ")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L140: {expect: true, expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L141: {expect: true, expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L142: {expect: true, expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L143: {expect: true, expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L144: {expect: true, expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L145: {expect: true, expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L147: {expect: true, expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L148: {expect: true, expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L150: {expect: true, expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L152: {expect: true, expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L153: {expect: true, expr: '(^|\n)([^\n]+:153:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L154: {expect: true, expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L175: {expect: true, expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+:183:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
test_builtin_alloca_1976:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin_alloca.C'
    sources: {binary: builtin_alloca.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("second
          argument to function .__builtin_alloca_with_align. must be a constant integer
          power of 2 between .8. and ")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L140: {expect: true, expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L141: {expect: true, expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L142: {expect: true, expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L143: {expect: true, expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L144: {expect: true, expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L145: {expect: true, expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L147: {expect: true, expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L148: {expect: true, expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L150: {expect: true, expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L152: {expect: true, expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L153: {expect: true, expr: '(^|\n)([^\n]+:153:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L154: {expect: true, expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L175: {expect: true, expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+:183:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
test_builtin_alloca_1977:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin_alloca.C'
    sources: {binary: builtin_alloca.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("second
          argument to function .__builtin_alloca_with_align. must be a constant integer
          power of 2 between .8. and ")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L140: {expect: true, expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L141: {expect: true, expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L142: {expect: true, expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L143: {expect: true, expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L144: {expect: true, expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L145: {expect: true, expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L147: {expect: true, expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L148: {expect: true, expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L150: {expect: true, expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L152: {expect: true, expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L153: {expect: true, expr: '(^|\n)([^\n]+:153:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L154: {expect: true, expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L175: {expect: true, expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+:183:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
test_builtin_alloca_433:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin_alloca.C'
    sources: {binary: builtin_alloca.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("second
          argument to function .__builtin_alloca_with_align. must be a constant integer
          power of 2 between .8. and ")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L140: {expect: true, expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L141: {expect: true, expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L142: {expect: true, expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L143: {expect: true, expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L144: {expect: true, expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L145: {expect: true, expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L147: {expect: true, expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L148: {expect: true, expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L150: {expect: true, expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L152: {expect: true, expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L153: {expect: true, expr: '(^|\n)([^\n]+:153:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L154: {expect: true, expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L175: {expect: true, expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+:183:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
test_builtin_alloca_434:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin_alloca.C'
    sources: {binary: builtin_alloca.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("second
          argument to function .__builtin_alloca_with_align. must be a constant integer
          power of 2 between .8. and ")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L140: {expect: true, expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L141: {expect: true, expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L142: {expect: true, expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L143: {expect: true, expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L144: {expect: true, expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L145: {expect: true, expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L147: {expect: true, expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L148: {expect: true, expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L150: {expect: true, expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L152: {expect: true, expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L153: {expect: true, expr: '(^|\n)([^\n]+:153:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L154: {expect: true, expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L175: {expect: true, expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+:183:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
test_builtin_alloca_435:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/builtin_alloca.C'
    sources: {binary: builtin_alloca.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("second
          argument to function .__builtin_alloca_with_align. must be a constant integer
          power of 2 between .8. and ")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion|must be a constant integer")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L140: {expect: true, expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L141: {expect: true, expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L142: {expect: true, expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L143: {expect: true, expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L144: {expect: true, expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L145: {expect: true, expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L147: {expect: true, expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L148: {expect: true, expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L150: {expect: true, expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L152: {expect: true, expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L153: {expect: true, expr: '(^|\n)([^\n]+:153:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L154: {expect: true, expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+:158:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L175: {expect: true, expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+:183:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          be a constant integer")[^\n]*\n?)+'}
test_c99struct1_1978:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/c99struct1.C'
    sources: {binary: c99struct1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_c99struct1_1979:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/c99struct1.C'
    sources: {binary: c99struct1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_c99struct1_1980:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/c99struct1.C'
    sources: {binary: c99struct1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_c99struct1_436:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/c99struct1.C'
    sources: {binary: c99struct1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_c99struct1_437:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/c99struct1.C'
    sources: {binary: c99struct1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_c99struct1_438:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/c99struct1.C'
    sources: {binary: c99struct1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_case-range1_1981:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range1.C'
    sources: {binary: case-range1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_case-range1_1982:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range1.C'
    sources: {binary: case-range1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_case-range1_1983:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range1.C'
    sources: {binary: case-range1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_case-range1_439:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range1.C'
    sources: {binary: case-range1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_case-range1_440:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range1.C'
    sources: {binary: case-range1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_case-range1_441:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range1.C'
    sources: {binary: case-range1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_case-range2_1984:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range2.C'
    sources: {binary: case-range2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate")[^\n]*\n?)+'}
test_case-range2_1985:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range2.C'
    sources: {binary: case-range2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate")[^\n]*\n?)+'}
test_case-range2_1986:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range2.C'
    sources: {binary: case-range2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate")[^\n]*\n?)+'}
test_case-range2_442:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range2.C'
    sources: {binary: case-range2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate")[^\n]*\n?)+'}
test_case-range2_443:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range2.C'
    sources: {binary: case-range2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate")[^\n]*\n?)+'}
test_case-range2_444:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range2.C'
    sources: {binary: case-range2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate")[^\n]*\n?)+'}
test_case-range3_1987:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range3.C'
    sources: {binary: case-range3.s, cflags: "-std=gnu++98 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("non-standard")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("non-standard")[^\n]*\n?)+'}
test_case-range3_1988:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range3.C'
    sources: {binary: case-range3.s, cflags: "-std=gnu++11 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("non-standard")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("non-standard")[^\n]*\n?)+'}
test_case-range3_1989:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range3.C'
    sources: {binary: case-range3.s, cflags: "-std=gnu++14 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("non-standard")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("non-standard")[^\n]*\n?)+'}
test_case-range3_445:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range3.C'
    sources: {binary: case-range3.s, cflags: "-std=gnu++98 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("non-standard")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("non-standard")[^\n]*\n?)+'}
test_case-range3_446:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range3.C'
    sources: {binary: case-range3.s, cflags: "-std=gnu++11 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("non-standard")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("non-standard")[^\n]*\n?)+'}
test_case-range3_447:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/case-range3.C'
    sources: {binary: case-range3.s, cflags: "-std=gnu++14 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("non-standard")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("non-standard")[^\n]*\n?)+'}
test_cleanup-10_1993:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-10.C'
    sources: {binary: ./cleanup-10.exe, cflags: -std=gnu++98 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-10_1994:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-10.C'
    sources: {binary: ./cleanup-10.exe, cflags: -std=gnu++11 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-10_1995:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-10.C'
    sources: {binary: ./cleanup-10.exe, cflags: -std=gnu++14 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-10_451:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-10.C'
    sources: {binary: ./cleanup-10.exe, cflags: -std=gnu++98 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-10_452:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-10.C'
    sources: {binary: ./cleanup-10.exe, cflags: -std=gnu++11 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-10_453:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-10.C'
    sources: {binary: ./cleanup-10.exe, cflags: -std=gnu++14 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-11_1996:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-11.C'
    sources: {binary: ./cleanup-11.exe, cflags: -std=gnu++98 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-11_1997:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-11.C'
    sources: {binary: ./cleanup-11.exe, cflags: -std=gnu++11 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-11_1998:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-11.C'
    sources: {binary: ./cleanup-11.exe, cflags: -std=gnu++14 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-11_454:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-11.C'
    sources: {binary: ./cleanup-11.exe, cflags: -std=gnu++98 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-11_455:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-11.C'
    sources: {binary: ./cleanup-11.exe, cflags: -std=gnu++11 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-11_456:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-11.C'
    sources: {binary: ./cleanup-11.exe, cflags: -std=gnu++14 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-1_1990:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-1.C'
    sources: {binary: cleanup-1.s, cflags: "-std=gnu++98 -Wall -ftrack-macro-expansion=0\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many arguments")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many arguments")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few arguments")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a function")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a function")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an identifier")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
test_cleanup-1_1991:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-1.C'
    sources: {binary: cleanup-1.s, cflags: "-std=gnu++11 -Wall -ftrack-macro-expansion=0\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many arguments")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many arguments")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few arguments")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a function")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a function")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an identifier")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
test_cleanup-1_1992:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-1.C'
    sources: {binary: cleanup-1.s, cflags: "-std=gnu++14 -Wall -ftrack-macro-expansion=0\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many arguments")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many arguments")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few arguments")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a function")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a function")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an identifier")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
test_cleanup-1_448:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-1.C'
    sources: {binary: cleanup-1.s, cflags: "-std=gnu++98 -Wall -ftrack-macro-expansion=0\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many arguments")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many arguments")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few arguments")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a function")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a function")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an identifier")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
test_cleanup-1_449:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-1.C'
    sources: {binary: cleanup-1.s, cflags: "-std=gnu++11 -Wall -ftrack-macro-expansion=0\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many arguments")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many arguments")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few arguments")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a function")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a function")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an identifier")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
test_cleanup-1_450:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-1.C'
    sources: {binary: cleanup-1.s, cflags: "-std=gnu++14 -Wall -ftrack-macro-expansion=0\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many arguments")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many arguments")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few arguments")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a function")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a function")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an identifier")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
test_cleanup-2_1999:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-2.C'
    sources: {binary: ./cleanup-2.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-2_2000:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-2.C'
    sources: {binary: ./cleanup-2.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-2_2001:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-2.C'
    sources: {binary: ./cleanup-2.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-2_457:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-2.C'
    sources: {binary: ./cleanup-2.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-2_458:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-2.C'
    sources: {binary: ./cleanup-2.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-2_459:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-2.C'
    sources: {binary: ./cleanup-2.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-3_2002:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-3.C'
    sources: {binary: ./cleanup-3.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-3_2003:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-3.C'
    sources: {binary: ./cleanup-3.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-3_2004:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-3.C'
    sources: {binary: ./cleanup-3.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-3_460:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-3.C'
    sources: {binary: ./cleanup-3.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-3_461:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-3.C'
    sources: {binary: ./cleanup-3.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-3_462:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-3.C'
    sources: {binary: ./cleanup-3.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-4_2005:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-4.C'
    sources: {binary: ./cleanup-4.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-4_2006:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-4.C'
    sources: {binary: ./cleanup-4.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-4_2007:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-4.C'
    sources: {binary: ./cleanup-4.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-4_463:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-4.C'
    sources: {binary: ./cleanup-4.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-4_464:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-4.C'
    sources: {binary: ./cleanup-4.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-4_465:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-4.C'
    sources: {binary: ./cleanup-4.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-5_2008:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-5.C'
    sources: {binary: ./cleanup-5.exe, cflags: -std=gnu++98 -fexceptions}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-5_2009:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-5.C'
    sources: {binary: ./cleanup-5.exe, cflags: -std=gnu++11 -fexceptions}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-5_2010:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-5.C'
    sources: {binary: ./cleanup-5.exe, cflags: -std=gnu++14 -fexceptions}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-5_466:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-5.C'
    sources: {binary: ./cleanup-5.exe, cflags: -std=gnu++98 -fexceptions}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-5_467:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-5.C'
    sources: {binary: ./cleanup-5.exe, cflags: -std=gnu++11 -fexceptions}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-5_468:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-5.C'
    sources: {binary: ./cleanup-5.exe, cflags: -std=gnu++14 -fexceptions}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-6_2011:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-6.C'
    sources: {binary: cleanup-6.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_cleanup-6_2012:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-6.C'
    sources: {binary: cleanup-6.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_cleanup-6_2013:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-6.C'
    sources: {binary: cleanup-6.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_cleanup-6_469:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-6.C'
    sources: {binary: cleanup-6.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_cleanup-6_470:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-6.C'
    sources: {binary: cleanup-6.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_cleanup-6_471:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-6.C'
    sources: {binary: cleanup-6.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_cleanup-8_2014:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-8.C'
    sources: {binary: ./cleanup-8.exe, cflags: -std=gnu++98 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-8_2015:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-8.C'
    sources: {binary: ./cleanup-8.exe, cflags: -std=gnu++11 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-8_2016:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-8.C'
    sources: {binary: ./cleanup-8.exe, cflags: -std=gnu++14 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-8_472:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-8.C'
    sources: {binary: ./cleanup-8.exe, cflags: -std=gnu++98 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-8_473:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-8.C'
    sources: {binary: ./cleanup-8.exe, cflags: -std=gnu++11 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-8_474:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-8.C'
    sources: {binary: ./cleanup-8.exe, cflags: -std=gnu++14 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-9_2017:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-9.C'
    sources: {binary: ./cleanup-9.exe, cflags: -std=gnu++98 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-9_2018:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-9.C'
    sources: {binary: ./cleanup-9.exe, cflags: -std=gnu++11 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-9_2019:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-9.C'
    sources: {binary: ./cleanup-9.exe, cflags: -std=gnu++14 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-9_475:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-9.C'
    sources: {binary: ./cleanup-9.exe, cflags: -std=gnu++98 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-9_476:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-9.C'
    sources: {binary: ./cleanup-9.exe, cflags: -std=gnu++11 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-9_477:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-9.C'
    sources: {binary: ./cleanup-9.exe, cflags: -std=gnu++14 -fexceptions -fnon-call-exceptions
        -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-dtor_2020:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-dtor.C'
    sources: {binary: ./cleanup-dtor.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-dtor_2021:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-dtor.C'
    sources: {binary: ./cleanup-dtor.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-dtor_2022:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-dtor.C'
    sources: {binary: ./cleanup-dtor.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-dtor_478:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-dtor.C'
    sources: {binary: ./cleanup-dtor.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-dtor_479:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-dtor.C'
    sources: {binary: ./cleanup-dtor.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_cleanup-dtor_480:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cleanup-dtor.C'
    sources: {binary: ./cleanup-dtor.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_complex1_2023:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex1.C'
    sources: {binary: complex1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complex1_2024:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex1.C'
    sources: {binary: complex1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complex1_2025:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex1.C'
    sources: {binary: complex1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complex1_481:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex1.C'
    sources: {binary: complex1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complex1_482:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex1.C'
    sources: {binary: complex1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complex1_483:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex1.C'
    sources: {binary: complex1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complex2_2026:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex2.C'
    sources: {binary: complex2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complex2_2027:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex2.C'
    sources: {binary: complex2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complex2_2028:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex2.C'
    sources: {binary: complex2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complex2_484:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex2.C'
    sources: {binary: complex2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complex2_485:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex2.C'
    sources: {binary: complex2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complex2_486:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex2.C'
    sources: {binary: complex2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complex3_2029:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex3.C'
    sources: {binary: ./complex3.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_complex3_2030:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex3.C'
    sources: {binary: ./complex3.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_complex3_2031:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex3.C'
    sources: {binary: ./complex3.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_complex3_487:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex3.C'
    sources: {binary: ./complex3.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_complex3_488:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex3.C'
    sources: {binary: ./complex3.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_complex3_489:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex3.C'
    sources: {binary: ./complex3.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_complex4_2032:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex4.C'
    sources: {binary: complex4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_complex4_2033:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex4.C'
    sources: {binary: complex4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_complex4_2034:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex4.C'
    sources: {binary: complex4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_complex4_490:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex4.C'
    sources: {binary: complex4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_complex4_491:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex4.C'
    sources: {binary: complex4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_complex4_492:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex4.C'
    sources: {binary: complex4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_complex5_2035:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex5.C'
    sources: {binary: complex5.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
test_complex5_2036:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex5.C'
    sources: {binary: complex5.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
test_complex5_2037:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex5.C'
    sources: {binary: complex5.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
test_complex5_493:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex5.C'
    sources: {binary: complex5.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
test_complex5_494:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex5.C'
    sources: {binary: complex5.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
test_complex5_495:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex5.C'
    sources: {binary: complex5.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
test_complex6_2038:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex6.C'
    sources: {binary: complex6.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complex6_2039:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex6.C'
    sources: {binary: complex6.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complex6_2040:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex6.C'
    sources: {binary: complex6.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complex6_496:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex6.C'
    sources: {binary: complex6.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complex6_497:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex6.C'
    sources: {binary: complex6.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complex6_498:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex6.C'
    sources: {binary: complex6.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complex7_2041:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex7.C'
    sources: {binary: complex7.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complex7_2042:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex7.C'
    sources: {binary: complex7.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complex7_2043:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex7.C'
    sources: {binary: complex7.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complex7_499:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex7.C'
    sources: {binary: complex7.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complex7_500:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex7.C'
    sources: {binary: complex7.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complex7_501:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex7.C'
    sources: {binary: complex7.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complex8_2044:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex8.C'
    sources: {binary: ./complex8.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_complex8_2045:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex8.C'
    sources: {binary: ./complex8.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_complex8_502:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex8.C'
    sources: {binary: ./complex8.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_complex8_503:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex8.C'
    sources: {binary: ./complex8.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_complex9_2046:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex9.C'
    sources: {binary: complex9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_complex9_2047:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex9.C'
    sources: {binary: complex9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_complex9_2048:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex9.C'
    sources: {binary: complex9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_complex9_504:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex9.C'
    sources: {binary: complex9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_complex9_505:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex9.C'
    sources: {binary: complex9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_complex9_506:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complex9.C'
    sources: {binary: complex9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_complit10_2052:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit10.C'
    sources: {binary: complit10.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable-sized
          compound literal")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("have
          incomplete type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("have
          incomplete type")[^\n]*\n?)+'}
test_complit10_2053:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit10.C'
    sources: {binary: complit10.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable-sized
          compound literal")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("have
          incomplete type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("have
          incomplete type")[^\n]*\n?)+'}
test_complit10_2054:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit10.C'
    sources: {binary: complit10.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable-sized
          compound literal")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("have
          incomplete type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("have
          incomplete type")[^\n]*\n?)+'}
test_complit10_510:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit10.C'
    sources: {binary: complit10.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable-sized
          compound literal")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("have
          incomplete type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("have
          incomplete type")[^\n]*\n?)+'}
test_complit10_511:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit10.C'
    sources: {binary: complit10.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable-sized
          compound literal")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("have
          incomplete type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("have
          incomplete type")[^\n]*\n?)+'}
test_complit10_512:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit10.C'
    sources: {binary: complit10.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable-sized
          compound literal")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("have
          incomplete type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("have
          incomplete type")[^\n]*\n?)+'}
test_complit11_2055:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit11.C'
    sources: {binary: complit11.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("temporary")[^\n]*\n?)+'}
test_complit11_2056:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit11.C'
    sources: {binary: complit11.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("temporary")[^\n]*\n?)+'}
test_complit11_2057:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit11.C'
    sources: {binary: complit11.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("temporary")[^\n]*\n?)+'}
test_complit11_513:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit11.C'
    sources: {binary: complit11.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("temporary")[^\n]*\n?)+'}
test_complit11_514:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit11.C'
    sources: {binary: complit11.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("temporary")[^\n]*\n?)+'}
test_complit11_515:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit11.C'
    sources: {binary: complit11.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("temporary")[^\n]*\n?)+'}
test_complit12_2058:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit12.C'
    sources: {binary: ./complit12.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_complit12_2059:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit12.C'
    sources: {binary: ./complit12.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_complit12_2060:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit12.C'
    sources: {binary: ./complit12.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_complit12_516:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit12.C'
    sources: {binary: ./complit12.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_complit12_517:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit12.C'
    sources: {binary: ./complit12.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_complit12_518:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit12.C'
    sources: {binary: ./complit12.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_complit13_2061:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit13.C'
    sources: {binary: complit13.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complit13_2062:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit13.C'
    sources: {binary: complit13.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complit13_2063:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit13.C'
    sources: {binary: complit13.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complit13_519:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit13.C'
    sources: {binary: complit13.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complit13_520:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit13.C'
    sources: {binary: complit13.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complit13_521:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit13.C'
    sources: {binary: complit13.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complit14_2064:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit14.C'
    sources: {binary: complit14.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complit14_2065:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit14.C'
    sources: {binary: complit14.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complit14_2066:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit14.C'
    sources: {binary: complit14.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complit14_522:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit14.C'
    sources: {binary: complit14.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complit14_523:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit14.C'
    sources: {binary: complit14.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complit14_524:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit14.C'
    sources: {binary: complit14.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complit15_2067:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit15.C'
    sources: {binary: complit15.s, cflags: "-flto -std=c++98\n -S"}
  group: GRPSERIAL
test_complit15_525:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit15.C'
    sources: {binary: complit15.s, cflags: "-flto -std=c++98\n -S"}
  group: GRPSERIAL
test_complit1_2049:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit1.C'
    sources: {binary: complit1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_complit1_2050:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit1.C'
    sources: {binary: complit1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_complit1_2051:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit1.C'
    sources: {binary: complit1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_complit1_507:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit1.C'
    sources: {binary: complit1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_complit1_508:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit1.C'
    sources: {binary: complit1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_complit1_509:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit1.C'
    sources: {binary: complit1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_complit2_2068:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit2.C'
    sources: {binary: complit2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complit2_2069:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit2.C'
    sources: {binary: complit2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complit2_2070:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit2.C'
    sources: {binary: complit2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complit2_526:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit2.C'
    sources: {binary: complit2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complit2_527:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit2.C'
    sources: {binary: complit2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complit2_528:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit2.C'
    sources: {binary: complit2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complit3_2071:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit3.C'
    sources: {binary: complit3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("init")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("init")[^\n]*\n?)+'}
test_complit3_2072:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit3.C'
    sources: {binary: complit3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("init")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("init")[^\n]*\n?)+'}
test_complit3_2073:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit3.C'
    sources: {binary: complit3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("init")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("init")[^\n]*\n?)+'}
test_complit3_529:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit3.C'
    sources: {binary: complit3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("init")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("init")[^\n]*\n?)+'}
test_complit3_530:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit3.C'
    sources: {binary: complit3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("init")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("init")[^\n]*\n?)+'}
test_complit3_531:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit3.C'
    sources: {binary: complit3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("init")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("init")[^\n]*\n?)+'}
test_complit4_2074:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit4.C'
    sources: {binary: ./complit4.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_complit4_2075:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit4.C'
    sources: {binary: ./complit4.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_complit4_2076:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit4.C'
    sources: {binary: ./complit4.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_complit4_532:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit4.C'
    sources: {binary: ./complit4.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_complit4_533:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit4.C'
    sources: {binary: ./complit4.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_complit4_534:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit4.C'
    sources: {binary: ./complit4.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_complit5_2077:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit5.C'
    sources: {binary: complit5.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complit5_2078:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit5.C'
    sources: {binary: complit5.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complit5_2079:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit5.C'
    sources: {binary: complit5.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complit5_535:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit5.C'
    sources: {binary: complit5.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complit5_536:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit5.C'
    sources: {binary: complit5.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complit5_537:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit5.C'
    sources: {binary: complit5.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complit6_2080:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit6.C'
    sources: {binary: complit6.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complit6_2081:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit6.C'
    sources: {binary: complit6.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complit6_2082:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit6.C'
    sources: {binary: complit6.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complit6_538:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit6.C'
    sources: {binary: complit6.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complit6_539:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit6.C'
    sources: {binary: complit6.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complit6_540:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit6.C'
    sources: {binary: complit6.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complit7_2083:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit7.C'
    sources: {binary: complit7.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'}
test_complit7_2084:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit7.C'
    sources: {binary: complit7.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'}
test_complit7_2085:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit7.C'
    sources: {binary: complit7.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'}
test_complit7_541:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit7.C'
    sources: {binary: complit7.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'}
test_complit7_542:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit7.C'
    sources: {binary: complit7.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'}
test_complit7_543:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit7.C'
    sources: {binary: complit7.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type")[^\n]*\n?)+'}
test_complit8_2086:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit8.C'
    sources: {binary: complit8.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializers|incompatible")[^\n]*\n?)+'}
test_complit8_2087:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit8.C'
    sources: {binary: complit8.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializers|incompatible")[^\n]*\n?)+'}
test_complit8_2088:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit8.C'
    sources: {binary: complit8.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializers|incompatible")[^\n]*\n?)+'}
test_complit8_544:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit8.C'
    sources: {binary: complit8.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializers|incompatible")[^\n]*\n?)+'}
test_complit8_545:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit8.C'
    sources: {binary: complit8.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializers|incompatible")[^\n]*\n?)+'}
test_complit8_546:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit8.C'
    sources: {binary: complit8.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializers|incompatible")[^\n]*\n?)+'}
test_complit9_2089:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit9.C'
    sources: {binary: complit9.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complit9_2090:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit9.C'
    sources: {binary: complit9.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complit9_2091:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit9.C'
    sources: {binary: complit9.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_complit9_547:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit9.C'
    sources: {binary: complit9.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_complit9_548:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit9.C'
    sources: {binary: complit9.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_complit9_549:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/complit9.C'
    sources: {binary: complit9.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_cond1_2092:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cond1.C'
    sources: {binary: cond1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_cond1_2093:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cond1.C'
    sources: {binary: cond1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_cond1_2094:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cond1.C'
    sources: {binary: cond1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_cond1_550:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cond1.C'
    sources: {binary: cond1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_cond1_551:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cond1.C'
    sources: {binary: cond1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_cond1_552:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cond1.C'
    sources: {binary: cond1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_cond2_2095:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cond2.C'
    sources: {binary: ./cond2.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_cond2_2096:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cond2.C'
    sources: {binary: ./cond2.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_cond2_2097:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cond2.C'
    sources: {binary: ./cond2.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_cond2_553:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cond2.C'
    sources: {binary: ./cond2.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_cond2_554:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cond2.C'
    sources: {binary: ./cond2.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_cond2_555:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/cond2.C'
    sources: {binary: ./cond2.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_constexpr-pr82781_2098:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/constexpr-pr82781.C'
    sources: {binary: constexpr-pr82781.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_constexpr-pr82781_2099:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/constexpr-pr82781.C'
    sources: {binary: constexpr-pr82781.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_constexpr-pr82781_556:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/constexpr-pr82781.C'
    sources: {binary: constexpr-pr82781.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_constexpr-pr82781_557:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/constexpr-pr82781.C'
    sources: {binary: constexpr-pr82781.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_constexpr-vla1_2100:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/constexpr-vla1.C'
    sources: {binary: constexpr-vla1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_constexpr-vla1_558:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/constexpr-vla1.C'
    sources: {binary: constexpr-vla1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_constexpr-vla2_2101:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/constexpr-vla2.C'
    sources: {binary: constexpr-vla2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_constexpr-vla2_559:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/constexpr-vla2.C'
    sources: {binary: constexpr-vla2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_constexpr-vla3_2102:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/constexpr-vla3.C'
    sources: {binary: constexpr-vla3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_constexpr-vla3_560:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/constexpr-vla3.C'
    sources: {binary: constexpr-vla3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_constexpr-vla4_2103:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/constexpr-vla4.C'
    sources: {binary: constexpr-vla4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_constexpr-vla4_561:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/constexpr-vla4.C'
    sources: {binary: constexpr-vla4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_construct1_2104:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/construct1.C'
    sources: {binary: construct1.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
test_construct1_2105:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/construct1.C'
    sources: {binary: construct1.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
test_construct1_2106:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/construct1.C'
    sources: {binary: construct1.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
test_construct1_562:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/construct1.C'
    sources: {binary: construct1.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
test_construct1_563:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/construct1.C'
    sources: {binary: construct1.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
test_construct1_564:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/construct1.C'
    sources: {binary: construct1.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
test_conv1_2107:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/conv1.C'
    sources: {binary: conv1.s, cflags: "-std=gnu++98 -fpermissive -w\n -S"}
  group: GRPSERIAL
test_conv1_2108:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/conv1.C'
    sources: {binary: conv1.s, cflags: "-std=gnu++11 -fpermissive -w\n -S"}
  group: GRPSERIAL
test_conv1_2109:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/conv1.C'
    sources: {binary: conv1.s, cflags: "-std=gnu++14 -fpermissive -w\n -S"}
  group: GRPSERIAL
test_conv1_565:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/conv1.C'
    sources: {binary: conv1.s, cflags: "-std=gnu++98 -fpermissive -w\n -S"}
  group: GRPSERIAL
test_conv1_566:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/conv1.C'
    sources: {binary: conv1.s, cflags: "-std=gnu++11 -fpermissive -w\n -S"}
  group: GRPSERIAL
test_conv1_567:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/conv1.C'
    sources: {binary: conv1.s, cflags: "-std=gnu++14 -fpermissive -w\n -S"}
  group: GRPSERIAL
test_desig1_2110:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig1.C'
    sources: {binary: desig1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_desig1_2111:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig1.C'
    sources: {binary: desig1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_desig1_2112:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig1.C'
    sources: {binary: desig1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_desig1_568:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig1.C'
    sources: {binary: desig1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_desig1_569:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig1.C'
    sources: {binary: desig1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_desig1_570:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig1.C'
    sources: {binary: desig1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_desig2_2113:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig2.C'
    sources: {binary: desig2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_desig2_2114:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig2.C'
    sources: {binary: desig2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_desig2_2115:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig2.C'
    sources: {binary: desig2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_desig2_571:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig2.C'
    sources: {binary: desig2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_desig2_572:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig2.C'
    sources: {binary: desig2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_desig2_573:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig2.C'
    sources: {binary: desig2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_desig3_2116:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig3.C'
    sources: {binary: desig3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for an array")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for an array")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for class")[^\n]*\n?)+'}
test_desig3_2117:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig3.C'
    sources: {binary: desig3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for an array")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for an array")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for class")[^\n]*\n?)+'}
test_desig3_2118:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig3.C'
    sources: {binary: desig3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for an array")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for an array")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for class")[^\n]*\n?)+'}
test_desig3_574:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig3.C'
    sources: {binary: desig3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for an array")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for an array")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for class")[^\n]*\n?)+'}
test_desig3_575:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig3.C'
    sources: {binary: desig3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for an array")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for an array")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for class")[^\n]*\n?)+'}
test_desig3_576:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig3.C'
    sources: {binary: desig3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for an array")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for an array")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          in a GNU-style designated initializer for class")[^\n]*\n?)+'}
test_desig4_2119:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig4.C'
    sources: {binary: desig4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
test_desig4_2120:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig4.C'
    sources: {binary: desig4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
test_desig4_2121:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig4.C'
    sources: {binary: desig4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
test_desig4_577:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig4.C'
    sources: {binary: desig4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
test_desig4_578:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig4.C'
    sources: {binary: desig4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
test_desig4_579:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig4.C'
    sources: {binary: desig4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designator")[^\n]*\n?)+'}
test_desig5_2122:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig5.C'
    sources: {binary: desig5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_desig5_2123:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig5.C'
    sources: {binary: desig5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_desig5_2124:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig5.C'
    sources: {binary: desig5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_desig5_580:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig5.C'
    sources: {binary: desig5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_desig5_581:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig5.C'
    sources: {binary: desig5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_desig5_582:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig5.C'
    sources: {binary: desig5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_desig6_2125:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig6.C'
    sources: {binary: desig6.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_desig6_2126:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig6.C'
    sources: {binary: desig6.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_desig6_583:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig6.C'
    sources: {binary: desig6.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_desig6_584:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig6.C'
    sources: {binary: desig6.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_desig7_2127:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig7.C'
    sources: {binary: desig7.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designated")[^\n]*\n?)+'}
test_desig7_2128:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig7.C'
    sources: {binary: desig7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designated")[^\n]*\n?)+'}
test_desig7_2129:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig7.C'
    sources: {binary: desig7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designated")[^\n]*\n?)+'}
test_desig7_585:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig7.C'
    sources: {binary: desig7.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designated")[^\n]*\n?)+'}
test_desig7_586:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig7.C'
    sources: {binary: desig7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designated")[^\n]*\n?)+'}
test_desig7_587:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig7.C'
    sources: {binary: desig7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("designated")[^\n]*\n?)+'}
test_desig8_2130:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig8.C'
    sources: {binary: desig8.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral
          constant-expression")[^\n]*\n?)+'}
test_desig8_2131:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig8.C'
    sources: {binary: desig8.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral
          constant-expression")[^\n]*\n?)+'}
test_desig8_2132:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig8.C'
    sources: {binary: desig8.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral
          constant-expression")[^\n]*\n?)+'}
test_desig8_588:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig8.C'
    sources: {binary: desig8.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral
          constant-expression")[^\n]*\n?)+'}
test_desig8_589:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig8.C'
    sources: {binary: desig8.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral
          constant-expression")[^\n]*\n?)+'}
test_desig8_590:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/desig8.C'
    sources: {binary: desig8.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral
          constant-expression")[^\n]*\n?)+'}
test_fixed1_2133:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fixed1.C'
    sources: {binary: fixed1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
test_fixed1_2134:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fixed1.C'
    sources: {binary: fixed1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
test_fixed1_2135:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fixed1.C'
    sources: {binary: fixed1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
test_fixed1_591:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fixed1.C'
    sources: {binary: fixed1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
test_fixed1_592:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fixed1.C'
    sources: {binary: fixed1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
test_fixed1_593:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fixed1.C'
    sources: {binary: fixed1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
test_fixed2_2136:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fixed2.C'
    sources: {binary: fixed2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
test_fixed2_2137:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fixed2.C'
    sources: {binary: fixed2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
test_fixed2_2138:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fixed2.C'
    sources: {binary: fixed2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
test_fixed2_594:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fixed2.C'
    sources: {binary: fixed2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
test_fixed2_595:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fixed2.C'
    sources: {binary: fixed2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
test_fixed2_596:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fixed2.C'
    sources: {binary: fixed2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          supported")[^\n]*\n?)+'}
test_flexarray-mangle-2_2139:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-mangle-2.C'
    sources: {binary: flexarray-mangle-2.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-mangle-2_2140:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-mangle-2.C'
    sources: {binary: flexarray-mangle-2.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-mangle-2_597:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-mangle-2.C'
    sources: {binary: flexarray-mangle-2.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-mangle-2_598:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-mangle-2.C'
    sources: {binary: flexarray-mangle-2.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-mangle_2141:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-mangle.C'
    sources: {binary: flexarray-mangle.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-mangle_2142:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-mangle.C'
    sources: {binary: flexarray-mangle.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-mangle_2143:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-mangle.C'
    sources: {binary: flexarray-mangle.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-mangle_599:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-mangle.C'
    sources: {binary: flexarray-mangle.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-mangle_600:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-mangle.C'
    sources: {binary: flexarray-mangle.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-mangle_601:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-mangle.C'
    sources: {binary: flexarray-mangle.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-subst_2144:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-subst.C'
    sources: {binary: flexarray-subst.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-subst_2145:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-subst.C'
    sources: {binary: flexarray-subst.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-subst_2146:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-subst.C'
    sources: {binary: flexarray-subst.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-subst_602:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-subst.C'
    sources: {binary: flexarray-subst.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-subst_603:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-subst.C'
    sources: {binary: flexarray-subst.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexarray-subst_604:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexarray-subst.C'
    sources: {binary: flexarray-subst.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary10_2150:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary10.C'
    sources: {binary: flexary10.s, cflags: "-std=gnu++98 -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary10_2151:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary10.C'
    sources: {binary: flexary10.s, cflags: "-std=gnu++11 -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary10_2152:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary10.C'
    sources: {binary: flexary10.s, cflags: "-std=gnu++14 -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary10_608:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary10.C'
    sources: {binary: flexary10.s, cflags: "-std=gnu++98 -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary10_609:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary10.C'
    sources: {binary: flexary10.s, cflags: "-std=gnu++11 -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary10_610:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary10.C'
    sources: {binary: flexary10.s, cflags: "-std=gnu++14 -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary11_2153:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary11.C'
    sources: {binary: flexary11.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          compound-literals|initialization of a flexible array member|invalid use
          of a flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary11_2154:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary11.C'
    sources: {binary: flexary11.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          compound-literals|initialization of a flexible array member|invalid use
          of a flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary11_2155:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary11.C'
    sources: {binary: flexary11.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          compound-literals|initialization of a flexible array member|invalid use
          of a flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary11_611:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary11.C'
    sources: {binary: flexary11.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          compound-literals|initialization of a flexible array member|invalid use
          of a flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary11_612:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary11.C'
    sources: {binary: flexary11.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          compound-literals|initialization of a flexible array member|invalid use
          of a flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary11_613:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary11.C'
    sources: {binary: flexary11.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          compound-literals|initialization of a flexible array member|invalid use
          of a flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary12_2156:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary12.C'
    sources: {binary: flexary12.s, cflags: "-std=gnu++98 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .D::a. in an otherwise empty .struct D.")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .const char\\\\*. to .double.")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .A::a. in an otherwise empty .struct A.")[^\n]*\n?)+'}
test_flexary12_2157:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary12.C'
    sources: {binary: flexary12.s, cflags: "-std=gnu++11 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .D::a. in an otherwise empty .struct D.")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .const char\\\\*. to .double.")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .A::a. in an otherwise empty .struct A.")[^\n]*\n?)+'}
test_flexary12_2158:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary12.C'
    sources: {binary: flexary12.s, cflags: "-std=gnu++14 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .D::a. in an otherwise empty .struct D.")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .const char\\\\*. to .double.")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .A::a. in an otherwise empty .struct A.")[^\n]*\n?)+'}
test_flexary12_614:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary12.C'
    sources: {binary: flexary12.s, cflags: "-std=gnu++98 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .D::a. in an otherwise empty .struct D.")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .const char\\\\*. to .double.")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .A::a. in an otherwise empty .struct A.")[^\n]*\n?)+'}
test_flexary12_615:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary12.C'
    sources: {binary: flexary12.s, cflags: "-std=gnu++11 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .D::a. in an otherwise empty .struct D.")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .const char\\\\*. to .double.")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .A::a. in an otherwise empty .struct A.")[^\n]*\n?)+'}
test_flexary12_616:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary12.C'
    sources: {binary: flexary12.s, cflags: "-std=gnu++14 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from .const char\\\\*. to .int.")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .D::a. in an otherwise empty .struct D.")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .const char\\\\*. to .double.")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .A::a. in an otherwise empty .struct A.")[^\n]*\n?)+'}
test_flexary13_2159:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary13.C'
    sources: {binary: flexary13.s, cflags: "-std=gnu++98 -Wno-pedantic\n -S"}
  group: GRPSERIAL
test_flexary13_2160:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary13.C'
    sources: {binary: flexary13.s, cflags: "-std=gnu++11 -Wno-pedantic\n -S"}
  group: GRPSERIAL
test_flexary13_2161:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary13.C'
    sources: {binary: flexary13.s, cflags: "-std=gnu++14 -Wno-pedantic\n -S"}
  group: GRPSERIAL
test_flexary13_617:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary13.C'
    sources: {binary: flexary13.s, cflags: "-std=gnu++98 -Wno-pedantic\n -S"}
  group: GRPSERIAL
test_flexary13_618:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary13.C'
    sources: {binary: flexary13.s, cflags: "-std=gnu++11 -Wno-pedantic\n -S"}
  group: GRPSERIAL
test_flexary13_619:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary13.C'
    sources: {binary: flexary13.s, cflags: "-std=gnu++14 -Wno-pedantic\n -S"}
  group: GRPSERIAL
test_flexary14_2162:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary14.C'
    sources: {binary: flexary14.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary14_2163:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary14.C'
    sources: {binary: flexary14.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary14_2164:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary14.C'
    sources: {binary: flexary14.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary14_620:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary14.C'
    sources: {binary: flexary14.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary14_621:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary14.C'
    sources: {binary: flexary14.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary14_622:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary14.C'
    sources: {binary: flexary14.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary15_2165:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary15.C'
    sources: {binary: flexary15.s, cflags: "-std=gnu++98 -Wno-pedantic -Wno-write-strings
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_flexary15_2166:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary15.C'
    sources: {binary: flexary15.s, cflags: "-std=gnu++11 -Wno-pedantic -Wno-write-strings
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_flexary15_2167:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary15.C'
    sources: {binary: flexary15.s, cflags: "-std=gnu++14 -Wno-pedantic -Wno-write-strings
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_flexary15_623:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary15.C'
    sources: {binary: flexary15.s, cflags: "-std=gnu++98 -Wno-pedantic -Wno-write-strings
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_flexary15_624:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary15.C'
    sources: {binary: flexary15.s, cflags: "-std=gnu++11 -Wno-pedantic -Wno-write-strings
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_flexary15_625:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary15.C'
    sources: {binary: flexary15.s, cflags: "-std=gnu++14 -Wno-pedantic -Wno-write-strings
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion")[^\n]*\n?)+'}
test_flexary16_2168:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary16.C'
    sources: {binary: flexary16.s, cflags: "-std=gnu++98 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary16_2169:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary16.C'
    sources: {binary: flexary16.s, cflags: "-std=gnu++11 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary16_2170:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary16.C'
    sources: {binary: flexary16.s, cflags: "-std=gnu++14 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary16_626:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary16.C'
    sources: {binary: flexary16.s, cflags: "-std=gnu++98 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary16_627:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary16.C'
    sources: {binary: flexary16.s, cflags: "-std=gnu++11 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary16_628:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary16.C'
    sources: {binary: flexary16.s, cflags: "-std=gnu++14 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary18_2171:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary18.C'
    sources: {binary: flexary18.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -Wpedantic -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L211: {expect: true, expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use of .struct pr71912::foo. with a flexible array member in .struct pr71912::baz.")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
test_flexary18_2172:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary18.C'
    sources: {binary: flexary18.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -Wpedantic -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L211: {expect: true, expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use of .struct pr71912::foo. with a flexible array member in .struct pr71912::baz.")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
test_flexary18_2173:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary18.C'
    sources: {binary: flexary18.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -Wpedantic -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L211: {expect: true, expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use of .struct pr71912::foo. with a flexible array member in .struct pr71912::baz.")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
test_flexary18_629:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary18.C'
    sources: {binary: flexary18.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -Wpedantic -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L211: {expect: true, expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use of .struct pr71912::foo. with a flexible array member in .struct pr71912::baz.")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
test_flexary18_630:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary18.C'
    sources: {binary: flexary18.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -Wpedantic -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L211: {expect: true, expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use of .struct pr71912::foo. with a flexible array member in .struct pr71912::baz.")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
test_flexary18_631:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary18.C'
    sources: {binary: flexary18.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -Wpedantic -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L211: {expect: true, expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use of .struct pr71912::foo. with a flexible array member in .struct pr71912::baz.")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
test_flexary19_2174:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary19.C'
    sources: {binary: flexary19.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -Wpedantic -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L141: {expect: true, expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L163: {expect: true, expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L182: {expect: true, expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L204: {expect: true, expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L212: {expect: true, expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L219: {expect: true, expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L221: {expect: true, expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+(:222:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L230: {expect: true, expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L240: {expect: true, expr: '(^|\n)([^\n]+(:240:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L255: {expect: true, expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L292: {expect: true, expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L300: {expect: true, expr: '(^|\n)([^\n]+(:300:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L302: {expect: true, expr: '(^|\n)([^\n]+(:302:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+:87:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
test_flexary19_2175:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary19.C'
    sources: {binary: flexary19.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -Wpedantic -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L141: {expect: true, expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L163: {expect: true, expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L182: {expect: true, expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L204: {expect: true, expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L212: {expect: true, expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L219: {expect: true, expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L221: {expect: true, expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+(:222:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L230: {expect: true, expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L240: {expect: true, expr: '(^|\n)([^\n]+(:240:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L255: {expect: true, expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L292: {expect: true, expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L300: {expect: true, expr: '(^|\n)([^\n]+(:300:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L302: {expect: true, expr: '(^|\n)([^\n]+(:302:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+:87:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
test_flexary19_2176:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary19.C'
    sources: {binary: flexary19.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -Wpedantic -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L141: {expect: true, expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L163: {expect: true, expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L182: {expect: true, expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L204: {expect: true, expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L212: {expect: true, expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L219: {expect: true, expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L221: {expect: true, expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+(:222:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L230: {expect: true, expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L240: {expect: true, expr: '(^|\n)([^\n]+(:240:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L255: {expect: true, expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L292: {expect: true, expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L300: {expect: true, expr: '(^|\n)([^\n]+(:300:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L302: {expect: true, expr: '(^|\n)([^\n]+(:302:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+:87:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
test_flexary19_632:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary19.C'
    sources: {binary: flexary19.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -Wpedantic -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L141: {expect: true, expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L163: {expect: true, expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L182: {expect: true, expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L204: {expect: true, expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L212: {expect: true, expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L219: {expect: true, expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L221: {expect: true, expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+(:222:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L230: {expect: true, expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L240: {expect: true, expr: '(^|\n)([^\n]+(:240:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L255: {expect: true, expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L292: {expect: true, expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L300: {expect: true, expr: '(^|\n)([^\n]+(:300:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L302: {expect: true, expr: '(^|\n)([^\n]+(:302:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+:87:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
test_flexary19_633:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary19.C'
    sources: {binary: flexary19.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -Wpedantic -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L141: {expect: true, expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L163: {expect: true, expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L182: {expect: true, expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L204: {expect: true, expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L212: {expect: true, expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L219: {expect: true, expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L221: {expect: true, expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+(:222:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L230: {expect: true, expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L240: {expect: true, expr: '(^|\n)([^\n]+(:240:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L255: {expect: true, expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L292: {expect: true, expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L300: {expect: true, expr: '(^|\n)([^\n]+(:300:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L302: {expect: true, expr: '(^|\n)([^\n]+(:302:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+:87:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
test_flexary19_634:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary19.C'
    sources: {binary: flexary19.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -Wpedantic -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L141: {expect: true, expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L163: {expect: true, expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L182: {expect: true, expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L204: {expect: true, expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L212: {expect: true, expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L219: {expect: true, expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L221: {expect: true, expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+(:222:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L230: {expect: true, expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L240: {expect: true, expr: '(^|\n)([^\n]+(:240:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L255: {expect: true, expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L292: {expect: true, expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L300: {expect: true, expr: '(^|\n)([^\n]+(:300:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L302: {expect: true, expr: '(^|\n)([^\n]+(:302:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+:87:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
test_flexary1_2147:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary1.C'
    sources: {binary: flexary1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_flexary1_2148:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary1.C'
    sources: {binary: flexary1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_flexary1_2149:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary1.C'
    sources: {binary: flexary1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_flexary1_605:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary1.C'
    sources: {binary: flexary1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_flexary1_606:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary1.C'
    sources: {binary: flexary1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_flexary1_607:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary1.C'
    sources: {binary: flexary1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_flexary20_2180:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary20.C'
    sources: {binary: flexary20.s, cflags: "-std=gnu++11 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
test_flexary20_2181:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary20.C'
    sources: {binary: flexary20.s, cflags: "-std=gnu++14 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
test_flexary20_638:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary20.C'
    sources: {binary: flexary20.s, cflags: "-std=gnu++11 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
test_flexary20_639:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary20.C'
    sources: {binary: flexary20.s, cflags: "-std=gnu++14 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
test_flexary21_2182:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary21.C'
    sources: {binary: flexary21.s, cflags: "-std=gnu++11 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
test_flexary21_2183:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary21.C'
    sources: {binary: flexary21.s, cflags: "-std=gnu++14 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
test_flexary21_640:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary21.C'
    sources: {binary: flexary21.s, cflags: "-std=gnu++11 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
test_flexary21_641:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary21.C'
    sources: {binary: flexary21.s, cflags: "-std=gnu++14 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
test_flexary22_2184:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary22.C'
    sources: {binary: flexary22.s, cflags: "-std=gnu++11 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
test_flexary22_2185:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary22.C'
    sources: {binary: flexary22.s, cflags: "-std=gnu++14 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
test_flexary22_642:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary22.C'
    sources: {binary: flexary22.s, cflags: "-std=gnu++11 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
test_flexary22_643:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary22.C'
    sources: {binary: flexary22.s, cflags: "-std=gnu++14 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
test_flexary23_2186:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary23.C'
    sources: {binary: flexary23.s, cflags: "-std=gnu++14 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
test_flexary23_644:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary23.C'
    sources: {binary: flexary23.s, cflags: "-std=gnu++14 -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer
          for flexible array member")[^\n]*\n?)+'}
test_flexary24_2187:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary24.C'
    sources: {binary: flexary24.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_flexary24_2188:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary24.C'
    sources: {binary: flexary24.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_flexary24_2189:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary24.C'
    sources: {binary: flexary24.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_flexary24_645:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary24.C'
    sources: {binary: flexary24.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_flexary24_646:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary24.C'
    sources: {binary: flexary24.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_flexary24_647:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary24.C'
    sources: {binary: flexary24.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_flexary2_2177:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary2.C'
    sources: {binary: flexary2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extension|flexible
          array .* in an otherwise empty")[^\n]*\n?)+'}
test_flexary2_2178:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary2.C'
    sources: {binary: flexary2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extension|flexible
          array .* in an otherwise empty")[^\n]*\n?)+'}
test_flexary2_2179:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary2.C'
    sources: {binary: flexary2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extension|flexible
          array .* in an otherwise empty")[^\n]*\n?)+'}
test_flexary2_635:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary2.C'
    sources: {binary: flexary2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extension|flexible
          array .* in an otherwise empty")[^\n]*\n?)+'}
test_flexary2_636:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary2.C'
    sources: {binary: flexary2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extension|flexible
          array .* in an otherwise empty")[^\n]*\n?)+'}
test_flexary2_637:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary2.C'
    sources: {binary: flexary2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extension|flexible
          array .* in an otherwise empty")[^\n]*\n?)+'}
test_flexary3_2190:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary3.C'
    sources: {binary: flexary3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .* in an otherwise empty")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'}
test_flexary3_2191:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary3.C'
    sources: {binary: flexary3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .* in an otherwise empty")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'}
test_flexary3_2192:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary3.C'
    sources: {binary: flexary3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .* in an otherwise empty")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'}
test_flexary3_648:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary3.C'
    sources: {binary: flexary3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .* in an otherwise empty")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'}
test_flexary3_649:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary3.C'
    sources: {binary: flexary3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .* in an otherwise empty")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'}
test_flexary3_650:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary3.C'
    sources: {binary: flexary3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .* in an otherwise empty")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'}
test_flexary4_2193:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary4.C'
    sources: {binary: flexary4.s, cflags: "-std=gnu++98 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+:184:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+:202:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L208: {expect: true, expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L236: {expect: true, expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L250: {expect: true, expr: '(^|\n)([^\n]+:250:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L264: {expect: true, expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L280: {expect: true, expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+:303:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L331: {expect: true, expr: '(^|\n)([^\n]+:331:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L337: {expect: true, expr: '(^|\n)([^\n]+:337:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L345: {expect: true, expr: '(^|\n)([^\n]+:345:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L355: {expect: true, expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L369: {expect: true, expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L378: {expect: true, expr: '(^|\n)([^\n]+:378:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L393: {expect: true, expr: '(^|\n)([^\n]+:393:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L414: {expect: true, expr: '(^|\n)([^\n]+:414:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L420: {expect: true, expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+:86:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
test_flexary4_2194:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary4.C'
    sources: {binary: flexary4.s, cflags: "-std=gnu++11 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+:184:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+:202:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L208: {expect: true, expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L236: {expect: true, expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L250: {expect: true, expr: '(^|\n)([^\n]+:250:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L264: {expect: true, expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L280: {expect: true, expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+:303:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L331: {expect: true, expr: '(^|\n)([^\n]+:331:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L337: {expect: true, expr: '(^|\n)([^\n]+:337:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L345: {expect: true, expr: '(^|\n)([^\n]+:345:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L355: {expect: true, expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L369: {expect: true, expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L378: {expect: true, expr: '(^|\n)([^\n]+:378:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L393: {expect: true, expr: '(^|\n)([^\n]+:393:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L414: {expect: true, expr: '(^|\n)([^\n]+:414:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L420: {expect: true, expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+:86:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
test_flexary4_2195:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary4.C'
    sources: {binary: flexary4.s, cflags: "-std=gnu++14 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+:184:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+:202:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L208: {expect: true, expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L236: {expect: true, expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L250: {expect: true, expr: '(^|\n)([^\n]+:250:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L264: {expect: true, expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L280: {expect: true, expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+:303:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L331: {expect: true, expr: '(^|\n)([^\n]+:331:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L337: {expect: true, expr: '(^|\n)([^\n]+:337:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L345: {expect: true, expr: '(^|\n)([^\n]+:345:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L355: {expect: true, expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L369: {expect: true, expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L378: {expect: true, expr: '(^|\n)([^\n]+:378:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L393: {expect: true, expr: '(^|\n)([^\n]+:393:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L414: {expect: true, expr: '(^|\n)([^\n]+:414:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L420: {expect: true, expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+:86:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
test_flexary4_651:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary4.C'
    sources: {binary: flexary4.s, cflags: "-std=gnu++98 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+:184:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+:202:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L208: {expect: true, expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L236: {expect: true, expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L250: {expect: true, expr: '(^|\n)([^\n]+:250:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L264: {expect: true, expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L280: {expect: true, expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+:303:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L331: {expect: true, expr: '(^|\n)([^\n]+:331:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L337: {expect: true, expr: '(^|\n)([^\n]+:337:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L345: {expect: true, expr: '(^|\n)([^\n]+:345:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L355: {expect: true, expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L369: {expect: true, expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L378: {expect: true, expr: '(^|\n)([^\n]+:378:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L393: {expect: true, expr: '(^|\n)([^\n]+:393:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L414: {expect: true, expr: '(^|\n)([^\n]+:414:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L420: {expect: true, expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+:86:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
test_flexary4_652:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary4.C'
    sources: {binary: flexary4.s, cflags: "-std=gnu++11 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+:184:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+:202:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L208: {expect: true, expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L236: {expect: true, expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L250: {expect: true, expr: '(^|\n)([^\n]+:250:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L264: {expect: true, expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L280: {expect: true, expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+:303:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L331: {expect: true, expr: '(^|\n)([^\n]+:331:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L337: {expect: true, expr: '(^|\n)([^\n]+:337:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L345: {expect: true, expr: '(^|\n)([^\n]+:345:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L355: {expect: true, expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L369: {expect: true, expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L378: {expect: true, expr: '(^|\n)([^\n]+:378:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L393: {expect: true, expr: '(^|\n)([^\n]+:393:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L414: {expect: true, expr: '(^|\n)([^\n]+:414:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L420: {expect: true, expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+:86:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
test_flexary4_653:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary4.C'
    sources: {binary: flexary4.s, cflags: "-std=gnu++14 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+:184:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+:202:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L208: {expect: true, expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+:222:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L236: {expect: true, expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L250: {expect: true, expr: '(^|\n)([^\n]+:250:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L264: {expect: true, expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L280: {expect: true, expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+:303:[^\n]*[0-9]+: (fatal )?error:[^\n]*("otherwise
          empty")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L331: {expect: true, expr: '(^|\n)([^\n]+:331:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L337: {expect: true, expr: '(^|\n)([^\n]+:337:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L345: {expect: true, expr: '(^|\n)([^\n]+:345:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L355: {expect: true, expr: '(^|\n)([^\n]+:355:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L369: {expect: true, expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L378: {expect: true, expr: '(^|\n)([^\n]+:378:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L393: {expect: true, expr: '(^|\n)([^\n]+:393:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L414: {expect: true, expr: '(^|\n)([^\n]+:414:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end")[^\n]*\n?)+'}
      L420: {expect: true, expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+:86:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
test_flexary5_2196:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary5.C'
    sources: {binary: flexary5.s, cflags: "-std=gnu++98 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D12.| D13.| D14.| D15.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L191: {expect: true, expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D28.| D29.")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .A7x::a. not at end of .struct D33.")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D6.")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D7.")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D8.")[^\n]*\n?)+'}
test_flexary5_2197:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary5.C'
    sources: {binary: flexary5.s, cflags: "-std=gnu++11 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D12.| D13.| D14.| D15.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L191: {expect: true, expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D28.| D29.")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .A7x::a. not at end of .struct D33.")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D6.")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D7.")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D8.")[^\n]*\n?)+'}
test_flexary5_2198:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary5.C'
    sources: {binary: flexary5.s, cflags: "-std=gnu++14 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D12.| D13.| D14.| D15.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L191: {expect: true, expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D28.| D29.")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .A7x::a. not at end of .struct D33.")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D6.")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D7.")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D8.")[^\n]*\n?)+'}
test_flexary5_654:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary5.C'
    sources: {binary: flexary5.s, cflags: "-std=gnu++98 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D12.| D13.| D14.| D15.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L191: {expect: true, expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D28.| D29.")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .A7x::a. not at end of .struct D33.")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D6.")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D7.")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D8.")[^\n]*\n?)+'}
test_flexary5_655:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary5.C'
    sources: {binary: flexary5.s, cflags: "-std=gnu++11 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D12.| D13.| D14.| D15.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L191: {expect: true, expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D28.| D29.")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .A7x::a. not at end of .struct D33.")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D6.")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D7.")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D8.")[^\n]*\n?)+'}
test_flexary5_656:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary5.C'
    sources: {binary: flexary5.s, cflags: "-std=gnu++14 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L105: {expect: true, expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D12.| D13.| D14.| D15.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L191: {expect: true, expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D28.| D29.")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member .A7x::a. not at end of .struct D33.")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("offsetof
          within non-standard-layout")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D6.")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D7.")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at end of .struct D8.")[^\n]*\n?)+'}
test_flexary6_2199:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary6.C'
    sources: {binary: flexary6.s, cflags: "-std=gnu++98 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          application of .sizeof. to incomplete type")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          application of .sizeof. to incomplete type")[^\n]*\n?)+'}
test_flexary6_2200:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary6.C'
    sources: {binary: flexary6.s, cflags: "-std=gnu++11 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          application of .sizeof. to incomplete type")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          application of .sizeof. to incomplete type")[^\n]*\n?)+'}
test_flexary6_2201:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary6.C'
    sources: {binary: flexary6.s, cflags: "-std=gnu++14 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          application of .sizeof. to incomplete type")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          application of .sizeof. to incomplete type")[^\n]*\n?)+'}
test_flexary6_657:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary6.C'
    sources: {binary: flexary6.s, cflags: "-std=gnu++98 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          application of .sizeof. to incomplete type")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          application of .sizeof. to incomplete type")[^\n]*\n?)+'}
test_flexary6_658:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary6.C'
    sources: {binary: flexary6.s, cflags: "-std=gnu++11 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          application of .sizeof. to incomplete type")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          application of .sizeof. to incomplete type")[^\n]*\n?)+'}
test_flexary6_659:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary6.C'
    sources: {binary: flexary6.s, cflags: "-std=gnu++14 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          application of .sizeof. to incomplete type")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          application of .sizeof. to incomplete type")[^\n]*\n?)+'}
test_flexary7_2202:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary7.C'
    sources: {binary: flexary7.s, cflags: "-std=gnu++98 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary7_2203:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary7.C'
    sources: {binary: flexary7.s, cflags: "-std=gnu++11 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary7_2204:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary7.C'
    sources: {binary: flexary7.s, cflags: "-std=gnu++14 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary7_660:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary7.C'
    sources: {binary: flexary7.s, cflags: "-std=gnu++98 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary7_661:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary7.C'
    sources: {binary: flexary7.s, cflags: "-std=gnu++11 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary7_662:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary7.C'
    sources: {binary: flexary7.s, cflags: "-std=gnu++14 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("initialization
          of a flexible array member")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member")[^\n]*\n?)+'}
test_flexary8_2205:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary8.C'
    sources: {binary: flexary8.s, cflags: "-std=gnu++98 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
test_flexary8_2206:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary8.C'
    sources: {binary: flexary8.s, cflags: "-std=gnu++11 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
test_flexary8_2207:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary8.C'
    sources: {binary: flexary8.s, cflags: "-std=gnu++14 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
test_flexary8_663:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary8.C'
    sources: {binary: flexary8.s, cflags: "-std=gnu++98 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
test_flexary8_664:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary8.C'
    sources: {binary: flexary8.s, cflags: "-std=gnu++11 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
test_flexary8_665:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary8.C'
    sources: {binary: flexary8.s, cflags: "-std=gnu++14 -Wno-error=pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("flexible
          array member in union")[^\n]*\n?)+'}
test_flexary9_2208:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary9.C'
    sources: {binary: flexary9.s, cflags: "-std=gnu++98 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L121: {expect: true, expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L144: {expect: true, expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L162: {expect: true, expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L189: {expect: true, expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|otherwise empty")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|otherwise empty")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L215: {expect: true, expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L223: {expect: true, expr: '(^|\n)([^\n]+(:223:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L229: {expect: true, expr: '(^|\n)([^\n]+(:229:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L237: {expect: true, expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L243: {expect: true, expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L251: {expect: true, expr: '(^|\n)([^\n]+(:251:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L257: {expect: true, expr: '(^|\n)([^\n]+(:257:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L265: {expect: true, expr: '(^|\n)([^\n]+(:265:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L273: {expect: true, expr: '(^|\n)([^\n]+(:273:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L284: {expect: true, expr: '(^|\n)([^\n]+(:284:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use \\[^\\n\\r\\]* with a zero-size array")[^\n]*\n?)+'}
      L285: {expect: true, expr: '(^|\n)([^\n]+(:285:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          zero-size array")[^\n]*\n?)+'}
      L286: {expect: true, expr: '(^|\n)([^\n]+(:286:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L292: {expect: true, expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L295: {expect: true, expr: '(^|\n)([^\n]+(:295:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L296: {expect: true, expr: '(^|\n)([^\n]+(:296:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L297: {expect: true, expr: '(^|\n)([^\n]+(:297:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L306: {expect: true, expr: '(^|\n)([^\n]+(:306:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L307: {expect: true, expr: '(^|\n)([^\n]+(:307:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L308: {expect: true, expr: '(^|\n)([^\n]+(:308:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L315: {expect: true, expr: '(^|\n)([^\n]+(:315:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|in an otherwise empty")[^\n]*\n?)+'}
      L316: {expect: true, expr: '(^|\n)([^\n]+(:316:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L321: {expect: true, expr: '(^|\n)([^\n]+(:321:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L322: {expect: true, expr: '(^|\n)([^\n]+(:322:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L329: {expect: true, expr: '(^|\n)([^\n]+(:329:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L330: {expect: true, expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L332: {expect: true, expr: '(^|\n)([^\n]+(:332:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L339: {expect: true, expr: '(^|\n)([^\n]+(:339:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L340: {expect: true, expr: '(^|\n)([^\n]+(:340:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L341: {expect: true, expr: '(^|\n)([^\n]+(:341:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L348: {expect: true, expr: '(^|\n)([^\n]+(:348:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L354: {expect: true, expr: '(^|\n)([^\n]+(:354:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L359: {expect: true, expr: '(^|\n)([^\n]+(:359:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L363: {expect: true, expr: '(^|\n)([^\n]+(:363:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L368: {expect: true, expr: '(^|\n)([^\n]+(:368:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L372: {expect: true, expr: '(^|\n)([^\n]+(:372:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L377: {expect: true, expr: '(^|\n)([^\n]+(:377:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L378: {expect: true, expr: '(^|\n)([^\n]+(:378:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L382: {expect: true, expr: '(^|\n)([^\n]+(:382:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L384: {expect: true, expr: '(^|\n)([^\n]+(:384:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L391: {expect: true, expr: '(^|\n)([^\n]+(:391:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L392: {expect: true, expr: '(^|\n)([^\n]+(:392:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L398: {expect: true, expr: '(^|\n)([^\n]+(:398:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L399: {expect: true, expr: '(^|\n)([^\n]+(:399:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("zero-size")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
test_flexary9_2209:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary9.C'
    sources: {binary: flexary9.s, cflags: "-std=gnu++11 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L121: {expect: true, expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L144: {expect: true, expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L162: {expect: true, expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L189: {expect: true, expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|otherwise empty")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|otherwise empty")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L215: {expect: true, expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L223: {expect: true, expr: '(^|\n)([^\n]+(:223:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L229: {expect: true, expr: '(^|\n)([^\n]+(:229:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L237: {expect: true, expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L243: {expect: true, expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L251: {expect: true, expr: '(^|\n)([^\n]+(:251:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L257: {expect: true, expr: '(^|\n)([^\n]+(:257:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L265: {expect: true, expr: '(^|\n)([^\n]+(:265:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L273: {expect: true, expr: '(^|\n)([^\n]+(:273:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L284: {expect: true, expr: '(^|\n)([^\n]+(:284:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use \\[^\\n\\r\\]* with a zero-size array")[^\n]*\n?)+'}
      L285: {expect: true, expr: '(^|\n)([^\n]+(:285:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          zero-size array")[^\n]*\n?)+'}
      L286: {expect: true, expr: '(^|\n)([^\n]+(:286:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L292: {expect: true, expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L295: {expect: true, expr: '(^|\n)([^\n]+(:295:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L296: {expect: true, expr: '(^|\n)([^\n]+(:296:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L297: {expect: true, expr: '(^|\n)([^\n]+(:297:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L306: {expect: true, expr: '(^|\n)([^\n]+(:306:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L307: {expect: true, expr: '(^|\n)([^\n]+(:307:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L308: {expect: true, expr: '(^|\n)([^\n]+(:308:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L315: {expect: true, expr: '(^|\n)([^\n]+(:315:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|in an otherwise empty")[^\n]*\n?)+'}
      L316: {expect: true, expr: '(^|\n)([^\n]+(:316:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L321: {expect: true, expr: '(^|\n)([^\n]+(:321:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L322: {expect: true, expr: '(^|\n)([^\n]+(:322:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L329: {expect: true, expr: '(^|\n)([^\n]+(:329:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L330: {expect: true, expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L332: {expect: true, expr: '(^|\n)([^\n]+(:332:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L339: {expect: true, expr: '(^|\n)([^\n]+(:339:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L340: {expect: true, expr: '(^|\n)([^\n]+(:340:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L341: {expect: true, expr: '(^|\n)([^\n]+(:341:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L348: {expect: true, expr: '(^|\n)([^\n]+(:348:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L354: {expect: true, expr: '(^|\n)([^\n]+(:354:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L359: {expect: true, expr: '(^|\n)([^\n]+(:359:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L363: {expect: true, expr: '(^|\n)([^\n]+(:363:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L368: {expect: true, expr: '(^|\n)([^\n]+(:368:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L372: {expect: true, expr: '(^|\n)([^\n]+(:372:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L377: {expect: true, expr: '(^|\n)([^\n]+(:377:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L378: {expect: true, expr: '(^|\n)([^\n]+(:378:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L382: {expect: true, expr: '(^|\n)([^\n]+(:382:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L384: {expect: true, expr: '(^|\n)([^\n]+(:384:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L391: {expect: true, expr: '(^|\n)([^\n]+(:391:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L392: {expect: true, expr: '(^|\n)([^\n]+(:392:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L398: {expect: true, expr: '(^|\n)([^\n]+(:398:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L399: {expect: true, expr: '(^|\n)([^\n]+(:399:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("zero-size")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
test_flexary9_2210:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary9.C'
    sources: {binary: flexary9.s, cflags: "-std=gnu++14 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L121: {expect: true, expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L144: {expect: true, expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L162: {expect: true, expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L189: {expect: true, expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|otherwise empty")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|otherwise empty")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L215: {expect: true, expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L223: {expect: true, expr: '(^|\n)([^\n]+(:223:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L229: {expect: true, expr: '(^|\n)([^\n]+(:229:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L237: {expect: true, expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L243: {expect: true, expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L251: {expect: true, expr: '(^|\n)([^\n]+(:251:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L257: {expect: true, expr: '(^|\n)([^\n]+(:257:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L265: {expect: true, expr: '(^|\n)([^\n]+(:265:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L273: {expect: true, expr: '(^|\n)([^\n]+(:273:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L284: {expect: true, expr: '(^|\n)([^\n]+(:284:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use \\[^\\n\\r\\]* with a zero-size array")[^\n]*\n?)+'}
      L285: {expect: true, expr: '(^|\n)([^\n]+(:285:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          zero-size array")[^\n]*\n?)+'}
      L286: {expect: true, expr: '(^|\n)([^\n]+(:286:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L292: {expect: true, expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L295: {expect: true, expr: '(^|\n)([^\n]+(:295:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L296: {expect: true, expr: '(^|\n)([^\n]+(:296:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L297: {expect: true, expr: '(^|\n)([^\n]+(:297:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L306: {expect: true, expr: '(^|\n)([^\n]+(:306:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L307: {expect: true, expr: '(^|\n)([^\n]+(:307:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L308: {expect: true, expr: '(^|\n)([^\n]+(:308:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L315: {expect: true, expr: '(^|\n)([^\n]+(:315:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|in an otherwise empty")[^\n]*\n?)+'}
      L316: {expect: true, expr: '(^|\n)([^\n]+(:316:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L321: {expect: true, expr: '(^|\n)([^\n]+(:321:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L322: {expect: true, expr: '(^|\n)([^\n]+(:322:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L329: {expect: true, expr: '(^|\n)([^\n]+(:329:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L330: {expect: true, expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L332: {expect: true, expr: '(^|\n)([^\n]+(:332:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L339: {expect: true, expr: '(^|\n)([^\n]+(:339:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L340: {expect: true, expr: '(^|\n)([^\n]+(:340:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L341: {expect: true, expr: '(^|\n)([^\n]+(:341:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L348: {expect: true, expr: '(^|\n)([^\n]+(:348:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L354: {expect: true, expr: '(^|\n)([^\n]+(:354:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L359: {expect: true, expr: '(^|\n)([^\n]+(:359:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L363: {expect: true, expr: '(^|\n)([^\n]+(:363:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L368: {expect: true, expr: '(^|\n)([^\n]+(:368:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L372: {expect: true, expr: '(^|\n)([^\n]+(:372:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L377: {expect: true, expr: '(^|\n)([^\n]+(:377:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L378: {expect: true, expr: '(^|\n)([^\n]+(:378:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L382: {expect: true, expr: '(^|\n)([^\n]+(:382:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L384: {expect: true, expr: '(^|\n)([^\n]+(:384:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L391: {expect: true, expr: '(^|\n)([^\n]+(:391:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L392: {expect: true, expr: '(^|\n)([^\n]+(:392:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L398: {expect: true, expr: '(^|\n)([^\n]+(:398:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L399: {expect: true, expr: '(^|\n)([^\n]+(:399:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("zero-size")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
test_flexary9_666:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary9.C'
    sources: {binary: flexary9.s, cflags: "-std=gnu++98 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L121: {expect: true, expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L144: {expect: true, expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L162: {expect: true, expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L189: {expect: true, expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|otherwise empty")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|otherwise empty")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L215: {expect: true, expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L223: {expect: true, expr: '(^|\n)([^\n]+(:223:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L229: {expect: true, expr: '(^|\n)([^\n]+(:229:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L237: {expect: true, expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L243: {expect: true, expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L251: {expect: true, expr: '(^|\n)([^\n]+(:251:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L257: {expect: true, expr: '(^|\n)([^\n]+(:257:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L265: {expect: true, expr: '(^|\n)([^\n]+(:265:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L273: {expect: true, expr: '(^|\n)([^\n]+(:273:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L284: {expect: true, expr: '(^|\n)([^\n]+(:284:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use \\[^\\n\\r\\]* with a zero-size array")[^\n]*\n?)+'}
      L285: {expect: true, expr: '(^|\n)([^\n]+(:285:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          zero-size array")[^\n]*\n?)+'}
      L286: {expect: true, expr: '(^|\n)([^\n]+(:286:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L292: {expect: true, expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L295: {expect: true, expr: '(^|\n)([^\n]+(:295:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L296: {expect: true, expr: '(^|\n)([^\n]+(:296:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L297: {expect: true, expr: '(^|\n)([^\n]+(:297:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L306: {expect: true, expr: '(^|\n)([^\n]+(:306:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L307: {expect: true, expr: '(^|\n)([^\n]+(:307:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L308: {expect: true, expr: '(^|\n)([^\n]+(:308:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L315: {expect: true, expr: '(^|\n)([^\n]+(:315:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|in an otherwise empty")[^\n]*\n?)+'}
      L316: {expect: true, expr: '(^|\n)([^\n]+(:316:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L321: {expect: true, expr: '(^|\n)([^\n]+(:321:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L322: {expect: true, expr: '(^|\n)([^\n]+(:322:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L329: {expect: true, expr: '(^|\n)([^\n]+(:329:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L330: {expect: true, expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L332: {expect: true, expr: '(^|\n)([^\n]+(:332:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L339: {expect: true, expr: '(^|\n)([^\n]+(:339:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L340: {expect: true, expr: '(^|\n)([^\n]+(:340:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L341: {expect: true, expr: '(^|\n)([^\n]+(:341:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L348: {expect: true, expr: '(^|\n)([^\n]+(:348:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L354: {expect: true, expr: '(^|\n)([^\n]+(:354:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L359: {expect: true, expr: '(^|\n)([^\n]+(:359:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L363: {expect: true, expr: '(^|\n)([^\n]+(:363:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L368: {expect: true, expr: '(^|\n)([^\n]+(:368:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L372: {expect: true, expr: '(^|\n)([^\n]+(:372:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L377: {expect: true, expr: '(^|\n)([^\n]+(:377:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L378: {expect: true, expr: '(^|\n)([^\n]+(:378:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L382: {expect: true, expr: '(^|\n)([^\n]+(:382:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L384: {expect: true, expr: '(^|\n)([^\n]+(:384:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L391: {expect: true, expr: '(^|\n)([^\n]+(:391:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L392: {expect: true, expr: '(^|\n)([^\n]+(:392:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L398: {expect: true, expr: '(^|\n)([^\n]+(:398:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L399: {expect: true, expr: '(^|\n)([^\n]+(:399:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("zero-size")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
test_flexary9_667:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary9.C'
    sources: {binary: flexary9.s, cflags: "-std=gnu++11 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L121: {expect: true, expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L144: {expect: true, expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L162: {expect: true, expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L189: {expect: true, expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|otherwise empty")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|otherwise empty")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L215: {expect: true, expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L223: {expect: true, expr: '(^|\n)([^\n]+(:223:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L229: {expect: true, expr: '(^|\n)([^\n]+(:229:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L237: {expect: true, expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L243: {expect: true, expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L251: {expect: true, expr: '(^|\n)([^\n]+(:251:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L257: {expect: true, expr: '(^|\n)([^\n]+(:257:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L265: {expect: true, expr: '(^|\n)([^\n]+(:265:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L273: {expect: true, expr: '(^|\n)([^\n]+(:273:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L284: {expect: true, expr: '(^|\n)([^\n]+(:284:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use \\[^\\n\\r\\]* with a zero-size array")[^\n]*\n?)+'}
      L285: {expect: true, expr: '(^|\n)([^\n]+(:285:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          zero-size array")[^\n]*\n?)+'}
      L286: {expect: true, expr: '(^|\n)([^\n]+(:286:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L292: {expect: true, expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L295: {expect: true, expr: '(^|\n)([^\n]+(:295:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L296: {expect: true, expr: '(^|\n)([^\n]+(:296:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L297: {expect: true, expr: '(^|\n)([^\n]+(:297:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L306: {expect: true, expr: '(^|\n)([^\n]+(:306:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L307: {expect: true, expr: '(^|\n)([^\n]+(:307:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L308: {expect: true, expr: '(^|\n)([^\n]+(:308:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L315: {expect: true, expr: '(^|\n)([^\n]+(:315:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|in an otherwise empty")[^\n]*\n?)+'}
      L316: {expect: true, expr: '(^|\n)([^\n]+(:316:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L321: {expect: true, expr: '(^|\n)([^\n]+(:321:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L322: {expect: true, expr: '(^|\n)([^\n]+(:322:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L329: {expect: true, expr: '(^|\n)([^\n]+(:329:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L330: {expect: true, expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L332: {expect: true, expr: '(^|\n)([^\n]+(:332:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L339: {expect: true, expr: '(^|\n)([^\n]+(:339:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L340: {expect: true, expr: '(^|\n)([^\n]+(:340:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L341: {expect: true, expr: '(^|\n)([^\n]+(:341:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L348: {expect: true, expr: '(^|\n)([^\n]+(:348:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L354: {expect: true, expr: '(^|\n)([^\n]+(:354:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L359: {expect: true, expr: '(^|\n)([^\n]+(:359:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L363: {expect: true, expr: '(^|\n)([^\n]+(:363:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L368: {expect: true, expr: '(^|\n)([^\n]+(:368:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L372: {expect: true, expr: '(^|\n)([^\n]+(:372:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L377: {expect: true, expr: '(^|\n)([^\n]+(:377:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L378: {expect: true, expr: '(^|\n)([^\n]+(:378:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L382: {expect: true, expr: '(^|\n)([^\n]+(:382:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L384: {expect: true, expr: '(^|\n)([^\n]+(:384:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L391: {expect: true, expr: '(^|\n)([^\n]+(:391:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L392: {expect: true, expr: '(^|\n)([^\n]+(:392:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L398: {expect: true, expr: '(^|\n)([^\n]+(:398:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L399: {expect: true, expr: '(^|\n)([^\n]+(:399:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("zero-size")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
test_flexary9_668:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/flexary9.C'
    sources: {binary: flexary9.s, cflags: "-std=gnu++14 -Wpedantic -Wno-error=pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L121: {expect: true, expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L144: {expect: true, expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L162: {expect: true, expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L189: {expect: true, expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|otherwise empty")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|otherwise empty")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L215: {expect: true, expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L223: {expect: true, expr: '(^|\n)([^\n]+(:223:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L229: {expect: true, expr: '(^|\n)([^\n]+(:229:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L237: {expect: true, expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L243: {expect: true, expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L251: {expect: true, expr: '(^|\n)([^\n]+(:251:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L257: {expect: true, expr: '(^|\n)([^\n]+(:257:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L265: {expect: true, expr: '(^|\n)([^\n]+(:265:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L273: {expect: true, expr: '(^|\n)([^\n]+(:273:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L284: {expect: true, expr: '(^|\n)([^\n]+(:284:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use \\[^\\n\\r\\]* with a zero-size array")[^\n]*\n?)+'}
      L285: {expect: true, expr: '(^|\n)([^\n]+(:285:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          zero-size array")[^\n]*\n?)+'}
      L286: {expect: true, expr: '(^|\n)([^\n]+(:286:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L292: {expect: true, expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L295: {expect: true, expr: '(^|\n)([^\n]+(:295:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L296: {expect: true, expr: '(^|\n)([^\n]+(:296:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L297: {expect: true, expr: '(^|\n)([^\n]+(:297:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          use")[^\n]*\n?)+'}
      L306: {expect: true, expr: '(^|\n)([^\n]+(:306:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L307: {expect: true, expr: '(^|\n)([^\n]+(:307:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L308: {expect: true, expr: '(^|\n)([^\n]+(:308:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L315: {expect: true, expr: '(^|\n)([^\n]+(:315:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|in an otherwise empty")[^\n]*\n?)+'}
      L316: {expect: true, expr: '(^|\n)([^\n]+(:316:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L321: {expect: true, expr: '(^|\n)([^\n]+(:321:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L322: {expect: true, expr: '(^|\n)([^\n]+(:322:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L329: {expect: true, expr: '(^|\n)([^\n]+(:329:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L330: {expect: true, expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L332: {expect: true, expr: '(^|\n)([^\n]+(:332:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L339: {expect: true, expr: '(^|\n)([^\n]+(:339:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L340: {expect: true, expr: '(^|\n)([^\n]+(:340:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L341: {expect: true, expr: '(^|\n)([^\n]+(:341:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          struct")[^\n]*\n?)+'}
      L348: {expect: true, expr: '(^|\n)([^\n]+(:348:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L354: {expect: true, expr: '(^|\n)([^\n]+(:354:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L359: {expect: true, expr: '(^|\n)([^\n]+(:359:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L363: {expect: true, expr: '(^|\n)([^\n]+(:363:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array|not at end")[^\n]*\n?)+'}
      L368: {expect: true, expr: '(^|\n)([^\n]+(:368:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L372: {expect: true, expr: '(^|\n)([^\n]+(:372:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L377: {expect: true, expr: '(^|\n)([^\n]+(:377:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L378: {expect: true, expr: '(^|\n)([^\n]+(:378:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L382: {expect: true, expr: '(^|\n)([^\n]+(:382:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L384: {expect: true, expr: '(^|\n)([^\n]+(:384:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L391: {expect: true, expr: '(^|\n)([^\n]+(:391:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L392: {expect: true, expr: '(^|\n)([^\n]+(:392:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L398: {expect: true, expr: '(^|\n)([^\n]+(:398:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L399: {expect: true, expr: '(^|\n)([^\n]+(:399:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("zero-size")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("in
          an otherwise empty")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("zero-size|in
          an otherwise empty")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("zero-size
          array")[^\n]*\n?)+'}
test_fnname1_2211:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname1.C'
    sources: {binary: ./fnname1.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname1_2212:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname1.C'
    sources: {binary: ./fnname1.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname1_2213:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname1.C'
    sources: {binary: ./fnname1.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname1_669:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname1.C'
    sources: {binary: ./fnname1.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname1_670:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname1.C'
    sources: {binary: ./fnname1.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname1_671:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname1.C'
    sources: {binary: ./fnname1.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname2_2214:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname2.C'
    sources: {binary: ./fnname2.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname2_2215:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname2.C'
    sources: {binary: ./fnname2.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname2_2216:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname2.C'
    sources: {binary: ./fnname2.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname2_672:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname2.C'
    sources: {binary: ./fnname2.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname2_673:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname2.C'
    sources: {binary: ./fnname2.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname2_674:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname2.C'
    sources: {binary: ./fnname2.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname3_2217:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname3.C'
    sources: {binary: ./fnname3.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname3_2218:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname3.C'
    sources: {binary: ./fnname3.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname3_2219:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname3.C'
    sources: {binary: ./fnname3.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname3_675:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname3.C'
    sources: {binary: ./fnname3.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname3_676:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname3.C'
    sources: {binary: ./fnname3.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname3_677:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname3.C'
    sources: {binary: ./fnname3.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_fnname4_2220:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname4.C'
    sources: {binary: fnname4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_fnname4_2221:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname4.C'
    sources: {binary: fnname4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_fnname4_2222:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname4.C'
    sources: {binary: fnname4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_fnname4_678:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname4.C'
    sources: {binary: fnname4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_fnname4_679:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname4.C'
    sources: {binary: fnname4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_fnname4_680:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/fnname4.C'
    sources: {binary: fnname4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_forscope1_2223:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/forscope1.C'
    sources: {binary: forscope1.s, cflags: "-std=gnu++98 -fno-for-scope\n -S"}
  group: GRPSERIAL
test_forscope1_2224:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/forscope1.C'
    sources: {binary: forscope1.s, cflags: "-std=gnu++11 -fno-for-scope\n -S"}
  group: GRPSERIAL
test_forscope1_2225:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/forscope1.C'
    sources: {binary: forscope1.s, cflags: "-std=gnu++14 -fno-for-scope\n -S"}
  group: GRPSERIAL
test_forscope1_681:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/forscope1.C'
    sources: {binary: forscope1.s, cflags: "-std=gnu++98 -fno-for-scope\n -S"}
  group: GRPSERIAL
test_forscope1_682:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/forscope1.C'
    sources: {binary: forscope1.s, cflags: "-std=gnu++11 -fno-for-scope\n -S"}
  group: GRPSERIAL
test_forscope1_683:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/forscope1.C'
    sources: {binary: forscope1.s, cflags: "-std=gnu++14 -fno-for-scope\n -S"}
  group: GRPSERIAL
test_forscope2_2226:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/forscope2.C'
    sources: {binary: forscope2.s, cflags: "-fpermissive -std=c++98\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("using
          obsolete binding")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("name
          lookup")[^\n]*\n?)+'}
test_forscope2_684:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/forscope2.C'
    sources: {binary: forscope2.s, cflags: "-fpermissive -std=c++98\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("using
          obsolete binding")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("name
          lookup")[^\n]*\n?)+'}
test_gnu-inline-anon-namespace_2227:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-anon-namespace.C'
    sources: {binary: gnu-inline-anon-namespace.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-anon-namespace_2228:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-anon-namespace.C'
    sources: {binary: gnu-inline-anon-namespace.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-anon-namespace_2229:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-anon-namespace.C'
    sources: {binary: gnu-inline-anon-namespace.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-anon-namespace_685:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-anon-namespace.C'
    sources: {binary: gnu-inline-anon-namespace.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-anon-namespace_686:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-anon-namespace.C'
    sources: {binary: gnu-inline-anon-namespace.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-anon-namespace_687:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-anon-namespace.C'
    sources: {binary: gnu-inline-anon-namespace.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-class-static_2230:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-class-static.C'
    sources: {binary: gnu-inline-class-static.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-class-static_2231:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-class-static.C'
    sources: {binary: gnu-inline-class-static.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-class-static_2232:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-class-static.C'
    sources: {binary: gnu-inline-class-static.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-class-static_688:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-class-static.C'
    sources: {binary: gnu-inline-class-static.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-class-static_689:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-class-static.C'
    sources: {binary: gnu-inline-class-static.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-class-static_690:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-class-static.C'
    sources: {binary: gnu-inline-class-static.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-class_2233:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-class.C'
    sources: {binary: gnu-inline-class.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-class_2234:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-class.C'
    sources: {binary: gnu-inline-class.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-class_2235:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-class.C'
    sources: {binary: gnu-inline-class.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-class_691:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-class.C'
    sources: {binary: gnu-inline-class.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-class_692:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-class.C'
    sources: {binary: gnu-inline-class.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-class_693:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-class.C'
    sources: {binary: gnu-inline-class.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-global-redecl_2236:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global-redecl.C'
    sources: {binary: gnu-inline-global-redecl.exe, cflags: -std=gnu++98 -O}
  group: GRPSERIAL
  run: {cwd: .}
test_gnu-inline-global-redecl_2237:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global-redecl.C'
    sources: {binary: gnu-inline-global-redecl.exe, cflags: -std=gnu++11 -O}
  group: GRPSERIAL
  run: {cwd: .}
test_gnu-inline-global-redecl_2238:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global-redecl.C'
    sources: {binary: gnu-inline-global-redecl.exe, cflags: -std=gnu++14 -O}
  group: GRPSERIAL
  run: {cwd: .}
test_gnu-inline-global-redecl_694:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global-redecl.C'
    sources: {binary: gnu-inline-global-redecl.exe, cflags: -std=gnu++98 -O}
  group: GRPSERIAL
  run: {cwd: .}
test_gnu-inline-global-redecl_695:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global-redecl.C'
    sources: {binary: gnu-inline-global-redecl.exe, cflags: -std=gnu++11 -O}
  group: GRPSERIAL
  run: {cwd: .}
test_gnu-inline-global-redecl_696:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global-redecl.C'
    sources: {binary: gnu-inline-global-redecl.exe, cflags: -std=gnu++14 -O}
  group: GRPSERIAL
  run: {cwd: .}
test_gnu-inline-global-reject_2239:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global-reject.C'
    sources: {binary: gnu-inline-global-reject.s, cflags: "-std=gnu++98  -ansi -Wno-long-long
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclare")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclare")[^\n]*\n?)+'}
test_gnu-inline-global-reject_2240:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global-reject.C'
    sources: {binary: gnu-inline-global-reject.s, cflags: "-std=gnu++11  -ansi -Wno-long-long
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclare")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclare")[^\n]*\n?)+'}
test_gnu-inline-global-reject_2241:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global-reject.C'
    sources: {binary: gnu-inline-global-reject.s, cflags: "-std=gnu++14  -ansi -Wno-long-long
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclare")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclare")[^\n]*\n?)+'}
test_gnu-inline-global-reject_697:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global-reject.C'
    sources: {binary: gnu-inline-global-reject.s, cflags: "-std=gnu++98  -ansi -Wno-long-long
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclare")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclare")[^\n]*\n?)+'}
test_gnu-inline-global-reject_698:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global-reject.C'
    sources: {binary: gnu-inline-global-reject.s, cflags: "-std=gnu++11  -ansi -Wno-long-long
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclare")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclare")[^\n]*\n?)+'}
test_gnu-inline-global-reject_699:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global-reject.C'
    sources: {binary: gnu-inline-global-reject.s, cflags: "-std=gnu++14  -ansi -Wno-long-long
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclare")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclare")[^\n]*\n?)+'}
test_gnu-inline-global_2242:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global.C'
    sources: {binary: gnu-inline-global.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-global_2243:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global.C'
    sources: {binary: gnu-inline-global.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-global_2244:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global.C'
    sources: {binary: gnu-inline-global.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-global_700:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global.C'
    sources: {binary: gnu-inline-global.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-global_701:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global.C'
    sources: {binary: gnu-inline-global.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-global_702:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-global.C'
    sources: {binary: gnu-inline-global.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-namespace_2245:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-namespace.C'
    sources: {binary: gnu-inline-namespace.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-namespace_2246:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-namespace.C'
    sources: {binary: gnu-inline-namespace.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-namespace_2247:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-namespace.C'
    sources: {binary: gnu-inline-namespace.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-namespace_703:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-namespace.C'
    sources: {binary: gnu-inline-namespace.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-namespace_704:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-namespace.C'
    sources: {binary: gnu-inline-namespace.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-namespace_705:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-namespace.C'
    sources: {binary: gnu-inline-namespace.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-template-class_2248:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-template-class.C'
    sources: {binary: gnu-inline-template-class.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-template-class_2249:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-template-class.C'
    sources: {binary: gnu-inline-template-class.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-template-class_2250:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-template-class.C'
    sources: {binary: gnu-inline-template-class.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-template-class_706:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-template-class.C'
    sources: {binary: gnu-inline-template-class.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-template-class_707:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-template-class.C'
    sources: {binary: gnu-inline-template-class.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-template-class_708:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-template-class.C'
    sources: {binary: gnu-inline-template-class.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-template-func_2251:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-template-func.C'
    sources: {binary: gnu-inline-template-func.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-template-func_2252:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-template-func.C'
    sources: {binary: gnu-inline-template-func.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-template-func_2253:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-template-func.C'
    sources: {binary: gnu-inline-template-func.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-template-func_709:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-template-func.C'
    sources: {binary: gnu-inline-template-func.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-template-func_710:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-template-func.C'
    sources: {binary: gnu-inline-template-func.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_gnu-inline-template-func_711:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/gnu-inline-template-func.C'
    sources: {binary: gnu-inline-template-func.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_has_nothrow_assign_2254:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_assign.C'
    sources: {binary: ./has_nothrow_assign.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_assign_2255:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_assign.C'
    sources: {binary: ./has_nothrow_assign.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_assign_2256:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_assign.C'
    sources: {binary: ./has_nothrow_assign.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_assign_712:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_assign.C'
    sources: {binary: ./has_nothrow_assign.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_assign_713:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_assign.C'
    sources: {binary: ./has_nothrow_assign.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_assign_714:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_assign.C'
    sources: {binary: ./has_nothrow_assign.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_assign_odr_2257:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_assign_odr.C'
    sources: {binary: ./has_nothrow_assign_odr.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_assign_odr_2258:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_assign_odr.C'
    sources: {binary: ./has_nothrow_assign_odr.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_assign_odr_2259:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_assign_odr.C'
    sources: {binary: ./has_nothrow_assign_odr.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_assign_odr_715:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_assign_odr.C'
    sources: {binary: ./has_nothrow_assign_odr.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_assign_odr_716:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_assign_odr.C'
    sources: {binary: ./has_nothrow_assign_odr.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_assign_odr_717:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_assign_odr.C'
    sources: {binary: ./has_nothrow_assign_odr.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_constructor-2_2260:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor-2.C'
    sources: {binary: has_nothrow_constructor-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_has_nothrow_constructor-2_2261:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor-2.C'
    sources: {binary: has_nothrow_constructor-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_has_nothrow_constructor-2_718:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor-2.C'
    sources: {binary: has_nothrow_constructor-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_has_nothrow_constructor-2_719:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor-2.C'
    sources: {binary: has_nothrow_constructor-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_has_nothrow_constructor_2262:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor.C'
    sources: {binary: ./has_nothrow_constructor.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_constructor_2263:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor.C'
    sources: {binary: ./has_nothrow_constructor.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_constructor_2264:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor.C'
    sources: {binary: ./has_nothrow_constructor.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_constructor_720:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor.C'
    sources: {binary: ./has_nothrow_constructor.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_constructor_721:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor.C'
    sources: {binary: ./has_nothrow_constructor.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_constructor_722:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor.C'
    sources: {binary: ./has_nothrow_constructor.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_constructor_odr_2265:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor_odr.C'
    sources: {binary: ./has_nothrow_constructor_odr.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_constructor_odr_2266:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor_odr.C'
    sources: {binary: ./has_nothrow_constructor_odr.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_constructor_odr_2267:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor_odr.C'
    sources: {binary: ./has_nothrow_constructor_odr.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_constructor_odr_723:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor_odr.C'
    sources: {binary: ./has_nothrow_constructor_odr.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_constructor_odr_724:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor_odr.C'
    sources: {binary: ./has_nothrow_constructor_odr.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_constructor_odr_725:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_constructor_odr.C'
    sources: {binary: ./has_nothrow_constructor_odr.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_copy-1_2268:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-1.C'
    sources: {binary: ./has_nothrow_copy-1.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-1_2269:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-1.C'
    sources: {binary: ./has_nothrow_copy-1.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-1_2270:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-1.C'
    sources: {binary: ./has_nothrow_copy-1.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-1_726:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-1.C'
    sources: {binary: ./has_nothrow_copy-1.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-1_727:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-1.C'
    sources: {binary: ./has_nothrow_copy-1.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-1_728:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-1.C'
    sources: {binary: ./has_nothrow_copy-1.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-2_2271:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-2.C'
    sources: {binary: ./has_nothrow_copy-2.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-2_2272:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-2.C'
    sources: {binary: ./has_nothrow_copy-2.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-2_2273:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-2.C'
    sources: {binary: ./has_nothrow_copy-2.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-2_729:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-2.C'
    sources: {binary: ./has_nothrow_copy-2.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-2_730:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-2.C'
    sources: {binary: ./has_nothrow_copy-2.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-2_731:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-2.C'
    sources: {binary: ./has_nothrow_copy-2.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-3_2274:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-3.C'
    sources: {binary: ./has_nothrow_copy-3.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_copy-3_2275:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-3.C'
    sources: {binary: ./has_nothrow_copy-3.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_copy-3_2276:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-3.C'
    sources: {binary: ./has_nothrow_copy-3.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_copy-3_732:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-3.C'
    sources: {binary: ./has_nothrow_copy-3.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_copy-3_733:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-3.C'
    sources: {binary: ./has_nothrow_copy-3.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_copy-3_734:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-3.C'
    sources: {binary: ./has_nothrow_copy-3.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_copy-4_2277:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-4.C'
    sources: {binary: ./has_nothrow_copy-4.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-4_2278:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-4.C'
    sources: {binary: ./has_nothrow_copy-4.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-4_2279:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-4.C'
    sources: {binary: ./has_nothrow_copy-4.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-4_735:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-4.C'
    sources: {binary: ./has_nothrow_copy-4.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-4_736:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-4.C'
    sources: {binary: ./has_nothrow_copy-4.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-4_737:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-4.C'
    sources: {binary: ./has_nothrow_copy-4.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-5_2280:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-5.C'
    sources: {binary: ./has_nothrow_copy-5.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-5_2281:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-5.C'
    sources: {binary: ./has_nothrow_copy-5.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-5_2282:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-5.C'
    sources: {binary: ./has_nothrow_copy-5.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-5_738:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-5.C'
    sources: {binary: ./has_nothrow_copy-5.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-5_739:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-5.C'
    sources: {binary: ./has_nothrow_copy-5.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-5_740:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-5.C'
    sources: {binary: ./has_nothrow_copy-5.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-6_2283:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-6.C'
    sources: {binary: ./has_nothrow_copy-6.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-6_2284:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-6.C'
    sources: {binary: ./has_nothrow_copy-6.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-6_2285:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-6.C'
    sources: {binary: ./has_nothrow_copy-6.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-6_741:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-6.C'
    sources: {binary: ./has_nothrow_copy-6.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-6_742:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-6.C'
    sources: {binary: ./has_nothrow_copy-6.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-6_743:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-6.C'
    sources: {binary: ./has_nothrow_copy-6.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-7_2286:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-7.C'
    sources: {binary: ./has_nothrow_copy-7.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-7_2287:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-7.C'
    sources: {binary: ./has_nothrow_copy-7.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-7_744:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-7.C'
    sources: {binary: ./has_nothrow_copy-7.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-7_745:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-7.C'
    sources: {binary: ./has_nothrow_copy-7.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_has_nothrow_copy-8_2288:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-8.C'
    sources: {binary: has_nothrow_copy-8.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_has_nothrow_copy-8_2289:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-8.C'
    sources: {binary: has_nothrow_copy-8.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_has_nothrow_copy-8_746:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-8.C'
    sources: {binary: has_nothrow_copy-8.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_has_nothrow_copy-8_747:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy-8.C'
    sources: {binary: has_nothrow_copy-8.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_has_nothrow_copy_odr_2290:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy_odr.C'
    sources: {binary: ./has_nothrow_copy_odr.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_copy_odr_2291:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy_odr.C'
    sources: {binary: ./has_nothrow_copy_odr.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_copy_odr_2292:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy_odr.C'
    sources: {binary: ./has_nothrow_copy_odr.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_copy_odr_748:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy_odr.C'
    sources: {binary: ./has_nothrow_copy_odr.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_copy_odr_749:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy_odr.C'
    sources: {binary: ./has_nothrow_copy_odr.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_nothrow_copy_odr_750:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_nothrow_copy_odr.C'
    sources: {binary: ./has_nothrow_copy_odr.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_assign_2293:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_assign.C'
    sources: {binary: ./has_trivial_assign.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_assign_2294:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_assign.C'
    sources: {binary: ./has_trivial_assign.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_assign_2295:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_assign.C'
    sources: {binary: ./has_trivial_assign.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_assign_751:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_assign.C'
    sources: {binary: ./has_trivial_assign.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_assign_752:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_assign.C'
    sources: {binary: ./has_trivial_assign.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_assign_753:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_assign.C'
    sources: {binary: ./has_trivial_assign.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_constructor_2296:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_constructor.C'
    sources: {binary: ./has_trivial_constructor.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_constructor_2297:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_constructor.C'
    sources: {binary: ./has_trivial_constructor.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_constructor_2298:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_constructor.C'
    sources: {binary: ./has_trivial_constructor.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_constructor_754:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_constructor.C'
    sources: {binary: ./has_trivial_constructor.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_constructor_755:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_constructor.C'
    sources: {binary: ./has_trivial_constructor.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_constructor_756:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_constructor.C'
    sources: {binary: ./has_trivial_constructor.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_copy_2299:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_copy.C'
    sources: {binary: ./has_trivial_copy.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_copy_2300:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_copy.C'
    sources: {binary: ./has_trivial_copy.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_copy_2301:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_copy.C'
    sources: {binary: ./has_trivial_copy.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_copy_757:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_copy.C'
    sources: {binary: ./has_trivial_copy.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_copy_758:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_copy.C'
    sources: {binary: ./has_trivial_copy.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_copy_759:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_copy.C'
    sources: {binary: ./has_trivial_copy.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_destructor-1_2302:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_destructor-1.C'
    sources: {binary: ./has_trivial_destructor-1.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_destructor-1_2303:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_destructor-1.C'
    sources: {binary: ./has_trivial_destructor-1.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_destructor-1_2304:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_destructor-1.C'
    sources: {binary: ./has_trivial_destructor-1.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_destructor-1_760:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_destructor-1.C'
    sources: {binary: ./has_trivial_destructor-1.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_destructor-1_761:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_destructor-1.C'
    sources: {binary: ./has_trivial_destructor-1.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_destructor-1_762:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_destructor-1.C'
    sources: {binary: ./has_trivial_destructor-1.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_trivial_destructor-2_2305:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_destructor-2.C'
    sources: {binary: has_trivial_destructor-2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_has_trivial_destructor-2_2306:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_destructor-2.C'
    sources: {binary: has_trivial_destructor-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_has_trivial_destructor-2_2307:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_destructor-2.C'
    sources: {binary: has_trivial_destructor-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_has_trivial_destructor-2_763:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_destructor-2.C'
    sources: {binary: has_trivial_destructor-2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_has_trivial_destructor-2_764:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_destructor-2.C'
    sources: {binary: has_trivial_destructor-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_has_trivial_destructor-2_765:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_trivial_destructor-2.C'
    sources: {binary: has_trivial_destructor-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_has_virtual_destructor_2308:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_virtual_destructor.C'
    sources: {binary: ./has_virtual_destructor.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_virtual_destructor_2309:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_virtual_destructor.C'
    sources: {binary: ./has_virtual_destructor.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_virtual_destructor_2310:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_virtual_destructor.C'
    sources: {binary: ./has_virtual_destructor.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_virtual_destructor_766:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_virtual_destructor.C'
    sources: {binary: ./has_virtual_destructor.exe, cflags: -std=c++98  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_virtual_destructor_767:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_virtual_destructor.C'
    sources: {binary: ./has_virtual_destructor.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_has_virtual_destructor_768:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/has_virtual_destructor.C'
    sources: {binary: ./has_virtual_destructor.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_init1_2311:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/init1.C'
    sources: {binary: init1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_init1_2312:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/init1.C'
    sources: {binary: init1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_init1_2313:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/init1.C'
    sources: {binary: init1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_init1_769:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/init1.C'
    sources: {binary: init1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_init1_770:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/init1.C'
    sources: {binary: init1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_init1_771:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/init1.C'
    sources: {binary: init1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_injected-ttp_2314:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/injected-ttp.C'
    sources: {binary: injected-ttp.s, cflags: "-pedantic -std=c++98\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("injected-class-name")[^\n]*\n?)+'}
test_injected-ttp_772:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/injected-ttp.C'
    sources: {binary: injected-ttp.s, cflags: "-pedantic -std=c++98\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("injected-class-name")[^\n]*\n?)+'}
test_inline1_2315:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/inline1.C'
    sources: {binary: inline1.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_inline1_2316:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/inline1.C'
    sources: {binary: inline1.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_inline1_2317:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/inline1.C'
    sources: {binary: inline1.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_inline1_773:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/inline1.C'
    sources: {binary: inline1.s, cflags: "-std=gnu++98 -O -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_inline1_774:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/inline1.C'
    sources: {binary: inline1.s, cflags: "-std=gnu++11 -O -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_inline1_775:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/inline1.C'
    sources: {binary: inline1.s, cflags: "-std=gnu++14 -O -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate1_2318:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate1.C'
    sources: {binary: instantiate1.s, cflags: "-std=gnu++98 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate1_2319:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate1.C'
    sources: {binary: instantiate1.s, cflags: "-std=gnu++11 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate1_2320:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate1.C'
    sources: {binary: instantiate1.s, cflags: "-std=gnu++14 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate1_776:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate1.C'
    sources: {binary: instantiate1.s, cflags: "-std=gnu++98 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate1_777:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate1.C'
    sources: {binary: instantiate1.s, cflags: "-std=gnu++11 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate1_778:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate1.C'
    sources: {binary: instantiate1.s, cflags: "-std=gnu++14 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate2_2321:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate2.C'
    sources: {binary: instantiate2.s, cflags: "-std=gnu++98 -fno-implicit-templates
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate2_2322:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate2.C'
    sources: {binary: instantiate2.s, cflags: "-std=gnu++11 -fno-implicit-templates
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate2_2323:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate2.C'
    sources: {binary: instantiate2.s, cflags: "-std=gnu++14 -fno-implicit-templates
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate2_779:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate2.C'
    sources: {binary: instantiate2.s, cflags: "-std=gnu++98 -fno-implicit-templates
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate2_780:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate2.C'
    sources: {binary: instantiate2.s, cflags: "-std=gnu++11 -fno-implicit-templates
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate2_781:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate2.C'
    sources: {binary: instantiate2.s, cflags: "-std=gnu++14 -fno-implicit-templates
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate3_2324:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate3.C'
    sources: {binary: instantiate3.s, cflags: "-std=gnu++98 -O -fno-implicit-templates
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate3_2325:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate3.C'
    sources: {binary: instantiate3.s, cflags: "-std=gnu++11 -O -fno-implicit-templates
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate3_2326:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate3.C'
    sources: {binary: instantiate3.s, cflags: "-std=gnu++14 -O -fno-implicit-templates
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate3_782:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate3.C'
    sources: {binary: instantiate3.s, cflags: "-std=gnu++98 -O -fno-implicit-templates
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate3_783:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate3.C'
    sources: {binary: instantiate3.s, cflags: "-std=gnu++11 -O -fno-implicit-templates
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_instantiate3_784:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/instantiate3.C'
    sources: {binary: instantiate3.s, cflags: "-std=gnu++14 -O -fno-implicit-templates
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_int128-1_2327:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-1.C'
    sources: {binary: int128-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not support")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not support")[^\n]*\n?)+'}
test_int128-1_2328:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-1.C'
    sources: {binary: int128-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not support")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not support")[^\n]*\n?)+'}
test_int128-1_2329:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-1.C'
    sources: {binary: int128-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not support")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not support")[^\n]*\n?)+'}
test_int128-1_785:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-1.C'
    sources: {binary: int128-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not support")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not support")[^\n]*\n?)+'}
test_int128-1_786:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-1.C'
    sources: {binary: int128-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not support")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not support")[^\n]*\n?)+'}
test_int128-1_787:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-1.C'
    sources: {binary: int128-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not support")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not support")[^\n]*\n?)+'}
test_int128-2_2330:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-2.C'
    sources: {binary: int128-2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_int128-2_2331:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-2.C'
    sources: {binary: int128-2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_int128-2_2332:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-2.C'
    sources: {binary: int128-2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_int128-2_788:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-2.C'
    sources: {binary: int128-2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_int128-2_789:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-2.C'
    sources: {binary: int128-2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_int128-2_790:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-2.C'
    sources: {binary: int128-2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_int128-3_2333:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-3.C'
    sources: {binary: int128-3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_int128-3_2334:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-3.C'
    sources: {binary: int128-3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_int128-3_2335:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-3.C'
    sources: {binary: int128-3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_int128-3_791:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-3.C'
    sources: {binary: int128-3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_int128-3_792:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-3.C'
    sources: {binary: int128-3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_int128-3_793:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-3.C'
    sources: {binary: int128-3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_int128-4_2336:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-4.C'
    sources: {binary: int128-4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_int128-4_2337:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-4.C'
    sources: {binary: int128-4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_int128-4_794:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-4.C'
    sources: {binary: int128-4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_int128-4_795:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/int128-4.C'
    sources: {binary: int128-4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_interface1_2338:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface1.C'
    sources: {binary: interface1.exe, cflags: -std=gnu++98 -fno-inline}
  group: GRPSERIAL
  run: {cwd: .}
test_interface1_2339:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface1.C'
    sources: {binary: interface1.exe, cflags: -std=gnu++11 -fno-inline}
  group: GRPSERIAL
  run: {cwd: .}
test_interface1_2340:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface1.C'
    sources: {binary: interface1.exe, cflags: -std=gnu++14 -fno-inline}
  group: GRPSERIAL
  run: {cwd: .}
test_interface1_796:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface1.C'
    sources: {binary: interface1.exe, cflags: -std=gnu++98 -fno-inline}
  group: GRPSERIAL
  run: {cwd: .}
test_interface1_797:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface1.C'
    sources: {binary: interface1.exe, cflags: -std=gnu++11 -fno-inline}
  group: GRPSERIAL
  run: {cwd: .}
test_interface1_798:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface1.C'
    sources: {binary: interface1.exe, cflags: -std=gnu++14 -fno-inline}
  group: GRPSERIAL
  run: {cwd: .}
test_interface2_2341:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface2.C'
    sources: {binary: interface2.exe, cflags: -std=gnu++98 -fno-inline}
  group: GRPSERIAL
  run: {cwd: .}
test_interface2_2342:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface2.C'
    sources: {binary: interface2.exe, cflags: -std=gnu++11 -fno-inline}
  group: GRPSERIAL
  run: {cwd: .}
test_interface2_2343:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface2.C'
    sources: {binary: interface2.exe, cflags: -std=gnu++14 -fno-inline}
  group: GRPSERIAL
  run: {cwd: .}
test_interface2_799:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface2.C'
    sources: {binary: interface2.exe, cflags: -std=gnu++98 -fno-inline}
  group: GRPSERIAL
  run: {cwd: .}
test_interface2_800:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface2.C'
    sources: {binary: interface2.exe, cflags: -std=gnu++11 -fno-inline}
  group: GRPSERIAL
  run: {cwd: .}
test_interface2_801:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface2.C'
    sources: {binary: interface2.exe, cflags: -std=gnu++14 -fno-inline}
  group: GRPSERIAL
  run: {cwd: .}
test_interface4_2344:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface4.C'
    sources: {binary: interface4.s, cflags: "-std=gnu++98 -g2\n -S"}
  group: GRPSERIAL
test_interface4_2345:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface4.C'
    sources: {binary: interface4.s, cflags: "-std=gnu++11 -g2\n -S"}
  group: GRPSERIAL
test_interface4_2346:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface4.C'
    sources: {binary: interface4.s, cflags: "-std=gnu++14 -g2\n -S"}
  group: GRPSERIAL
test_interface4_802:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface4.C'
    sources: {binary: interface4.s, cflags: "-std=gnu++98 -g2\n -S"}
  group: GRPSERIAL
test_interface4_803:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface4.C'
    sources: {binary: interface4.s, cflags: "-std=gnu++11 -g2\n -S"}
  group: GRPSERIAL
test_interface4_804:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/interface4.C'
    sources: {binary: interface4.s, cflags: "-std=gnu++14 -g2\n -S"}
  group: GRPSERIAL
test_is_abstract_2347:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_abstract.C'
    sources: {binary: ./is_abstract.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_abstract_2348:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_abstract.C'
    sources: {binary: ./is_abstract.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_abstract_2349:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_abstract.C'
    sources: {binary: ./is_abstract.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_abstract_805:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_abstract.C'
    sources: {binary: ./is_abstract.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_abstract_806:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_abstract.C'
    sources: {binary: ./is_abstract.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_abstract_807:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_abstract.C'
    sources: {binary: ./is_abstract.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_aggregate_2350:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_aggregate.C'
    sources: {binary: ./is_aggregate.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_aggregate_2351:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_aggregate.C'
    sources: {binary: ./is_aggregate.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_aggregate_808:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_aggregate.C'
    sources: {binary: ./is_aggregate.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_aggregate_809:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_aggregate.C'
    sources: {binary: ./is_aggregate.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_base_of_2352:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of.C'
    sources: {binary: ./is_base_of.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_base_of_2353:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of.C'
    sources: {binary: ./is_base_of.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_base_of_2354:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of.C'
    sources: {binary: ./is_base_of.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_base_of_810:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of.C'
    sources: {binary: ./is_base_of.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_base_of_811:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of.C'
    sources: {binary: ./is_base_of.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_base_of_812:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of.C'
    sources: {binary: ./is_base_of.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_base_of_diagnostic_2355:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_diagnostic.C'
    sources: {binary: is_base_of_diagnostic.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_is_base_of_diagnostic_2356:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_diagnostic.C'
    sources: {binary: is_base_of_diagnostic.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_is_base_of_diagnostic_2357:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_diagnostic.C'
    sources: {binary: is_base_of_diagnostic.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_is_base_of_diagnostic_813:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_diagnostic.C'
    sources: {binary: is_base_of_diagnostic.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_is_base_of_diagnostic_814:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_diagnostic.C'
    sources: {binary: is_base_of_diagnostic.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_is_base_of_diagnostic_815:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_diagnostic.C'
    sources: {binary: is_base_of_diagnostic.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_is_base_of_incomplete-2_2358:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_incomplete-2.C'
    sources: {binary: is_base_of_incomplete-2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_base_of_incomplete-2_2359:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_incomplete-2.C'
    sources: {binary: is_base_of_incomplete-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_base_of_incomplete-2_2360:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_incomplete-2.C'
    sources: {binary: is_base_of_incomplete-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_base_of_incomplete-2_816:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_incomplete-2.C'
    sources: {binary: is_base_of_incomplete-2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_base_of_incomplete-2_817:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_incomplete-2.C'
    sources: {binary: is_base_of_incomplete-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_base_of_incomplete-2_818:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_incomplete-2.C'
    sources: {binary: is_base_of_incomplete-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_base_of_incomplete_2361:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_incomplete.C'
    sources: {binary: is_base_of_incomplete.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_base_of_incomplete_2362:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_incomplete.C'
    sources: {binary: is_base_of_incomplete.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_base_of_incomplete_2363:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_incomplete.C'
    sources: {binary: is_base_of_incomplete.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_base_of_incomplete_819:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_incomplete.C'
    sources: {binary: is_base_of_incomplete.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_base_of_incomplete_820:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_incomplete.C'
    sources: {binary: is_base_of_incomplete.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_base_of_incomplete_821:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_base_of_incomplete.C'
    sources: {binary: is_base_of_incomplete.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_class_2364:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class.C'
    sources: {binary: ./is_class.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_class_2365:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class.C'
    sources: {binary: ./is_class.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_class_2366:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class.C'
    sources: {binary: ./is_class.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_class_822:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class.C'
    sources: {binary: ./is_class.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_class_823:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class.C'
    sources: {binary: ./is_class.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_class_824:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class.C'
    sources: {binary: ./is_class.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_class_error1_2367:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class_error1.C'
    sources: {binary: is_class_error1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type-specifier|primary-expression")[^\n]*\n?)+'}
test_is_class_error1_2368:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class_error1.C'
    sources: {binary: is_class_error1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type-specifier|primary-expression")[^\n]*\n?)+'}
test_is_class_error1_2369:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class_error1.C'
    sources: {binary: is_class_error1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type-specifier|primary-expression")[^\n]*\n?)+'}
test_is_class_error1_825:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class_error1.C'
    sources: {binary: is_class_error1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type-specifier|primary-expression")[^\n]*\n?)+'}
test_is_class_error1_826:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class_error1.C'
    sources: {binary: is_class_error1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type-specifier|primary-expression")[^\n]*\n?)+'}
test_is_class_error1_827:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class_error1.C'
    sources: {binary: is_class_error1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type-specifier|primary-expression")[^\n]*\n?)+'}
test_is_class_error2_2370:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class_error2.C'
    sources: {binary: is_class_error2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_copy\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_destructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_virtual_destructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_abstract\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_base_of\\\\(int,
          float\\\\)\'' cannot be used")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_class\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_empty\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_enum\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_pod\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_polymorphic\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_union\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_assign\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_assign\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_constructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_constructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_copy\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
test_is_class_error2_2371:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class_error2.C'
    sources: {binary: is_class_error2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_copy\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_destructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_virtual_destructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_abstract\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_base_of\\\\(int,
          float\\\\)\'' cannot be used")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_class\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_empty\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_enum\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_pod\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_polymorphic\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_union\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_assign\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_assign\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_constructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_constructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_copy\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
test_is_class_error2_2372:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class_error2.C'
    sources: {binary: is_class_error2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_copy\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_destructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_virtual_destructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_abstract\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_base_of\\\\(int,
          float\\\\)\'' cannot be used")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_class\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_empty\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_enum\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_pod\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_polymorphic\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_union\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_assign\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_assign\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_constructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_constructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_copy\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
test_is_class_error2_828:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class_error2.C'
    sources: {binary: is_class_error2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_copy\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_destructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_virtual_destructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_abstract\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_base_of\\\\(int,
          float\\\\)\'' cannot be used")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_class\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_empty\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_enum\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_pod\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_polymorphic\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_union\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_assign\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_assign\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_constructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_constructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_copy\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
test_is_class_error2_829:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class_error2.C'
    sources: {binary: is_class_error2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_copy\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_destructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_virtual_destructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_abstract\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_base_of\\\\(int,
          float\\\\)\'' cannot be used")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_class\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_empty\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_enum\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_pod\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_polymorphic\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_union\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_assign\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_assign\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_constructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_constructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_copy\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
test_is_class_error2_830:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_class_error2.C'
    sources: {binary: is_class_error2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_copy\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_destructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_virtual_destructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_abstract\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_base_of\\\\(int,
          float\\\\)\'' cannot be used")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_class\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_empty\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_enum\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_pod\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_polymorphic\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__is_union\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_assign\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_assign\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_constructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_trivial_constructor\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__has_nothrow_copy\\\\(int\\\\)\''
          cannot be used")[^\n]*\n?)+'}
test_is_empty2_2376:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_empty2.C'
    sources: {binary: is_empty2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("built-in
          trait")[^\n]*\n?)+'}
test_is_empty2_2377:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_empty2.C'
    sources: {binary: is_empty2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("built-in
          trait")[^\n]*\n?)+'}
test_is_empty2_2378:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_empty2.C'
    sources: {binary: is_empty2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("built-in
          trait")[^\n]*\n?)+'}
test_is_empty2_834:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_empty2.C'
    sources: {binary: is_empty2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("built-in
          trait")[^\n]*\n?)+'}
test_is_empty2_835:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_empty2.C'
    sources: {binary: is_empty2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("built-in
          trait")[^\n]*\n?)+'}
test_is_empty2_836:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_empty2.C'
    sources: {binary: is_empty2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("built-in
          trait")[^\n]*\n?)+'}
test_is_empty_2373:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_empty.C'
    sources: {binary: ./is_empty.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_empty_2374:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_empty.C'
    sources: {binary: ./is_empty.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_empty_2375:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_empty.C'
    sources: {binary: ./is_empty.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_empty_831:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_empty.C'
    sources: {binary: ./is_empty.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_empty_832:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_empty.C'
    sources: {binary: ./is_empty.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_empty_833:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_empty.C'
    sources: {binary: ./is_empty.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_enum_2379:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_enum.C'
    sources: {binary: ./is_enum.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_enum_2380:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_enum.C'
    sources: {binary: ./is_enum.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_enum_2381:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_enum.C'
    sources: {binary: ./is_enum.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_enum_837:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_enum.C'
    sources: {binary: ./is_enum.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_enum_838:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_enum.C'
    sources: {binary: ./is_enum.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_enum_839:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_enum.C'
    sources: {binary: ./is_enum.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_final_2382:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_final.C'
    sources: {binary: is_final.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_final_2383:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_final.C'
    sources: {binary: is_final.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_final_840:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_final.C'
    sources: {binary: is_final.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_final_841:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_final.C'
    sources: {binary: is_final.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_literal_type1_2384:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_literal_type1.C'
    sources: {binary: is_literal_type1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_literal_type1_2385:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_literal_type1.C'
    sources: {binary: is_literal_type1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_literal_type1_842:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_literal_type1.C'
    sources: {binary: is_literal_type1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_literal_type1_843:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_literal_type1.C'
    sources: {binary: is_literal_type1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_literal_type2_2386:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_literal_type2.C'
    sources: {binary: is_literal_type2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_literal_type2_2387:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_literal_type2.C'
    sources: {binary: is_literal_type2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_literal_type2_844:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_literal_type2.C'
    sources: {binary: is_literal_type2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_literal_type2_845:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_literal_type2.C'
    sources: {binary: is_literal_type2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_pod_2388:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_pod.C'
    sources: {binary: ./is_pod.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_pod_2389:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_pod.C'
    sources: {binary: ./is_pod.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_pod_846:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_pod.C'
    sources: {binary: ./is_pod.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_pod_847:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_pod.C'
    sources: {binary: ./is_pod.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_pod_98_2390:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_pod_98.C'
    sources: {binary: ./is_pod_98.exe, cflags: -std=c++98}
  group: GRPSERIAL
  run: {cwd: .}
test_is_pod_98_848:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_pod_98.C'
    sources: {binary: ./is_pod_98.exe, cflags: -std=c++98}
  group: GRPSERIAL
  run: {cwd: .}
test_is_pod_incomplete_2391:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_pod_incomplete.C'
    sources: {binary: is_pod_incomplete.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_pod_incomplete_2392:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_pod_incomplete.C'
    sources: {binary: is_pod_incomplete.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_pod_incomplete_2393:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_pod_incomplete.C'
    sources: {binary: is_pod_incomplete.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_pod_incomplete_849:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_pod_incomplete.C'
    sources: {binary: is_pod_incomplete.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_pod_incomplete_850:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_pod_incomplete.C'
    sources: {binary: is_pod_incomplete.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_pod_incomplete_851:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_pod_incomplete.C'
    sources: {binary: is_pod_incomplete.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_polymorphic_2394:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_polymorphic.C'
    sources: {binary: ./is_polymorphic.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_polymorphic_2395:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_polymorphic.C'
    sources: {binary: ./is_polymorphic.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_polymorphic_2396:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_polymorphic.C'
    sources: {binary: ./is_polymorphic.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_polymorphic_852:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_polymorphic.C'
    sources: {binary: ./is_polymorphic.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_polymorphic_853:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_polymorphic.C'
    sources: {binary: ./is_polymorphic.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_polymorphic_854:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_polymorphic.C'
    sources: {binary: ./is_polymorphic.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_std_layout1_2397:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_std_layout1.C'
    sources: {binary: is_std_layout1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_std_layout1_2398:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_std_layout1.C'
    sources: {binary: is_std_layout1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_std_layout1_855:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_std_layout1.C'
    sources: {binary: is_std_layout1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_std_layout1_856:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_std_layout1.C'
    sources: {binary: is_std_layout1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_is_std_layout2_2399:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_std_layout2.C'
    sources: {binary: is_std_layout2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_is_std_layout2_2400:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_std_layout2.C'
    sources: {binary: is_std_layout2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_is_std_layout2_857:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_std_layout2.C'
    sources: {binary: is_std_layout2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_is_std_layout2_858:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_std_layout2.C'
    sources: {binary: is_std_layout2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_is_trivially_constructible1_2401:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible1.C'
    sources: {binary: is_trivially_constructible1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible1_2402:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible1.C'
    sources: {binary: is_trivially_constructible1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible1_859:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible1.C'
    sources: {binary: is_trivially_constructible1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible1_860:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible1.C'
    sources: {binary: is_trivially_constructible1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible2_2403:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible2.C'
    sources: {binary: is_trivially_constructible2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible2_2404:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible2.C'
    sources: {binary: is_trivially_constructible2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible2_861:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible2.C'
    sources: {binary: is_trivially_constructible2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible2_862:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible2.C'
    sources: {binary: is_trivially_constructible2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible3_2405:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible3.C'
    sources: {binary: is_trivially_constructible3.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible3_2406:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible3.C'
    sources: {binary: is_trivially_constructible3.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible3_863:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible3.C'
    sources: {binary: is_trivially_constructible3.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible3_864:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible3.C'
    sources: {binary: is_trivially_constructible3.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible4_2407:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible4.C'
    sources: {binary: is_trivially_constructible4.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible4_2408:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible4.C'
    sources: {binary: is_trivially_constructible4.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible4_865:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible4.C'
    sources: {binary: is_trivially_constructible4.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_trivially_constructible4_866:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_trivially_constructible4.C'
    sources: {binary: is_trivially_constructible4.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_is_union_2409:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_union.C'
    sources: {binary: ./is_union.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_union_2410:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_union.C'
    sources: {binary: ./is_union.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_union_2411:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_union.C'
    sources: {binary: ./is_union.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_union_867:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_union.C'
    sources: {binary: ./is_union.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_union_868:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_union.C'
    sources: {binary: ./is_union.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_is_union_869:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/is_union.C'
    sources: {binary: ./is_union.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_ivdep-1_2412:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/ivdep-1.C'
    sources: {binary: ivdep-1.s, cflags: "-std=gnu++98 -O3\n -S"}
  group: GRPSERIAL
test_ivdep-1_2413:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/ivdep-1.C'
    sources: {binary: ivdep-1.s, cflags: "-std=gnu++11 -O3\n -S"}
  group: GRPSERIAL
test_ivdep-1_2414:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/ivdep-1.C'
    sources: {binary: ivdep-1.s, cflags: "-std=gnu++14 -O3\n -S"}
  group: GRPSERIAL
test_ivdep-1_870:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/ivdep-1.C'
    sources: {binary: ivdep-1.s, cflags: "-std=gnu++98 -O3\n -S"}
  group: GRPSERIAL
test_ivdep-1_871:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/ivdep-1.C'
    sources: {binary: ivdep-1.s, cflags: "-std=gnu++11 -O3\n -S"}
  group: GRPSERIAL
test_ivdep-1_872:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/ivdep-1.C'
    sources: {binary: ivdep-1.s, cflags: "-std=gnu++14 -O3\n -S"}
  group: GRPSERIAL
test_label10_2418:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label10.C'
    sources: {binary: label10.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          appear in|integral")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("referenced
          outside|cannot appear in|integral")[^\n]*\n?)+'}
test_label10_2419:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label10.C'
    sources: {binary: label10.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          appear in|integral")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("referenced
          outside|cannot appear in|integral")[^\n]*\n?)+'}
test_label10_2420:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label10.C'
    sources: {binary: label10.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          appear in|integral")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("referenced
          outside|cannot appear in|integral")[^\n]*\n?)+'}
test_label10_876:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label10.C'
    sources: {binary: label10.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          appear in|integral")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("referenced
          outside|cannot appear in|integral")[^\n]*\n?)+'}
test_label10_877:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label10.C'
    sources: {binary: label10.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          appear in|integral")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("referenced
          outside|cannot appear in|integral")[^\n]*\n?)+'}
test_label10_878:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label10.C'
    sources: {binary: label10.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          appear in|integral")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("referenced
          outside|cannot appear in|integral")[^\n]*\n?)+'}
test_label11_2421:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label11.C'
    sources: {binary: label11.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_label11_2422:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label11.C'
    sources: {binary: label11.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_label11_2423:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label11.C'
    sources: {binary: label11.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_label11_879:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label11.C'
    sources: {binary: label11.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_label11_880:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label11.C'
    sources: {binary: label11.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_label11_881:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label11.C'
    sources: {binary: label11.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_label12_2424:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label12.C'
    sources: {binary: label12.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_label12_2425:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label12.C'
    sources: {binary: label12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_label12_2426:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label12.C'
    sources: {binary: label12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_label12_882:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label12.C'
    sources: {binary: label12.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_label12_883:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label12.C'
    sources: {binary: label12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_label12_884:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label12.C'
    sources: {binary: label12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_label13_2427:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label13.C'
    sources: {binary: ./label13.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_label13_2428:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label13.C'
    sources: {binary: ./label13.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_label13_2429:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label13.C'
    sources: {binary: ./label13.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_label13_885:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label13.C'
    sources: {binary: ./label13.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_label13_886:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label13.C'
    sources: {binary: ./label13.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_label13_887:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label13.C'
    sources: {binary: ./label13.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_label13a_2430:
  build:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/ext
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label13a.C'
    sources: {binary: ./label13a.exe, cflags: -std=gnu++98 -save-temps -ffat-lto-objects}
  group: GRPSERIAL
  run: {cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/ext}
test_label13a_2431:
  build:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/ext
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label13a.C'
    sources: {binary: ./label13a.exe, cflags: -std=gnu++11 -save-temps -ffat-lto-objects}
  group: GRPSERIAL
  run: {cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/ext}
test_label13a_2432:
  build:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/ext
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label13a.C'
    sources: {binary: ./label13a.exe, cflags: -std=gnu++14 -save-temps -ffat-lto-objects}
  group: GRPSERIAL
  run: {cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/ext}
test_label13a_888:
  build:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/ext
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label13a.C'
    sources: {binary: ./label13a.exe, cflags: -std=gnu++98 -save-temps -ffat-lto-objects}
  group: GRPSERIAL
  run: {cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/ext}
test_label13a_889:
  build:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/ext
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label13a.C'
    sources: {binary: ./label13a.exe, cflags: -std=gnu++11 -save-temps -ffat-lto-objects}
  group: GRPSERIAL
  run: {cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/ext}
test_label13a_890:
  build:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/ext
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label13a.C'
    sources: {binary: ./label13a.exe, cflags: -std=gnu++14 -save-temps -ffat-lto-objects}
  group: GRPSERIAL
  run: {cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/g++.dg/ext}
test_label14_2433:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label14.C'
    sources: {binary: label14.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_label14_2434:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label14.C'
    sources: {binary: label14.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_label14_2435:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label14.C'
    sources: {binary: label14.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_label14_891:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label14.C'
    sources: {binary: label14.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_label14_892:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label14.C'
    sources: {binary: label14.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_label14_893:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label14.C'
    sources: {binary: label14.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_label1_2415:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label1.C'
    sources: {binary: label1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_label1_2416:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label1.C'
    sources: {binary: label1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_label1_2417:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label1.C'
    sources: {binary: label1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_label1_873:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label1.C'
    sources: {binary: label1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_label1_874:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label1.C'
    sources: {binary: label1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_label1_875:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label1.C'
    sources: {binary: label1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_label2_2436:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label2.C'
    sources: {binary: label2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_label2_2437:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label2.C'
    sources: {binary: label2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_label2_2438:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label2.C'
    sources: {binary: label2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_label2_894:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label2.C'
    sources: {binary: label2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_label2_895:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label2.C'
    sources: {binary: label2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_label2_896:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label2.C'
    sources: {binary: label2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_label3_2439:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label3.C'
    sources: {binary: ./label3.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_label3_2440:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label3.C'
    sources: {binary: ./label3.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_label3_2441:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label3.C'
    sources: {binary: ./label3.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_label3_897:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label3.C'
    sources: {binary: ./label3.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_label3_898:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label3.C'
    sources: {binary: ./label3.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_label3_899:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label3.C'
    sources: {binary: ./label3.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_label4_2442:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label4.C'
    sources: {binary: label4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning of")[^\n]*\n?)+'}
test_label4_2443:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label4.C'
    sources: {binary: label4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning of")[^\n]*\n?)+'}
test_label4_2444:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label4.C'
    sources: {binary: label4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning of")[^\n]*\n?)+'}
test_label4_900:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label4.C'
    sources: {binary: label4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning of")[^\n]*\n?)+'}
test_label4_901:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label4.C'
    sources: {binary: label4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning of")[^\n]*\n?)+'}
test_label4_902:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label4.C'
    sources: {binary: label4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning of")[^\n]*\n?)+'}
test_label5_2445:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label5.C'
    sources: {binary: label5.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operand
          types are \''A\'' and \''void\\\\*\''")[^\n]*\n?)+'}
test_label5_2446:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label5.C'
    sources: {binary: label5.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operand
          types are \''A\'' and \''void\\\\*\''")[^\n]*\n?)+'}
test_label5_2447:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label5.C'
    sources: {binary: label5.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operand
          types are \''A\'' and \''void\\\\*\''")[^\n]*\n?)+'}
test_label5_903:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label5.C'
    sources: {binary: label5.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operand
          types are \''A\'' and \''void\\\\*\''")[^\n]*\n?)+'}
test_label5_904:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label5.C'
    sources: {binary: label5.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operand
          types are \''A\'' and \''void\\\\*\''")[^\n]*\n?)+'}
test_label5_905:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label5.C'
    sources: {binary: label5.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operand
          types are \''A\'' and \''void\\\\*\''")[^\n]*\n?)+'}
test_label6_2448:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label6.C'
    sources: {binary: label6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label6_2449:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label6.C'
    sources: {binary: label6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label6_2450:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label6.C'
    sources: {binary: label6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label6_906:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label6.C'
    sources: {binary: label6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label6_907:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label6.C'
    sources: {binary: label6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label6_908:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label6.C'
    sources: {binary: label6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label7_2451:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label7.C'
    sources: {binary: label7.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label7_2452:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label7.C'
    sources: {binary: label7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label7_2453:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label7.C'
    sources: {binary: label7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label7_909:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label7.C'
    sources: {binary: label7.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label7_910:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label7.C'
    sources: {binary: label7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label7_911:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label7.C'
    sources: {binary: label7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label8_2454:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label8.C'
    sources: {binary: label8.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_label8_2455:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label8.C'
    sources: {binary: label8.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_label8_2456:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label8.C'
    sources: {binary: label8.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_label8_912:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label8.C'
    sources: {binary: label8.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_label8_913:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label8.C'
    sources: {binary: label8.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_label8_914:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label8.C'
    sources: {binary: label8.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_label9_2457:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label9.C'
    sources: {binary: label9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label9_2458:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label9.C'
    sources: {binary: label9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label9_2459:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label9.C'
    sources: {binary: label9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label9_915:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label9.C'
    sources: {binary: label9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label9_916:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label9.C'
    sources: {binary: label9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_label9_917:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/label9.C'
    sources: {binary: label9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          at the beginning")[^\n]*\n?)+'}
test_lvaddr_2460:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/lvaddr.C'
    sources: {binary: lvaddr.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'}
test_lvaddr_2461:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/lvaddr.C'
    sources: {binary: lvaddr.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'}
test_lvaddr_2462:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/lvaddr.C'
    sources: {binary: lvaddr.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'}
test_lvaddr_918:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/lvaddr.C'
    sources: {binary: lvaddr.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'}
test_lvaddr_919:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/lvaddr.C'
    sources: {binary: lvaddr.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'}
test_lvaddr_920:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/lvaddr.C'
    sources: {binary: lvaddr.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'}
test_lvalue1_2463:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/lvalue1.C'
    sources: {binary: lvalue1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'}
test_lvalue1_2464:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/lvalue1.C'
    sources: {binary: lvalue1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'}
test_lvalue1_2465:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/lvalue1.C'
    sources: {binary: lvalue1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'}
test_lvalue1_921:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/lvalue1.C'
    sources: {binary: lvalue1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'}
test_lvalue1_922:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/lvalue1.C'
    sources: {binary: lvalue1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'}
test_lvalue1_923:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/lvalue1.C'
    sources: {binary: lvalue1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue")[^\n]*\n?)+'}
test_max_2466:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/max.C'
    sources: {binary: max.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_max_2467:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/max.C'
    sources: {binary: max.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_max_2468:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/max.C'
    sources: {binary: max.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_max_924:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/max.C'
    sources: {binary: max.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_max_925:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/max.C'
    sources: {binary: max.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_max_926:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/max.C'
    sources: {binary: max.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_member-attr_2469:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/member-attr.C'
    sources: {binary: member-attr.s, cflags: "-std=gnu++98 -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''garbage1\''
          attribute directive ignored")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''garbage2\''
          attribute directive ignored")[^\n]*\n?)+'}
test_member-attr_2470:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/member-attr.C'
    sources: {binary: member-attr.s, cflags: "-std=gnu++11 -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''garbage1\''
          attribute directive ignored")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''garbage2\''
          attribute directive ignored")[^\n]*\n?)+'}
test_member-attr_2471:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/member-attr.C'
    sources: {binary: member-attr.s, cflags: "-std=gnu++14 -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''garbage1\''
          attribute directive ignored")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''garbage2\''
          attribute directive ignored")[^\n]*\n?)+'}
test_member-attr_927:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/member-attr.C'
    sources: {binary: member-attr.s, cflags: "-std=gnu++98 -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''garbage1\''
          attribute directive ignored")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''garbage2\''
          attribute directive ignored")[^\n]*\n?)+'}
test_member-attr_928:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/member-attr.C'
    sources: {binary: member-attr.s, cflags: "-std=gnu++11 -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''garbage1\''
          attribute directive ignored")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''garbage2\''
          attribute directive ignored")[^\n]*\n?)+'}
test_member-attr_929:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/member-attr.C'
    sources: {binary: member-attr.s, cflags: "-std=gnu++14 -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''garbage1\''
          attribute directive ignored")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''garbage2\''
          attribute directive ignored")[^\n]*\n?)+'}
test_ms-1_2472:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/ms-1.C'
    sources: {binary: ms-1.s, cflags: "-std=gnu++98 -fms-extensions\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matches")[^\n]*\n?)+'}
test_ms-1_2473:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/ms-1.C'
    sources: {binary: ms-1.s, cflags: "-std=gnu++11 -fms-extensions\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matches")[^\n]*\n?)+'}
test_ms-1_2474:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/ms-1.C'
    sources: {binary: ms-1.s, cflags: "-std=gnu++14 -fms-extensions\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matches")[^\n]*\n?)+'}
test_ms-1_930:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/ms-1.C'
    sources: {binary: ms-1.s, cflags: "-std=gnu++98 -fms-extensions\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matches")[^\n]*\n?)+'}
test_ms-1_931:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/ms-1.C'
    sources: {binary: ms-1.s, cflags: "-std=gnu++11 -fms-extensions\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matches")[^\n]*\n?)+'}
test_ms-1_932:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/ms-1.C'
    sources: {binary: ms-1.s, cflags: "-std=gnu++14 -fms-extensions\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matches")[^\n]*\n?)+'}
test_mv10_2478:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv10.C'
    sources: {binary: mv10.o, cflags: "-std=gnu++98 \n -c"}
  group: GRPSERIAL
test_mv10_2479:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv10.C'
    sources: {binary: mv10.o, cflags: "-std=gnu++11 \n -c"}
  group: GRPSERIAL
test_mv10_2480:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv10.C'
    sources: {binary: mv10.o, cflags: "-std=gnu++14 \n -c"}
  group: GRPSERIAL
test_mv10_936:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv10.C'
    sources: {binary: mv10.o, cflags: "-std=gnu++98 \n -c"}
  group: GRPSERIAL
test_mv10_937:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv10.C'
    sources: {binary: mv10.o, cflags: "-std=gnu++11 \n -c"}
  group: GRPSERIAL
test_mv10_938:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv10.C'
    sources: {binary: mv10.o, cflags: "-std=gnu++14 \n -c"}
  group: GRPSERIAL
test_mv11_2481:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv11.C'
    sources: {binary: mv11.s, cflags: "-std=gnu++98 -msse2\n -S"}
  group: GRPSERIAL
test_mv11_2482:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv11.C'
    sources: {binary: mv11.s, cflags: "-std=gnu++11 -msse2\n -S"}
  group: GRPSERIAL
test_mv11_2483:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv11.C'
    sources: {binary: mv11.s, cflags: "-std=gnu++14 -msse2\n -S"}
  group: GRPSERIAL
test_mv11_939:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv11.C'
    sources: {binary: mv11.s, cflags: "-std=gnu++98 -msse2\n -S"}
  group: GRPSERIAL
test_mv11_940:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv11.C'
    sources: {binary: mv11.s, cflags: "-std=gnu++11 -msse2\n -S"}
  group: GRPSERIAL
test_mv11_941:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv11.C'
    sources: {binary: mv11.s, cflags: "-std=gnu++14 -msse2\n -S"}
  group: GRPSERIAL
test_mv12_2484:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv12.C'
    sources: {binary: ./mv12.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv12_2485:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv12.C'
    sources: {binary: ./mv12.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv12_2486:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv12.C'
    sources: {binary: ./mv12.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv12_942:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv12.C'
    sources: {binary: ./mv12.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv12_943:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv12.C'
    sources: {binary: ./mv12.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv12_944:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv12.C'
    sources: {binary: ./mv12.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv13_2487:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv13.C'
    sources: {binary: mv13.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
test_mv13_2488:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv13.C'
    sources: {binary: mv13.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
test_mv13_2489:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv13.C'
    sources: {binary: mv13.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
test_mv13_945:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv13.C'
    sources: {binary: mv13.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
test_mv13_946:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv13.C'
    sources: {binary: mv13.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
test_mv13_947:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv13.C'
    sources: {binary: mv13.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
test_mv14_2490:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv14.C'
    sources: {binary: ./mv14.exe, cflags: -std=gnu++98 -O2 -fPIC -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv14_2491:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv14.C'
    sources: {binary: ./mv14.exe, cflags: -std=gnu++11 -O2 -fPIC -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv14_2492:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv14.C'
    sources: {binary: ./mv14.exe, cflags: -std=gnu++14 -O2 -fPIC -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv14_948:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv14.C'
    sources: {binary: ./mv14.exe, cflags: -std=gnu++98 -O2 -fPIC -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv14_949:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv14.C'
    sources: {binary: ./mv14.exe, cflags: -std=gnu++11 -O2 -fPIC -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv14_950:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv14.C'
    sources: {binary: ./mv14.exe, cflags: -std=gnu++14 -O2 -fPIC -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv15_2493:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv15.C'
    sources: {binary: ./mv15.exe, cflags: -std=gnu++98 -O2 -fPIC -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv15_2494:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv15.C'
    sources: {binary: ./mv15.exe, cflags: -std=gnu++11 -O2 -fPIC -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv15_2495:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv15.C'
    sources: {binary: ./mv15.exe, cflags: -std=gnu++14 -O2 -fPIC -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv15_951:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv15.C'
    sources: {binary: ./mv15.exe, cflags: -std=gnu++98 -O2 -fPIC -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv15_952:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv15.C'
    sources: {binary: ./mv15.exe, cflags: -std=gnu++11 -O2 -fPIC -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv15_953:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv15.C'
    sources: {binary: ./mv15.exe, cflags: -std=gnu++14 -O2 -fPIC -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv16_2496:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv16.C'
    sources: {binary: ./mv16.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv16_2497:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv16.C'
    sources: {binary: ./mv16.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv16_2498:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv16.C'
    sources: {binary: ./mv16.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv16_954:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv16.C'
    sources: {binary: ./mv16.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv16_955:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv16.C'
    sources: {binary: ./mv16.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv16_956:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv16.C'
    sources: {binary: ./mv16.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv17_2499:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv17.C'
    sources: {binary: ./mv17.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv17_2500:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv17.C'
    sources: {binary: ./mv17.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv17_2501:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv17.C'
    sources: {binary: ./mv17.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv17_957:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv17.C'
    sources: {binary: ./mv17.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv17_958:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv17.C'
    sources: {binary: ./mv17.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv17_959:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv17.C'
    sources: {binary: ./mv17.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv18_2502:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv18.C'
    sources: {binary: ./mv18.exe, cflags: -std=gnu++98 -O2 -fPIE -pie}
  group: GRPSERIAL
  run: {cwd: .}
test_mv18_2503:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv18.C'
    sources: {binary: ./mv18.exe, cflags: -std=gnu++11 -O2 -fPIE -pie}
  group: GRPSERIAL
  run: {cwd: .}
test_mv18_2504:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv18.C'
    sources: {binary: ./mv18.exe, cflags: -std=gnu++14 -O2 -fPIE -pie}
  group: GRPSERIAL
  run: {cwd: .}
test_mv18_960:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv18.C'
    sources: {binary: ./mv18.exe, cflags: -std=gnu++98 -O2 -fPIE -pie}
  group: GRPSERIAL
  run: {cwd: .}
test_mv18_961:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv18.C'
    sources: {binary: ./mv18.exe, cflags: -std=gnu++11 -O2 -fPIE -pie}
  group: GRPSERIAL
  run: {cwd: .}
test_mv18_962:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv18.C'
    sources: {binary: ./mv18.exe, cflags: -std=gnu++14 -O2 -fPIE -pie}
  group: GRPSERIAL
  run: {cwd: .}
test_mv19_2505:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv19.C'
    sources: {binary: ./mv19.exe, cflags: -std=gnu++98 -O2 -fPIE -pie -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv19_2506:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv19.C'
    sources: {binary: ./mv19.exe, cflags: -std=gnu++11 -O2 -fPIE -pie -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv19_2507:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv19.C'
    sources: {binary: ./mv19.exe, cflags: -std=gnu++14 -O2 -fPIE -pie -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv19_963:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv19.C'
    sources: {binary: ./mv19.exe, cflags: -std=gnu++98 -O2 -fPIE -pie -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv19_964:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv19.C'
    sources: {binary: ./mv19.exe, cflags: -std=gnu++11 -O2 -fPIE -pie -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv19_965:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv19.C'
    sources: {binary: ./mv19.exe, cflags: -std=gnu++14 -O2 -fPIE -pie -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv1_2475:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv1.C'
    sources: {binary: ./mv1.exe, cflags: -std=gnu++98 -O2 -fPIC}
  group: GRPSERIAL
  run: {cwd: .}
test_mv1_2476:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv1.C'
    sources: {binary: ./mv1.exe, cflags: -std=gnu++11 -O2 -fPIC}
  group: GRPSERIAL
  run: {cwd: .}
test_mv1_2477:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv1.C'
    sources: {binary: ./mv1.exe, cflags: -std=gnu++14 -O2 -fPIC}
  group: GRPSERIAL
  run: {cwd: .}
test_mv1_933:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv1.C'
    sources: {binary: ./mv1.exe, cflags: -std=gnu++98 -O2 -fPIC}
  group: GRPSERIAL
  run: {cwd: .}
test_mv1_934:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv1.C'
    sources: {binary: ./mv1.exe, cflags: -std=gnu++11 -O2 -fPIC}
  group: GRPSERIAL
  run: {cwd: .}
test_mv1_935:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv1.C'
    sources: {binary: ./mv1.exe, cflags: -std=gnu++14 -O2 -fPIC}
  group: GRPSERIAL
  run: {cwd: .}
test_mv20_2511:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv20.C'
    sources: {binary: ./mv20.exe, cflags: -std=gnu++98 -O2 -fPIE -pie -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv20_2512:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv20.C'
    sources: {binary: ./mv20.exe, cflags: -std=gnu++11 -O2 -fPIE -pie -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv20_2513:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv20.C'
    sources: {binary: ./mv20.exe, cflags: -std=gnu++14 -O2 -fPIE -pie -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv20_969:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv20.C'
    sources: {binary: ./mv20.exe, cflags: -std=gnu++98 -O2 -fPIE -pie -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv20_970:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv20.C'
    sources: {binary: ./mv20.exe, cflags: -std=gnu++11 -O2 -fPIE -pie -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv20_971:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv20.C'
    sources: {binary: ./mv20.exe, cflags: -std=gnu++14 -O2 -fPIE -pie -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv21_2514:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv21.C'
    sources: {binary: ./mv21.exe, cflags: -std=gnu++98 -O2 -static}
  group: GRPSERIAL
  run: {cwd: .}
test_mv21_2515:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv21.C'
    sources: {binary: ./mv21.exe, cflags: -std=gnu++11 -O2 -static}
  group: GRPSERIAL
  run: {cwd: .}
test_mv21_2516:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv21.C'
    sources: {binary: ./mv21.exe, cflags: -std=gnu++14 -O2 -static}
  group: GRPSERIAL
  run: {cwd: .}
test_mv21_972:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv21.C'
    sources: {binary: ./mv21.exe, cflags: -std=gnu++98 -O2 -static}
  group: GRPSERIAL
  run: {cwd: .}
test_mv21_973:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv21.C'
    sources: {binary: ./mv21.exe, cflags: -std=gnu++11 -O2 -static}
  group: GRPSERIAL
  run: {cwd: .}
test_mv21_974:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv21.C'
    sources: {binary: ./mv21.exe, cflags: -std=gnu++14 -O2 -static}
  group: GRPSERIAL
  run: {cwd: .}
test_mv22_2517:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv22.C'
    sources: {binary: ./mv22.exe, cflags: -std=gnu++98 -O2 -static -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv22_2518:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv22.C'
    sources: {binary: ./mv22.exe, cflags: -std=gnu++11 -O2 -static -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv22_2519:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv22.C'
    sources: {binary: ./mv22.exe, cflags: -std=gnu++14 -O2 -static -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv22_975:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv22.C'
    sources: {binary: ./mv22.exe, cflags: -std=gnu++98 -O2 -static -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv22_976:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv22.C'
    sources: {binary: ./mv22.exe, cflags: -std=gnu++11 -O2 -static -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv22_977:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv22.C'
    sources: {binary: ./mv22.exe, cflags: -std=gnu++14 -O2 -static -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv23_2520:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv23.C'
    sources: {binary: ./mv23.exe, cflags: -std=gnu++98 -O2 -static -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv23_2521:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv23.C'
    sources: {binary: ./mv23.exe, cflags: -std=gnu++11 -O2 -static -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv23_2522:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv23.C'
    sources: {binary: ./mv23.exe, cflags: -std=gnu++14 -O2 -static -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv23_978:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv23.C'
    sources: {binary: ./mv23.exe, cflags: -std=gnu++98 -O2 -static -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv23_979:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv23.C'
    sources: {binary: ./mv23.exe, cflags: -std=gnu++11 -O2 -static -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv23_980:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv23.C'
    sources: {binary: ./mv23.exe, cflags: -std=gnu++14 -O2 -static -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv24_2523:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv24.C'
    sources: {binary: ./mv24.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv24_2524:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv24.C'
    sources: {binary: ./mv24.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv24_2525:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv24.C'
    sources: {binary: ./mv24.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv24_981:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv24.C'
    sources: {binary: ./mv24.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv24_982:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv24.C'
    sources: {binary: ./mv24.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv24_983:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv24.C'
    sources: {binary: ./mv24.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv25_2526:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv25.C'
    sources: {binary: ./mv25.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv25_2527:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv25.C'
    sources: {binary: ./mv25.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv25_2528:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv25.C'
    sources: {binary: ./mv25.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv25_984:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv25.C'
    sources: {binary: ./mv25.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv25_985:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv25.C'
    sources: {binary: ./mv25.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv25_986:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv25.C'
    sources: {binary: ./mv25.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv2_2508:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv2.C'
    sources: {binary: ./mv2.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv2_2509:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv2.C'
    sources: {binary: ./mv2.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv2_2510:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv2.C'
    sources: {binary: ./mv2.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv2_966:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv2.C'
    sources: {binary: ./mv2.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv2_967:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv2.C'
    sources: {binary: ./mv2.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv2_968:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv2.C'
    sources: {binary: ./mv2.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv3_2529:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv3.C'
    sources: {binary: ./mv3.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv3_2530:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv3.C'
    sources: {binary: ./mv3.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv3_2531:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv3.C'
    sources: {binary: ./mv3.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv3_987:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv3.C'
    sources: {binary: ./mv3.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv3_988:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv3.C'
    sources: {binary: ./mv3.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv3_989:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv3.C'
    sources: {binary: ./mv3.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv4_2532:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv4.C'
    sources: {binary: mv4.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use
          of multiversioned function without a default")[^\n]*\n?)+'}
test_mv4_2533:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv4.C'
    sources: {binary: mv4.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use
          of multiversioned function without a default")[^\n]*\n?)+'}
test_mv4_2534:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv4.C'
    sources: {binary: mv4.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use
          of multiversioned function without a default")[^\n]*\n?)+'}
test_mv4_990:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv4.C'
    sources: {binary: mv4.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use
          of multiversioned function without a default")[^\n]*\n?)+'}
test_mv4_991:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv4.C'
    sources: {binary: mv4.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use
          of multiversioned function without a default")[^\n]*\n?)+'}
test_mv4_992:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv4.C'
    sources: {binary: mv4.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use
          of multiversioned function without a default")[^\n]*\n?)+'}
test_mv5_2535:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv5.C'
    sources: {binary: ./mv5.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv5_2536:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv5.C'
    sources: {binary: ./mv5.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv5_2537:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv5.C'
    sources: {binary: ./mv5.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv5_993:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv5.C'
    sources: {binary: ./mv5.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv5_994:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv5.C'
    sources: {binary: ./mv5.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv5_995:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv5.C'
    sources: {binary: ./mv5.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_mv6_2538:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv6.C'
    sources: {binary: ./mv6.exe, cflags: -std=gnu++98 -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv6_2539:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv6.C'
    sources: {binary: ./mv6.exe, cflags: -std=gnu++11 -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv6_2540:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv6.C'
    sources: {binary: ./mv6.exe, cflags: -std=gnu++14 -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv6_996:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv6.C'
    sources: {binary: ./mv6.exe, cflags: -std=gnu++98 -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv6_997:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv6.C'
    sources: {binary: ./mv6.exe, cflags: -std=gnu++11 -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv6_998:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv6.C'
    sources: {binary: ./mv6.exe, cflags: -std=gnu++14 -march=x86-64}
  group: GRPSERIAL
  run: {cwd: .}
test_mv7_1000:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv7.C'
    sources: {binary: mv7.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("(not
          a string|redefinition)")[^\n]*\n?)+'}
test_mv7_1001:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv7.C'
    sources: {binary: mv7.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("(not
          a string|redefinition)")[^\n]*\n?)+'}
test_mv7_2541:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv7.C'
    sources: {binary: mv7.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("(not
          a string|redefinition)")[^\n]*\n?)+'}
test_mv7_2542:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv7.C'
    sources: {binary: mv7.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("(not
          a string|redefinition)")[^\n]*\n?)+'}
test_mv7_2543:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv7.C'
    sources: {binary: mv7.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("(not
          a string|redefinition)")[^\n]*\n?)+'}
test_mv7_999:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv7.C'
    sources: {binary: mv7.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("(not
          a string|redefinition)")[^\n]*\n?)+'}
test_mv8_1002:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv8.C'
    sources: {binary: mv8.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a string")[^\n]*\n?)+'}
test_mv8_1003:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv8.C'
    sources: {binary: mv8.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a string")[^\n]*\n?)+'}
test_mv8_1004:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv8.C'
    sources: {binary: mv8.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a string")[^\n]*\n?)+'}
test_mv8_2544:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv8.C'
    sources: {binary: mv8.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a string")[^\n]*\n?)+'}
test_mv8_2545:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv8.C'
    sources: {binary: mv8.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a string")[^\n]*\n?)+'}
test_mv8_2546:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv8.C'
    sources: {binary: mv8.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a string")[^\n]*\n?)+'}
test_mv9_1005:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv9.C'
    sources: {binary: mv9.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("attribute
          for multi-versioned")[^\n]*\n?)+'}
test_mv9_1006:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv9.C'
    sources: {binary: mv9.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("attribute
          for multi-versioned")[^\n]*\n?)+'}
test_mv9_1007:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv9.C'
    sources: {binary: mv9.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("attribute
          for multi-versioned")[^\n]*\n?)+'}
test_mv9_2547:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv9.C'
    sources: {binary: mv9.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("attribute
          for multi-versioned")[^\n]*\n?)+'}
test_mv9_2548:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv9.C'
    sources: {binary: mv9.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("attribute
          for multi-versioned")[^\n]*\n?)+'}
test_mv9_2549:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mv9.C'
    sources: {binary: mv9.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("attribute
          for multi-versioned")[^\n]*\n?)+'}
test_mvc1_1008:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc1.C'
    sources: {binary: ./mvc1.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_mvc1_1009:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc1.C'
    sources: {binary: ./mvc1.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_mvc1_1010:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc1.C'
    sources: {binary: ./mvc1.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_mvc1_2550:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc1.C'
    sources: {binary: ./mvc1.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_mvc1_2551:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc1.C'
    sources: {binary: ./mvc1.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_mvc1_2552:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc1.C'
    sources: {binary: ./mvc1.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_mvc2_1011:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc2.C'
    sources: {binary: mvc2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''target\''
          attribute ignored due to conflict with \''target_clones\'' attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''always_inline\''
          attribute ignored due to conflict with \''target_clones\'' attribute")[^\n]*\n?)+'}
test_mvc2_1012:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc2.C'
    sources: {binary: mvc2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''target\''
          attribute ignored due to conflict with \''target_clones\'' attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''always_inline\''
          attribute ignored due to conflict with \''target_clones\'' attribute")[^\n]*\n?)+'}
test_mvc2_1013:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc2.C'
    sources: {binary: mvc2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''target\''
          attribute ignored due to conflict with \''target_clones\'' attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''always_inline\''
          attribute ignored due to conflict with \''target_clones\'' attribute")[^\n]*\n?)+'}
test_mvc2_2553:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc2.C'
    sources: {binary: mvc2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''target\''
          attribute ignored due to conflict with \''target_clones\'' attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''always_inline\''
          attribute ignored due to conflict with \''target_clones\'' attribute")[^\n]*\n?)+'}
test_mvc2_2554:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc2.C'
    sources: {binary: mvc2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''target\''
          attribute ignored due to conflict with \''target_clones\'' attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''always_inline\''
          attribute ignored due to conflict with \''target_clones\'' attribute")[^\n]*\n?)+'}
test_mvc2_2555:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc2.C'
    sources: {binary: mvc2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''target\''
          attribute ignored due to conflict with \''target_clones\'' attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''always_inline\''
          attribute ignored due to conflict with \''target_clones\'' attribute")[^\n]*\n?)+'}
test_mvc3_1014:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc3.C'
    sources: {binary: mvc3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''target_clones\''
          attribute ignored due to conflict with \''target\'' attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''target_clones\''
          attribute ignored due to conflict with \''always_inline\'' attribute")[^\n]*\n?)+'}
test_mvc3_1015:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc3.C'
    sources: {binary: mvc3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''target_clones\''
          attribute ignored due to conflict with \''target\'' attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''target_clones\''
          attribute ignored due to conflict with \''always_inline\'' attribute")[^\n]*\n?)+'}
test_mvc3_1016:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc3.C'
    sources: {binary: mvc3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''target_clones\''
          attribute ignored due to conflict with \''target\'' attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''target_clones\''
          attribute ignored due to conflict with \''always_inline\'' attribute")[^\n]*\n?)+'}
test_mvc3_2556:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc3.C'
    sources: {binary: mvc3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''target_clones\''
          attribute ignored due to conflict with \''target\'' attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''target_clones\''
          attribute ignored due to conflict with \''always_inline\'' attribute")[^\n]*\n?)+'}
test_mvc3_2557:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc3.C'
    sources: {binary: mvc3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''target_clones\''
          attribute ignored due to conflict with \''target\'' attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''target_clones\''
          attribute ignored due to conflict with \''always_inline\'' attribute")[^\n]*\n?)+'}
test_mvc3_2558:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc3.C'
    sources: {binary: mvc3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''target_clones\''
          attribute ignored due to conflict with \''target\'' attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''target_clones\''
          attribute ignored due to conflict with \''always_inline\'' attribute")[^\n]*\n?)+'}
test_mvc4_1017:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc4.C'
    sources: {binary: mvc4.s, cflags: "-std=gnu++98 -mavx\n -S"}
  group: GRPSERIAL
test_mvc4_1018:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc4.C'
    sources: {binary: mvc4.s, cflags: "-std=gnu++11 -mavx\n -S"}
  group: GRPSERIAL
test_mvc4_1019:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc4.C'
    sources: {binary: mvc4.s, cflags: "-std=gnu++14 -mavx\n -S"}
  group: GRPSERIAL
test_mvc4_2559:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc4.C'
    sources: {binary: mvc4.s, cflags: "-std=gnu++98 -mavx\n -S"}
  group: GRPSERIAL
test_mvc4_2560:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc4.C'
    sources: {binary: mvc4.s, cflags: "-std=gnu++11 -mavx\n -S"}
  group: GRPSERIAL
test_mvc4_2561:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/mvc4.C'
    sources: {binary: mvc4.s, cflags: "-std=gnu++14 -mavx\n -S"}
  group: GRPSERIAL
test_no-asm-1_1020:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-asm-1.C'
    sources: {binary: no-asm-1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before
          .asm.")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple
          types")[^\n]*\n?)+'}
test_no-asm-1_1021:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-asm-1.C'
    sources: {binary: no-asm-1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before
          .asm.")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple
          types")[^\n]*\n?)+'}
test_no-asm-1_1022:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-asm-1.C'
    sources: {binary: no-asm-1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before
          .asm.")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple
          types")[^\n]*\n?)+'}
test_no-asm-1_2562:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-asm-1.C'
    sources: {binary: no-asm-1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before
          .asm.")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple
          types")[^\n]*\n?)+'}
test_no-asm-1_2563:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-asm-1.C'
    sources: {binary: no-asm-1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before
          .asm.")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple
          types")[^\n]*\n?)+'}
test_no-asm-1_2564:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-asm-1.C'
    sources: {binary: no-asm-1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("declaration")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before
          .asm.")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("multiple
          types")[^\n]*\n?)+'}
test_no-asm-2_1023:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-asm-2.C'
    sources: {binary: no-asm-2.s, cflags: "-std=gnu++98 -fno-asm\n -S"}
  group: GRPSERIAL
test_no-asm-2_1024:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-asm-2.C'
    sources: {binary: no-asm-2.s, cflags: "-std=gnu++11 -fno-asm\n -S"}
  group: GRPSERIAL
test_no-asm-2_1025:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-asm-2.C'
    sources: {binary: no-asm-2.s, cflags: "-std=gnu++14 -fno-asm\n -S"}
  group: GRPSERIAL
test_no-asm-2_2565:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-asm-2.C'
    sources: {binary: no-asm-2.s, cflags: "-std=gnu++98 -fno-asm\n -S"}
  group: GRPSERIAL
test_no-asm-2_2566:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-asm-2.C'
    sources: {binary: no-asm-2.s, cflags: "-std=gnu++11 -fno-asm\n -S"}
  group: GRPSERIAL
test_no-asm-2_2567:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-asm-2.C'
    sources: {binary: no-asm-2.s, cflags: "-std=gnu++14 -fno-asm\n -S"}
  group: GRPSERIAL
test_no-gnu-keywords-1_1026:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-gnu-keywords-1.C'
    sources: {binary: no-gnu-keywords-1.s, cflags: "-std=gnu++98 -fno-gnu-keywords\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before
          .asm.")[^\n]*\n?)+'}
test_no-gnu-keywords-1_1027:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-gnu-keywords-1.C'
    sources: {binary: no-gnu-keywords-1.s, cflags: "-std=gnu++11 -fno-gnu-keywords\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before
          .asm.")[^\n]*\n?)+'}
test_no-gnu-keywords-1_1028:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-gnu-keywords-1.C'
    sources: {binary: no-gnu-keywords-1.s, cflags: "-std=gnu++14 -fno-gnu-keywords\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before
          .asm.")[^\n]*\n?)+'}
test_no-gnu-keywords-1_2568:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-gnu-keywords-1.C'
    sources: {binary: no-gnu-keywords-1.s, cflags: "-std=gnu++98 -fno-gnu-keywords\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before
          .asm.")[^\n]*\n?)+'}
test_no-gnu-keywords-1_2569:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-gnu-keywords-1.C'
    sources: {binary: no-gnu-keywords-1.s, cflags: "-std=gnu++11 -fno-gnu-keywords\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before
          .asm.")[^\n]*\n?)+'}
test_no-gnu-keywords-1_2570:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/no-gnu-keywords-1.C'
    sources: {binary: no-gnu-keywords-1.s, cflags: "-std=gnu++14 -fno-gnu-keywords\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("before
          .asm.")[^\n]*\n?)+'}
test_offsetof1_1029:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/offsetof1.C'
    sources: {binary: offsetof1.s, cflags: "-std=gnu++98 -Wno-pointer-arith\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member
          function")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("single
          identifier nor|member function")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("function")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member
          function")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'}
test_offsetof1_1030:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/offsetof1.C'
    sources: {binary: offsetof1.s, cflags: "-std=gnu++11 -Wno-pointer-arith\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member
          function")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("single
          identifier nor|member function")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("function")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member
          function")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'}
test_offsetof1_1031:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/offsetof1.C'
    sources: {binary: offsetof1.s, cflags: "-std=gnu++14 -Wno-pointer-arith\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member
          function")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("single
          identifier nor|member function")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("function")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member
          function")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'}
test_offsetof1_2571:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/offsetof1.C'
    sources: {binary: offsetof1.s, cflags: "-std=gnu++98 -Wno-pointer-arith\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member
          function")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("single
          identifier nor|member function")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("function")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member
          function")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'}
test_offsetof1_2572:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/offsetof1.C'
    sources: {binary: offsetof1.s, cflags: "-std=gnu++11 -Wno-pointer-arith\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member
          function")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("single
          identifier nor|member function")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("function")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member
          function")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'}
test_offsetof1_2573:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/offsetof1.C'
    sources: {binary: offsetof1.s, cflags: "-std=gnu++14 -Wno-pointer-arith\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static
          data member")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member
          function")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("single
          identifier nor|member function")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("function")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("member
          function")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("destructor")[^\n]*\n?)+'}
test_oper1_1032:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/oper1.C'
    sources: {binary: ./oper1.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_oper1_1033:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/oper1.C'
    sources: {binary: ./oper1.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_oper1_1034:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/oper1.C'
    sources: {binary: ./oper1.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_oper1_2574:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/oper1.C'
    sources: {binary: ./oper1.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_oper1_2575:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/oper1.C'
    sources: {binary: ./oper1.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_oper1_2576:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/oper1.C'
    sources: {binary: ./oper1.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_packed10_1035:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed10.C'
    sources: {binary: packed10.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed10_1036:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed10.C'
    sources: {binary: packed10.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed10_1037:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed10.C'
    sources: {binary: packed10.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed10_2577:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed10.C'
    sources: {binary: packed10.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed10_2578:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed10.C'
    sources: {binary: packed10.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed10_2579:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed10.C'
    sources: {binary: packed10.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed11_1038:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed11.C'
    sources: {binary: packed11.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          packed attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          packed attribute")[^\n]*\n?)+'}
test_packed11_1039:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed11.C'
    sources: {binary: packed11.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          packed attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          packed attribute")[^\n]*\n?)+'}
test_packed11_1040:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed11.C'
    sources: {binary: packed11.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          packed attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          packed attribute")[^\n]*\n?)+'}
test_packed11_2580:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed11.C'
    sources: {binary: packed11.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          packed attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          packed attribute")[^\n]*\n?)+'}
test_packed11_2581:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed11.C'
    sources: {binary: packed11.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          packed attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          packed attribute")[^\n]*\n?)+'}
test_packed11_2582:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed11.C'
    sources: {binary: packed11.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          packed attribute")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          packed attribute")[^\n]*\n?)+'}
test_packed12_1041:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed12.C'
    sources: {binary: packed12.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed12_1042:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed12.C'
    sources: {binary: packed12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed12_1043:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed12.C'
    sources: {binary: packed12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed12_2583:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed12.C'
    sources: {binary: packed12.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed12_2584:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed12.C'
    sources: {binary: packed12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed12_2585:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed12.C'
    sources: {binary: packed12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed2_1044:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed2.C'
    sources: {binary: packed2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed2_1045:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed2.C'
    sources: {binary: packed2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed2_1046:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed2.C'
    sources: {binary: packed2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed2_2586:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed2.C'
    sources: {binary: packed2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed2_2587:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed2.C'
    sources: {binary: packed2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed2_2588:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed2.C'
    sources: {binary: packed2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed3_1047:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed3.C'
    sources: {binary: packed3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
test_packed3_1048:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed3.C'
    sources: {binary: packed3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
test_packed3_1049:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed3.C'
    sources: {binary: packed3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
test_packed3_2589:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed3.C'
    sources: {binary: packed3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
test_packed3_2590:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed3.C'
    sources: {binary: packed3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
test_packed3_2591:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed3.C'
    sources: {binary: packed3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          bind packed field")[^\n]*\n?)+'}
test_packed5_1050:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed5.C'
    sources: {binary: packed5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed5_1051:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed5.C'
    sources: {binary: packed5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed5_1052:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed5.C'
    sources: {binary: packed5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed5_2592:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed5.C'
    sources: {binary: packed5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed5_2593:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed5.C'
    sources: {binary: packed5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed5_2594:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed5.C'
    sources: {binary: packed5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed6_1053:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed6.C'
    sources: {binary: packed6.s, cflags: "-std=gnu++98 -w\n -S"}
  group: GRPSERIAL
test_packed6_1054:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed6.C'
    sources: {binary: packed6.s, cflags: "-std=gnu++11 -w\n -S"}
  group: GRPSERIAL
test_packed6_1055:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed6.C'
    sources: {binary: packed6.s, cflags: "-std=gnu++14 -w\n -S"}
  group: GRPSERIAL
test_packed6_2595:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed6.C'
    sources: {binary: packed6.s, cflags: "-std=gnu++98 -w\n -S"}
  group: GRPSERIAL
test_packed6_2596:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed6.C'
    sources: {binary: packed6.s, cflags: "-std=gnu++11 -w\n -S"}
  group: GRPSERIAL
test_packed6_2597:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed6.C'
    sources: {binary: packed6.s, cflags: "-std=gnu++14 -w\n -S"}
  group: GRPSERIAL
test_packed7_1056:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed7.C'
    sources: {binary: ./packed7.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_packed7_1057:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed7.C'
    sources: {binary: ./packed7.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_packed7_1058:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed7.C'
    sources: {binary: ./packed7.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_packed7_2598:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed7.C'
    sources: {binary: ./packed7.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_packed7_2599:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed7.C'
    sources: {binary: ./packed7.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_packed7_2600:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed7.C'
    sources: {binary: ./packed7.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_packed8_1059:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed8.C'
    sources: {binary: packed8.s, cflags: "-std=gnu++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_packed8_1060:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed8.C'
    sources: {binary: packed8.s, cflags: "-std=gnu++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_packed8_1061:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed8.C'
    sources: {binary: packed8.s, cflags: "-std=gnu++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_packed8_2601:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed8.C'
    sources: {binary: packed8.s, cflags: "-std=gnu++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_packed8_2602:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed8.C'
    sources: {binary: packed8.s, cflags: "-std=gnu++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_packed8_2603:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed8.C'
    sources: {binary: packed8.s, cflags: "-std=gnu++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("attribute
          ignored")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_packed9_1062:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed9.C'
    sources: {binary: packed9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed9_1063:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed9.C'
    sources: {binary: packed9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed9_1064:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed9.C'
    sources: {binary: packed9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed9_2604:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed9.C'
    sources: {binary: packed9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed9_2605:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed9.C'
    sources: {binary: packed9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_packed9_2606:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/packed9.C'
    sources: {binary: packed9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr17577_1065:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr17577.C'
    sources: {binary: pr17577.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("appears
          after file")[^\n]*\n?)+'}
test_pr17577_1066:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr17577.C'
    sources: {binary: pr17577.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("appears
          after file")[^\n]*\n?)+'}
test_pr17577_1067:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr17577.C'
    sources: {binary: pr17577.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("appears
          after file")[^\n]*\n?)+'}
test_pr17577_2607:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr17577.C'
    sources: {binary: pr17577.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("appears
          after file")[^\n]*\n?)+'}
test_pr17577_2608:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr17577.C'
    sources: {binary: pr17577.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("appears
          after file")[^\n]*\n?)+'}
test_pr17577_2609:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr17577.C'
    sources: {binary: pr17577.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("appears
          after file")[^\n]*\n?)+'}
test_pr27019_1068:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr27019.C'
    sources: {binary: pr27019.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_pr27019_1069:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr27019.C'
    sources: {binary: pr27019.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_pr27019_1070:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr27019.C'
    sources: {binary: pr27019.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_pr27019_2610:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr27019.C'
    sources: {binary: pr27019.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_pr27019_2611:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr27019.C'
    sources: {binary: pr27019.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_pr27019_2612:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr27019.C'
    sources: {binary: pr27019.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_pr28291_1071:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr28291.C'
    sources: {binary: pr28291.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static
          data member")[^\n]*\n?)+'}
test_pr28291_1072:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr28291.C'
    sources: {binary: pr28291.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static
          data member")[^\n]*\n?)+'}
test_pr28291_1073:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr28291.C'
    sources: {binary: pr28291.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static
          data member")[^\n]*\n?)+'}
test_pr28291_2613:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr28291.C'
    sources: {binary: pr28291.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static
          data member")[^\n]*\n?)+'}
test_pr28291_2614:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr28291.C'
    sources: {binary: pr28291.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static
          data member")[^\n]*\n?)+'}
test_pr28291_2615:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr28291.C'
    sources: {binary: pr28291.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-static
          data member")[^\n]*\n?)+'}
test_pr47213_1074:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr47213.C'
    sources: {binary: pr47213.s, cflags: "-std=gnu++98 -fvisibility-ms-compat\n -S"}
  group: GRPSERIAL
test_pr47213_1075:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr47213.C'
    sources: {binary: pr47213.s, cflags: "-std=gnu++11 -fvisibility-ms-compat\n -S"}
  group: GRPSERIAL
test_pr47213_1076:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr47213.C'
    sources: {binary: pr47213.s, cflags: "-std=gnu++14 -fvisibility-ms-compat\n -S"}
  group: GRPSERIAL
test_pr47213_2616:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr47213.C'
    sources: {binary: pr47213.s, cflags: "-std=gnu++98 -fvisibility-ms-compat\n -S"}
  group: GRPSERIAL
test_pr47213_2617:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr47213.C'
    sources: {binary: pr47213.s, cflags: "-std=gnu++11 -fvisibility-ms-compat\n -S"}
  group: GRPSERIAL
test_pr47213_2618:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr47213.C'
    sources: {binary: pr47213.s, cflags: "-std=gnu++14 -fvisibility-ms-compat\n -S"}
  group: GRPSERIAL
test_pr53605_1077:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr53605.C'
    sources: {binary: pr53605.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_pr53605_1078:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr53605.C'
    sources: {binary: pr53605.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_pr53605_1079:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr53605.C'
    sources: {binary: pr53605.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_pr53605_2619:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr53605.C'
    sources: {binary: pr53605.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_pr53605_2620:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr53605.C'
    sources: {binary: pr53605.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_pr53605_2621:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr53605.C'
    sources: {binary: pr53605.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_pr56790-1_1080:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr56790-1.C'
    sources: {binary: pr56790-1.s, cflags: "-std=gnu++98 -O2 -fdump-tree-ccp1\n -S"}
  group: GRPSERIAL
test_pr56790-1_1081:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr56790-1.C'
    sources: {binary: pr56790-1.s, cflags: "-std=gnu++11 -O2 -fdump-tree-ccp1\n -S"}
  group: GRPSERIAL
test_pr56790-1_1082:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr56790-1.C'
    sources: {binary: pr56790-1.s, cflags: "-std=gnu++14 -O2 -fdump-tree-ccp1\n -S"}
  group: GRPSERIAL
test_pr56790-1_2622:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr56790-1.C'
    sources: {binary: pr56790-1.s, cflags: "-std=gnu++98 -O2 -fdump-tree-ccp1\n -S"}
  group: GRPSERIAL
test_pr56790-1_2623:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr56790-1.C'
    sources: {binary: pr56790-1.s, cflags: "-std=gnu++11 -O2 -fdump-tree-ccp1\n -S"}
  group: GRPSERIAL
test_pr56790-1_2624:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr56790-1.C'
    sources: {binary: pr56790-1.s, cflags: "-std=gnu++14 -O2 -fdump-tree-ccp1\n -S"}
  group: GRPSERIAL
test_pr57362_1083:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57362.C'
    sources: {binary: pr57362.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57362_1084:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57362.C'
    sources: {binary: pr57362.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57362_1085:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57362.C'
    sources: {binary: pr57362.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57362_2625:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57362.C'
    sources: {binary: pr57362.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57362_2626:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57362.C'
    sources: {binary: pr57362.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57362_2627:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57362.C'
    sources: {binary: pr57362.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57509_1086:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57509.C'
    sources: {binary: pr57509.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57509_1087:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57509.C'
    sources: {binary: pr57509.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57509_2628:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57509.C'
    sources: {binary: pr57509.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57509_2629:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57509.C'
    sources: {binary: pr57509.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57548_1088:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57548.C'
    sources: {binary: pr57548.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57548_1089:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57548.C'
    sources: {binary: pr57548.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57548_1090:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57548.C'
    sources: {binary: pr57548.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57548_2630:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57548.C'
    sources: {binary: pr57548.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57548_2631:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57548.C'
    sources: {binary: pr57548.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr57548_2632:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr57548.C'
    sources: {binary: pr57548.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr58834_1091:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr58834.C'
    sources: {binary: pr58834.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr58834_1092:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr58834.C'
    sources: {binary: pr58834.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr58834_1093:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr58834.C'
    sources: {binary: pr58834.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr58834_2633:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr58834.C'
    sources: {binary: pr58834.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr58834_2634:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr58834.C'
    sources: {binary: pr58834.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr58834_2635:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr58834.C'
    sources: {binary: pr58834.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr59378_1094:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr59378.C'
    sources: {binary: pr59378.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr59378_1095:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr59378.C'
    sources: {binary: pr59378.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr59378_1096:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr59378.C'
    sources: {binary: pr59378.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr59378_2636:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr59378.C'
    sources: {binary: pr59378.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr59378_2637:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr59378.C'
    sources: {binary: pr59378.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr59378_2638:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr59378.C'
    sources: {binary: pr59378.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr59706_1097:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr59706.C'
    sources: {binary: pr59706.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert")[^\n]*\n?)+'}
test_pr59706_1098:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr59706.C'
    sources: {binary: pr59706.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert")[^\n]*\n?)+'}
test_pr59706_1099:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr59706.C'
    sources: {binary: pr59706.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert")[^\n]*\n?)+'}
test_pr59706_2639:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr59706.C'
    sources: {binary: pr59706.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert")[^\n]*\n?)+'}
test_pr59706_2640:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr59706.C'
    sources: {binary: pr59706.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert")[^\n]*\n?)+'}
test_pr59706_2641:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr59706.C'
    sources: {binary: pr59706.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert")[^\n]*\n?)+'}
test_pr69145-1_1100:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr69145-1.C'
    sources: {binary: pr69145-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr69145-1_1101:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr69145-1.C'
    sources: {binary: pr69145-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr69145-1_1102:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr69145-1.C'
    sources: {binary: pr69145-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr69145-1_2642:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr69145-1.C'
    sources: {binary: pr69145-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr69145-1_2643:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr69145-1.C'
    sources: {binary: pr69145-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr69145-1_2644:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr69145-1.C'
    sources: {binary: pr69145-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr70290_1103:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr70290.C'
    sources: {binary: pr70290.s, cflags: "-std=gnu++98 -Wno-psabi -w -mavx512vl\n
        -S"}
  group: GRPSERIAL
test_pr70290_1104:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr70290.C'
    sources: {binary: pr70290.s, cflags: "-std=gnu++11 -Wno-psabi -w -mavx512vl\n
        -S"}
  group: GRPSERIAL
test_pr70290_1105:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr70290.C'
    sources: {binary: pr70290.s, cflags: "-std=gnu++14 -Wno-psabi -w -mavx512vl\n
        -S"}
  group: GRPSERIAL
test_pr70290_2645:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr70290.C'
    sources: {binary: pr70290.s, cflags: "-std=gnu++98 -Wno-psabi -w -mavx512vl\n
        -S"}
  group: GRPSERIAL
test_pr70290_2646:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr70290.C'
    sources: {binary: pr70290.s, cflags: "-std=gnu++11 -Wno-psabi -w -mavx512vl\n
        -S"}
  group: GRPSERIAL
test_pr70290_2647:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr70290.C'
    sources: {binary: pr70290.s, cflags: "-std=gnu++14 -Wno-psabi -w -mavx512vl\n
        -S"}
  group: GRPSERIAL
test_pr70571_1106:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr70571.C'
    sources: {binary: pr70571.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr70571_1107:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr70571.C'
    sources: {binary: pr70571.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr70571_1108:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr70571.C'
    sources: {binary: pr70571.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr70571_2648:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr70571.C'
    sources: {binary: pr70571.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr70571_2649:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr70571.C'
    sources: {binary: pr70571.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr70571_2650:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr70571.C'
    sources: {binary: pr70571.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr71290_1109:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr71290.C'
    sources: {binary: pr71290.s, cflags: "-std=gnu++98 -Wall -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member .arr.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member .a.")[^\n]*\n?)+'}
test_pr71290_1110:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr71290.C'
    sources: {binary: pr71290.s, cflags: "-std=gnu++11 -Wall -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member .arr.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member .a.")[^\n]*\n?)+'}
test_pr71290_1111:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr71290.C'
    sources: {binary: pr71290.s, cflags: "-std=gnu++14 -Wall -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member .arr.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member .a.")[^\n]*\n?)+'}
test_pr71290_2651:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr71290.C'
    sources: {binary: pr71290.s, cflags: "-std=gnu++98 -Wall -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member .arr.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member .a.")[^\n]*\n?)+'}
test_pr71290_2652:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr71290.C'
    sources: {binary: pr71290.s, cflags: "-std=gnu++11 -Wall -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member .arr.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member .a.")[^\n]*\n?)+'}
test_pr71290_2653:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr71290.C'
    sources: {binary: pr71290.s, cflags: "-std=gnu++14 -Wall -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member .arr.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          flexible array member .a.")[^\n]*\n?)+'}
test_pr77496_1112:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr77496.C'
    sources: {binary: pr77496.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_pr77496_1113:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr77496.C'
    sources: {binary: pr77496.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_pr77496_1114:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr77496.C'
    sources: {binary: pr77496.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_pr77496_2654:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr77496.C'
    sources: {binary: pr77496.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_pr77496_2655:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr77496.C'
    sources: {binary: pr77496.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_pr77496_2656:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr77496.C'
    sources: {binary: pr77496.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_pr80363_1115:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr80363.C'
    sources: {binary: pr80363.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert\\[^#]*from")[^\n]*\n?)+'}
test_pr80363_1116:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr80363.C'
    sources: {binary: pr80363.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert\\[^#]*from")[^\n]*\n?)+'}
test_pr80363_1117:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr80363.C'
    sources: {binary: pr80363.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert\\[^#]*from")[^\n]*\n?)+'}
test_pr80363_2657:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr80363.C'
    sources: {binary: pr80363.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert\\[^#]*from")[^\n]*\n?)+'}
test_pr80363_2658:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr80363.C'
    sources: {binary: pr80363.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert\\[^#]*from")[^\n]*\n?)+'}
test_pr80363_2659:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pr80363.C'
    sources: {binary: pr80363.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("could
          not convert\\[^#]*from")[^\n]*\n?)+'}
test_pragmaweak1_1118:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pragmaweak1.C'
    sources: {binary: pragmaweak1.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pragmaweak1_1119:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pragmaweak1.C'
    sources: {binary: pragmaweak1.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pragmaweak1_1120:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pragmaweak1.C'
    sources: {binary: pragmaweak1.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pragmaweak1_2660:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pragmaweak1.C'
    sources: {binary: pragmaweak1.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pragmaweak1_2661:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pragmaweak1.C'
    sources: {binary: pragmaweak1.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pragmaweak1_2662:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pragmaweak1.C'
    sources: {binary: pragmaweak1.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pretty1_1121:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty1.C'
    sources: {binary: pretty1.s, cflags: "-std=gnu++98 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pretty1_1122:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty1.C'
    sources: {binary: pretty1.s, cflags: "-std=gnu++11 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pretty1_1123:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty1.C'
    sources: {binary: pretty1.s, cflags: "-std=gnu++14 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pretty1_2663:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty1.C'
    sources: {binary: pretty1.s, cflags: "-std=gnu++98 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pretty1_2664:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty1.C'
    sources: {binary: pretty1.s, cflags: "-std=gnu++11 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pretty1_2665:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty1.C'
    sources: {binary: pretty1.s, cflags: "-std=gnu++14 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pretty2_1124:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty2.C'
    sources: {binary: ./pretty2.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_pretty2_1125:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty2.C'
    sources: {binary: ./pretty2.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_pretty2_1126:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty2.C'
    sources: {binary: ./pretty2.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_pretty2_2666:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty2.C'
    sources: {binary: ./pretty2.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_pretty2_2667:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty2.C'
    sources: {binary: ./pretty2.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_pretty2_2668:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty2.C'
    sources: {binary: ./pretty2.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_pretty3_1127:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty3.C'
    sources: {binary: pretty3.s, cflags: "-std=gnu++98 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pretty3_1128:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty3.C'
    sources: {binary: pretty3.s, cflags: "-std=gnu++11 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pretty3_1129:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty3.C'
    sources: {binary: pretty3.s, cflags: "-std=gnu++14 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pretty3_2669:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty3.C'
    sources: {binary: pretty3.s, cflags: "-std=gnu++98 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pretty3_2670:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty3.C'
    sources: {binary: pretty3.s, cflags: "-std=gnu++11 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_pretty3_2671:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/pretty3.C'
    sources: {binary: pretty3.s, cflags: "-std=gnu++14 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_restrict1_1130:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/restrict1.C'
    sources: {binary: restrict1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_restrict1_1131:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/restrict1.C'
    sources: {binary: restrict1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_restrict1_1132:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/restrict1.C'
    sources: {binary: restrict1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_restrict1_2672:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/restrict1.C'
    sources: {binary: restrict1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_restrict1_2673:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/restrict1.C'
    sources: {binary: restrict1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_restrict1_2674:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/restrict1.C'
    sources: {binary: restrict1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_restrict2_1133:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/restrict2.C'
    sources: {binary: restrict2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_restrict2_1134:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/restrict2.C'
    sources: {binary: restrict2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_restrict2_1135:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/restrict2.C'
    sources: {binary: restrict2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_restrict2_2675:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/restrict2.C'
    sources: {binary: restrict2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_restrict2_2676:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/restrict2.C'
    sources: {binary: restrict2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_restrict2_2677:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/restrict2.C'
    sources: {binary: restrict2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_sizeof-complit_1136:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sizeof-complit.C'
    sources: {binary: sizeof-complit.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_sizeof-complit_1137:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sizeof-complit.C'
    sources: {binary: sizeof-complit.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_sizeof-complit_1138:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sizeof-complit.C'
    sources: {binary: sizeof-complit.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_sizeof-complit_2678:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sizeof-complit.C'
    sources: {binary: sizeof-complit.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_sizeof-complit_2679:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sizeof-complit.C'
    sources: {binary: sizeof-complit.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_sizeof-complit_2680:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sizeof-complit.C'
    sources: {binary: sizeof-complit.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_static1_1139:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/static1.C'
    sources: {binary: static1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_static1_1140:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/static1.C'
    sources: {binary: static1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_static1_1141:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/static1.C'
    sources: {binary: static1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_static1_2681:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/static1.C'
    sources: {binary: static1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_static1_2682:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/static1.C'
    sources: {binary: static1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_static1_2683:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/static1.C'
    sources: {binary: static1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_stmtexpr10_1145:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr10.C'
    sources: {binary: stmtexpr10.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_stmtexpr10_1146:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr10.C'
    sources: {binary: stmtexpr10.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_stmtexpr10_1147:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr10.C'
    sources: {binary: stmtexpr10.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_stmtexpr10_2687:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr10.C'
    sources: {binary: stmtexpr10.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_stmtexpr10_2688:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr10.C'
    sources: {binary: stmtexpr10.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_stmtexpr10_2689:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr10.C'
    sources: {binary: stmtexpr10.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_stmtexpr11_1148:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr11.C'
    sources: {binary: stmtexpr11.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_stmtexpr11_1149:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr11.C'
    sources: {binary: stmtexpr11.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_stmtexpr11_1150:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr11.C'
    sources: {binary: stmtexpr11.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_stmtexpr11_2690:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr11.C'
    sources: {binary: stmtexpr11.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_stmtexpr11_2691:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr11.C'
    sources: {binary: stmtexpr11.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_stmtexpr11_2692:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr11.C'
    sources: {binary: stmtexpr11.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_stmtexpr12_1151:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr12.C'
    sources: {binary: stmtexpr12.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("insufficient
          context")[^\n]*\n?)+'}
test_stmtexpr12_1152:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr12.C'
    sources: {binary: stmtexpr12.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("insufficient
          context")[^\n]*\n?)+'}
test_stmtexpr12_1153:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr12.C'
    sources: {binary: stmtexpr12.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("insufficient
          context")[^\n]*\n?)+'}
test_stmtexpr12_2693:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr12.C'
    sources: {binary: stmtexpr12.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("insufficient
          context")[^\n]*\n?)+'}
test_stmtexpr12_2694:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr12.C'
    sources: {binary: stmtexpr12.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("insufficient
          context")[^\n]*\n?)+'}
test_stmtexpr12_2695:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr12.C'
    sources: {binary: stmtexpr12.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("insufficient
          context")[^\n]*\n?)+'}
test_stmtexpr13_1154:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr13.C'
    sources: {binary: stmtexpr13.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was
          not declared")[^\n]*\n?)+'}
test_stmtexpr13_1155:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr13.C'
    sources: {binary: stmtexpr13.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was
          not declared")[^\n]*\n?)+'}
test_stmtexpr13_1156:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr13.C'
    sources: {binary: stmtexpr13.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was
          not declared")[^\n]*\n?)+'}
test_stmtexpr13_2696:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr13.C'
    sources: {binary: stmtexpr13.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was
          not declared")[^\n]*\n?)+'}
test_stmtexpr13_2697:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr13.C'
    sources: {binary: stmtexpr13.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was
          not declared")[^\n]*\n?)+'}
test_stmtexpr13_2698:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr13.C'
    sources: {binary: stmtexpr13.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was
          not declared")[^\n]*\n?)+'}
test_stmtexpr14_1157:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr14.C'
    sources: {binary: stmtexpr14.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_stmtexpr14_1158:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr14.C'
    sources: {binary: stmtexpr14.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_stmtexpr14_1159:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr14.C'
    sources: {binary: stmtexpr14.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_stmtexpr14_2699:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr14.C'
    sources: {binary: stmtexpr14.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_stmtexpr14_2700:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr14.C'
    sources: {binary: stmtexpr14.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_stmtexpr14_2701:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr14.C'
    sources: {binary: stmtexpr14.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_stmtexpr15_1160:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr15.C'
    sources: {binary: stmtexpr15.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral")[^\n]*\n?)+'}
test_stmtexpr15_1161:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr15.C'
    sources: {binary: stmtexpr15.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral")[^\n]*\n?)+'}
test_stmtexpr15_1162:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr15.C'
    sources: {binary: stmtexpr15.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral")[^\n]*\n?)+'}
test_stmtexpr15_2702:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr15.C'
    sources: {binary: stmtexpr15.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral")[^\n]*\n?)+'}
test_stmtexpr15_2703:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr15.C'
    sources: {binary: stmtexpr15.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral")[^\n]*\n?)+'}
test_stmtexpr15_2704:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr15.C'
    sources: {binary: stmtexpr15.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-integral")[^\n]*\n?)+'}
test_stmtexpr16_1163:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr16.C'
    sources: {binary: stmtexpr16.s, cflags: "-std=gnu++11\n -S"}
  group: GRPSERIAL
test_stmtexpr16_2705:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr16.C'
    sources: {binary: stmtexpr16.s, cflags: "-std=gnu++11\n -S"}
  group: GRPSERIAL
test_stmtexpr17_1164:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr17.C'
    sources: {binary: stmtexpr17.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_stmtexpr17_1165:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr17.C'
    sources: {binary: stmtexpr17.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_stmtexpr17_1166:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr17.C'
    sources: {binary: stmtexpr17.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_stmtexpr17_2706:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr17.C'
    sources: {binary: stmtexpr17.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_stmtexpr17_2707:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr17.C'
    sources: {binary: stmtexpr17.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_stmtexpr17_2708:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr17.C'
    sources: {binary: stmtexpr17.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_stmtexpr18_1167:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr18.C'
    sources: {binary: stmtexpr18.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_stmtexpr18_1168:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr18.C'
    sources: {binary: stmtexpr18.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_stmtexpr18_1169:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr18.C'
    sources: {binary: stmtexpr18.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_stmtexpr18_2709:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr18.C'
    sources: {binary: stmtexpr18.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_stmtexpr18_2710:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr18.C'
    sources: {binary: stmtexpr18.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_stmtexpr18_2711:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr18.C'
    sources: {binary: stmtexpr18.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_stmtexpr19_1170:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr19.C'
    sources: {binary: stmtexpr19.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_stmtexpr19_1171:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr19.C'
    sources: {binary: stmtexpr19.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_stmtexpr19_2712:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr19.C'
    sources: {binary: stmtexpr19.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_stmtexpr19_2713:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr19.C'
    sources: {binary: stmtexpr19.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_stmtexpr1_1142:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr1.C'
    sources: {binary: ./stmtexpr1.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr1_1143:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr1.C'
    sources: {binary: ./stmtexpr1.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr1_1144:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr1.C'
    sources: {binary: ./stmtexpr1.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr1_2684:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr1.C'
    sources: {binary: ./stmtexpr1.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr1_2685:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr1.C'
    sources: {binary: ./stmtexpr1.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr1_2686:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr1.C'
    sources: {binary: ./stmtexpr1.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr2_1172:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr2.C'
    sources: {binary: ./stmtexpr2.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr2_1173:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr2.C'
    sources: {binary: ./stmtexpr2.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr2_1174:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr2.C'
    sources: {binary: ./stmtexpr2.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr2_2714:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr2.C'
    sources: {binary: ./stmtexpr2.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr2_2715:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr2.C'
    sources: {binary: ./stmtexpr2.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr2_2716:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr2.C'
    sources: {binary: ./stmtexpr2.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr3_1175:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr3.C'
    sources: {binary: stmtexpr3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_stmtexpr3_1176:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr3.C'
    sources: {binary: stmtexpr3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_stmtexpr3_1177:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr3.C'
    sources: {binary: stmtexpr3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_stmtexpr3_2717:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr3.C'
    sources: {binary: stmtexpr3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_stmtexpr3_2718:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr3.C'
    sources: {binary: stmtexpr3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_stmtexpr3_2719:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr3.C'
    sources: {binary: stmtexpr3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_stmtexpr4_1178:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr4.C'
    sources: {binary: stmtexpr4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was
          not declared")[^\n]*\n?)+'}
test_stmtexpr4_1179:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr4.C'
    sources: {binary: stmtexpr4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was
          not declared")[^\n]*\n?)+'}
test_stmtexpr4_1180:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr4.C'
    sources: {binary: stmtexpr4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was
          not declared")[^\n]*\n?)+'}
test_stmtexpr4_2720:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr4.C'
    sources: {binary: stmtexpr4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was
          not declared")[^\n]*\n?)+'}
test_stmtexpr4_2721:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr4.C'
    sources: {binary: stmtexpr4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was
          not declared")[^\n]*\n?)+'}
test_stmtexpr4_2722:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr4.C'
    sources: {binary: stmtexpr4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was
          not declared")[^\n]*\n?)+'}
test_stmtexpr5_1181:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr5.C'
    sources: {binary: stmtexpr5.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_stmtexpr5_1182:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr5.C'
    sources: {binary: stmtexpr5.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_stmtexpr5_1183:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr5.C'
    sources: {binary: stmtexpr5.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_stmtexpr5_2723:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr5.C'
    sources: {binary: stmtexpr5.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_stmtexpr5_2724:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr5.C'
    sources: {binary: stmtexpr5.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_stmtexpr5_2725:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr5.C'
    sources: {binary: stmtexpr5.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_stmtexpr6_1184:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr6.C'
    sources: {binary: ./stmtexpr6.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr6_1185:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr6.C'
    sources: {binary: ./stmtexpr6.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr6_1186:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr6.C'
    sources: {binary: ./stmtexpr6.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr6_2726:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr6.C'
    sources: {binary: ./stmtexpr6.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr6_2727:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr6.C'
    sources: {binary: ./stmtexpr6.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr6_2728:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr6.C'
    sources: {binary: ./stmtexpr6.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr7_1187:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr7.C'
    sources: {binary: stmtexpr7.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_stmtexpr7_1188:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr7.C'
    sources: {binary: stmtexpr7.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_stmtexpr7_1189:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr7.C'
    sources: {binary: stmtexpr7.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_stmtexpr7_2729:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr7.C'
    sources: {binary: stmtexpr7.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_stmtexpr7_2730:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr7.C'
    sources: {binary: stmtexpr7.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_stmtexpr7_2731:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr7.C'
    sources: {binary: stmtexpr7.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_stmtexpr8_1190:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr8.C'
    sources: {binary: ./stmtexpr8.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr8_1191:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr8.C'
    sources: {binary: ./stmtexpr8.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr8_1192:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr8.C'
    sources: {binary: ./stmtexpr8.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr8_2732:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr8.C'
    sources: {binary: ./stmtexpr8.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr8_2733:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr8.C'
    sources: {binary: ./stmtexpr8.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr8_2734:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr8.C'
    sources: {binary: ./stmtexpr8.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_stmtexpr9_1193:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr9.C'
    sources: {binary: stmtexpr9.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_stmtexpr9_1194:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr9.C'
    sources: {binary: stmtexpr9.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_stmtexpr9_1195:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr9.C'
    sources: {binary: stmtexpr9.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_stmtexpr9_2735:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr9.C'
    sources: {binary: stmtexpr9.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_stmtexpr9_2736:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr9.C'
    sources: {binary: stmtexpr9.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_stmtexpr9_2737:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/stmtexpr9.C'
    sources: {binary: stmtexpr9.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_strncpy-chk1_1196:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/strncpy-chk1.C'
    sources: {binary: strncpy-chk1.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("specified
          bound 36 exceeds the size 35 of the destination")[^\n]*\n?)+'}
test_strncpy-chk1_1197:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/strncpy-chk1.C'
    sources: {binary: strncpy-chk1.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("specified
          bound 36 exceeds the size 35 of the destination")[^\n]*\n?)+'}
test_strncpy-chk1_1198:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/strncpy-chk1.C'
    sources: {binary: strncpy-chk1.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("specified
          bound 36 exceeds the size 35 of the destination")[^\n]*\n?)+'}
test_strncpy-chk1_2738:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/strncpy-chk1.C'
    sources: {binary: strncpy-chk1.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("specified
          bound 36 exceeds the size 35 of the destination")[^\n]*\n?)+'}
test_strncpy-chk1_2739:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/strncpy-chk1.C'
    sources: {binary: strncpy-chk1.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("specified
          bound 36 exceeds the size 35 of the destination")[^\n]*\n?)+'}
test_strncpy-chk1_2740:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/strncpy-chk1.C'
    sources: {binary: strncpy-chk1.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("specified
          bound 36 exceeds the size 35 of the destination")[^\n]*\n?)+'}
test_sync-1_1199:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-1.C'
    sources: {binary: sync-1.s, cflags: "-std=gnu++98 -Werror\n -S"}
  group: GRPSERIAL
test_sync-1_1200:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-1.C'
    sources: {binary: sync-1.s, cflags: "-std=gnu++11 -Werror\n -S"}
  group: GRPSERIAL
test_sync-1_1201:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-1.C'
    sources: {binary: sync-1.s, cflags: "-std=gnu++14 -Werror\n -S"}
  group: GRPSERIAL
test_sync-1_2741:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-1.C'
    sources: {binary: sync-1.s, cflags: "-std=gnu++98 -Werror\n -S"}
  group: GRPSERIAL
test_sync-1_2742:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-1.C'
    sources: {binary: sync-1.s, cflags: "-std=gnu++11 -Werror\n -S"}
  group: GRPSERIAL
test_sync-1_2743:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-1.C'
    sources: {binary: sync-1.s, cflags: "-std=gnu++14 -Werror\n -S"}
  group: GRPSERIAL
test_sync-2_1202:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-2.C'
    sources: {binary: sync-2.s, cflags: "-std=gnu++98 -Werror\n -S"}
  group: GRPSERIAL
test_sync-2_1203:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-2.C'
    sources: {binary: sync-2.s, cflags: "-std=gnu++11 -Werror\n -S"}
  group: GRPSERIAL
test_sync-2_1204:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-2.C'
    sources: {binary: sync-2.s, cflags: "-std=gnu++14 -Werror\n -S"}
  group: GRPSERIAL
test_sync-2_2744:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-2.C'
    sources: {binary: sync-2.s, cflags: "-std=gnu++98 -Werror\n -S"}
  group: GRPSERIAL
test_sync-2_2745:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-2.C'
    sources: {binary: sync-2.s, cflags: "-std=gnu++11 -Werror\n -S"}
  group: GRPSERIAL
test_sync-2_2746:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-2.C'
    sources: {binary: sync-2.s, cflags: "-std=gnu++14 -Werror\n -S"}
  group: GRPSERIAL
test_sync-3_1205:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-3.C'
    sources: {binary: sync-3.s, cflags: "-std=gnu++98 -O2 -g\n -S"}
  group: GRPSERIAL
test_sync-3_1206:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-3.C'
    sources: {binary: sync-3.s, cflags: "-std=gnu++11 -O2 -g\n -S"}
  group: GRPSERIAL
test_sync-3_1207:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-3.C'
    sources: {binary: sync-3.s, cflags: "-std=gnu++14 -O2 -g\n -S"}
  group: GRPSERIAL
test_sync-3_2747:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-3.C'
    sources: {binary: sync-3.s, cflags: "-std=gnu++98 -O2 -g\n -S"}
  group: GRPSERIAL
test_sync-3_2748:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-3.C'
    sources: {binary: sync-3.s, cflags: "-std=gnu++11 -O2 -g\n -S"}
  group: GRPSERIAL
test_sync-3_2749:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/sync-3.C'
    sources: {binary: sync-3.s, cflags: "-std=gnu++14 -O2 -g\n -S"}
  group: GRPSERIAL
test_timevar1_1208:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/timevar1.C'
    sources: {binary: timevar1.s, cflags: "-std=gnu++98 -ftime-report\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          defined")[^\n]*\n?)+'}
test_timevar1_1209:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/timevar1.C'
    sources: {binary: timevar1.s, cflags: "-std=gnu++11 -ftime-report\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          defined")[^\n]*\n?)+'}
test_timevar1_1210:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/timevar1.C'
    sources: {binary: timevar1.s, cflags: "-std=gnu++14 -ftime-report\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          defined")[^\n]*\n?)+'}
test_timevar1_2750:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/timevar1.C'
    sources: {binary: timevar1.s, cflags: "-std=gnu++98 -ftime-report\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          defined")[^\n]*\n?)+'}
test_timevar1_2751:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/timevar1.C'
    sources: {binary: timevar1.s, cflags: "-std=gnu++11 -ftime-report\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          defined")[^\n]*\n?)+'}
test_timevar1_2752:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/timevar1.C'
    sources: {binary: timevar1.s, cflags: "-std=gnu++14 -ftime-report\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          defined")[^\n]*\n?)+'}
test_timevar2_1211:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/timevar2.C'
    sources: {binary: timevar2.s, cflags: "-std=gnu++98 -ftime-report\n -S"}
  group: GRPSERIAL
test_timevar2_1212:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/timevar2.C'
    sources: {binary: timevar2.s, cflags: "-std=gnu++11 -ftime-report\n -S"}
  group: GRPSERIAL
test_timevar2_1213:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/timevar2.C'
    sources: {binary: timevar2.s, cflags: "-std=gnu++14 -ftime-report\n -S"}
  group: GRPSERIAL
test_timevar2_2753:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/timevar2.C'
    sources: {binary: timevar2.s, cflags: "-std=gnu++98 -ftime-report\n -S"}
  group: GRPSERIAL
test_timevar2_2754:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/timevar2.C'
    sources: {binary: timevar2.s, cflags: "-std=gnu++11 -ftime-report\n -S"}
  group: GRPSERIAL
test_timevar2_2755:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/timevar2.C'
    sources: {binary: timevar2.s, cflags: "-std=gnu++14 -ftime-report\n -S"}
  group: GRPSERIAL
test_tmplattr1_1214:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr1.C'
    sources: {binary: tmplattr1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr1_1215:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr1.C'
    sources: {binary: tmplattr1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr1_1216:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr1.C'
    sources: {binary: tmplattr1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr1_2756:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr1.C'
    sources: {binary: tmplattr1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr1_2757:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr1.C'
    sources: {binary: tmplattr1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr1_2758:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr1.C'
    sources: {binary: tmplattr1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr2_1217:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr2.C'
    sources: {binary: tmplattr2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr2_1218:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr2.C'
    sources: {binary: tmplattr2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr2_1219:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr2.C'
    sources: {binary: tmplattr2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr2_2759:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr2.C'
    sources: {binary: tmplattr2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr2_2760:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr2.C'
    sources: {binary: tmplattr2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr2_2761:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr2.C'
    sources: {binary: tmplattr2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr3_1220:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr3.C'
    sources: {binary: tmplattr3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr3_1221:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr3.C'
    sources: {binary: tmplattr3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr3_1222:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr3.C'
    sources: {binary: tmplattr3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr3_2762:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr3.C'
    sources: {binary: tmplattr3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr3_2763:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr3.C'
    sources: {binary: tmplattr3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr3_2764:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr3.C'
    sources: {binary: tmplattr3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr4_1223:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr4.C'
    sources: {binary: ./tmplattr4.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_tmplattr4_1224:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr4.C'
    sources: {binary: ./tmplattr4.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_tmplattr4_1225:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr4.C'
    sources: {binary: ./tmplattr4.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_tmplattr4_2765:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr4.C'
    sources: {binary: ./tmplattr4.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_tmplattr4_2766:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr4.C'
    sources: {binary: ./tmplattr4.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_tmplattr4_2767:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr4.C'
    sources: {binary: ./tmplattr4.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_tmplattr5_1226:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr5.C'
    sources: {binary: ./tmplattr5.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_tmplattr5_1227:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr5.C'
    sources: {binary: ./tmplattr5.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_tmplattr5_1228:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr5.C'
    sources: {binary: ./tmplattr5.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_tmplattr5_2768:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr5.C'
    sources: {binary: ./tmplattr5.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_tmplattr5_2769:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr5.C'
    sources: {binary: ./tmplattr5.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_tmplattr5_2770:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr5.C'
    sources: {binary: ./tmplattr5.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_tmplattr6_1229:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr6.C'
    sources: {binary: tmplattr6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_tmplattr6_1230:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr6.C'
    sources: {binary: tmplattr6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_tmplattr6_1231:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr6.C'
    sources: {binary: tmplattr6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_tmplattr6_2771:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr6.C'
    sources: {binary: tmplattr6.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_tmplattr6_2772:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr6.C'
    sources: {binary: tmplattr6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_tmplattr6_2773:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr6.C'
    sources: {binary: tmplattr6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
test_tmplattr7_1232:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr7.C'
    sources: {binary: tmplattr7.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr7_1233:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr7.C'
    sources: {binary: tmplattr7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr7_1234:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr7.C'
    sources: {binary: tmplattr7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr7_2774:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr7.C'
    sources: {binary: tmplattr7.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr7_2775:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr7.C'
    sources: {binary: tmplattr7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr7_2776:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr7.C'
    sources: {binary: tmplattr7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_tmplattr8_1235:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr8.C'
    sources: {binary: tmplattr8.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_tmplattr8_1236:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr8.C'
    sources: {binary: tmplattr8.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_tmplattr8_1237:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr8.C'
    sources: {binary: tmplattr8.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_tmplattr8_2777:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr8.C'
    sources: {binary: tmplattr8.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_tmplattr8_2778:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr8.C'
    sources: {binary: tmplattr8.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_tmplattr8_2779:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/tmplattr8.C'
    sources: {binary: tmplattr8.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
test_traits1_1238:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/traits1.C'
    sources: {binary: traits1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_traits1_1239:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/traits1.C'
    sources: {binary: traits1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_traits1_1240:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/traits1.C'
    sources: {binary: traits1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_traits1_2780:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/traits1.C'
    sources: {binary: traits1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_traits1_2781:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/traits1.C'
    sources: {binary: traits1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_traits1_2782:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/traits1.C'
    sources: {binary: traits1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_transparent-union_1241:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/transparent-union.C'
    sources: {binary: transparent-union.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type
          transparent")[^\n]*\n?)+'}
test_transparent-union_1242:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/transparent-union.C'
    sources: {binary: transparent-union.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type
          transparent")[^\n]*\n?)+'}
test_transparent-union_1243:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/transparent-union.C'
    sources: {binary: transparent-union.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type
          transparent")[^\n]*\n?)+'}
test_transparent-union_2783:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/transparent-union.C'
    sources: {binary: transparent-union.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type
          transparent")[^\n]*\n?)+'}
test_transparent-union_2784:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/transparent-union.C'
    sources: {binary: transparent-union.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type
          transparent")[^\n]*\n?)+'}
test_transparent-union_2785:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/transparent-union.C'
    sources: {binary: transparent-union.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("type
          transparent")[^\n]*\n?)+'}
test_typedef-init_1244:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typedef-init.C'
    sources: {binary: typedef-init.s, cflags: "-std=gnu++98 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initialized")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initialized")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          initialized")[^\n]*\n?)+'}
test_typedef-init_1245:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typedef-init.C'
    sources: {binary: typedef-init.s, cflags: "-std=gnu++11 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initialized")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initialized")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          initialized")[^\n]*\n?)+'}
test_typedef-init_1246:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typedef-init.C'
    sources: {binary: typedef-init.s, cflags: "-std=gnu++14 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initialized")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initialized")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          initialized")[^\n]*\n?)+'}
test_typedef-init_2786:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typedef-init.C'
    sources: {binary: typedef-init.s, cflags: "-std=gnu++98 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initialized")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initialized")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          initialized")[^\n]*\n?)+'}
test_typedef-init_2787:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typedef-init.C'
    sources: {binary: typedef-init.s, cflags: "-std=gnu++11 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initialized")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initialized")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          initialized")[^\n]*\n?)+'}
test_typedef-init_2788:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typedef-init.C'
    sources: {binary: typedef-init.s, cflags: "-std=gnu++14 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initialized")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does
          not name a type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initialized")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          initialized")[^\n]*\n?)+'}
test_typename1_1247:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typename1.C'
    sources: {binary: typename1.s, cflags: "-std=gnu++98 -fpermissive -w\n -S"}
  group: GRPSERIAL
test_typename1_1248:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typename1.C'
    sources: {binary: typename1.s, cflags: "-std=gnu++11 -fpermissive -w\n -S"}
  group: GRPSERIAL
test_typename1_1249:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typename1.C'
    sources: {binary: typename1.s, cflags: "-std=gnu++14 -fpermissive -w\n -S"}
  group: GRPSERIAL
test_typename1_2789:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typename1.C'
    sources: {binary: typename1.s, cflags: "-std=gnu++98 -fpermissive -w\n -S"}
  group: GRPSERIAL
test_typename1_2790:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typename1.C'
    sources: {binary: typename1.s, cflags: "-std=gnu++11 -fpermissive -w\n -S"}
  group: GRPSERIAL
test_typename1_2791:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typename1.C'
    sources: {binary: typename1.s, cflags: "-std=gnu++14 -fpermissive -w\n -S"}
  group: GRPSERIAL
test_typeof10_1253:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof10.C'
    sources: {binary: typeof10.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting")[^\n]*\n?)+'}
test_typeof10_1254:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof10.C'
    sources: {binary: typeof10.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting")[^\n]*\n?)+'}
test_typeof10_1255:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof10.C'
    sources: {binary: typeof10.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting")[^\n]*\n?)+'}
test_typeof10_2795:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof10.C'
    sources: {binary: typeof10.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting")[^\n]*\n?)+'}
test_typeof10_2796:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof10.C'
    sources: {binary: typeof10.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting")[^\n]*\n?)+'}
test_typeof10_2797:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof10.C'
    sources: {binary: typeof10.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting")[^\n]*\n?)+'}
test_typeof11_1256:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof11.C'
    sources: {binary: typeof11.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_typeof11_1257:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof11.C'
    sources: {binary: typeof11.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_typeof11_1258:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof11.C'
    sources: {binary: typeof11.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_typeof11_2798:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof11.C'
    sources: {binary: typeof11.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_typeof11_2799:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof11.C'
    sources: {binary: typeof11.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_typeof11_2800:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof11.C'
    sources: {binary: typeof11.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_typeof1_1250:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof1.C'
    sources: {binary: typeof1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_typeof1_1251:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof1.C'
    sources: {binary: typeof1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_typeof1_1252:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof1.C'
    sources: {binary: typeof1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_typeof1_2792:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof1.C'
    sources: {binary: typeof1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_typeof1_2793:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof1.C'
    sources: {binary: typeof1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_typeof1_2794:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof1.C'
    sources: {binary: typeof1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_typeof2_1259:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof2.C'
    sources: {binary: typeof2.s, cflags: "-std=gnu++98 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_typeof2_1260:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof2.C'
    sources: {binary: typeof2.s, cflags: "-std=gnu++11 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_typeof2_1261:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof2.C'
    sources: {binary: typeof2.s, cflags: "-std=gnu++14 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_typeof2_2801:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof2.C'
    sources: {binary: typeof2.s, cflags: "-std=gnu++98 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_typeof2_2802:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof2.C'
    sources: {binary: typeof2.s, cflags: "-std=gnu++11 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_typeof2_2803:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof2.C'
    sources: {binary: typeof2.s, cflags: "-std=gnu++14 -O2 -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_typeof3_1262:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof3.C'
    sources: {binary: typeof3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_typeof3_1263:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof3.C'
    sources: {binary: typeof3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_typeof3_1264:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof3.C'
    sources: {binary: typeof3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_typeof3_2804:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof3.C'
    sources: {binary: typeof3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_typeof3_2805:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof3.C'
    sources: {binary: typeof3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_typeof3_2806:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof3.C'
    sources: {binary: typeof3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_typeof4_1265:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof4.C'
    sources: {binary: typeof4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_typeof4_1266:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof4.C'
    sources: {binary: typeof4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_typeof4_1267:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof4.C'
    sources: {binary: typeof4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_typeof4_2807:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof4.C'
    sources: {binary: typeof4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_typeof4_2808:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof4.C'
    sources: {binary: typeof4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_typeof4_2809:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof4.C'
    sources: {binary: typeof4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_typeof5_1268:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof5.C'
    sources: {binary: typeof5.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_typeof5_1269:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof5.C'
    sources: {binary: typeof5.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_typeof5_1270:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof5.C'
    sources: {binary: typeof5.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_typeof5_2810:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof5.C'
    sources: {binary: typeof5.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_typeof5_2811:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof5.C'
    sources: {binary: typeof5.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_typeof5_2812:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof5.C'
    sources: {binary: typeof5.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_typeof6_1271:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof6.C'
    sources: {binary: typeof6.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_typeof6_1272:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof6.C'
    sources: {binary: typeof6.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_typeof6_1273:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof6.C'
    sources: {binary: typeof6.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_typeof6_2813:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof6.C'
    sources: {binary: typeof6.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_typeof6_2814:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof6.C'
    sources: {binary: typeof6.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_typeof6_2815:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof6.C'
    sources: {binary: typeof6.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_typeof7_1274:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof7.C'
    sources: {binary: typeof7.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_typeof7_1275:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof7.C'
    sources: {binary: typeof7.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_typeof7_1276:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof7.C'
    sources: {binary: typeof7.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_typeof7_2816:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof7.C'
    sources: {binary: typeof7.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_typeof7_2817:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof7.C'
    sources: {binary: typeof7.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_typeof7_2818:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof7.C'
    sources: {binary: typeof7.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_typeof8_1277:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof8.C'
    sources: {binary: typeof8.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_typeof8_1278:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof8.C'
    sources: {binary: typeof8.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_typeof8_1279:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof8.C'
    sources: {binary: typeof8.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_typeof8_2819:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof8.C'
    sources: {binary: typeof8.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_typeof8_2820:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof8.C'
    sources: {binary: typeof8.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_typeof8_2821:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof8.C'
    sources: {binary: typeof8.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_typeof9_1280:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof9.C'
    sources: {binary: typeof9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown|invalid")[^\n]*\n?)+'}
test_typeof9_1281:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof9.C'
    sources: {binary: typeof9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown|invalid")[^\n]*\n?)+'}
test_typeof9_1282:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof9.C'
    sources: {binary: typeof9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown|invalid")[^\n]*\n?)+'}
test_typeof9_2822:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof9.C'
    sources: {binary: typeof9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown|invalid")[^\n]*\n?)+'}
test_typeof9_2823:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof9.C'
    sources: {binary: typeof9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown|invalid")[^\n]*\n?)+'}
test_typeof9_2824:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/typeof9.C'
    sources: {binary: typeof9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown|invalid")[^\n]*\n?)+'}
test_unary_trait_incomplete_1283:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/unary_trait_incomplete.C'
    sources: {binary: unary_trait_incomplete.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_unary_trait_incomplete_1284:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/unary_trait_incomplete.C'
    sources: {binary: unary_trait_incomplete.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_unary_trait_incomplete_1285:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/unary_trait_incomplete.C'
    sources: {binary: unary_trait_incomplete.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_unary_trait_incomplete_2825:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/unary_trait_incomplete.C'
    sources: {binary: unary_trait_incomplete.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_unary_trait_incomplete_2826:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/unary_trait_incomplete.C'
    sources: {binary: unary_trait_incomplete.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_unary_trait_incomplete_2827:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/unary_trait_incomplete.C'
    sources: {binary: unary_trait_incomplete.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_underlying_type10_1289:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type10.C'
    sources: {binary: ./underlying_type10.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_underlying_type10_1290:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type10.C'
    sources: {binary: ./underlying_type10.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_underlying_type10_2831:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type10.C'
    sources: {binary: ./underlying_type10.exe, cflags: -std=c++11  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_underlying_type10_2832:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type10.C'
    sources: {binary: ./underlying_type10.exe, cflags: -std=c++14  -pedantic-errors
        -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_underlying_type11_1291:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type11.C'
    sources: {binary: underlying_type11.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int
          \\\\\\[1\\\\\\]|invalid")[^\n]*\n?)+'}
test_underlying_type11_1292:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type11.C'
    sources: {binary: underlying_type11.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int
          \\\\\\[1\\\\\\]|invalid")[^\n]*\n?)+'}
test_underlying_type11_1293:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type11.C'
    sources: {binary: underlying_type11.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int
          \\\\\\[1\\\\\\]|invalid")[^\n]*\n?)+'}
test_underlying_type11_2833:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type11.C'
    sources: {binary: underlying_type11.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int
          \\\\\\[1\\\\\\]|invalid")[^\n]*\n?)+'}
test_underlying_type11_2834:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type11.C'
    sources: {binary: underlying_type11.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int
          \\\\\\[1\\\\\\]|invalid")[^\n]*\n?)+'}
test_underlying_type11_2835:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type11.C'
    sources: {binary: underlying_type11.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int
          \\\\\\[1\\\\\\]|invalid")[^\n]*\n?)+'}
test_underlying_type12_1294:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type12.C'
    sources: {binary: underlying_type12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
test_underlying_type12_1295:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type12.C'
    sources: {binary: underlying_type12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
test_underlying_type12_2836:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type12.C'
    sources: {binary: underlying_type12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
test_underlying_type12_2837:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type12.C'
    sources: {binary: underlying_type12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
test_underlying_type1_1286:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type1.C'
    sources: {binary: underlying_type1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared|template|expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration")[^\n]*\n?)+'}
test_underlying_type1_1287:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type1.C'
    sources: {binary: underlying_type1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared|template|expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration")[^\n]*\n?)+'}
test_underlying_type1_1288:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type1.C'
    sources: {binary: underlying_type1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared|template|expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration")[^\n]*\n?)+'}
test_underlying_type1_2828:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type1.C'
    sources: {binary: underlying_type1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared|template|expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration")[^\n]*\n?)+'}
test_underlying_type1_2829:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type1.C'
    sources: {binary: underlying_type1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared|template|expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration")[^\n]*\n?)+'}
test_underlying_type1_2830:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type1.C'
    sources: {binary: underlying_type1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration|invalid")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared|template|expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an enumeration")[^\n]*\n?)+'}
test_underlying_type2_1296:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type2.C'
    sources: {binary: underlying_type2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type2_1297:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type2.C'
    sources: {binary: underlying_type2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type2_1298:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type2.C'
    sources: {binary: underlying_type2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type2_2838:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type2.C'
    sources: {binary: underlying_type2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type2_2839:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type2.C'
    sources: {binary: underlying_type2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type2_2840:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type2.C'
    sources: {binary: underlying_type2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type3_1299:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type3.C'
    sources: {binary: underlying_type3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type3_1300:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type3.C'
    sources: {binary: underlying_type3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type3_2841:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type3.C'
    sources: {binary: underlying_type3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type3_2842:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type3.C'
    sources: {binary: underlying_type3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type4_1301:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type4.C'
    sources: {binary: underlying_type4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type4_1302:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type4.C'
    sources: {binary: underlying_type4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type4_1303:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type4.C'
    sources: {binary: underlying_type4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type4_2843:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type4.C'
    sources: {binary: underlying_type4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type4_2844:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type4.C'
    sources: {binary: underlying_type4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type4_2845:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type4.C'
    sources: {binary: underlying_type4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type5_1304:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type5.C'
    sources: {binary: underlying_type5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type5_1305:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type5.C'
    sources: {binary: underlying_type5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type5_2846:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type5.C'
    sources: {binary: underlying_type5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type5_2847:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type5.C'
    sources: {binary: underlying_type5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type6_1306:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type6.C'
    sources: {binary: underlying_type6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type6_1307:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type6.C'
    sources: {binary: underlying_type6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type6_2848:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type6.C'
    sources: {binary: underlying_type6.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type6_2849:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type6.C'
    sources: {binary: underlying_type6.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type7_1308:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type7.C'
    sources: {binary: underlying_type7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type7_1309:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type7.C'
    sources: {binary: underlying_type7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type7_2850:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type7.C'
    sources: {binary: underlying_type7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type7_2851:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type7.C'
    sources: {binary: underlying_type7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type8_1310:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type8.C'
    sources: {binary: underlying_type8.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type8_1311:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type8.C'
    sources: {binary: underlying_type8.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type8_2852:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type8.C'
    sources: {binary: underlying_type8.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type8_2853:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type8.C'
    sources: {binary: underlying_type8.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type9_1312:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type9.C'
    sources: {binary: underlying_type9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type9_1313:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type9.C'
    sources: {binary: underlying_type9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type9_2854:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type9.C'
    sources: {binary: underlying_type9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_underlying_type9_2855:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/underlying_type9.C'
    sources: {binary: underlying_type9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_uow-1_1314:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-1.C'
    sources: {binary: uow-1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_uow-1_1315:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-1.C'
    sources: {binary: uow-1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_uow-1_1316:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-1.C'
    sources: {binary: uow-1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_uow-1_2856:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-1.C'
    sources: {binary: uow-1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_uow-1_2857:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-1.C'
    sources: {binary: uow-1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_uow-1_2858:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-1.C'
    sources: {binary: uow-1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_uow-2_1317:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-2.C'
    sources: {binary: uow-2.s, cflags: "-std=gnu++98 -Wall -fms-extensions\n -S"}
  group: GRPSERIAL
test_uow-2_1318:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-2.C'
    sources: {binary: uow-2.s, cflags: "-std=gnu++11 -Wall -fms-extensions\n -S"}
  group: GRPSERIAL
test_uow-2_1319:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-2.C'
    sources: {binary: uow-2.s, cflags: "-std=gnu++14 -Wall -fms-extensions\n -S"}
  group: GRPSERIAL
test_uow-2_2859:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-2.C'
    sources: {binary: uow-2.s, cflags: "-std=gnu++98 -Wall -fms-extensions\n -S"}
  group: GRPSERIAL
test_uow-2_2860:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-2.C'
    sources: {binary: uow-2.s, cflags: "-std=gnu++11 -Wall -fms-extensions\n -S"}
  group: GRPSERIAL
test_uow-2_2861:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-2.C'
    sources: {binary: uow-2.s, cflags: "-std=gnu++14 -Wall -fms-extensions\n -S"}
  group: GRPSERIAL
test_uow-3_1320:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-3.C'
    sources: {binary: uow-3.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_uow-3_1321:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-3.C'
    sources: {binary: uow-3.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_uow-3_1322:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-3.C'
    sources: {binary: uow-3.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_uow-3_2862:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-3.C'
    sources: {binary: uow-3.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_uow-3_2863:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-3.C'
    sources: {binary: uow-3.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_uow-3_2864:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-3.C'
    sources: {binary: uow-3.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_uow-4_1323:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-4.C'
    sources: {binary: uow-4.s, cflags: "-std=gnu++98 -Wall -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_uow-4_1324:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-4.C'
    sources: {binary: uow-4.s, cflags: "-std=gnu++11 -Wall -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_uow-4_1325:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-4.C'
    sources: {binary: uow-4.s, cflags: "-std=gnu++14 -Wall -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_uow-4_2865:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-4.C'
    sources: {binary: uow-4.s, cflags: "-std=gnu++98 -Wall -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_uow-4_2866:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-4.C'
    sources: {binary: uow-4.s, cflags: "-std=gnu++11 -Wall -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_uow-4_2867:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/uow-4.C'
    sources: {binary: uow-4.s, cflags: "-std=gnu++14 -Wall -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_utf-array-short-wchar_1326:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-array-short-wchar.C'
    sources: {binary: utf-array-short-wchar.s, cflags: "-std=gnu++11 -fshort-wchar\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
test_utf-array-short-wchar_1327:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-array-short-wchar.C'
    sources: {binary: utf-array-short-wchar.s, cflags: "-std=gnu++14 -fshort-wchar\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
test_utf-array-short-wchar_2868:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-array-short-wchar.C'
    sources: {binary: utf-array-short-wchar.s, cflags: "-std=gnu++11 -fshort-wchar\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
test_utf-array-short-wchar_2869:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-array-short-wchar.C'
    sources: {binary: utf-array-short-wchar.s, cflags: "-std=gnu++14 -fshort-wchar\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
test_utf-array_1328:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-array.C'
    sources: {binary: utf-array.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
test_utf-array_1329:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-array.C'
    sources: {binary: utf-array.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
test_utf-array_2870:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-array.C'
    sources: {binary: utf-array.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
test_utf-array_2871:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-array.C'
    sources: {binary: utf-array.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          incompatible")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          wide string")[^\n]*\n?)+'}
test_utf-badconcat2_1332:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-badconcat2.C'
    sources: {binary: utf-badconcat2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
test_utf-badconcat2_1333:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-badconcat2.C'
    sources: {binary: utf-badconcat2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
test_utf-badconcat2_2874:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-badconcat2.C'
    sources: {binary: utf-badconcat2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
test_utf-badconcat2_2875:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-badconcat2.C'
    sources: {binary: utf-badconcat2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
test_utf-badconcat_1330:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-badconcat.C'
    sources: {binary: utf-badconcat.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
test_utf-badconcat_1331:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-badconcat.C'
    sources: {binary: utf-badconcat.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
test_utf-badconcat_2872:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-badconcat.C'
    sources: {binary: utf-badconcat.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
test_utf-badconcat_2873:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-badconcat.C'
    sources: {binary: utf-badconcat.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-standard
          concatenation")[^\n]*\n?)+'}
test_utf-cvt_1334:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-cvt.C'
    sources: {binary: utf-cvt.s, cflags: "-std=gnu++11 -Wall -Wconversion -Wsign-conversion
        -Wsign-promo\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
test_utf-cvt_1335:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-cvt.C'
    sources: {binary: utf-cvt.s, cflags: "-std=gnu++14 -Wall -Wconversion -Wsign-conversion
        -Wsign-promo\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
test_utf-cvt_2876:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-cvt.C'
    sources: {binary: utf-cvt.s, cflags: "-std=gnu++11 -Wall -Wconversion -Wsign-conversion
        -Wsign-promo\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
test_utf-cvt_2877:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-cvt.C'
    sources: {binary: utf-cvt.s, cflags: "-std=gnu++14 -Wall -Wconversion -Wsign-conversion
        -Wsign-promo\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("alter
          its value")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("change
          the sign")[^\n]*\n?)+'}
test_utf-cxx0x_1336:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-cxx0x.C'
    sources: {binary: utf-cxx0x.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_utf-cxx0x_1337:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-cxx0x.C'
    sources: {binary: utf-cxx0x.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_utf-cxx0x_2878:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-cxx0x.C'
    sources: {binary: utf-cxx0x.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_utf-cxx0x_2879:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-cxx0x.C'
    sources: {binary: utf-cxx0x.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_utf-cxx98_1338:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-cxx98.C'
    sources: {binary: utf-cxx98.s, cflags: "-std=c++98\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          name a type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          name a type")[^\n]*\n?)+'}
test_utf-cxx98_2880:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-cxx98.C'
    sources: {binary: utf-cxx98.s, cflags: "-std=c++98\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          name a type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          name a type")[^\n]*\n?)+'}
test_utf-dflt2_1340:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-dflt2.C'
    sources: {binary: utf-dflt2.s, cflags: "-std=c++98\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was
          not declared")[^\n]*\n?)+'}
test_utf-dflt2_2882:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-dflt2.C'
    sources: {binary: utf-dflt2.s, cflags: "-std=c++98\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("was
          not declared")[^\n]*\n?)+'}
test_utf-dflt_1339:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-dflt.C'
    sources: {binary: utf-dflt.s, cflags: "-std=c++98\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          name a type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          name a type")[^\n]*\n?)+'}
test_utf-dflt_2881:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-dflt.C'
    sources: {binary: utf-dflt.s, cflags: "-std=c++98\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          name a type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          name a type")[^\n]*\n?)+'}
test_utf-gnuxx0x_1341:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-gnuxx0x.C'
    sources: {binary: utf-gnuxx0x.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_utf-gnuxx0x_1342:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-gnuxx0x.C'
    sources: {binary: utf-gnuxx0x.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_utf-gnuxx0x_2883:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-gnuxx0x.C'
    sources: {binary: utf-gnuxx0x.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_utf-gnuxx0x_2884:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-gnuxx0x.C'
    sources: {binary: utf-gnuxx0x.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_utf-gnuxx98_1343:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-gnuxx98.C'
    sources: {binary: utf-gnuxx98.s, cflags: "-std=gnu++98\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          name a type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          name a type")[^\n]*\n?)+'}
test_utf-gnuxx98_2885:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-gnuxx98.C'
    sources: {binary: utf-gnuxx98.s, cflags: "-std=gnu++98\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          name a type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          name a type")[^\n]*\n?)+'}
test_utf-mangle_1344:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-mangle.C'
    sources: {binary: utf-mangle.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_utf-mangle_1345:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-mangle.C'
    sources: {binary: utf-mangle.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_utf-mangle_2886:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-mangle.C'
    sources: {binary: utf-mangle.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_utf-mangle_2887:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-mangle.C'
    sources: {binary: utf-mangle.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -ffat-lto-objects\n -S"}
  group: GRPSERIAL
test_utf-rtti_1346:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-rtti.C'
    sources: {binary: utf-rtti.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_utf-rtti_1347:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-rtti.C'
    sources: {binary: utf-rtti.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_utf-rtti_2888:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-rtti.C'
    sources: {binary: utf-rtti.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_utf-rtti_2889:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-rtti.C'
    sources: {binary: utf-rtti.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_utf-type_1348:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-type.C'
    sources: {binary: ./utf-type.exe, cflags: -std=gnu++11 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf-type_1349:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-type.C'
    sources: {binary: ./utf-type.exe, cflags: -std=gnu++14 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf-type_2890:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-type.C'
    sources: {binary: ./utf-type.exe, cflags: -std=gnu++11 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf-type_2891:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-type.C'
    sources: {binary: ./utf-type.exe, cflags: -std=gnu++14 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf-typedef-cxx0x_1350:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-typedef-cxx0x.C'
    sources: {binary: utf-typedef-cxx0x.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'}
test_utf-typedef-cxx0x_1351:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-typedef-cxx0x.C'
    sources: {binary: utf-typedef-cxx0x.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'}
test_utf-typedef-cxx0x_2892:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-typedef-cxx0x.C'
    sources: {binary: utf-typedef-cxx0x.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'}
test_utf-typedef-cxx0x_2893:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-typedef-cxx0x.C'
    sources: {binary: utf-typedef-cxx0x.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration")[^\n]*\n?)+'}
test_utf-typedef-cxx98_1352:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-typedef-cxx98.C'
    sources: {binary: utf-typedef-cxx98.s, cflags: "-std=c++98\n -S"}
  group: GRPSERIAL
test_utf-typedef-cxx98_2894:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-typedef-cxx98.C'
    sources: {binary: utf-typedef-cxx98.s, cflags: "-std=c++98\n -S"}
  group: GRPSERIAL
test_utf-typespec_1353:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-typespec.C'
    sources: {binary: utf-typespec.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("short")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("long")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("short")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("long")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
test_utf-typespec_1354:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-typespec.C'
    sources: {binary: utf-typespec.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("short")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("long")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("short")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("long")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
test_utf-typespec_2895:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-typespec.C'
    sources: {binary: utf-typespec.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("short")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("long")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("short")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("long")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
test_utf-typespec_2896:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf-typespec.C'
    sources: {binary: utf-typespec.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("short")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("long")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("short")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("long")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("signed")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unsigned")[^\n]*\n?)+'}
test_utf16-1_1355:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-1.C'
    sources: {binary: ./utf16-1.exe, cflags: -std=gnu++11 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf16-1_1356:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-1.C'
    sources: {binary: ./utf16-1.exe, cflags: -std=gnu++14 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf16-1_2897:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-1.C'
    sources: {binary: ./utf16-1.exe, cflags: -std=gnu++11 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf16-1_2898:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-1.C'
    sources: {binary: ./utf16-1.exe, cflags: -std=gnu++14 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf16-2_1357:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-2.C'
    sources: {binary: ./utf16-2.exe, cflags: -std=gnu++11 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf16-2_1358:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-2.C'
    sources: {binary: ./utf16-2.exe, cflags: -std=gnu++14 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf16-2_2899:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-2.C'
    sources: {binary: ./utf16-2.exe, cflags: -std=gnu++11 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf16-2_2900:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-2.C'
    sources: {binary: ./utf16-2.exe, cflags: -std=gnu++14 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf16-3_1359:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-3.C'
    sources: {binary: ./utf16-3.exe, cflags: -std=gnu++11 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf16-3_1360:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-3.C'
    sources: {binary: ./utf16-3.exe, cflags: -std=gnu++14 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf16-3_2901:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-3.C'
    sources: {binary: ./utf16-3.exe, cflags: -std=gnu++11 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf16-3_2902:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-3.C'
    sources: {binary: ./utf16-3.exe, cflags: -std=gnu++14 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf16-4_1361:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-4.C'
    sources: {binary: utf16-4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("implicitly
          truncated")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("implicitly
          truncated")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty
          character")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
test_utf16-4_1362:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-4.C'
    sources: {binary: utf16-4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("implicitly
          truncated")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("implicitly
          truncated")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty
          character")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
test_utf16-4_2903:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-4.C'
    sources: {binary: utf16-4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("implicitly
          truncated")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("implicitly
          truncated")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty
          character")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
test_utf16-4_2904:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf16-4.C'
    sources: {binary: utf16-4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("implicitly
          truncated")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("implicitly
          truncated")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty
          character")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
test_utf32-1_1363:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-1.C'
    sources: {binary: ./utf32-1.exe, cflags: -std=gnu++11 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf32-1_1364:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-1.C'
    sources: {binary: ./utf32-1.exe, cflags: -std=gnu++14 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf32-1_2905:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-1.C'
    sources: {binary: ./utf32-1.exe, cflags: -std=gnu++11 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf32-1_2906:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-1.C'
    sources: {binary: ./utf32-1.exe, cflags: -std=gnu++14 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf32-2_1365:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-2.C'
    sources: {binary: ./utf32-2.exe, cflags: -std=gnu++11 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf32-2_1366:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-2.C'
    sources: {binary: ./utf32-2.exe, cflags: -std=gnu++14 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf32-2_2907:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-2.C'
    sources: {binary: ./utf32-2.exe, cflags: -std=gnu++11 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf32-2_2908:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-2.C'
    sources: {binary: ./utf32-2.exe, cflags: -std=gnu++14 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf32-3_1367:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-3.C'
    sources: {binary: ./utf32-3.exe, cflags: -std=gnu++11 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf32-3_1368:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-3.C'
    sources: {binary: ./utf32-3.exe, cflags: -std=gnu++14 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf32-3_2909:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-3.C'
    sources: {binary: ./utf32-3.exe, cflags: -std=gnu++11 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf32-3_2910:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-3.C'
    sources: {binary: ./utf32-3.exe, cflags: -std=gnu++14 -Wall -Werror}
  group: GRPSERIAL
  run: {cwd: .}
test_utf32-4_1369:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-4.C'
    sources: {binary: utf32-4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty
          character")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
test_utf32-4_1370:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-4.C'
    sources: {binary: utf32-4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty
          character")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
test_utf32-4_2911:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-4.C'
    sources: {binary: utf32-4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty
          character")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
test_utf32-4_2912:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf32-4.C'
    sources: {binary: utf32-4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty
          character")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("constant
          too long")[^\n]*\n?)+'}
test_utf8-2_1371:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf8-2.C'
    sources: {binary: utf8-2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
test_utf8-2_1372:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf8-2.C'
    sources: {binary: utf8-2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
test_utf8-2_2913:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf8-2.C'
    sources: {binary: utf8-2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
test_utf8-2_2914:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/utf8-2.C'
    sources: {binary: utf8-2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("from
          non-wide")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("chars
          is too long")[^\n]*\n?)+'}
test_va-arg-pack-1_1373:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-1.C'
    sources: {binary: ./va-arg-pack-1.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_va-arg-pack-1_1374:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-1.C'
    sources: {binary: ./va-arg-pack-1.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_va-arg-pack-1_1375:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-1.C'
    sources: {binary: ./va-arg-pack-1.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_va-arg-pack-1_2915:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-1.C'
    sources: {binary: ./va-arg-pack-1.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_va-arg-pack-1_2916:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-1.C'
    sources: {binary: ./va-arg-pack-1.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_va-arg-pack-1_2917:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-1.C'
    sources: {binary: ./va-arg-pack-1.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_va-arg-pack-2_1376:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-2.C'
    sources: {binary: va-arg-pack-2.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
test_va-arg-pack-2_1377:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-2.C'
    sources: {binary: va-arg-pack-2.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
test_va-arg-pack-2_1378:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-2.C'
    sources: {binary: va-arg-pack-2.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
test_va-arg-pack-2_2918:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-2.C'
    sources: {binary: va-arg-pack-2.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
test_va-arg-pack-2_2919:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-2.C'
    sources: {binary: va-arg-pack-2.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
test_va-arg-pack-2_2920:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-2.C'
    sources: {binary: va-arg-pack-2.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of")[^\n]*\n?)+'}
test_va-arg-pack-len-1_1379:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-len-1.C'
    sources: {binary: ./va-arg-pack-len-1.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_va-arg-pack-len-1_1380:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-len-1.C'
    sources: {binary: ./va-arg-pack-len-1.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_va-arg-pack-len-1_1381:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-len-1.C'
    sources: {binary: ./va-arg-pack-len-1.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_va-arg-pack-len-1_2921:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-len-1.C'
    sources: {binary: ./va-arg-pack-len-1.exe, cflags: -std=gnu++98 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_va-arg-pack-len-1_2922:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-len-1.C'
    sources: {binary: ./va-arg-pack-len-1.exe, cflags: -std=gnu++11 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_va-arg-pack-len-1_2923:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-len-1.C'
    sources: {binary: ./va-arg-pack-len-1.exe, cflags: -std=gnu++14 -O2}
  group: GRPSERIAL
  run: {cwd: .}
test_va-arg-pack-len-2_1382:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-len-2.C'
    sources: {binary: va-arg-pack-len-2.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("called
          with more than 3")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("needs
          3 arguments, only 2 were given")[^\n]*\n?)+'}
test_va-arg-pack-len-2_1383:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-len-2.C'
    sources: {binary: va-arg-pack-len-2.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("called
          with more than 3")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("needs
          3 arguments, only 2 were given")[^\n]*\n?)+'}
test_va-arg-pack-len-2_1384:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-len-2.C'
    sources: {binary: va-arg-pack-len-2.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("called
          with more than 3")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("needs
          3 arguments, only 2 were given")[^\n]*\n?)+'}
test_va-arg-pack-len-2_2924:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-len-2.C'
    sources: {binary: va-arg-pack-len-2.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("called
          with more than 3")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("needs
          3 arguments, only 2 were given")[^\n]*\n?)+'}
test_va-arg-pack-len-2_2925:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-len-2.C'
    sources: {binary: va-arg-pack-len-2.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("called
          with more than 3")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("needs
          3 arguments, only 2 were given")[^\n]*\n?)+'}
test_va-arg-pack-len-2_2926:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg-pack-len-2.C'
    sources: {binary: va-arg-pack-len-2.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("called
          with more than 3")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("needs
          3 arguments, only 2 were given")[^\n]*\n?)+'}
test_va-arg1_1385:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg1.C'
    sources: {binary: va-arg1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operand
          type is \''A\''")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first
          argument to \''va_arg\'' not of type \''va_list\''")[^\n]*\n?)+'}
test_va-arg1_1386:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg1.C'
    sources: {binary: va-arg1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operand
          type is \''A\''")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first
          argument to \''va_arg\'' not of type \''va_list\''")[^\n]*\n?)+'}
test_va-arg1_1387:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg1.C'
    sources: {binary: va-arg1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operand
          type is \''A\''")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first
          argument to \''va_arg\'' not of type \''va_list\''")[^\n]*\n?)+'}
test_va-arg1_2927:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg1.C'
    sources: {binary: va-arg1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operand
          type is \''A\''")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first
          argument to \''va_arg\'' not of type \''va_list\''")[^\n]*\n?)+'}
test_va-arg1_2928:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg1.C'
    sources: {binary: va-arg1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operand
          type is \''A\''")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first
          argument to \''va_arg\'' not of type \''va_list\''")[^\n]*\n?)+'}
test_va-arg1_2929:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/va-arg1.C'
    sources: {binary: va-arg1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("operand
          type is \''A\''")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first
          argument to \''va_arg\'' not of type \''va_list\''")[^\n]*\n?)+'}
test_varargs1_1388:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/varargs1.C'
    sources: {binary: varargs1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_varargs1_1389:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/varargs1.C'
    sources: {binary: varargs1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_varargs1_1390:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/varargs1.C'
    sources: {binary: varargs1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_varargs1_2930:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/varargs1.C'
    sources: {binary: varargs1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_varargs1_2931:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/varargs1.C'
    sources: {binary: varargs1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_varargs1_2932:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/varargs1.C'
    sources: {binary: varargs1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_varargs2_1391:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/varargs2.C'
    sources: {binary: ./varargs2.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_varargs2_1392:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/varargs2.C'
    sources: {binary: ./varargs2.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_varargs2_1393:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/varargs2.C'
    sources: {binary: ./varargs2.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_varargs2_2933:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/varargs2.C'
    sources: {binary: ./varargs2.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_varargs2_2934:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/varargs2.C'
    sources: {binary: ./varargs2.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_varargs2_2935:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/varargs2.C'
    sources: {binary: ./varargs2.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_vector10_1397:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector10.C'
    sources: {binary: vector10.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector10_1398:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector10.C'
    sources: {binary: vector10.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector10_1399:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector10.C'
    sources: {binary: vector10.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector10_2939:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector10.C'
    sources: {binary: vector10.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector10_2940:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector10.C'
    sources: {binary: vector10.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector10_2941:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector10.C'
    sources: {binary: vector10.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector11_1400:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector11.C'
    sources: {binary: vector11.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector11_1401:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector11.C'
    sources: {binary: vector11.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector11_1402:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector11.C'
    sources: {binary: vector11.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector11_2942:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector11.C'
    sources: {binary: vector11.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector11_2943:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector11.C'
    sources: {binary: vector11.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector11_2944:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector11.C'
    sources: {binary: vector11.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector12_1403:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector12.C'
    sources: {binary: vector12.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector12_1404:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector12.C'
    sources: {binary: vector12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector12_1405:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector12.C'
    sources: {binary: vector12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector12_2945:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector12.C'
    sources: {binary: vector12.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector12_2946:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector12.C'
    sources: {binary: vector12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector12_2947:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector12.C'
    sources: {binary: vector12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector13_1406:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector13.C'
    sources: {binary: vector13.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector13_1407:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector13.C'
    sources: {binary: vector13.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector13_1408:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector13.C'
    sources: {binary: vector13.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector13_2948:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector13.C'
    sources: {binary: vector13.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector13_2949:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector13.C'
    sources: {binary: vector13.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector13_2950:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector13.C'
    sources: {binary: vector13.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector14_1409:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector14.C'
    sources: {binary: vector14.s, cflags: "-std=gnu++98 -msse\n -S"}
  group: GRPSERIAL
test_vector14_1410:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector14.C'
    sources: {binary: vector14.s, cflags: "-std=gnu++11 -msse\n -S"}
  group: GRPSERIAL
test_vector14_1411:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector14.C'
    sources: {binary: vector14.s, cflags: "-std=gnu++14 -msse\n -S"}
  group: GRPSERIAL
test_vector14_2951:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector14.C'
    sources: {binary: vector14.s, cflags: "-std=gnu++98 -msse\n -S"}
  group: GRPSERIAL
test_vector14_2952:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector14.C'
    sources: {binary: vector14.s, cflags: "-std=gnu++11 -msse\n -S"}
  group: GRPSERIAL
test_vector14_2953:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector14.C'
    sources: {binary: vector14.s, cflags: "-std=gnu++14 -msse\n -S"}
  group: GRPSERIAL
test_vector15_1412:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector15.C'
    sources: {binary: vector15.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector15_1413:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector15.C'
    sources: {binary: vector15.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector15_1414:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector15.C'
    sources: {binary: vector15.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector15_2954:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector15.C'
    sources: {binary: vector15.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector15_2955:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector15.C'
    sources: {binary: vector15.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector15_2956:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector15.C'
    sources: {binary: vector15.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector16_1415:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector16.C'
    sources: {binary: vector16.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector16_1416:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector16.C'
    sources: {binary: vector16.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector16_1417:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector16.C'
    sources: {binary: vector16.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector16_2957:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector16.C'
    sources: {binary: vector16.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector16_2958:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector16.C'
    sources: {binary: vector16.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector16_2959:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector16.C'
    sources: {binary: vector16.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector17_1418:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector17.C'
    sources: {binary: vector17.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector17_1419:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector17.C'
    sources: {binary: vector17.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector17_1420:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector17.C'
    sources: {binary: vector17.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector17_2960:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector17.C'
    sources: {binary: vector17.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector17_2961:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector17.C'
    sources: {binary: vector17.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector17_2962:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector17.C'
    sources: {binary: vector17.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector18_1421:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector18.C'
    sources: {binary: vector18.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector18_1422:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector18.C'
    sources: {binary: vector18.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector18_2963:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector18.C'
    sources: {binary: vector18.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector18_2964:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector18.C'
    sources: {binary: vector18.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector19_1423:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector19.C'
    sources: {binary: vector19.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector19_1424:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector19.C'
    sources: {binary: vector19.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector19_2965:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector19.C'
    sources: {binary: vector19.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector19_2966:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector19.C'
    sources: {binary: vector19.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector1_1394:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector1.C'
    sources: {binary: vector1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector1_1395:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector1.C'
    sources: {binary: vector1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector1_1396:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector1.C'
    sources: {binary: vector1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector1_2936:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector1.C'
    sources: {binary: vector1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector1_2937:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector1.C'
    sources: {binary: vector1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector1_2938:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector1.C'
    sources: {binary: vector1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector20_1428:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector20.C'
    sources: {binary: vector20.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector20_1429:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector20.C'
    sources: {binary: vector20.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector20_2970:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector20.C'
    sources: {binary: vector20.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector20_2971:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector20.C'
    sources: {binary: vector20.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector21_1430:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector21.C'
    sources: {binary: vector21.s, cflags: "-std=gnu++98 -O -fdump-tree-gimple\n -S"}
  group: GRPSERIAL
test_vector21_1431:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector21.C'
    sources: {binary: vector21.s, cflags: "-std=gnu++11 -O -fdump-tree-gimple\n -S"}
  group: GRPSERIAL
test_vector21_1432:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector21.C'
    sources: {binary: vector21.s, cflags: "-std=gnu++14 -O -fdump-tree-gimple\n -S"}
  group: GRPSERIAL
test_vector21_2972:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector21.C'
    sources: {binary: vector21.s, cflags: "-std=gnu++98 -O -fdump-tree-gimple\n -S"}
  group: GRPSERIAL
test_vector21_2973:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector21.C'
    sources: {binary: vector21.s, cflags: "-std=gnu++11 -O -fdump-tree-gimple\n -S"}
  group: GRPSERIAL
test_vector21_2974:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector21.C'
    sources: {binary: vector21.s, cflags: "-std=gnu++14 -O -fdump-tree-gimple\n -S"}
  group: GRPSERIAL
test_vector22_1433:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector22.C'
    sources: {binary: vector22.s, cflags: "-std=gnu++98 -O -fdump-tree-gimple\n -S"}
  group: GRPSERIAL
test_vector22_1434:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector22.C'
    sources: {binary: vector22.s, cflags: "-std=gnu++11 -O -fdump-tree-gimple\n -S"}
  group: GRPSERIAL
test_vector22_1435:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector22.C'
    sources: {binary: vector22.s, cflags: "-std=gnu++14 -O -fdump-tree-gimple\n -S"}
  group: GRPSERIAL
test_vector22_2975:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector22.C'
    sources: {binary: vector22.s, cflags: "-std=gnu++98 -O -fdump-tree-gimple\n -S"}
  group: GRPSERIAL
test_vector22_2976:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector22.C'
    sources: {binary: vector22.s, cflags: "-std=gnu++11 -O -fdump-tree-gimple\n -S"}
  group: GRPSERIAL
test_vector22_2977:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector22.C'
    sources: {binary: vector22.s, cflags: "-std=gnu++14 -O -fdump-tree-gimple\n -S"}
  group: GRPSERIAL
test_vector23_1436:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector23.C'
    sources: {binary: vector23.s, cflags: "-std=gnu++14 -Wsign-conversion\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("truncation")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inferred
          scalar type")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inferred
          scalar type \\[^\\\\n\\]*double")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inferred
          scalar type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
test_vector23_2978:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector23.C'
    sources: {binary: vector23.s, cflags: "-std=gnu++14 -Wsign-conversion\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("truncation")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inferred
          scalar type")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inferred
          scalar type \\[^\\\\n\\]*double")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("inferred
          scalar type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
test_vector24_1437:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector24.C'
    sources: {binary: vector24.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector24_1438:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector24.C'
    sources: {binary: vector24.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector24_2979:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector24.C'
    sources: {binary: vector24.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector24_2980:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector24.C'
    sources: {binary: vector24.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector25_1439:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector25.C'
    sources: {binary: vector25.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector25_1440:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector25.C'
    sources: {binary: vector25.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector25_1441:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector25.C'
    sources: {binary: vector25.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector25_2981:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector25.C'
    sources: {binary: vector25.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector25_2982:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector25.C'
    sources: {binary: vector25.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector25_2983:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector25.C'
    sources: {binary: vector25.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector26_1442:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector26.C'
    sources: {binary: vector26.s, cflags: "-std=gnu++98 -mmmx -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          linkage")[^\n]*\n?)+'}
test_vector26_1443:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector26.C'
    sources: {binary: vector26.s, cflags: "-std=gnu++11 -mmmx -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          linkage")[^\n]*\n?)+'}
test_vector26_1444:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector26.C'
    sources: {binary: vector26.s, cflags: "-std=gnu++14 -mmmx -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          linkage")[^\n]*\n?)+'}
test_vector26_2984:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector26.C'
    sources: {binary: vector26.s, cflags: "-std=gnu++98 -mmmx -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          linkage")[^\n]*\n?)+'}
test_vector26_2985:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector26.C'
    sources: {binary: vector26.s, cflags: "-std=gnu++11 -mmmx -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          linkage")[^\n]*\n?)+'}
test_vector26_2986:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector26.C'
    sources: {binary: vector26.s, cflags: "-std=gnu++14 -mmmx -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          linkage")[^\n]*\n?)+'}
test_vector27_1445:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector27.C'
    sources: {binary: vector27.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector27_1446:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector27.C'
    sources: {binary: vector27.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector27_1447:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector27.C'
    sources: {binary: vector27.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector27_2987:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector27.C'
    sources: {binary: vector27.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector27_2988:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector27.C'
    sources: {binary: vector27.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector27_2989:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector27.C'
    sources: {binary: vector27.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector28_1448:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector28.C'
    sources: {binary: vector28.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector28_1449:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector28.C'
    sources: {binary: vector28.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector28_1450:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector28.C'
    sources: {binary: vector28.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector28_2990:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector28.C'
    sources: {binary: vector28.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector28_2991:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector28.C'
    sources: {binary: vector28.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector28_2992:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector28.C'
    sources: {binary: vector28.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector29_1451:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector29.C'
    sources: {binary: vector29.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector29_1452:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector29.C'
    sources: {binary: vector29.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector29_1453:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector29.C'
    sources: {binary: vector29.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector29_2993:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector29.C'
    sources: {binary: vector29.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector29_2994:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector29.C'
    sources: {binary: vector29.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector29_2995:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector29.C'
    sources: {binary: vector29.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector2_1425:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector2.C'
    sources: {binary: vector2.s, cflags: "-std=gnu++98 -mmmx\n -S"}
  group: GRPSERIAL
test_vector2_1426:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector2.C'
    sources: {binary: vector2.s, cflags: "-std=gnu++11 -mmmx\n -S"}
  group: GRPSERIAL
test_vector2_1427:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector2.C'
    sources: {binary: vector2.s, cflags: "-std=gnu++14 -mmmx\n -S"}
  group: GRPSERIAL
test_vector2_2967:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector2.C'
    sources: {binary: vector2.s, cflags: "-std=gnu++98 -mmmx\n -S"}
  group: GRPSERIAL
test_vector2_2968:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector2.C'
    sources: {binary: vector2.s, cflags: "-std=gnu++11 -mmmx\n -S"}
  group: GRPSERIAL
test_vector2_2969:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector2.C'
    sources: {binary: vector2.s, cflags: "-std=gnu++14 -mmmx\n -S"}
  group: GRPSERIAL
test_vector30_1457:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector30.C'
    sources: {binary: ./vector30.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_vector30_1458:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector30.C'
    sources: {binary: ./vector30.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_vector30_1459:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector30.C'
    sources: {binary: ./vector30.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_vector30_2999:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector30.C'
    sources: {binary: ./vector30.exe, cflags: -std=c++98  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_vector30_3000:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector30.C'
    sources: {binary: ./vector30.exe, cflags: -std=c++11  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_vector30_3001:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector30.C'
    sources: {binary: ./vector30.exe, cflags: -std=c++14  -pedantic-errors -Wno-long-long}
  group: GRPSERIAL
  run: {cwd: .}
test_vector31_1460:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector31.C'
    sources: {binary: vector31.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector31_1461:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector31.C'
    sources: {binary: vector31.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector31_1462:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector31.C'
    sources: {binary: vector31.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector31_3002:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector31.C'
    sources: {binary: vector31.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector31_3003:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector31.C'
    sources: {binary: vector31.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector31_3004:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector31.C'
    sources: {binary: vector31.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector32_1463:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector32.C'
    sources: {binary: vector32.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector32_1464:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector32.C'
    sources: {binary: vector32.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector32_1465:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector32.C'
    sources: {binary: vector32.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector32_3005:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector32.C'
    sources: {binary: vector32.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector32_3006:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector32.C'
    sources: {binary: vector32.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector32_3007:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector32.C'
    sources: {binary: vector32.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector32a_1466:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector32a.C'
    sources: {binary: vector32a.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector32a_1467:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector32a.C'
    sources: {binary: vector32a.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector32a_1468:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector32a.C'
    sources: {binary: vector32a.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector32a_3008:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector32a.C'
    sources: {binary: vector32a.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector32a_3009:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector32a.C'
    sources: {binary: vector32a.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector32a_3010:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector32a.C'
    sources: {binary: vector32a.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector3_1454:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector3.C'
    sources: {binary: vector3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vector3_1455:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector3.C'
    sources: {binary: vector3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vector3_1456:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector3.C'
    sources: {binary: vector3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vector3_2996:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector3.C'
    sources: {binary: vector3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vector3_2997:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector3.C'
    sources: {binary: vector3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vector3_2998:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector3.C'
    sources: {binary: vector3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vector4_1469:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector4.C'
    sources: {binary: vector4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vector4_1470:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector4.C'
    sources: {binary: vector4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vector4_1471:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector4.C'
    sources: {binary: vector4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vector4_3011:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector4.C'
    sources: {binary: vector4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vector4_3012:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector4.C'
    sources: {binary: vector4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vector4_3013:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector4.C'
    sources: {binary: vector4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vector5_1472:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector5.C'
    sources: {binary: vector5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector5_1473:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector5.C'
    sources: {binary: vector5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector5_1474:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector5.C'
    sources: {binary: vector5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector5_3014:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector5.C'
    sources: {binary: vector5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector5_3015:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector5.C'
    sources: {binary: vector5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector5_3016:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector5.C'
    sources: {binary: vector5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector6_1475:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector6.C'
    sources: {binary: vector6.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector6_1476:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector6.C'
    sources: {binary: vector6.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector6_1477:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector6.C'
    sources: {binary: vector6.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector6_3017:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector6.C'
    sources: {binary: vector6.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector6_3018:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector6.C'
    sources: {binary: vector6.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector6_3019:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector6.C'
    sources: {binary: vector6.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector7_1478:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector7.C'
    sources: {binary: vector7.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vector7_1479:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector7.C'
    sources: {binary: vector7.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vector7_1480:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector7.C'
    sources: {binary: vector7.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vector7_3020:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector7.C'
    sources: {binary: vector7.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vector7_3021:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector7.C'
    sources: {binary: vector7.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vector7_3022:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector7.C'
    sources: {binary: vector7.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vector8_1481:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector8.C'
    sources: {binary: vector8.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector8_1482:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector8.C'
    sources: {binary: vector8.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector8_1483:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector8.C'
    sources: {binary: vector8.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector8_3023:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector8.C'
    sources: {binary: vector8.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector8_3024:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector8.C'
    sources: {binary: vector8.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector8_3025:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector8.C'
    sources: {binary: vector8.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_vector9_1484:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector9.C'
    sources: {binary: vector9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector9_1485:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector9.C'
    sources: {binary: vector9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector9_1486:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector9.C'
    sources: {binary: vector9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector9_3026:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector9.C'
    sources: {binary: vector9.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector9_3027:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector9.C'
    sources: {binary: vector9.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vector9_3028:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vector9.C'
    sources: {binary: vector9.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_vla10_1490:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla10.C'
    sources: {binary: vla10.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vla10_1491:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla10.C'
    sources: {binary: vla10.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vla10_1492:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla10.C'
    sources: {binary: vla10.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vla10_3032:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla10.C'
    sources: {binary: vla10.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vla10_3033:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla10.C'
    sources: {binary: vla10.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vla10_3034:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla10.C'
    sources: {binary: vla10.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vla11_1493:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla11.C'
    sources: {binary: vla11.s, cflags: "-std=gnu++11 -Wno-vla\n -S"}
  group: GRPSERIAL
test_vla11_1494:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla11.C'
    sources: {binary: vla11.s, cflags: "-std=gnu++14 -Wno-vla\n -S"}
  group: GRPSERIAL
test_vla11_3035:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla11.C'
    sources: {binary: vla11.s, cflags: "-std=gnu++11 -Wno-vla\n -S"}
  group: GRPSERIAL
test_vla11_3036:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla11.C'
    sources: {binary: vla11.s, cflags: "-std=gnu++14 -Wno-vla\n -S"}
  group: GRPSERIAL
test_vla12_1495:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla12.C'
    sources: {binary: vla12.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vla12_1496:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla12.C'
    sources: {binary: vla12.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vla12_1497:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla12.C'
    sources: {binary: vla12.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vla12_3037:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla12.C'
    sources: {binary: vla12.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vla12_3038:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla12.C'
    sources: {binary: vla12.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vla12_3039:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla12.C'
    sources: {binary: vla12.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vla13_1498:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla13.C'
    sources: {binary: vla13.s, cflags: "-std=gnu++98 -Wunused-value\n -S"}
  group: GRPSERIAL
test_vla13_1499:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla13.C'
    sources: {binary: vla13.s, cflags: "-std=gnu++11 -Wunused-value\n -S"}
  group: GRPSERIAL
test_vla13_1500:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla13.C'
    sources: {binary: vla13.s, cflags: "-std=gnu++14 -Wunused-value\n -S"}
  group: GRPSERIAL
test_vla13_3040:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla13.C'
    sources: {binary: vla13.s, cflags: "-std=gnu++98 -Wunused-value\n -S"}
  group: GRPSERIAL
test_vla13_3041:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla13.C'
    sources: {binary: vla13.s, cflags: "-std=gnu++11 -Wunused-value\n -S"}
  group: GRPSERIAL
test_vla13_3042:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla13.C'
    sources: {binary: vla13.s, cflags: "-std=gnu++14 -Wunused-value\n -S"}
  group: GRPSERIAL
test_vla14_1501:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla14.C'
    sources: {binary: vla14.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump
          to case label")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump
          to label")[^\n]*\n?)+'}
test_vla14_1502:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla14.C'
    sources: {binary: vla14.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump
          to case label")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump
          to label")[^\n]*\n?)+'}
test_vla14_1503:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla14.C'
    sources: {binary: vla14.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump
          to case label")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump
          to label")[^\n]*\n?)+'}
test_vla14_3043:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla14.C'
    sources: {binary: vla14.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump
          to case label")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump
          to label")[^\n]*\n?)+'}
test_vla14_3044:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla14.C'
    sources: {binary: vla14.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump
          to case label")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump
          to label")[^\n]*\n?)+'}
test_vla14_3045:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla14.C'
    sources: {binary: vla14.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump
          to case label")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump
          to label")[^\n]*\n?)+'}
test_vla15_1504:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla15.C'
    sources: {binary: ./vla15.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_vla15_1505:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla15.C'
    sources: {binary: ./vla15.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_vla15_1506:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla15.C'
    sources: {binary: ./vla15.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_vla15_3046:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla15.C'
    sources: {binary: ./vla15.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_vla15_3047:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla15.C'
    sources: {binary: ./vla15.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_vla15_3048:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla15.C'
    sources: {binary: ./vla15.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_vla16_1507:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla16.C'
    sources: {binary: vla16.s, cflags: "-std=gnu++98 -Wno-vla\n -S"}
  group: GRPSERIAL
test_vla16_1508:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla16.C'
    sources: {binary: vla16.s, cflags: "-std=gnu++11 -Wno-vla\n -S"}
  group: GRPSERIAL
test_vla16_1509:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla16.C'
    sources: {binary: vla16.s, cflags: "-std=gnu++14 -Wno-vla\n -S"}
  group: GRPSERIAL
test_vla16_3049:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla16.C'
    sources: {binary: vla16.s, cflags: "-std=gnu++98 -Wno-vla\n -S"}
  group: GRPSERIAL
test_vla16_3050:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla16.C'
    sources: {binary: vla16.s, cflags: "-std=gnu++11 -Wno-vla\n -S"}
  group: GRPSERIAL
test_vla16_3051:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla16.C'
    sources: {binary: vla16.s, cflags: "-std=gnu++14 -Wno-vla\n -S"}
  group: GRPSERIAL
test_vla17_1510:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla17.C'
    sources: {binary: ./vla17.exe, cflags: -std=gnu++98 -Wno-vla}
  group: GRPSERIAL
  run: {cwd: .}
test_vla17_1511:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla17.C'
    sources: {binary: ./vla17.exe, cflags: -std=gnu++11 -Wno-vla}
  group: GRPSERIAL
  run: {cwd: .}
test_vla17_1512:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla17.C'
    sources: {binary: ./vla17.exe, cflags: -std=gnu++14 -Wno-vla}
  group: GRPSERIAL
  run: {cwd: .}
test_vla17_3052:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla17.C'
    sources: {binary: ./vla17.exe, cflags: -std=gnu++98 -Wno-vla}
  group: GRPSERIAL
  run: {cwd: .}
test_vla17_3053:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla17.C'
    sources: {binary: ./vla17.exe, cflags: -std=gnu++11 -Wno-vla}
  group: GRPSERIAL
  run: {cwd: .}
test_vla17_3054:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla17.C'
    sources: {binary: ./vla17.exe, cflags: -std=gnu++14 -Wno-vla}
  group: GRPSERIAL
  run: {cwd: .}
test_vla1_1487:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla1.C'
    sources: {binary: vla1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'}
test_vla1_1488:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla1.C'
    sources: {binary: vla1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'}
test_vla1_1489:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla1.C'
    sources: {binary: vla1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'}
test_vla1_3029:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla1.C'
    sources: {binary: vla1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'}
test_vla1_3030:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla1.C'
    sources: {binary: vla1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'}
test_vla1_3031:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla1.C'
    sources: {binary: vla1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'}
test_vla2_1513:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla2.C'
    sources: {binary: vla2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matching function")[^\n]*\n?)+'}
test_vla2_1514:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla2.C'
    sources: {binary: vla2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matching function")[^\n]*\n?)+'}
test_vla2_1515:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla2.C'
    sources: {binary: vla2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matching function")[^\n]*\n?)+'}
test_vla2_3055:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla2.C'
    sources: {binary: vla2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matching function")[^\n]*\n?)+'}
test_vla2_3056:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla2.C'
    sources: {binary: vla2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matching function")[^\n]*\n?)+'}
test_vla2_3057:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla2.C'
    sources: {binary: vla2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          matching function")[^\n]*\n?)+'}
test_vla3_1516:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla3.C'
    sources: {binary: vla3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vla3_1517:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla3.C'
    sources: {binary: vla3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vla3_1518:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla3.C'
    sources: {binary: vla3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vla3_3058:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla3.C'
    sources: {binary: vla3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vla3_3059:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla3.C'
    sources: {binary: vla3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vla3_3060:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla3.C'
    sources: {binary: vla3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vla4_1519:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla4.C'
    sources: {binary: vla4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable
          size")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable
          size")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int
          \\\\(\\\\*\\\\)\\\\\\[i\\\\\\]")[^\n]*\n?)+'}
test_vla4_1520:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla4.C'
    sources: {binary: vla4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable
          size")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable
          size")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int
          \\\\(\\\\*\\\\)\\\\\\[i\\\\\\]")[^\n]*\n?)+'}
test_vla4_1521:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla4.C'
    sources: {binary: vla4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable
          size")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable
          size")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int
          \\\\(\\\\*\\\\)\\\\\\[i\\\\\\]")[^\n]*\n?)+'}
test_vla4_3061:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla4.C'
    sources: {binary: vla4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable
          size")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable
          size")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int
          \\\\(\\\\*\\\\)\\\\\\[i\\\\\\]")[^\n]*\n?)+'}
test_vla4_3062:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla4.C'
    sources: {binary: vla4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable
          size")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable
          size")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int
          \\\\(\\\\*\\\\)\\\\\\[i\\\\\\]")[^\n]*\n?)+'}
test_vla4_3063:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla4.C'
    sources: {binary: vla4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable
          size")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable
          size")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("int
          \\\\(\\\\*\\\\)\\\\\\[i\\\\\\]")[^\n]*\n?)+'}
test_vla5_1522:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla5.C'
    sources: {binary: vla5.s, cflags: "-std=gnu++98 -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_vla5_1523:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla5.C'
    sources: {binary: vla5.s, cflags: "-std=gnu++11 -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_vla5_1524:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla5.C'
    sources: {binary: vla5.s, cflags: "-std=gnu++14 -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_vla5_3064:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla5.C'
    sources: {binary: vla5.s, cflags: "-std=gnu++98 -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_vla5_3065:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla5.C'
    sources: {binary: vla5.s, cflags: "-std=gnu++11 -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_vla5_3066:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla5.C'
    sources: {binary: vla5.s, cflags: "-std=gnu++14 -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_vla6_1525:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla6.C'
    sources: {binary: vla6.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vla6_1526:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla6.C'
    sources: {binary: vla6.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vla6_1527:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla6.C'
    sources: {binary: vla6.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vla6_3067:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla6.C'
    sources: {binary: vla6.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vla6_3068:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla6.C'
    sources: {binary: vla6.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vla6_3069:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla6.C'
    sources: {binary: vla6.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vla7_1528:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla7.C'
    sources: {binary: vla7.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vla7_1529:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla7.C'
    sources: {binary: vla7.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vla7_1530:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla7.C'
    sources: {binary: vla7.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vla7_3070:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla7.C'
    sources: {binary: vla7.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_vla7_3071:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla7.C'
    sources: {binary: vla7.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_vla7_3072:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla7.C'
    sources: {binary: vla7.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_vla8_1531:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla8.C'
    sources: {binary: vla8.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_vla8_1532:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla8.C'
    sources: {binary: vla8.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_vla8_1533:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla8.C'
    sources: {binary: vla8.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_vla8_3073:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla8.C'
    sources: {binary: vla8.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_vla8_3074:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla8.C'
    sources: {binary: vla8.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_vla8_3075:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla8.C'
    sources: {binary: vla8.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_vla9_1534:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla9.C'
    sources: {binary: ./vla9.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_vla9_1535:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla9.C'
    sources: {binary: ./vla9.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_vla9_1536:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla9.C'
    sources: {binary: ./vla9.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_vla9_3076:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla9.C'
    sources: {binary: ./vla9.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
test_vla9_3077:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla9.C'
    sources: {binary: ./vla9.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
test_vla9_3078:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vla9.C'
    sources: {binary: ./vla9.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
test_vlm1_1537:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vlm1.C'
    sources: {binary: vlm1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array|template")[^\n]*\n?)+'}
test_vlm1_1538:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vlm1.C'
    sources: {binary: vlm1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array|template")[^\n]*\n?)+'}
test_vlm1_1539:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vlm1.C'
    sources: {binary: vlm1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array|template")[^\n]*\n?)+'}
test_vlm1_3079:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vlm1.C'
    sources: {binary: vlm1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array|template")[^\n]*\n?)+'}
test_vlm1_3080:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vlm1.C'
    sources: {binary: vlm1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array|template")[^\n]*\n?)+'}
test_vlm1_3081:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vlm1.C'
    sources: {binary: vlm1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array|template")[^\n]*\n?)+'}
test_vlm2_1540:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vlm2.C'
    sources: {binary: vlm2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variably
          modified")[^\n]*\n?)+'}
test_vlm2_1541:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vlm2.C'
    sources: {binary: vlm2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variably
          modified")[^\n]*\n?)+'}
test_vlm2_1542:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vlm2.C'
    sources: {binary: vlm2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variably
          modified")[^\n]*\n?)+'}
test_vlm2_3082:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vlm2.C'
    sources: {binary: vlm2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variably
          modified")[^\n]*\n?)+'}
test_vlm2_3083:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vlm2.C'
    sources: {binary: vlm2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variably
          modified")[^\n]*\n?)+'}
test_vlm2_3084:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/ext/vlm2.C'
    sources: {binary: vlm2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variably
          modified")[^\n]*\n?)+'}
