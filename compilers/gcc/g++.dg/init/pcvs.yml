test_addr-const1_1:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/addr-const1.C'
    sources:
      binary: ./addr-const1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_addr-const1_2:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/addr-const1.C'
    sources:
      binary: ./addr-const1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_addr-const1_3:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/addr-const1.C'
    sources:
      binary: ./addr-const1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_addr-const1_903:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/addr-const1.C'
    sources:
      binary: ./addr-const1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_addr-const1_904:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/addr-const1.C'
    sources:
      binary: ./addr-const1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_addr-const1_905:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/addr-const1.C'
    sources:
      binary: ./addr-const1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_aggr10_7:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr10.C'
    sources:
      binary: aggr10.s
  group: GRPSERIAL
test_aggr10_8:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr10.C'
    sources:
      binary: aggr10.s
  group: GRPSERIAL
test_aggr10_9:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr10.C'
    sources:
      binary: aggr10.s
  group: GRPSERIAL
test_aggr10_909:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr10.C'
    sources:
      binary: aggr10.s
  group: GRPSERIAL
test_aggr10_910:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr10.C'
    sources:
      binary: aggr10.s
  group: GRPSERIAL
test_aggr10_911:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr10.C'
    sources:
      binary: aggr10.s
  group: GRPSERIAL
test_aggr11_10:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr11.C'
    sources:
      binary: aggr11.s
  group: GRPSERIAL
test_aggr11_11:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr11.C'
    sources:
      binary: aggr11.s
  group: GRPSERIAL
test_aggr11_12:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr11.C'
    sources:
      binary: aggr11.s
  group: GRPSERIAL
test_aggr11_912:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr11.C'
    sources:
      binary: aggr11.s
  group: GRPSERIAL
test_aggr11_913:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr11.C'
    sources:
      binary: aggr11.s
  group: GRPSERIAL
test_aggr11_914:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr11.C'
    sources:
      binary: aggr11.s
  group: GRPSERIAL
test_aggr12_13:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr12.C'
    sources:
      binary: aggr12.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
test_aggr12_14:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr12.C'
    sources:
      binary: aggr12.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
test_aggr12_15:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr12.C'
    sources:
      binary: aggr12.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
test_aggr12_915:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr12.C'
    sources:
      binary: aggr12.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
test_aggr12_916:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr12.C'
    sources:
      binary: aggr12.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
test_aggr12_917:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr12.C'
    sources:
      binary: aggr12.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference")[^\n]*\n?)+'
test_aggr13_16:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr13.C'
    sources:
      binary: ./aggr13.exe
  group: GRPSERIAL
  run:
    cwd: .
test_aggr13_17:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr13.C'
    sources:
      binary: ./aggr13.exe
  group: GRPSERIAL
  run:
    cwd: .
test_aggr13_18:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr13.C'
    sources:
      binary: ./aggr13.exe
  group: GRPSERIAL
  run:
    cwd: .
test_aggr13_918:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr13.C'
    sources:
      binary: ./aggr13.exe
  group: GRPSERIAL
  run:
    cwd: .
test_aggr13_919:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr13.C'
    sources:
      binary: ./aggr13.exe
  group: GRPSERIAL
  run:
    cwd: .
test_aggr13_920:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr13.C'
    sources:
      binary: ./aggr13.exe
  group: GRPSERIAL
  run:
    cwd: .
test_aggr1_4:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr1.C'
    sources:
      binary: aggr1.s
  group: GRPSERIAL
test_aggr1_5:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr1.C'
    sources:
      binary: aggr1.s
  group: GRPSERIAL
test_aggr1_6:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr1.C'
    sources:
      binary: aggr1.s
  group: GRPSERIAL
test_aggr1_906:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr1.C'
    sources:
      binary: aggr1.s
  group: GRPSERIAL
test_aggr1_907:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr1.C'
    sources:
      binary: aggr1.s
  group: GRPSERIAL
test_aggr1_908:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr1.C'
    sources:
      binary: aggr1.s
  group: GRPSERIAL
test_aggr2_19:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr2.C'
    sources:
      binary: ./aggr2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_aggr2_20:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr2.C'
    sources:
      binary: ./aggr2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_aggr2_21:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr2.C'
    sources:
      binary: ./aggr2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_aggr2_921:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr2.C'
    sources:
      binary: ./aggr2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_aggr2_922:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr2.C'
    sources:
      binary: ./aggr2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_aggr2_923:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr2.C'
    sources:
      binary: ./aggr2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_aggr3_22:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr3.C'
    sources:
      binary: aggr3.s
  group: GRPSERIAL
test_aggr3_23:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr3.C'
    sources:
      binary: aggr3.s
  group: GRPSERIAL
test_aggr3_24:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr3.C'
    sources:
      binary: aggr3.s
  group: GRPSERIAL
test_aggr3_924:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr3.C'
    sources:
      binary: aggr3.s
  group: GRPSERIAL
test_aggr3_925:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr3.C'
    sources:
      binary: aggr3.s
  group: GRPSERIAL
test_aggr3_926:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr3.C'
    sources:
      binary: aggr3.s
  group: GRPSERIAL
test_aggr4_25:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr4.C'
    sources:
      binary: aggr4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_aggr4_26:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr4.C'
    sources:
      binary: aggr4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_aggr4_27:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr4.C'
    sources:
      binary: aggr4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_aggr4_927:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr4.C'
    sources:
      binary: aggr4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_aggr4_928:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr4.C'
    sources:
      binary: aggr4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_aggr4_929:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr4.C'
    sources:
      binary: aggr4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot convert")[^\n]*\n?)+'
test_aggr5_28:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr5.C'
    sources:
      binary: aggr5.s
  group: GRPSERIAL
test_aggr5_29:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr5.C'
    sources:
      binary: aggr5.s
  group: GRPSERIAL
test_aggr5_30:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr5.C'
    sources:
      binary: aggr5.s
  group: GRPSERIAL
test_aggr5_930:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr5.C'
    sources:
      binary: aggr5.s
  group: GRPSERIAL
test_aggr5_931:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr5.C'
    sources:
      binary: aggr5.s
  group: GRPSERIAL
test_aggr5_932:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr5.C'
    sources:
      binary: aggr5.s
  group: GRPSERIAL
test_aggr6_31:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr6.C'
    sources:
      binary: aggr6.s
  group: GRPSERIAL
test_aggr6_32:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr6.C'
    sources:
      binary: aggr6.s
  group: GRPSERIAL
test_aggr6_33:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr6.C'
    sources:
      binary: aggr6.s
  group: GRPSERIAL
test_aggr6_933:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr6.C'
    sources:
      binary: aggr6.s
  group: GRPSERIAL
test_aggr6_934:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr6.C'
    sources:
      binary: aggr6.s
  group: GRPSERIAL
test_aggr6_935:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr6.C'
    sources:
      binary: aggr6.s
  group: GRPSERIAL
test_aggr7_34:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr7.C'
    sources:
      binary: aggr7.s
  group: GRPSERIAL
test_aggr7_35:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr7.C'
    sources:
      binary: aggr7.s
  group: GRPSERIAL
test_aggr7_36:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr7.C'
    sources:
      binary: aggr7.s
  group: GRPSERIAL
test_aggr7_936:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr7.C'
    sources:
      binary: aggr7.s
  group: GRPSERIAL
test_aggr7_937:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr7.C'
    sources:
      binary: aggr7.s
  group: GRPSERIAL
test_aggr7_938:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr7.C'
    sources:
      binary: aggr7.s
  group: GRPSERIAL
test_aggr8_37:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr8.C'
    sources:
      binary: aggr8.s
  group: GRPSERIAL
test_aggr8_38:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr8.C'
    sources:
      binary: aggr8.s
  group: GRPSERIAL
test_aggr8_39:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr8.C'
    sources:
      binary: aggr8.s
  group: GRPSERIAL
test_aggr8_939:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr8.C'
    sources:
      binary: aggr8.s
  group: GRPSERIAL
test_aggr8_940:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr8.C'
    sources:
      binary: aggr8.s
  group: GRPSERIAL
test_aggr8_941:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr8.C'
    sources:
      binary: aggr8.s
  group: GRPSERIAL
test_aggr9_40:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr9.C'
    sources:
      binary: aggr9.s
  group: GRPSERIAL
test_aggr9_41:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr9.C'
    sources:
      binary: aggr9.s
  group: GRPSERIAL
test_aggr9_42:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr9.C'
    sources:
      binary: aggr9.s
  group: GRPSERIAL
test_aggr9_942:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr9.C'
    sources:
      binary: aggr9.s
  group: GRPSERIAL
test_aggr9_943:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr9.C'
    sources:
      binary: aggr9.s
  group: GRPSERIAL
test_aggr9_944:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/aggr9.C'
    sources:
      binary: aggr9.s
  group: GRPSERIAL
test_array0_43:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array0.C'
    sources:
      binary: array0.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_array0_44:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array0.C'
    sources:
      binary: array0.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_array0_45:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array0.C'
    sources:
      binary: array0.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_array0_945:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array0.C'
    sources:
      binary: array0.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_array0_946:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array0.C'
    sources:
      binary: array0.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_array0_947:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array0.C'
    sources:
      binary: array0.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_array10_49:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array10.C'
    sources:
      binary: array10.s
  group: GRPSERIAL
test_array10_50:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array10.C'
    sources:
      binary: array10.s
  group: GRPSERIAL
test_array10_51:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array10.C'
    sources:
      binary: array10.s
  group: GRPSERIAL
test_array10_951:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array10.C'
    sources:
      binary: array10.s
  group: GRPSERIAL
test_array10_952:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array10.C'
    sources:
      binary: array10.s
  group: GRPSERIAL
test_array10_953:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array10.C'
    sources:
      binary: array10.s
  group: GRPSERIAL
test_array11_52:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array11.C'
    sources:
      binary: array11.s
  group: GRPSERIAL
test_array11_53:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array11.C'
    sources:
      binary: array11.s
  group: GRPSERIAL
test_array11_54:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array11.C'
    sources:
      binary: array11.s
  group: GRPSERIAL
test_array11_954:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array11.C'
    sources:
      binary: array11.s
  group: GRPSERIAL
test_array11_955:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array11.C'
    sources:
      binary: array11.s
  group: GRPSERIAL
test_array11_956:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array11.C'
    sources:
      binary: array11.s
  group: GRPSERIAL
test_array12_55:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array12.C'
    sources:
      binary: ./array12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array12_56:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array12.C'
    sources:
      binary: ./array12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array12_57:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array12.C'
    sources:
      binary: ./array12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array12_957:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array12.C'
    sources:
      binary: ./array12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array12_958:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array12.C'
    sources:
      binary: ./array12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array12_959:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array12.C'
    sources:
      binary: ./array12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array13_58:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array13.C'
    sources:
      binary: array13.s
  group: GRPSERIAL
test_array13_59:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array13.C'
    sources:
      binary: array13.s
  group: GRPSERIAL
test_array13_60:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array13.C'
    sources:
      binary: array13.s
  group: GRPSERIAL
test_array13_960:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array13.C'
    sources:
      binary: array13.s
  group: GRPSERIAL
test_array13_961:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array13.C'
    sources:
      binary: array13.s
  group: GRPSERIAL
test_array13_962:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array13.C'
    sources:
      binary: array13.s
  group: GRPSERIAL
test_array14_61:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array14.C'
    sources:
      binary: ./array14.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array14_62:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array14.C'
    sources:
      binary: ./array14.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array14_63:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array14.C'
    sources:
      binary: ./array14.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array14_963:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array14.C'
    sources:
      binary: ./array14.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array14_964:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array14.C'
    sources:
      binary: ./array14.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array14_965:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array14.C'
    sources:
      binary: ./array14.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array15_64:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array15.C'
    sources:
      binary: ./array15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array15_65:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array15.C'
    sources:
      binary: ./array15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array15_66:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array15.C'
    sources:
      binary: ./array15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array15_966:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array15.C'
    sources:
      binary: ./array15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array15_967:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array15.C'
    sources:
      binary: ./array15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array15_968:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array15.C'
    sources:
      binary: ./array15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array16_67:
  build:
    cflags: -std=gnu++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array16.C'
    sources:
      binary: ./array16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array16_68:
  build:
    cflags: -std=gnu++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array16.C'
    sources:
      binary: ./array16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array16_69:
  build:
    cflags: -std=gnu++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array16.C'
    sources:
      binary: ./array16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array16_969:
  build:
    cflags: -std=gnu++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array16.C'
    sources:
      binary: ./array16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array16_970:
  build:
    cflags: -std=gnu++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array16.C'
    sources:
      binary: ./array16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array16_971:
  build:
    cflags: -std=gnu++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array16.C'
    sources:
      binary: ./array16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array17_70:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array17.C'
    sources:
      binary: array17.s
  group: GRPSERIAL
test_array17_71:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array17.C'
    sources:
      binary: array17.s
  group: GRPSERIAL
test_array17_72:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array17.C'
    sources:
      binary: array17.s
  group: GRPSERIAL
test_array17_972:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array17.C'
    sources:
      binary: array17.s
  group: GRPSERIAL
test_array17_973:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array17.C'
    sources:
      binary: array17.s
  group: GRPSERIAL
test_array17_974:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array17.C'
    sources:
      binary: array17.s
  group: GRPSERIAL
test_array18_73:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array18.C'
    sources:
      binary: ./array18.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array18_74:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array18.C'
    sources:
      binary: ./array18.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array18_75:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array18.C'
    sources:
      binary: ./array18.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array18_975:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array18.C'
    sources:
      binary: ./array18.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array18_976:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array18.C'
    sources:
      binary: ./array18.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array18_977:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array18.C'
    sources:
      binary: ./array18.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array19_76:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array19.C'
    sources:
      binary: array19.s
  group: GRPSERIAL
test_array19_77:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array19.C'
    sources:
      binary: array19.s
  group: GRPSERIAL
test_array19_78:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array19.C'
    sources:
      binary: array19.s
  group: GRPSERIAL
test_array19_978:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array19.C'
    sources:
      binary: array19.s
  group: GRPSERIAL
test_array19_979:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array19.C'
    sources:
      binary: array19.s
  group: GRPSERIAL
test_array19_980:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array19.C'
    sources:
      binary: array19.s
  group: GRPSERIAL
test_array1_46:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array1.C'
    sources:
      binary: ./array1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array1_47:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array1.C'
    sources:
      binary: ./array1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array1_48:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array1.C'
    sources:
      binary: ./array1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array1_948:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array1.C'
    sources:
      binary: ./array1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array1_949:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array1.C'
    sources:
      binary: ./array1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array1_950:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array1.C'
    sources:
      binary: ./array1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array20_82:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array20.C'
    sources:
      binary: array20.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_array20_83:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array20.C'
    sources:
      binary: array20.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_array20_84:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array20.C'
    sources:
      binary: array20.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_array20_984:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array20.C'
    sources:
      binary: array20.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_array20_985:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array20.C'
    sources:
      binary: array20.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_array20_986:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array20.C'
    sources:
      binary: array20.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_array21_85:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array21.C'
    sources:
      binary: array21.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only|operand")[^\n]*\n?)+'
test_array21_86:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array21.C'
    sources:
      binary: array21.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only|operand")[^\n]*\n?)+'
test_array21_87:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array21.C'
    sources:
      binary: array21.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only|operand")[^\n]*\n?)+'
test_array21_987:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array21.C'
    sources:
      binary: array21.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only|operand")[^\n]*\n?)+'
test_array21_988:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array21.C'
    sources:
      binary: array21.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only|operand")[^\n]*\n?)+'
test_array21_989:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array21.C'
    sources:
      binary: array21.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("read-only|operand")[^\n]*\n?)+'
test_array22_88:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array22.C'
    sources:
      binary: array22.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size")[^\n]*\n?)+'
test_array22_89:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array22.C'
    sources:
      binary: array22.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size")[^\n]*\n?)+'
test_array22_90:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array22.C'
    sources:
      binary: array22.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size")[^\n]*\n?)+'
test_array22_990:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array22.C'
    sources:
      binary: array22.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size")[^\n]*\n?)+'
test_array22_991:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array22.C'
    sources:
      binary: array22.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size")[^\n]*\n?)+'
test_array22_992:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array22.C'
    sources:
      binary: array22.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size")[^\n]*\n?)+'
test_array23_91:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array23.C'
    sources:
      binary: array23.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:array size missing")[^\n]*\n?)+'
test_array23_92:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array23.C'
    sources:
      binary: array23.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:array size missing")[^\n]*\n?)+'
test_array23_93:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array23.C'
    sources:
      binary: array23.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:array size missing")[^\n]*\n?)+'
test_array23_993:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array23.C'
    sources:
      binary: array23.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:array size missing")[^\n]*\n?)+'
test_array23_994:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array23.C'
    sources:
      binary: array23.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:array size missing")[^\n]*\n?)+'
test_array23_995:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array23.C'
    sources:
      binary: array23.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:array size missing")[^\n]*\n?)+'
test_array24_94:
  build:
    cflags: "-std=gnu++98 -Wno-vla\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array24.C'
    sources:
      binary: array24.s
  group: GRPSERIAL
test_array24_95:
  build:
    cflags: "-std=gnu++11 -Wno-vla\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array24.C'
    sources:
      binary: array24.s
  group: GRPSERIAL
test_array24_96:
  build:
    cflags: "-std=gnu++14 -Wno-vla\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array24.C'
    sources:
      binary: array24.s
  group: GRPSERIAL
test_array24_996:
  build:
    cflags: "-std=gnu++98 -Wno-vla\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array24.C'
    sources:
      binary: array24.s
  group: GRPSERIAL
test_array24_997:
  build:
    cflags: "-std=gnu++11 -Wno-vla\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array24.C'
    sources:
      binary: array24.s
  group: GRPSERIAL
test_array24_998:
  build:
    cflags: "-std=gnu++14 -Wno-vla\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array24.C'
    sources:
      binary: array24.s
  group: GRPSERIAL
test_array25_1000:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array25.C'
    sources:
      binary: ./array25.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array25_1001:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array25.C'
    sources:
      binary: ./array25.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array25_97:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array25.C'
    sources:
      binary: ./array25.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array25_98:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array25.C'
    sources:
      binary: ./array25.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array25_99:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array25.C'
    sources:
      binary: ./array25.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array25_999:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array25.C'
    sources:
      binary: ./array25.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array26_100:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array26.C'
    sources:
      binary: array26.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_array26_1002:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array26.C'
    sources:
      binary: array26.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_array26_1003:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array26.C'
    sources:
      binary: array26.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_array26_1004:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array26.C'
    sources:
      binary: array26.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_array26_101:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array26.C'
    sources:
      binary: array26.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_array26_102:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array26.C'
    sources:
      binary: array26.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_array27_1005:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array27.C'
    sources:
      binary: array27.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_array27_1006:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array27.C'
    sources:
      binary: array27.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_array27_1007:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array27.C'
    sources:
      binary: array27.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_array27_103:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array27.C'
    sources:
      binary: array27.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_array27_104:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array27.C'
    sources:
      binary: array27.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_array27_105:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array27.C'
    sources:
      binary: array27.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_array28_1008:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array28.C'
    sources:
      binary: array28.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'
test_array28_1009:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array28.C'
    sources:
      binary: array28.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'
test_array28_1010:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array28.C'
    sources:
      binary: array28.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'
test_array28_106:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array28.C'
    sources:
      binary: array28.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'
test_array28_107:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array28.C'
    sources:
      binary: array28.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'
test_array28_108:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array28.C'
    sources:
      binary: array28.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array")[^\n]*\n?)+'
test_array2_79:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array2.C'
    sources:
      binary: array2.s
  group: GRPSERIAL
test_array2_80:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array2.C'
    sources:
      binary: array2.s
  group: GRPSERIAL
test_array2_81:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array2.C'
    sources:
      binary: array2.s
  group: GRPSERIAL
test_array2_981:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array2.C'
    sources:
      binary: array2.s
  group: GRPSERIAL
test_array2_982:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array2.C'
    sources:
      binary: array2.s
  group: GRPSERIAL
test_array2_983:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array2.C'
    sources:
      binary: array2.s
  group: GRPSERIAL
test_array30_1014:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array30.C'
    sources:
      binary: array30.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_array30_1015:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array30.C'
    sources:
      binary: array30.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_array30_1016:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array30.C'
    sources:
      binary: array30.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_array30_112:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array30.C'
    sources:
      binary: array30.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_array30_113:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array30.C'
    sources:
      binary: array30.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_array30_114:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array30.C'
    sources:
      binary: array30.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many")[^\n]*\n?)+'
test_array31_1017:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array31.C'
    sources:
      binary: array31.s
  group: GRPSERIAL
test_array31_1018:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array31.C'
    sources:
      binary: array31.s
  group: GRPSERIAL
test_array31_1019:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array31.C'
    sources:
      binary: array31.s
  group: GRPSERIAL
test_array31_115:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array31.C'
    sources:
      binary: array31.s
  group: GRPSERIAL
test_array31_116:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array31.C'
    sources:
      binary: array31.s
  group: GRPSERIAL
test_array31_117:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array31.C'
    sources:
      binary: array31.s
  group: GRPSERIAL
test_array32_1020:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array32.C'
    sources:
      binary: array32.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_array32_1021:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array32.C'
    sources:
      binary: array32.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_array32_1022:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array32.C'
    sources:
      binary: array32.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_array32_118:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array32.C'
    sources:
      binary: array32.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_array32_119:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array32.C'
    sources:
      binary: array32.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_array32_120:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array32.C'
    sources:
      binary: array32.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_array33_1023:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array33.C'
    sources:
      binary: ./array33.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array33_1024:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array33.C'
    sources:
      binary: ./array33.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array33_1025:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array33.C'
    sources:
      binary: ./array33.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array33_121:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array33.C'
    sources:
      binary: ./array33.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array33_122:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array33.C'
    sources:
      binary: ./array33.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array33_123:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array33.C'
    sources:
      binary: ./array33.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array34_1026:
  build:
    cflags: "-std=gnu++98 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array34.C'
    sources:
      binary: array34.s
  group: GRPSERIAL
test_array34_1027:
  build:
    cflags: "-std=gnu++11 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array34.C'
    sources:
      binary: array34.s
  group: GRPSERIAL
test_array34_1028:
  build:
    cflags: "-std=gnu++14 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array34.C'
    sources:
      binary: array34.s
  group: GRPSERIAL
test_array34_124:
  build:
    cflags: "-std=gnu++98 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array34.C'
    sources:
      binary: array34.s
  group: GRPSERIAL
test_array34_125:
  build:
    cflags: "-std=gnu++11 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array34.C'
    sources:
      binary: array34.s
  group: GRPSERIAL
test_array34_126:
  build:
    cflags: "-std=gnu++14 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array34.C'
    sources:
      binary: array34.s
  group: GRPSERIAL
test_array35_1029:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array35.C'
    sources:
      binary: array35.s
  group: GRPSERIAL
test_array35_1030:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array35.C'
    sources:
      binary: array35.s
  group: GRPSERIAL
test_array35_1031:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array35.C'
    sources:
      binary: array35.s
  group: GRPSERIAL
test_array35_127:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array35.C'
    sources:
      binary: array35.s
  group: GRPSERIAL
test_array35_128:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array35.C'
    sources:
      binary: array35.s
  group: GRPSERIAL
test_array35_129:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array35.C'
    sources:
      binary: array35.s
  group: GRPSERIAL
test_array36_1032:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array36.C'
    sources:
      binary: array36.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_array36_1033:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array36.C'
    sources:
      binary: array36.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_array36_1034:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array36.C'
    sources:
      binary: array36.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_array36_130:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array36.C'
    sources:
      binary: array36.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_array36_131:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array36.C'
    sources:
      binary: array36.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_array36_132:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array36.C'
    sources:
      binary: array36.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_array37_1035:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array37.C'
    sources:
      binary: array37.s
  group: GRPSERIAL
test_array37_1036:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array37.C'
    sources:
      binary: array37.s
  group: GRPSERIAL
test_array37_1037:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array37.C'
    sources:
      binary: array37.s
  group: GRPSERIAL
test_array37_133:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array37.C'
    sources:
      binary: array37.s
  group: GRPSERIAL
test_array37_134:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array37.C'
    sources:
      binary: array37.s
  group: GRPSERIAL
test_array37_135:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array37.C'
    sources:
      binary: array37.s
  group: GRPSERIAL
test_array38_1038:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array38.C'
    sources:
      binary: array38.s
  group: GRPSERIAL
test_array38_1039:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array38.C'
    sources:
      binary: array38.s
  group: GRPSERIAL
test_array38_136:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array38.C'
    sources:
      binary: array38.s
  group: GRPSERIAL
test_array38_137:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array38.C'
    sources:
      binary: array38.s
  group: GRPSERIAL
test_array39_1040:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array39.C'
    sources:
      binary: ./array39.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array39_1041:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array39.C'
    sources:
      binary: ./array39.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array39_138:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array39.C'
    sources:
      binary: ./array39.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array39_139:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array39.C'
    sources:
      binary: ./array39.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array3_1011:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array3.C'
    sources:
      binary: array3.s
  group: GRPSERIAL
test_array3_1012:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array3.C'
    sources:
      binary: array3.s
  group: GRPSERIAL
test_array3_1013:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array3.C'
    sources:
      binary: array3.s
  group: GRPSERIAL
test_array3_109:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array3.C'
    sources:
      binary: array3.s
  group: GRPSERIAL
test_array3_110:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array3.C'
    sources:
      binary: array3.s
  group: GRPSERIAL
test_array3_111:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array3.C'
    sources:
      binary: array3.s
  group: GRPSERIAL
test_array40_1045:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array40.C'
    sources:
      binary: array40.s
  group: GRPSERIAL
test_array40_1046:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array40.C'
    sources:
      binary: array40.s
  group: GRPSERIAL
test_array40_1047:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array40.C'
    sources:
      binary: array40.s
  group: GRPSERIAL
test_array40_143:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array40.C'
    sources:
      binary: array40.s
  group: GRPSERIAL
test_array40_144:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array40.C'
    sources:
      binary: array40.s
  group: GRPSERIAL
test_array40_145:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array40.C'
    sources:
      binary: array40.s
  group: GRPSERIAL
test_array41_1048:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array41.C'
    sources:
      binary: ./array41.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array41_1049:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array41.C'
    sources:
      binary: ./array41.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array41_1050:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array41.C'
    sources:
      binary: ./array41.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array41_146:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array41.C'
    sources:
      binary: ./array41.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array41_147:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array41.C'
    sources:
      binary: ./array41.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array41_148:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array41.C'
    sources:
      binary: ./array41.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array42_1051:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array42.C'
    sources:
      binary: array42.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+(:1:)[^\n]*[0-9]+: warning:[^\n]*("6:array \''a\'' initialized
          by parenthesized string literal")[^\n]*\n?)+'
test_array42_1052:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array42.C'
    sources:
      binary: array42.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+(:1:)[^\n]*[0-9]+: warning:[^\n]*("6:array \''a\'' initialized
          by parenthesized string literal")[^\n]*\n?)+'
test_array42_1053:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array42.C'
    sources:
      binary: array42.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+(:1:)[^\n]*[0-9]+: warning:[^\n]*("6:array \''a\'' initialized
          by parenthesized string literal")[^\n]*\n?)+'
test_array42_149:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array42.C'
    sources:
      binary: array42.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+(:1:)[^\n]*[0-9]+: warning:[^\n]*("6:array \''a\'' initialized
          by parenthesized string literal")[^\n]*\n?)+'
test_array42_150:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array42.C'
    sources:
      binary: array42.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+(:1:)[^\n]*[0-9]+: warning:[^\n]*("6:array \''a\'' initialized
          by parenthesized string literal")[^\n]*\n?)+'
test_array42_151:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array42.C'
    sources:
      binary: array42.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+(:1:)[^\n]*[0-9]+: warning:[^\n]*("6:array \''a\'' initialized
          by parenthesized string literal")[^\n]*\n?)+'
test_array43_1054:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array43.C'
    sources:
      binary: array43.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:initializer
          fails to determine size")[^\n]*\n?)+'
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("11:array must
          be initialized")[^\n]*\n?)+'
test_array43_1055:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array43.C'
    sources:
      binary: array43.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:initializer
          fails to determine size")[^\n]*\n?)+'
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("11:array must
          be initialized")[^\n]*\n?)+'
test_array43_1056:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array43.C'
    sources:
      binary: array43.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:initializer
          fails to determine size")[^\n]*\n?)+'
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("11:array must
          be initialized")[^\n]*\n?)+'
test_array43_152:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array43.C'
    sources:
      binary: array43.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:initializer
          fails to determine size")[^\n]*\n?)+'
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("11:array must
          be initialized")[^\n]*\n?)+'
test_array43_153:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array43.C'
    sources:
      binary: array43.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:initializer
          fails to determine size")[^\n]*\n?)+'
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("11:array must
          be initialized")[^\n]*\n?)+'
test_array43_154:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array43.C'
    sources:
      binary: array43.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:initializer
          fails to determine size")[^\n]*\n?)+'
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("11:array must
          be initialized")[^\n]*\n?)+'
test_array44_1057:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array44.C'
    sources:
      binary: array44.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:zero-size array")[^\n]*\n?)+'
test_array44_1058:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array44.C'
    sources:
      binary: array44.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:zero-size array")[^\n]*\n?)+'
test_array44_1059:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array44.C'
    sources:
      binary: array44.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:zero-size array")[^\n]*\n?)+'
test_array44_155:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array44.C'
    sources:
      binary: array44.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:zero-size array")[^\n]*\n?)+'
test_array44_156:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array44.C'
    sources:
      binary: array44.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:zero-size array")[^\n]*\n?)+'
test_array44_157:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array44.C'
    sources:
      binary: array44.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:zero-size array")[^\n]*\n?)+'
test_array45_1060:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array45.C'
    sources:
      binary: array45.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:storage size")[^\n]*\n?)+'
test_array45_1061:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array45.C'
    sources:
      binary: array45.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:storage size")[^\n]*\n?)+'
test_array45_1062:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array45.C'
    sources:
      binary: array45.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:storage size")[^\n]*\n?)+'
test_array45_158:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array45.C'
    sources:
      binary: array45.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:storage size")[^\n]*\n?)+'
test_array45_159:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array45.C'
    sources:
      binary: array45.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:storage size")[^\n]*\n?)+'
test_array45_160:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array45.C'
    sources:
      binary: array45.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:storage size")[^\n]*\n?)+'
test_array46_1063:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array46.C'
    sources:
      binary: array46.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("14:initializer
          fails to determine size")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("14:array must
          be initialized")[^\n]*\n?)+'
test_array46_1064:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array46.C'
    sources:
      binary: array46.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("14:initializer
          fails to determine size")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("14:array must
          be initialized")[^\n]*\n?)+'
test_array46_1065:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array46.C'
    sources:
      binary: array46.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("14:initializer
          fails to determine size")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("14:array must
          be initialized")[^\n]*\n?)+'
test_array46_161:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array46.C'
    sources:
      binary: array46.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("14:initializer
          fails to determine size")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("14:array must
          be initialized")[^\n]*\n?)+'
test_array46_162:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array46.C'
    sources:
      binary: array46.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("14:initializer
          fails to determine size")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("14:array must
          be initialized")[^\n]*\n?)+'
test_array46_163:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array46.C'
    sources:
      binary: array46.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("14:initializer
          fails to determine size")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("14:array must
          be initialized")[^\n]*\n?)+'
test_array47_1066:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array47.C'
    sources:
      binary: array47.s
  group: GRPSERIAL
test_array47_1067:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array47.C'
    sources:
      binary: array47.s
  group: GRPSERIAL
test_array47_1068:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array47.C'
    sources:
      binary: array47.s
  group: GRPSERIAL
test_array47_164:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array47.C'
    sources:
      binary: array47.s
  group: GRPSERIAL
test_array47_165:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array47.C'
    sources:
      binary: array47.s
  group: GRPSERIAL
test_array47_166:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array47.C'
    sources:
      binary: array47.s
  group: GRPSERIAL
test_array48_1069:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array48.C'
    sources:
      binary: array48.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array.*init")[^\n]*\n?)+'
test_array48_1070:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array48.C'
    sources:
      binary: array48.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array.*init")[^\n]*\n?)+'
test_array48_167:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array48.C'
    sources:
      binary: array48.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array.*init")[^\n]*\n?)+'
test_array48_168:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array48.C'
    sources:
      binary: array48.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array.*init")[^\n]*\n?)+'
test_array4_1042:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array4.C'
    sources:
      binary: array4.s
  group: GRPSERIAL
test_array4_1043:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array4.C'
    sources:
      binary: array4.s
  group: GRPSERIAL
test_array4_1044:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array4.C'
    sources:
      binary: array4.s
  group: GRPSERIAL
test_array4_140:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array4.C'
    sources:
      binary: array4.s
  group: GRPSERIAL
test_array4_141:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array4.C'
    sources:
      binary: array4.s
  group: GRPSERIAL
test_array4_142:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array4.C'
    sources:
      binary: array4.s
  group: GRPSERIAL
test_array5_1071:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array5.C'
    sources:
      binary: ./array5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array5_1072:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array5.C'
    sources:
      binary: ./array5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array5_1073:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array5.C'
    sources:
      binary: ./array5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array5_169:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array5.C'
    sources:
      binary: ./array5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array5_170:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array5.C'
    sources:
      binary: ./array5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array5_171:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array5.C'
    sources:
      binary: ./array5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_array6_1074:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array6.C'
    sources:
      binary: array6.s
  group: GRPSERIAL
test_array6_1075:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array6.C'
    sources:
      binary: array6.s
  group: GRPSERIAL
test_array6_1076:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array6.C'
    sources:
      binary: array6.s
  group: GRPSERIAL
test_array6_172:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array6.C'
    sources:
      binary: array6.s
  group: GRPSERIAL
test_array6_173:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array6.C'
    sources:
      binary: array6.s
  group: GRPSERIAL
test_array6_174:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array6.C'
    sources:
      binary: array6.s
  group: GRPSERIAL
test_array7_1077:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array7.C'
    sources:
      binary: array7.s
  group: GRPSERIAL
test_array7_1078:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array7.C'
    sources:
      binary: array7.s
  group: GRPSERIAL
test_array7_1079:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array7.C'
    sources:
      binary: array7.s
  group: GRPSERIAL
test_array7_175:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array7.C'
    sources:
      binary: array7.s
  group: GRPSERIAL
test_array7_176:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array7.C'
    sources:
      binary: array7.s
  group: GRPSERIAL
test_array7_177:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array7.C'
    sources:
      binary: array7.s
  group: GRPSERIAL
test_array8_1080:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array8.C'
    sources:
      binary: array8.s
  group: GRPSERIAL
test_array8_1081:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array8.C'
    sources:
      binary: array8.s
  group: GRPSERIAL
test_array8_1082:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array8.C'
    sources:
      binary: array8.s
  group: GRPSERIAL
test_array8_178:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array8.C'
    sources:
      binary: array8.s
  group: GRPSERIAL
test_array8_179:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array8.C'
    sources:
      binary: array8.s
  group: GRPSERIAL
test_array8_180:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array8.C'
    sources:
      binary: array8.s
  group: GRPSERIAL
test_array9_1083:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array9.C'
    sources:
      binary: array9.s
  group: GRPSERIAL
test_array9_1084:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array9.C'
    sources:
      binary: array9.s
  group: GRPSERIAL
test_array9_1085:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array9.C'
    sources:
      binary: array9.s
  group: GRPSERIAL
test_array9_181:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array9.C'
    sources:
      binary: array9.s
  group: GRPSERIAL
test_array9_182:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array9.C'
    sources:
      binary: array9.s
  group: GRPSERIAL
test_array9_183:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/array9.C'
    sources:
      binary: array9.s
  group: GRPSERIAL
test_assign1_1086:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/assign1.C'
    sources:
      binary: ./assign1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_assign1_1087:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/assign1.C'
    sources:
      binary: ./assign1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_assign1_1088:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/assign1.C'
    sources:
      binary: ./assign1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_assign1_184:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/assign1.C'
    sources:
      binary: ./assign1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_assign1_185:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/assign1.C'
    sources:
      binary: ./assign1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_assign1_186:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/assign1.C'
    sources:
      binary: ./assign1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_attrib1_1089:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/attrib1.C'
    sources:
      binary: ./attrib1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_attrib1_1090:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/attrib1.C'
    sources:
      binary: ./attrib1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_attrib1_1091:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/attrib1.C'
    sources:
      binary: ./attrib1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_attrib1_187:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/attrib1.C'
    sources:
      binary: ./attrib1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_attrib1_188:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/attrib1.C'
    sources:
      binary: ./attrib1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_attrib1_189:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/attrib1.C'
    sources:
      binary: ./attrib1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_base1_1092:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/base1.C'
    sources:
      binary: base1.s
  group: GRPSERIAL
test_base1_1093:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/base1.C'
    sources:
      binary: base1.s
  group: GRPSERIAL
test_base1_1094:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/base1.C'
    sources:
      binary: base1.s
  group: GRPSERIAL
test_base1_190:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/base1.C'
    sources:
      binary: base1.s
  group: GRPSERIAL
test_base1_191:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/base1.C'
    sources:
      binary: base1.s
  group: GRPSERIAL
test_base1_192:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/base1.C'
    sources:
      binary: base1.s
  group: GRPSERIAL
test_bitfield1_1095:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield1.C'
    sources:
      binary: bitfield1.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_bitfield1_1096:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield1.C'
    sources:
      binary: bitfield1.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_bitfield1_1097:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield1.C'
    sources:
      binary: bitfield1.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_bitfield1_193:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield1.C'
    sources:
      binary: bitfield1.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_bitfield1_194:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield1.C'
    sources:
      binary: bitfield1.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_bitfield1_195:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield1.C'
    sources:
      binary: bitfield1.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'
test_bitfield2_1098:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield2.C'
    sources:
      binary: ./bitfield2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_bitfield2_1099:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield2.C'
    sources:
      binary: ./bitfield2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_bitfield2_1100:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield2.C'
    sources:
      binary: ./bitfield2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_bitfield2_196:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield2.C'
    sources:
      binary: ./bitfield2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_bitfield2_197:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield2.C'
    sources:
      binary: ./bitfield2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_bitfield2_198:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield2.C'
    sources:
      binary: ./bitfield2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_bitfield3_1101:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield3.C'
    sources:
      binary: bitfield3.s
  group: GRPSERIAL
test_bitfield3_1102:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield3.C'
    sources:
      binary: bitfield3.s
  group: GRPSERIAL
test_bitfield3_1103:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield3.C'
    sources:
      binary: bitfield3.s
  group: GRPSERIAL
test_bitfield3_199:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield3.C'
    sources:
      binary: bitfield3.s
  group: GRPSERIAL
test_bitfield3_200:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield3.C'
    sources:
      binary: bitfield3.s
  group: GRPSERIAL
test_bitfield3_201:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield3.C'
    sources:
      binary: bitfield3.s
  group: GRPSERIAL
test_bitfield4_1104:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield4.C'
    sources:
      binary: bitfield4.s
  group: GRPSERIAL
test_bitfield4_1105:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield4.C'
    sources:
      binary: bitfield4.s
  group: GRPSERIAL
test_bitfield4_1106:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield4.C'
    sources:
      binary: bitfield4.s
  group: GRPSERIAL
test_bitfield4_202:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield4.C'
    sources:
      binary: bitfield4.s
  group: GRPSERIAL
test_bitfield4_203:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield4.C'
    sources:
      binary: bitfield4.s
  group: GRPSERIAL
test_bitfield4_204:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield4.C'
    sources:
      binary: bitfield4.s
  group: GRPSERIAL
test_bitfield5_1107:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield5.C'
    sources:
      binary: bitfield5.s
  group: GRPSERIAL
test_bitfield5_1108:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield5.C'
    sources:
      binary: bitfield5.s
  group: GRPSERIAL
test_bitfield5_1109:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield5.C'
    sources:
      binary: bitfield5.s
  group: GRPSERIAL
test_bitfield5_205:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield5.C'
    sources:
      binary: bitfield5.s
  group: GRPSERIAL
test_bitfield5_206:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield5.C'
    sources:
      binary: bitfield5.s
  group: GRPSERIAL
test_bitfield5_207:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/bitfield5.C'
    sources:
      binary: bitfield5.s
  group: GRPSERIAL
test_brace1_1110:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace1.C'
    sources:
      binary: brace1.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("brace")[^\n]*\n?)+'
test_brace1_1111:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace1.C'
    sources:
      binary: brace1.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("brace")[^\n]*\n?)+'
test_brace1_1112:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace1.C'
    sources:
      binary: brace1.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("brace")[^\n]*\n?)+'
test_brace1_208:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace1.C'
    sources:
      binary: brace1.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("brace")[^\n]*\n?)+'
test_brace1_209:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace1.C'
    sources:
      binary: brace1.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("brace")[^\n]*\n?)+'
test_brace1_210:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace1.C'
    sources:
      binary: brace1.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("brace")[^\n]*\n?)+'
test_brace2_1113:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace2.C'
    sources:
      binary: brace2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:scalar object
          \''b\'' requires one element in initializer")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces around
          scalar initializer")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_brace2_1114:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace2.C'
    sources:
      binary: brace2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:scalar object
          \''b\'' requires one element in initializer")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces around
          scalar initializer")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_brace2_1115:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace2.C'
    sources:
      binary: brace2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:scalar object
          \''b\'' requires one element in initializer")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces around
          scalar initializer")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_brace2_211:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace2.C'
    sources:
      binary: brace2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:scalar object
          \''b\'' requires one element in initializer")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces around
          scalar initializer")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_brace2_212:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace2.C'
    sources:
      binary: brace2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:scalar object
          \''b\'' requires one element in initializer")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces around
          scalar initializer")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_brace2_213:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace2.C'
    sources:
      binary: brace2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("5:scalar object
          \''b\'' requires one element in initializer")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces around
          scalar initializer")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("initializer")[^\n]*\n?)+'
test_brace3_1116:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace3.C'
    sources:
      binary: brace3.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_brace3_1117:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace3.C'
    sources:
      binary: brace3.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_brace3_1118:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace3.C'
    sources:
      binary: brace3.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_brace3_214:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace3.C'
    sources:
      binary: brace3.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_brace3_215:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace3.C'
    sources:
      binary: brace3.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_brace3_216:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace3.C'
    sources:
      binary: brace3.s
  group: GRPSERIAL
  validate:
    match:
      L1:
        expect: true
        expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_brace4_1119:
  build:
    cflags: "-std=gnu++98 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace4.C'
    sources:
      binary: brace4.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("zero-size array")[^\n]*\n?)+'
test_brace4_1120:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace4.C'
    sources:
      binary: brace4.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("zero-size array")[^\n]*\n?)+'
test_brace4_1121:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace4.C'
    sources:
      binary: brace4.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("zero-size array")[^\n]*\n?)+'
test_brace4_217:
  build:
    cflags: "-std=gnu++98 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace4.C'
    sources:
      binary: brace4.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("zero-size array")[^\n]*\n?)+'
test_brace4_218:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace4.C'
    sources:
      binary: brace4.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("zero-size array")[^\n]*\n?)+'
test_brace4_219:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace4.C'
    sources:
      binary: brace4.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("zero-size array")[^\n]*\n?)+'
test_brace5_1122:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace5.C'
    sources:
      binary: brace5.s
  group: GRPSERIAL
test_brace5_1123:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace5.C'
    sources:
      binary: brace5.s
  group: GRPSERIAL
test_brace5_1124:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace5.C'
    sources:
      binary: brace5.s
  group: GRPSERIAL
test_brace5_220:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace5.C'
    sources:
      binary: brace5.s
  group: GRPSERIAL
test_brace5_221:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace5.C'
    sources:
      binary: brace5.s
  group: GRPSERIAL
test_brace5_222:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace5.C'
    sources:
      binary: brace5.s
  group: GRPSERIAL
test_brace6_1125:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace6.C'
    sources:
      binary: brace6.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("8:scalar object
          \''j\'' requires one element")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("6:in C\\\\+\\\\+98
          \''a\'' must be initialized")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many initializers")[^\n]*\n?)+'
test_brace6_1126:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace6.C'
    sources:
      binary: brace6.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("8:scalar object
          \''j\'' requires one element")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("6:in C\\\\+\\\\+98
          \''a\'' must be initialized")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many initializers")[^\n]*\n?)+'
test_brace6_1127:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace6.C'
    sources:
      binary: brace6.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("8:scalar object
          \''j\'' requires one element")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("6:in C\\\\+\\\\+98
          \''a\'' must be initialized")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many initializers")[^\n]*\n?)+'
test_brace6_223:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace6.C'
    sources:
      binary: brace6.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("8:scalar object
          \''j\'' requires one element")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("6:in C\\\\+\\\\+98
          \''a\'' must be initialized")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many initializers")[^\n]*\n?)+'
test_brace6_224:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace6.C'
    sources:
      binary: brace6.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("8:scalar object
          \''j\'' requires one element")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("6:in C\\\\+\\\\+98
          \''a\'' must be initialized")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many initializers")[^\n]*\n?)+'
test_brace6_225:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/brace6.C'
    sources:
      binary: brace6.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("8:scalar object
          \''j\'' requires one element")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("6:in C\\\\+\\\\+98
          \''a\'' must be initialized")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too many initializers")[^\n]*\n?)+'
test_byval1_1128:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/byval1.C'
    sources:
      binary: ./byval1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_byval1_1129:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/byval1.C'
    sources:
      binary: ./byval1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_byval1_1130:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/byval1.C'
    sources:
      binary: ./byval1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_byval1_226:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/byval1.C'
    sources:
      binary: ./byval1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_byval1_227:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/byval1.C'
    sources:
      binary: ./byval1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_byval1_228:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/byval1.C'
    sources:
      binary: ./byval1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_call1_1131:
  build:
    cflags: "-std=gnu++98 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/call1.C'
    sources:
      binary: call1.s
  group: GRPSERIAL
test_call1_1132:
  build:
    cflags: "-std=gnu++11 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/call1.C'
    sources:
      binary: call1.s
  group: GRPSERIAL
test_call1_1133:
  build:
    cflags: "-std=gnu++14 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/call1.C'
    sources:
      binary: call1.s
  group: GRPSERIAL
test_call1_229:
  build:
    cflags: "-std=gnu++98 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/call1.C'
    sources:
      binary: call1.s
  group: GRPSERIAL
test_call1_230:
  build:
    cflags: "-std=gnu++11 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/call1.C'
    sources:
      binary: call1.s
  group: GRPSERIAL
test_call1_231:
  build:
    cflags: "-std=gnu++14 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/call1.C'
    sources:
      binary: call1.s
  group: GRPSERIAL
test_cleanup1_1134:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup1.C'
    sources:
      binary: cleanup1.s
  group: GRPSERIAL
test_cleanup1_1135:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup1.C'
    sources:
      binary: cleanup1.s
  group: GRPSERIAL
test_cleanup1_1136:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup1.C'
    sources:
      binary: cleanup1.s
  group: GRPSERIAL
test_cleanup1_232:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup1.C'
    sources:
      binary: cleanup1.s
  group: GRPSERIAL
test_cleanup1_233:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup1.C'
    sources:
      binary: cleanup1.s
  group: GRPSERIAL
test_cleanup1_234:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup1.C'
    sources:
      binary: cleanup1.s
  group: GRPSERIAL
test_cleanup2_1137:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup2.C'
    sources:
      binary: cleanup2.s
  group: GRPSERIAL
test_cleanup2_1138:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup2.C'
    sources:
      binary: cleanup2.s
  group: GRPSERIAL
test_cleanup2_1139:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup2.C'
    sources:
      binary: cleanup2.s
  group: GRPSERIAL
test_cleanup2_235:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup2.C'
    sources:
      binary: cleanup2.s
  group: GRPSERIAL
test_cleanup2_236:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup2.C'
    sources:
      binary: cleanup2.s
  group: GRPSERIAL
test_cleanup2_237:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup2.C'
    sources:
      binary: cleanup2.s
  group: GRPSERIAL
test_cleanup4_1140:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup4.C'
    sources:
      binary: ./cleanup4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_cleanup4_1141:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup4.C'
    sources:
      binary: ./cleanup4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_cleanup4_1142:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup4.C'
    sources:
      binary: ./cleanup4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_cleanup4_238:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup4.C'
    sources:
      binary: ./cleanup4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_cleanup4_239:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup4.C'
    sources:
      binary: ./cleanup4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_cleanup4_240:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/cleanup4.C'
    sources:
      binary: ./cleanup4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_complex1_1143:
  build:
    cflags: "-std=gnu++98 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/complex1.C'
    sources:
      binary: complex1.s
  group: GRPSERIAL
test_complex1_1144:
  build:
    cflags: "-std=gnu++11 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/complex1.C'
    sources:
      binary: complex1.s
  group: GRPSERIAL
test_complex1_1145:
  build:
    cflags: "-std=gnu++14 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/complex1.C'
    sources:
      binary: complex1.s
  group: GRPSERIAL
test_complex1_241:
  build:
    cflags: "-std=gnu++98 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/complex1.C'
    sources:
      binary: complex1.s
  group: GRPSERIAL
test_complex1_242:
  build:
    cflags: "-std=gnu++11 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/complex1.C'
    sources:
      binary: complex1.s
  group: GRPSERIAL
test_complex1_243:
  build:
    cflags: "-std=gnu++14 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/complex1.C'
    sources:
      binary: complex1.s
  group: GRPSERIAL
test_const10_1149:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const10.C'
    sources:
      binary: const10.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_const10_1150:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const10.C'
    sources:
      binary: const10.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_const10_247:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const10.C'
    sources:
      binary: const10.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_const10_248:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const10.C'
    sources:
      binary: const10.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("use of deleted")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_const11_1151:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const11.C'
    sources:
      binary: const11.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization")[^\n]*\n?)+'
test_const11_249:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const11.C'
    sources:
      binary: const11.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization")[^\n]*\n?)+'
test_const12_1152:
  build:
    cflags: "-std=gnu++98 -Wsign-compare\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const12.C'
    sources:
      binary: const12.s
  group: GRPSERIAL
test_const12_1153:
  build:
    cflags: "-std=gnu++11 -Wsign-compare\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const12.C'
    sources:
      binary: const12.s
  group: GRPSERIAL
test_const12_1154:
  build:
    cflags: "-std=gnu++14 -Wsign-compare\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const12.C'
    sources:
      binary: const12.s
  group: GRPSERIAL
test_const12_250:
  build:
    cflags: "-std=gnu++98 -Wsign-compare\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const12.C'
    sources:
      binary: const12.s
  group: GRPSERIAL
test_const12_251:
  build:
    cflags: "-std=gnu++11 -Wsign-compare\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const12.C'
    sources:
      binary: const12.s
  group: GRPSERIAL
test_const12_252:
  build:
    cflags: "-std=gnu++14 -Wsign-compare\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const12.C'
    sources:
      binary: const12.s
  group: GRPSERIAL
test_const1_1146:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const1.C'
    sources:
      binary: const1.s
  group: GRPSERIAL
test_const1_1147:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const1.C'
    sources:
      binary: const1.s
  group: GRPSERIAL
test_const1_1148:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const1.C'
    sources:
      binary: const1.s
  group: GRPSERIAL
test_const1_244:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const1.C'
    sources:
      binary: const1.s
  group: GRPSERIAL
test_const1_245:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const1.C'
    sources:
      binary: const1.s
  group: GRPSERIAL
test_const1_246:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const1.C'
    sources:
      binary: const1.s
  group: GRPSERIAL
test_const2_1155:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const2.C'
    sources:
      binary: const2.s
  group: GRPSERIAL
test_const2_1156:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const2.C'
    sources:
      binary: const2.s
  group: GRPSERIAL
test_const2_1157:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const2.C'
    sources:
      binary: const2.s
  group: GRPSERIAL
test_const2_253:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const2.C'
    sources:
      binary: const2.s
  group: GRPSERIAL
test_const2_254:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const2.C'
    sources:
      binary: const2.s
  group: GRPSERIAL
test_const2_255:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const2.C'
    sources:
      binary: const2.s
  group: GRPSERIAL
test_const3_1158:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const3.C'
    sources:
      binary: ./const3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_const3_1159:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const3.C'
    sources:
      binary: ./const3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_const3_1160:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const3.C'
    sources:
      binary: ./const3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_const3_256:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const3.C'
    sources:
      binary: ./const3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_const3_257:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const3.C'
    sources:
      binary: ./const3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_const3_258:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const3.C'
    sources:
      binary: ./const3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_const4_1161:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const4.C'
    sources:
      binary: const4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
test_const4_1162:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const4.C'
    sources:
      binary: const4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
test_const4_1163:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const4.C'
    sources:
      binary: const4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
test_const4_259:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const4.C'
    sources:
      binary: const4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
test_const4_260:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const4.C'
    sources:
      binary: const4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
test_const4_261:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const4.C'
    sources:
      binary: const4.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not declared")[^\n]*\n?)+'
test_const5_1164:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const5.C'
    sources:
      binary: const5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_const5_1165:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const5.C'
    sources:
      binary: const5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_const5_1166:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const5.C'
    sources:
      binary: const5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_const5_262:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const5.C'
    sources:
      binary: const5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_const5_263:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const5.C'
    sources:
      binary: const5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_const5_264:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const5.C'
    sources:
      binary: const5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_const6_1167:
  build:
    cflags: -std=gnu++98 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const6.C'
    sources:
      binary: ./const6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_const6_1168:
  build:
    cflags: -std=gnu++11 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const6.C'
    sources:
      binary: ./const6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_const6_1169:
  build:
    cflags: -std=gnu++14 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const6.C'
    sources:
      binary: ./const6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_const6_265:
  build:
    cflags: -std=gnu++98 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const6.C'
    sources:
      binary: ./const6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_const6_266:
  build:
    cflags: -std=gnu++11 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const6.C'
    sources:
      binary: ./const6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_const6_267:
  build:
    cflags: -std=gnu++14 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const6.C'
    sources:
      binary: ./const6.exe
  group: GRPSERIAL
  run:
    cwd: .
test_const7_1170:
  build:
    cflags: "-std=gnu++98 -fdump-tree-gimple -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const7.C'
    sources:
      binary: const7.s
  group: GRPSERIAL
test_const7_1171:
  build:
    cflags: "-std=gnu++11 -fdump-tree-gimple -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const7.C'
    sources:
      binary: const7.s
  group: GRPSERIAL
test_const7_1172:
  build:
    cflags: "-std=gnu++14 -fdump-tree-gimple -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const7.C'
    sources:
      binary: const7.s
  group: GRPSERIAL
test_const7_268:
  build:
    cflags: "-std=gnu++98 -fdump-tree-gimple -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const7.C'
    sources:
      binary: const7.s
  group: GRPSERIAL
test_const7_269:
  build:
    cflags: "-std=gnu++11 -fdump-tree-gimple -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const7.C'
    sources:
      binary: const7.s
  group: GRPSERIAL
test_const7_270:
  build:
    cflags: "-std=gnu++14 -fdump-tree-gimple -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const7.C'
    sources:
      binary: const7.s
  group: GRPSERIAL
test_const8_1173:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const8.C'
    sources:
      binary: const8.s
  group: GRPSERIAL
test_const8_1174:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const8.C'
    sources:
      binary: const8.s
  group: GRPSERIAL
test_const8_1175:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const8.C'
    sources:
      binary: const8.s
  group: GRPSERIAL
test_const8_271:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const8.C'
    sources:
      binary: const8.s
  group: GRPSERIAL
test_const8_272:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const8.C'
    sources:
      binary: const8.s
  group: GRPSERIAL
test_const8_273:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const8.C'
    sources:
      binary: const8.s
  group: GRPSERIAL
test_const9_1176:
  build:
    cflags: "-std=c++98 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const9.C'
    sources:
      binary: const9.s
  group: GRPSERIAL
test_const9_1177:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const9.C'
    sources:
      binary: const9.s
  group: GRPSERIAL
test_const9_1178:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const9.C'
    sources:
      binary: const9.s
  group: GRPSERIAL
test_const9_274:
  build:
    cflags: "-std=c++98 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const9.C'
    sources:
      binary: const9.s
  group: GRPSERIAL
test_const9_275:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const9.C'
    sources:
      binary: const9.s
  group: GRPSERIAL
test_const9_276:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/const9.C'
    sources:
      binary: const9.s
  group: GRPSERIAL
test_constant1_1179:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/constant1.C'
    sources:
      binary: constant1.s
  group: GRPSERIAL
test_constant1_1180:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/constant1.C'
    sources:
      binary: constant1.s
  group: GRPSERIAL
test_constant1_1181:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/constant1.C'
    sources:
      binary: constant1.s
  group: GRPSERIAL
test_constant1_277:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/constant1.C'
    sources:
      binary: constant1.s
  group: GRPSERIAL
test_constant1_278:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/constant1.C'
    sources:
      binary: constant1.s
  group: GRPSERIAL
test_constant1_279:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/constant1.C'
    sources:
      binary: constant1.s
  group: GRPSERIAL
test_copy1_1182:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy1.C'
    sources:
      binary: copy1.s
  group: GRPSERIAL
test_copy1_1183:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy1.C'
    sources:
      binary: copy1.s
  group: GRPSERIAL
test_copy1_1184:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy1.C'
    sources:
      binary: copy1.s
  group: GRPSERIAL
test_copy1_280:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy1.C'
    sources:
      binary: copy1.s
  group: GRPSERIAL
test_copy1_281:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy1.C'
    sources:
      binary: copy1.s
  group: GRPSERIAL
test_copy1_282:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy1.C'
    sources:
      binary: copy1.s
  group: GRPSERIAL
test_copy2_1185:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy2.C'
    sources:
      binary: copy2.s
  group: GRPSERIAL
test_copy2_1186:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy2.C'
    sources:
      binary: copy2.s
  group: GRPSERIAL
test_copy2_1187:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy2.C'
    sources:
      binary: copy2.s
  group: GRPSERIAL
test_copy2_283:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy2.C'
    sources:
      binary: copy2.s
  group: GRPSERIAL
test_copy2_284:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy2.C'
    sources:
      binary: copy2.s
  group: GRPSERIAL
test_copy2_285:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy2.C'
    sources:
      binary: copy2.s
  group: GRPSERIAL
test_copy3_1188:
  build:
    cflags: -std=gnu++98 -fno-elide-constructors
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy3.C'
    sources:
      binary: ./copy3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_copy3_1189:
  build:
    cflags: -std=gnu++11 -fno-elide-constructors
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy3.C'
    sources:
      binary: ./copy3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_copy3_1190:
  build:
    cflags: -std=gnu++14 -fno-elide-constructors
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy3.C'
    sources:
      binary: ./copy3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_copy3_286:
  build:
    cflags: -std=gnu++98 -fno-elide-constructors
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy3.C'
    sources:
      binary: ./copy3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_copy3_287:
  build:
    cflags: -std=gnu++11 -fno-elide-constructors
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy3.C'
    sources:
      binary: ./copy3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_copy3_288:
  build:
    cflags: -std=gnu++14 -fno-elide-constructors
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy3.C'
    sources:
      binary: ./copy3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_copy4_1191:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy4.C'
    sources:
      binary: copy4.s
  group: GRPSERIAL
test_copy4_1192:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy4.C'
    sources:
      binary: copy4.s
  group: GRPSERIAL
test_copy4_1193:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy4.C'
    sources:
      binary: copy4.s
  group: GRPSERIAL
test_copy4_289:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy4.C'
    sources:
      binary: copy4.s
  group: GRPSERIAL
test_copy4_290:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy4.C'
    sources:
      binary: copy4.s
  group: GRPSERIAL
test_copy4_291:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy4.C'
    sources:
      binary: copy4.s
  group: GRPSERIAL
test_copy5_1194:
  build:
    cflags: "-std=gnu++98 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy5.C'
    sources:
      binary: copy5.s
  group: GRPSERIAL
test_copy5_1195:
  build:
    cflags: "-std=gnu++11 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy5.C'
    sources:
      binary: copy5.s
  group: GRPSERIAL
test_copy5_1196:
  build:
    cflags: "-std=gnu++14 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy5.C'
    sources:
      binary: copy5.s
  group: GRPSERIAL
test_copy5_292:
  build:
    cflags: "-std=gnu++98 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy5.C'
    sources:
      binary: copy5.s
  group: GRPSERIAL
test_copy5_293:
  build:
    cflags: "-std=gnu++11 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy5.C'
    sources:
      binary: copy5.s
  group: GRPSERIAL
test_copy5_294:
  build:
    cflags: "-std=gnu++14 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy5.C'
    sources:
      binary: copy5.s
  group: GRPSERIAL
test_copy6_1197:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy6.C'
    sources:
      binary: copy6.s
  group: GRPSERIAL
test_copy6_1198:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy6.C'
    sources:
      binary: copy6.s
  group: GRPSERIAL
test_copy6_1199:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy6.C'
    sources:
      binary: copy6.s
  group: GRPSERIAL
test_copy6_295:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy6.C'
    sources:
      binary: copy6.s
  group: GRPSERIAL
test_copy6_296:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy6.C'
    sources:
      binary: copy6.s
  group: GRPSERIAL
test_copy6_297:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy6.C'
    sources:
      binary: copy6.s
  group: GRPSERIAL
test_copy7_1200:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy7.C'
    sources:
      binary: copy7.s
  group: GRPSERIAL
test_copy7_1201:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy7.C'
    sources:
      binary: copy7.s
  group: GRPSERIAL
test_copy7_1202:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy7.C'
    sources:
      binary: copy7.s
  group: GRPSERIAL
test_copy7_298:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy7.C'
    sources:
      binary: copy7.s
  group: GRPSERIAL
test_copy7_299:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy7.C'
    sources:
      binary: copy7.s
  group: GRPSERIAL
test_copy7_300:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/copy7.C'
    sources:
      binary: copy7.s
  group: GRPSERIAL
test_ctor10_1206:
  build:
    cflags: "-std=gnu++98 -fkeep-inline-functions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor10.C'
    sources:
      binary: ctor10.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of")[^\n]*\n?)+'
test_ctor10_1207:
  build:
    cflags: "-std=gnu++11 -fkeep-inline-functions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor10.C'
    sources:
      binary: ctor10.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of")[^\n]*\n?)+'
test_ctor10_1208:
  build:
    cflags: "-std=gnu++14 -fkeep-inline-functions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor10.C'
    sources:
      binary: ctor10.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of")[^\n]*\n?)+'
test_ctor10_304:
  build:
    cflags: "-std=gnu++98 -fkeep-inline-functions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor10.C'
    sources:
      binary: ctor10.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of")[^\n]*\n?)+'
test_ctor10_305:
  build:
    cflags: "-std=gnu++11 -fkeep-inline-functions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor10.C'
    sources:
      binary: ctor10.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of")[^\n]*\n?)+'
test_ctor10_306:
  build:
    cflags: "-std=gnu++14 -fkeep-inline-functions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor10.C'
    sources:
      binary: ctor10.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of")[^\n]*\n?)+'
test_ctor11_1209:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor11.C'
    sources:
      binary: ctor11.s
  group: GRPSERIAL
test_ctor11_1210:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor11.C'
    sources:
      binary: ctor11.s
  group: GRPSERIAL
test_ctor11_1211:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor11.C'
    sources:
      binary: ctor11.s
  group: GRPSERIAL
test_ctor11_307:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor11.C'
    sources:
      binary: ctor11.s
  group: GRPSERIAL
test_ctor11_308:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor11.C'
    sources:
      binary: ctor11.s
  group: GRPSERIAL
test_ctor11_309:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor11.C'
    sources:
      binary: ctor11.s
  group: GRPSERIAL
test_ctor12_1212:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor12.C'
    sources:
      binary: ctor12.s
  group: GRPSERIAL
test_ctor12_1213:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor12.C'
    sources:
      binary: ctor12.s
  group: GRPSERIAL
test_ctor12_1214:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor12.C'
    sources:
      binary: ctor12.s
  group: GRPSERIAL
test_ctor12_310:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor12.C'
    sources:
      binary: ctor12.s
  group: GRPSERIAL
test_ctor12_311:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor12.C'
    sources:
      binary: ctor12.s
  group: GRPSERIAL
test_ctor12_312:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor12.C'
    sources:
      binary: ctor12.s
  group: GRPSERIAL
test_ctor1_1203:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor1.C'
    sources:
      binary: ./ctor1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor1_1204:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor1.C'
    sources:
      binary: ./ctor1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor1_1205:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor1.C'
    sources:
      binary: ./ctor1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor1_301:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor1.C'
    sources:
      binary: ./ctor1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor1_302:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor1.C'
    sources:
      binary: ./ctor1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor1_303:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor1.C'
    sources:
      binary: ./ctor1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor2_1215:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor2.C'
    sources:
      binary: ./ctor2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor2_1216:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor2.C'
    sources:
      binary: ./ctor2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor2_1217:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor2.C'
    sources:
      binary: ./ctor2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor2_313:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor2.C'
    sources:
      binary: ./ctor2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor2_314:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor2.C'
    sources:
      binary: ./ctor2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor2_315:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor2.C'
    sources:
      binary: ./ctor2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor3_1218:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor3.C'
    sources:
      binary: ctor3.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ctor3_1219:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor3.C'
    sources:
      binary: ctor3.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ctor3_1220:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor3.C'
    sources:
      binary: ctor3.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ctor3_316:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor3.C'
    sources:
      binary: ctor3.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ctor3_317:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor3.C'
    sources:
      binary: ctor3.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ctor3_318:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor3.C'
    sources:
      binary: ctor3.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ctor4-1_1221:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor4-1.C'
    sources:
      binary: ctor4-1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_ctor4-1_1222:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor4-1.C'
    sources:
      binary: ctor4-1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_ctor4-1_1223:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor4-1.C'
    sources:
      binary: ctor4-1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_ctor4-1_319:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor4-1.C'
    sources:
      binary: ctor4-1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_ctor4-1_320:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor4-1.C'
    sources:
      binary: ctor4-1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_ctor4-1_321:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor4-1.C'
    sources:
      binary: ctor4-1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_ctor4_1224:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor4.C'
    sources:
      binary: ctor4.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_ctor4_1225:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor4.C'
    sources:
      binary: ctor4.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_ctor4_1226:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor4.C'
    sources:
      binary: ctor4.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_ctor4_322:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor4.C'
    sources:
      binary: ctor4.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_ctor4_323:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor4.C'
    sources:
      binary: ctor4.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_ctor4_324:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor4.C'
    sources:
      binary: ctor4.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_ctor5_1227:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor5.C'
    sources:
      binary: ctor5.s
  group: GRPSERIAL
test_ctor5_1228:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor5.C'
    sources:
      binary: ctor5.s
  group: GRPSERIAL
test_ctor5_1229:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor5.C'
    sources:
      binary: ctor5.s
  group: GRPSERIAL
test_ctor5_325:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor5.C'
    sources:
      binary: ctor5.s
  group: GRPSERIAL
test_ctor5_326:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor5.C'
    sources:
      binary: ctor5.s
  group: GRPSERIAL
test_ctor5_327:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor5.C'
    sources:
      binary: ctor5.s
  group: GRPSERIAL
test_ctor6_1230:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor6.C'
    sources:
      binary: ctor6.s
  group: GRPSERIAL
test_ctor6_1231:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor6.C'
    sources:
      binary: ctor6.s
  group: GRPSERIAL
test_ctor6_1232:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor6.C'
    sources:
      binary: ctor6.s
  group: GRPSERIAL
test_ctor6_328:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor6.C'
    sources:
      binary: ctor6.s
  group: GRPSERIAL
test_ctor6_329:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor6.C'
    sources:
      binary: ctor6.s
  group: GRPSERIAL
test_ctor6_330:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor6.C'
    sources:
      binary: ctor6.s
  group: GRPSERIAL
test_ctor7_1233:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor7.C'
    sources:
      binary: ./ctor7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor7_1234:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor7.C'
    sources:
      binary: ./ctor7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor7_1235:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor7.C'
    sources:
      binary: ./ctor7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor7_331:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor7.C'
    sources:
      binary: ./ctor7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor7_332:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor7.C'
    sources:
      binary: ./ctor7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor7_333:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor7.C'
    sources:
      binary: ./ctor7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ctor8_1236:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor8.C'
    sources:
      binary: ctor8.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("1:\''typedef\'' was
          ignored")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference|deleted")[^\n]*\n?)+'
test_ctor8_1237:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor8.C'
    sources:
      binary: ctor8.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("1:\''typedef\'' was
          ignored")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference|deleted")[^\n]*\n?)+'
test_ctor8_1238:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor8.C'
    sources:
      binary: ctor8.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("1:\''typedef\'' was
          ignored")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference|deleted")[^\n]*\n?)+'
test_ctor8_334:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor8.C'
    sources:
      binary: ctor8.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("1:\''typedef\'' was
          ignored")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference|deleted")[^\n]*\n?)+'
test_ctor8_335:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor8.C'
    sources:
      binary: ctor8.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("1:\''typedef\'' was
          ignored")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference|deleted")[^\n]*\n?)+'
test_ctor8_336:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor8.C'
    sources:
      binary: ctor8.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("1:\''typedef\'' was
          ignored")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference|deleted")[^\n]*\n?)+'
test_ctor9_1239:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor9.C'
    sources:
      binary: ctor9.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of")[^\n]*\n?)+'
test_ctor9_1240:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor9.C'
    sources:
      binary: ctor9.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of")[^\n]*\n?)+'
test_ctor9_1241:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor9.C'
    sources:
      binary: ctor9.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of")[^\n]*\n?)+'
test_ctor9_337:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor9.C'
    sources:
      binary: ctor9.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of")[^\n]*\n?)+'
test_ctor9_338:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor9.C'
    sources:
      binary: ctor9.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of")[^\n]*\n?)+'
test_ctor9_339:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ctor9.C'
    sources:
      binary: ctor9.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of")[^\n]*\n?)+'
test_delete1_1242:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/delete1.C'
    sources:
      binary: delete1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("problem|incomplete")[^\n]*\n?)+'
test_delete1_1243:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/delete1.C'
    sources:
      binary: delete1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("problem|incomplete")[^\n]*\n?)+'
test_delete1_1244:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/delete1.C'
    sources:
      binary: delete1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("problem|incomplete")[^\n]*\n?)+'
test_delete1_340:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/delete1.C'
    sources:
      binary: delete1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("problem|incomplete")[^\n]*\n?)+'
test_delete1_341:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/delete1.C'
    sources:
      binary: delete1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("problem|incomplete")[^\n]*\n?)+'
test_delete1_342:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/delete1.C'
    sources:
      binary: delete1.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("problem|incomplete")[^\n]*\n?)+'
test_delete2_1245:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/delete2.C'
    sources:
      binary: ./delete2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_delete2_1246:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/delete2.C'
    sources:
      binary: ./delete2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_delete2_1247:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/delete2.C'
    sources:
      binary: ./delete2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_delete2_343:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/delete2.C'
    sources:
      binary: ./delete2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_delete2_344:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/delete2.C'
    sources:
      binary: ./delete2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_delete2_345:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/delete2.C'
    sources:
      binary: ./delete2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dso_handle2_1248:
  build:
    cflags: "-std=gnu++98 -fuse-cxa-atexit\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dso_handle2.C'
    sources:
      binary: dso_handle2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting declaration")[^\n]*\n?)+'
test_dso_handle2_1249:
  build:
    cflags: "-std=gnu++11 -fuse-cxa-atexit\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dso_handle2.C'
    sources:
      binary: dso_handle2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting declaration")[^\n]*\n?)+'
test_dso_handle2_1250:
  build:
    cflags: "-std=gnu++14 -fuse-cxa-atexit\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dso_handle2.C'
    sources:
      binary: dso_handle2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting declaration")[^\n]*\n?)+'
test_dso_handle2_346:
  build:
    cflags: "-std=gnu++98 -fuse-cxa-atexit\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dso_handle2.C'
    sources:
      binary: dso_handle2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting declaration")[^\n]*\n?)+'
test_dso_handle2_347:
  build:
    cflags: "-std=gnu++11 -fuse-cxa-atexit\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dso_handle2.C'
    sources:
      binary: dso_handle2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting declaration")[^\n]*\n?)+'
test_dso_handle2_348:
  build:
    cflags: "-std=gnu++14 -fuse-cxa-atexit\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dso_handle2.C'
    sources:
      binary: dso_handle2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting declaration")[^\n]*\n?)+'
test_dtor1_1251:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor1.C'
    sources:
      binary: ./dtor1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor1_1252:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor1.C'
    sources:
      binary: ./dtor1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor1_1253:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor1.C'
    sources:
      binary: ./dtor1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor1_349:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor1.C'
    sources:
      binary: ./dtor1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor1_350:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor1.C'
    sources:
      binary: ./dtor1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor1_351:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor1.C'
    sources:
      binary: ./dtor1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor2_1254:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor2.C'
    sources:
      binary: ./dtor2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor2_1255:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor2.C'
    sources:
      binary: ./dtor2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor2_1256:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor2.C'
    sources:
      binary: ./dtor2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor2_352:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor2.C'
    sources:
      binary: ./dtor2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor2_353:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor2.C'
    sources:
      binary: ./dtor2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor2_354:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor2.C'
    sources:
      binary: ./dtor2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor3_1257:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor3.C'
    sources:
      binary: ./dtor3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor3_1258:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor3.C'
    sources:
      binary: ./dtor3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor3_1259:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor3.C'
    sources:
      binary: ./dtor3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor3_355:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor3.C'
    sources:
      binary: ./dtor3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor3_356:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor3.C'
    sources:
      binary: ./dtor3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor3_357:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor3.C'
    sources:
      binary: ./dtor3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_dtor4_1260:
  build:
    cflags: "-std=c++98 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor4.C'
    sources:
      binary: dtor4.s
  group: GRPSERIAL
test_dtor4_1261:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor4.C'
    sources:
      binary: dtor4.s
  group: GRPSERIAL
test_dtor4_1262:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor4.C'
    sources:
      binary: dtor4.s
  group: GRPSERIAL
test_dtor4_358:
  build:
    cflags: "-std=c++98 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor4.C'
    sources:
      binary: dtor4.s
  group: GRPSERIAL
test_dtor4_359:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor4.C'
    sources:
      binary: dtor4.s
  group: GRPSERIAL
test_dtor4_360:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/dtor4.C'
    sources:
      binary: dtor4.s
  group: GRPSERIAL
test_elide1_1263:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide1.C'
    sources:
      binary: ./elide1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide1_1264:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide1.C'
    sources:
      binary: ./elide1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide1_1265:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide1.C'
    sources:
      binary: ./elide1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide1_361:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide1.C'
    sources:
      binary: ./elide1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide1_362:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide1.C'
    sources:
      binary: ./elide1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide1_363:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide1.C'
    sources:
      binary: ./elide1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide2_1266:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide2.C'
    sources:
      binary: ./elide2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide2_1267:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide2.C'
    sources:
      binary: ./elide2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide2_1268:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide2.C'
    sources:
      binary: ./elide2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide2_364:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide2.C'
    sources:
      binary: ./elide2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide2_365:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide2.C'
    sources:
      binary: ./elide2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide2_366:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide2.C'
    sources:
      binary: ./elide2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide3_1269:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide3.C'
    sources:
      binary: ./elide3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide3_1270:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide3.C'
    sources:
      binary: ./elide3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide3_1271:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide3.C'
    sources:
      binary: ./elide3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide3_367:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide3.C'
    sources:
      binary: ./elide3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide3_368:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide3.C'
    sources:
      binary: ./elide3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide3_369:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide3.C'
    sources:
      binary: ./elide3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide4_1272:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide4.C'
    sources:
      binary: elide4.s
  group: GRPSERIAL
test_elide4_1273:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide4.C'
    sources:
      binary: elide4.s
  group: GRPSERIAL
test_elide4_1274:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide4.C'
    sources:
      binary: elide4.s
  group: GRPSERIAL
test_elide4_370:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide4.C'
    sources:
      binary: elide4.s
  group: GRPSERIAL
test_elide4_371:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide4.C'
    sources:
      binary: elide4.s
  group: GRPSERIAL
test_elide4_372:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide4.C'
    sources:
      binary: elide4.s
  group: GRPSERIAL
test_elide5_1275:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide5.C'
    sources:
      binary: elide5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide5_1276:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide5.C'
    sources:
      binary: elide5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide5_373:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide5.C'
    sources:
      binary: elide5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide5_374:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide5.C'
    sources:
      binary: elide5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_elide6_1277:
  build:
    cflags: "-std=c++98 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide6.C'
    sources:
      binary: elide6.s
  group: GRPSERIAL
test_elide6_1278:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide6.C'
    sources:
      binary: elide6.s
  group: GRPSERIAL
test_elide6_1279:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide6.C'
    sources:
      binary: elide6.s
  group: GRPSERIAL
test_elide6_375:
  build:
    cflags: "-std=c++98 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide6.C'
    sources:
      binary: elide6.s
  group: GRPSERIAL
test_elide6_376:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide6.C'
    sources:
      binary: elide6.s
  group: GRPSERIAL
test_elide6_377:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/elide6.C'
    sources:
      binary: elide6.s
  group: GRPSERIAL
test_empty1_1280:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/empty1.C'
    sources:
      binary: ./empty1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_empty1_1281:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/empty1.C'
    sources:
      binary: ./empty1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_empty1_1282:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/empty1.C'
    sources:
      binary: ./empty1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_empty1_378:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/empty1.C'
    sources:
      binary: ./empty1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_empty1_379:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/empty1.C'
    sources:
      binary: ./empty1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_empty1_380:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/empty1.C'
    sources:
      binary: ./empty1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_enum1_1283:
  build:
    cflags: "-std=gnu++98 -Wno-overflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/enum1.C'
    sources:
      binary: enum1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_enum1_1284:
  build:
    cflags: "-std=gnu++11 -Wno-overflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/enum1.C'
    sources:
      binary: enum1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_enum1_1285:
  build:
    cflags: "-std=gnu++14 -Wno-overflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/enum1.C'
    sources:
      binary: enum1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_enum1_381:
  build:
    cflags: "-std=gnu++98 -Wno-overflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/enum1.C'
    sources:
      binary: enum1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_enum1_382:
  build:
    cflags: "-std=gnu++11 -Wno-overflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/enum1.C'
    sources:
      binary: enum1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_enum1_383:
  build:
    cflags: "-std=gnu++14 -Wno-overflow\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/enum1.C'
    sources:
      binary: enum1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_enum2_1286:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/enum2.C'
    sources:
      binary: enum2.s
  group: GRPSERIAL
test_enum2_1287:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/enum2.C'
    sources:
      binary: enum2.s
  group: GRPSERIAL
test_enum2_1288:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/enum2.C'
    sources:
      binary: enum2.s
  group: GRPSERIAL
test_enum2_384:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/enum2.C'
    sources:
      binary: enum2.s
  group: GRPSERIAL
test_enum2_385:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/enum2.C'
    sources:
      binary: enum2.s
  group: GRPSERIAL
test_enum2_386:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/enum2.C'
    sources:
      binary: enum2.s
  group: GRPSERIAL
test_error1_1289:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/error1.C'
    sources:
      binary: error1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("after struct definition")[^\n]*\n?)+'
test_error1_1290:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/error1.C'
    sources:
      binary: error1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("after struct definition")[^\n]*\n?)+'
test_error1_1291:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/error1.C'
    sources:
      binary: error1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("after struct definition")[^\n]*\n?)+'
test_error1_387:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/error1.C'
    sources:
      binary: error1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("after struct definition")[^\n]*\n?)+'
test_error1_388:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/error1.C'
    sources:
      binary: error1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("after struct definition")[^\n]*\n?)+'
test_error1_389:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/error1.C'
    sources:
      binary: error1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("after struct definition")[^\n]*\n?)+'
test_error2_1292:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/error2.C'
    sources:
      binary: error2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not allow
          designated|was not declared|designated initializer for an array")[^\n]*\n?)+'
test_error2_1293:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/error2.C'
    sources:
      binary: error2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not allow
          designated|was not declared|designated initializer for an array")[^\n]*\n?)+'
test_error2_1294:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/error2.C'
    sources:
      binary: error2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not allow
          designated|was not declared|designated initializer for an array")[^\n]*\n?)+'
test_error2_390:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/error2.C'
    sources:
      binary: error2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not allow
          designated|was not declared|designated initializer for an array")[^\n]*\n?)+'
test_error2_391:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/error2.C'
    sources:
      binary: error2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not allow
          designated|was not declared|designated initializer for an array")[^\n]*\n?)+'
test_error2_392:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/error2.C'
    sources:
      binary: error2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not allow
          designated|was not declared|designated initializer for an array")[^\n]*\n?)+'
test_explicit1_1295:
  build:
    cflags: "-std=gnu++98 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit1.C'
    sources:
      binary: explicit1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit1_1296:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit1.C'
    sources:
      binary: explicit1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit1_1297:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit1.C'
    sources:
      binary: explicit1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit1_393:
  build:
    cflags: "-std=gnu++98 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit1.C'
    sources:
      binary: explicit1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit1_394:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit1.C'
    sources:
      binary: explicit1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit1_395:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit1.C'
    sources:
      binary: explicit1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit2_1298:
  build:
    cflags: "-std=gnu++98 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit2.C'
    sources:
      binary: explicit2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit2_1299:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit2.C'
    sources:
      binary: explicit2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit2_1300:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit2.C'
    sources:
      binary: explicit2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit2_396:
  build:
    cflags: "-std=gnu++98 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit2.C'
    sources:
      binary: explicit2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit2_397:
  build:
    cflags: "-std=gnu++11 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit2.C'
    sources:
      binary: explicit2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit2_398:
  build:
    cflags: "-std=gnu++14 -pedantic\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit2.C'
    sources:
      binary: explicit2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("explicit")[^\n]*\n?)+'
test_explicit3_1301:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit3.C'
    sources:
      binary: explicit3.s
  group: GRPSERIAL
test_explicit3_1302:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit3.C'
    sources:
      binary: explicit3.s
  group: GRPSERIAL
test_explicit3_1303:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit3.C'
    sources:
      binary: explicit3.s
  group: GRPSERIAL
test_explicit3_399:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit3.C'
    sources:
      binary: explicit3.s
  group: GRPSERIAL
test_explicit3_400:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit3.C'
    sources:
      binary: explicit3.s
  group: GRPSERIAL
test_explicit3_401:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit3.C'
    sources:
      binary: explicit3.s
  group: GRPSERIAL
test_explicit4_1304:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit4.C'
    sources:
      binary: explicit4.s
  group: GRPSERIAL
test_explicit4_1305:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit4.C'
    sources:
      binary: explicit4.s
  group: GRPSERIAL
test_explicit4_1306:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit4.C'
    sources:
      binary: explicit4.s
  group: GRPSERIAL
test_explicit4_402:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit4.C'
    sources:
      binary: explicit4.s
  group: GRPSERIAL
test_explicit4_403:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit4.C'
    sources:
      binary: explicit4.s
  group: GRPSERIAL
test_explicit4_404:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/explicit4.C'
    sources:
      binary: explicit4.s
  group: GRPSERIAL
test_float1_1307:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/float1.C'
    sources:
      binary: ./float1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_float1_1308:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/float1.C'
    sources:
      binary: ./float1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_float1_1309:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/float1.C'
    sources:
      binary: ./float1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_float1_405:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/float1.C'
    sources:
      binary: ./float1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_float1_406:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/float1.C'
    sources:
      binary: ./float1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_float1_407:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/float1.C'
    sources:
      binary: ./float1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_for1_1310:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for1.C'
    sources:
      binary: ./for1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_for1_1311:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for1.C'
    sources:
      binary: ./for1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_for1_1312:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for1.C'
    sources:
      binary: ./for1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_for1_408:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for1.C'
    sources:
      binary: ./for1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_for1_409:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for1.C'
    sources:
      binary: ./for1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_for1_410:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for1.C'
    sources:
      binary: ./for1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_for2_1313:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for2.C'
    sources:
      binary: for2.s
  group: GRPSERIAL
test_for2_1314:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for2.C'
    sources:
      binary: for2.s
  group: GRPSERIAL
test_for2_1315:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for2.C'
    sources:
      binary: for2.s
  group: GRPSERIAL
test_for2_411:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for2.C'
    sources:
      binary: for2.s
  group: GRPSERIAL
test_for2_412:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for2.C'
    sources:
      binary: for2.s
  group: GRPSERIAL
test_for2_413:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for2.C'
    sources:
      binary: for2.s
  group: GRPSERIAL
test_for3_1316:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for3.C'
    sources:
      binary: for3.s
  group: GRPSERIAL
test_for3_1317:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for3.C'
    sources:
      binary: for3.s
  group: GRPSERIAL
test_for3_1318:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for3.C'
    sources:
      binary: for3.s
  group: GRPSERIAL
test_for3_414:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for3.C'
    sources:
      binary: for3.s
  group: GRPSERIAL
test_for3_415:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for3.C'
    sources:
      binary: for3.s
  group: GRPSERIAL
test_for3_416:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/for3.C'
    sources:
      binary: for3.s
  group: GRPSERIAL
test_global1_1319:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/global1.C'
    sources:
      binary: global1.s
  group: GRPSERIAL
test_global1_1320:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/global1.C'
    sources:
      binary: global1.s
  group: GRPSERIAL
test_global1_1321:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/global1.C'
    sources:
      binary: global1.s
  group: GRPSERIAL
test_global1_417:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/global1.C'
    sources:
      binary: global1.s
  group: GRPSERIAL
test_global1_418:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/global1.C'
    sources:
      binary: global1.s
  group: GRPSERIAL
test_global1_419:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/global1.C'
    sources:
      binary: global1.s
  group: GRPSERIAL
test_goto1_1322:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto1.C'
    sources:
      binary: ./goto1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_goto1_1323:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto1.C'
    sources:
      binary: ./goto1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_goto1_1324:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto1.C'
    sources:
      binary: ./goto1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_goto1_420:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto1.C'
    sources:
      binary: ./goto1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_goto1_421:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto1.C'
    sources:
      binary: ./goto1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_goto1_422:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto1.C'
    sources:
      binary: ./goto1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_goto2_1325:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto2.C'
    sources:
      binary: goto2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump")[^\n]*\n?)+'
test_goto2_1326:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto2.C'
    sources:
      binary: goto2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump")[^\n]*\n?)+'
test_goto2_1327:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto2.C'
    sources:
      binary: goto2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump")[^\n]*\n?)+'
test_goto2_423:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto2.C'
    sources:
      binary: goto2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump")[^\n]*\n?)+'
test_goto2_424:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto2.C'
    sources:
      binary: goto2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump")[^\n]*\n?)+'
test_goto2_425:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto2.C'
    sources:
      binary: goto2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("jump")[^\n]*\n?)+'
test_goto3_1328:
  build:
    cflags: "-std=gnu++98 -fpermissive -w\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto3.C'
    sources:
      binary: goto3.s
  group: GRPSERIAL
test_goto3_1329:
  build:
    cflags: "-std=gnu++11 -fpermissive -w\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto3.C'
    sources:
      binary: goto3.s
  group: GRPSERIAL
test_goto3_1330:
  build:
    cflags: "-std=gnu++14 -fpermissive -w\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto3.C'
    sources:
      binary: goto3.s
  group: GRPSERIAL
test_goto3_426:
  build:
    cflags: "-std=gnu++98 -fpermissive -w\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto3.C'
    sources:
      binary: goto3.s
  group: GRPSERIAL
test_goto3_427:
  build:
    cflags: "-std=gnu++11 -fpermissive -w\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto3.C'
    sources:
      binary: goto3.s
  group: GRPSERIAL
test_goto3_428:
  build:
    cflags: "-std=gnu++14 -fpermissive -w\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/goto3.C'
    sources:
      binary: goto3.s
  group: GRPSERIAL
test_init-ref1_1331:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref1.C'
    sources:
      binary: ./init-ref1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref1_1332:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref1.C'
    sources:
      binary: ./init-ref1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref1_1333:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref1.C'
    sources:
      binary: ./init-ref1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref1_429:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref1.C'
    sources:
      binary: ./init-ref1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref1_430:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref1.C'
    sources:
      binary: ./init-ref1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref1_431:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref1.C'
    sources:
      binary: ./init-ref1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref2_1334:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref2.C'
    sources:
      binary: ./init-ref2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref2_1335:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref2.C'
    sources:
      binary: ./init-ref2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref2_1336:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref2.C'
    sources:
      binary: ./init-ref2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref2_432:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref2.C'
    sources:
      binary: ./init-ref2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref2_433:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref2.C'
    sources:
      binary: ./init-ref2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref2_434:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref2.C'
    sources:
      binary: ./init-ref2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref3_1337:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref3.C'
    sources:
      binary: init-ref3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref3_1338:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref3.C'
    sources:
      binary: init-ref3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref3_1339:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref3.C'
    sources:
      binary: init-ref3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref3_435:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref3.C'
    sources:
      binary: init-ref3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref3_436:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref3.C'
    sources:
      binary: init-ref3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_init-ref3_437:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/init-ref3.C'
    sources:
      binary: init-ref3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_inline1_1340:
  build:
    cflags: "-std=gnu++98 -finline\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/inline1.C'
    sources:
      binary: inline1.s
  group: GRPSERIAL
test_inline1_1341:
  build:
    cflags: "-std=gnu++11 -finline\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/inline1.C'
    sources:
      binary: inline1.s
  group: GRPSERIAL
test_inline1_1342:
  build:
    cflags: "-std=gnu++14 -finline\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/inline1.C'
    sources:
      binary: inline1.s
  group: GRPSERIAL
test_inline1_438:
  build:
    cflags: "-std=gnu++98 -finline\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/inline1.C'
    sources:
      binary: inline1.s
  group: GRPSERIAL
test_inline1_439:
  build:
    cflags: "-std=gnu++11 -finline\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/inline1.C'
    sources:
      binary: inline1.s
  group: GRPSERIAL
test_inline1_440:
  build:
    cflags: "-std=gnu++14 -finline\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/inline1.C'
    sources:
      binary: inline1.s
  group: GRPSERIAL
test_lifetime1_1343:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime1.C'
    sources:
      binary: ./lifetime1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime1_1344:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime1.C'
    sources:
      binary: ./lifetime1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime1_1345:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime1.C'
    sources:
      binary: ./lifetime1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime1_441:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime1.C'
    sources:
      binary: ./lifetime1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime1_442:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime1.C'
    sources:
      binary: ./lifetime1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime1_443:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime1.C'
    sources:
      binary: ./lifetime1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime2_1346:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime2.C'
    sources:
      binary: ./lifetime2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime2_1347:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime2.C'
    sources:
      binary: ./lifetime2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime2_1348:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime2.C'
    sources:
      binary: ./lifetime2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime2_444:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime2.C'
    sources:
      binary: ./lifetime2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime2_445:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime2.C'
    sources:
      binary: ./lifetime2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime2_446:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime2.C'
    sources:
      binary: ./lifetime2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime3_1349:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime3.C'
    sources:
      binary: ./lifetime3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime3_1350:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime3.C'
    sources:
      binary: ./lifetime3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime3_1351:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime3.C'
    sources:
      binary: ./lifetime3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime3_447:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime3.C'
    sources:
      binary: ./lifetime3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime3_448:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime3.C'
    sources:
      binary: ./lifetime3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_lifetime3_449:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/lifetime3.C'
    sources:
      binary: ./lifetime3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_member1_1352:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/member1.C'
    sources:
      binary: member1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_member1_1353:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/member1.C'
    sources:
      binary: member1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_member1_1354:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/member1.C'
    sources:
      binary: member1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_member1_450:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/member1.C'
    sources:
      binary: member1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_member1_451:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/member1.C'
    sources:
      binary: member1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_member1_452:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/member1.C'
    sources:
      binary: member1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_mutable1_1355:
  build:
    cflags: "-std=c++98 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/mutable1.C'
    sources:
      binary: mutable1.s
  group: GRPSERIAL
test_mutable1_1356:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/mutable1.C'
    sources:
      binary: mutable1.s
  group: GRPSERIAL
test_mutable1_1357:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/mutable1.C'
    sources:
      binary: mutable1.s
  group: GRPSERIAL
test_mutable1_453:
  build:
    cflags: "-std=c++98 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/mutable1.C'
    sources:
      binary: mutable1.s
  group: GRPSERIAL
test_mutable1_454:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/mutable1.C'
    sources:
      binary: mutable1.s
  group: GRPSERIAL
test_mutable1_455:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/mutable1.C'
    sources:
      binary: mutable1.s
  group: GRPSERIAL
test_new10_1361:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new10.C'
    sources:
      binary: new10.s
  group: GRPSERIAL
test_new10_1362:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new10.C'
    sources:
      binary: new10.s
  group: GRPSERIAL
test_new10_1363:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new10.C'
    sources:
      binary: new10.s
  group: GRPSERIAL
test_new10_459:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new10.C'
    sources:
      binary: new10.s
  group: GRPSERIAL
test_new10_460:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new10.C'
    sources:
      binary: new10.s
  group: GRPSERIAL
test_new10_461:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new10.C'
    sources:
      binary: new10.s
  group: GRPSERIAL
test_new11_1364:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new11.C'
    sources:
      binary: ./new11.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new11_1365:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new11.C'
    sources:
      binary: ./new11.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new11_1366:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new11.C'
    sources:
      binary: ./new11.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new11_462:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new11.C'
    sources:
      binary: ./new11.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new11_463:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new11.C'
    sources:
      binary: ./new11.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new11_464:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new11.C'
    sources:
      binary: ./new11.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new12_1367:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new12.C'
    sources:
      binary: new12.s
  group: GRPSERIAL
test_new12_1368:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new12.C'
    sources:
      binary: new12.s
  group: GRPSERIAL
test_new12_1369:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new12.C'
    sources:
      binary: new12.s
  group: GRPSERIAL
test_new12_465:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new12.C'
    sources:
      binary: new12.s
  group: GRPSERIAL
test_new12_466:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new12.C'
    sources:
      binary: new12.s
  group: GRPSERIAL
test_new12_467:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new12.C'
    sources:
      binary: new12.s
  group: GRPSERIAL
test_new13_1370:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new13.C'
    sources:
      binary: new13.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
test_new13_1371:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new13.C'
    sources:
      binary: new13.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
test_new13_1372:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new13.C'
    sources:
      binary: new13.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
test_new13_468:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new13.C'
    sources:
      binary: new13.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
test_new13_469:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new13.C'
    sources:
      binary: new13.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
test_new13_470:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new13.C'
    sources:
      binary: new13.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
test_new14_1373:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new14.C'
    sources:
      binary: new14.s
  group: GRPSERIAL
test_new14_1374:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new14.C'
    sources:
      binary: new14.s
  group: GRPSERIAL
test_new14_1375:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new14.C'
    sources:
      binary: new14.s
  group: GRPSERIAL
test_new14_471:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new14.C'
    sources:
      binary: new14.s
  group: GRPSERIAL
test_new14_472:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new14.C'
    sources:
      binary: new14.s
  group: GRPSERIAL
test_new14_473:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new14.C'
    sources:
      binary: new14.s
  group: GRPSERIAL
test_new15_1376:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new15.C'
    sources:
      binary: new15.s
  group: GRPSERIAL
test_new15_1377:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new15.C'
    sources:
      binary: new15.s
  group: GRPSERIAL
test_new15_1378:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new15.C'
    sources:
      binary: new15.s
  group: GRPSERIAL
test_new15_474:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new15.C'
    sources:
      binary: new15.s
  group: GRPSERIAL
test_new15_475:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new15.C'
    sources:
      binary: new15.s
  group: GRPSERIAL
test_new15_476:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new15.C'
    sources:
      binary: new15.s
  group: GRPSERIAL
test_new16_1379:
  build:
    cflags: -std=gnu++98 -O2 -fstrict-aliasing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new16.C'
    sources:
      binary: ./new16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new16_1380:
  build:
    cflags: -std=gnu++11 -O2 -fstrict-aliasing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new16.C'
    sources:
      binary: ./new16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new16_1381:
  build:
    cflags: -std=gnu++14 -O2 -fstrict-aliasing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new16.C'
    sources:
      binary: ./new16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new16_477:
  build:
    cflags: -std=gnu++98 -O2 -fstrict-aliasing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new16.C'
    sources:
      binary: ./new16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new16_478:
  build:
    cflags: -std=gnu++11 -O2 -fstrict-aliasing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new16.C'
    sources:
      binary: ./new16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new16_479:
  build:
    cflags: -std=gnu++14 -O2 -fstrict-aliasing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new16.C'
    sources:
      binary: ./new16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new17_1382:
  build:
    cflags: "-std=gnu++98 -O2 -fstrict-aliasing -fno-store-merging -fdump-tree-optimized\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new17.C'
    sources:
      binary: new17.s
  group: GRPSERIAL
test_new17_1383:
  build:
    cflags: "-std=gnu++11 -O2 -fstrict-aliasing -fno-store-merging -fdump-tree-optimized\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new17.C'
    sources:
      binary: new17.s
  group: GRPSERIAL
test_new17_1384:
  build:
    cflags: "-std=gnu++14 -O2 -fstrict-aliasing -fno-store-merging -fdump-tree-optimized\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new17.C'
    sources:
      binary: new17.s
  group: GRPSERIAL
test_new17_480:
  build:
    cflags: "-std=gnu++98 -O2 -fstrict-aliasing -fno-store-merging -fdump-tree-optimized\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new17.C'
    sources:
      binary: new17.s
  group: GRPSERIAL
test_new17_481:
  build:
    cflags: "-std=gnu++11 -O2 -fstrict-aliasing -fno-store-merging -fdump-tree-optimized\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new17.C'
    sources:
      binary: new17.s
  group: GRPSERIAL
test_new17_482:
  build:
    cflags: "-std=gnu++14 -O2 -fstrict-aliasing -fno-store-merging -fdump-tree-optimized\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new17.C'
    sources:
      binary: new17.s
  group: GRPSERIAL
test_new18_1385:
  build:
    cflags: "-std=gnu++98 -O2 -fstrict-aliasing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new18.C'
    sources:
      binary: new18.s
  group: GRPSERIAL
test_new18_1386:
  build:
    cflags: "-std=gnu++11 -O2 -fstrict-aliasing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new18.C'
    sources:
      binary: new18.s
  group: GRPSERIAL
test_new18_1387:
  build:
    cflags: "-std=gnu++14 -O2 -fstrict-aliasing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new18.C'
    sources:
      binary: new18.s
  group: GRPSERIAL
test_new18_483:
  build:
    cflags: "-std=gnu++98 -O2 -fstrict-aliasing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new18.C'
    sources:
      binary: new18.s
  group: GRPSERIAL
test_new18_484:
  build:
    cflags: "-std=gnu++11 -O2 -fstrict-aliasing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new18.C'
    sources:
      binary: new18.s
  group: GRPSERIAL
test_new18_485:
  build:
    cflags: "-std=gnu++14 -O2 -fstrict-aliasing\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new18.C'
    sources:
      binary: new18.s
  group: GRPSERIAL
test_new19_1388:
  build:
    cflags: "-std=gnu++98 -O2 -fstrict-aliasing -fdump-tree-pre-details\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new19.C'
    sources:
      binary: new19.s
  group: GRPSERIAL
test_new19_1389:
  build:
    cflags: "-std=gnu++11 -O2 -fstrict-aliasing -fdump-tree-pre-details\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new19.C'
    sources:
      binary: new19.s
  group: GRPSERIAL
test_new19_1390:
  build:
    cflags: "-std=gnu++14 -O2 -fstrict-aliasing -fdump-tree-pre-details\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new19.C'
    sources:
      binary: new19.s
  group: GRPSERIAL
test_new19_486:
  build:
    cflags: "-std=gnu++98 -O2 -fstrict-aliasing -fdump-tree-pre-details\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new19.C'
    sources:
      binary: new19.s
  group: GRPSERIAL
test_new19_487:
  build:
    cflags: "-std=gnu++11 -O2 -fstrict-aliasing -fdump-tree-pre-details\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new19.C'
    sources:
      binary: new19.s
  group: GRPSERIAL
test_new19_488:
  build:
    cflags: "-std=gnu++14 -O2 -fstrict-aliasing -fdump-tree-pre-details\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new19.C'
    sources:
      binary: new19.s
  group: GRPSERIAL
test_new1_1358:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new1.C'
    sources:
      binary: new1.s
  group: GRPSERIAL
test_new1_1359:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new1.C'
    sources:
      binary: new1.s
  group: GRPSERIAL
test_new1_1360:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new1.C'
    sources:
      binary: new1.s
  group: GRPSERIAL
test_new1_456:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new1.C'
    sources:
      binary: new1.s
  group: GRPSERIAL
test_new1_457:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new1.C'
    sources:
      binary: new1.s
  group: GRPSERIAL
test_new1_458:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new1.C'
    sources:
      binary: new1.s
  group: GRPSERIAL
test_new20_1394:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new20.C'
    sources:
      binary: new20.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          array with unspecified bounds")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          array with unspecified bounds")[^\n]*\n?)+'
test_new20_1395:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new20.C'
    sources:
      binary: new20.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          array with unspecified bounds")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          array with unspecified bounds")[^\n]*\n?)+'
test_new20_1396:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new20.C'
    sources:
      binary: new20.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          array with unspecified bounds")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          array with unspecified bounds")[^\n]*\n?)+'
test_new20_492:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new20.C'
    sources:
      binary: new20.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          array with unspecified bounds")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          array with unspecified bounds")[^\n]*\n?)+'
test_new20_493:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new20.C'
    sources:
      binary: new20.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          array with unspecified bounds")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          array with unspecified bounds")[^\n]*\n?)+'
test_new20_494:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new20.C'
    sources:
      binary: new20.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          array with unspecified bounds")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid use of
          array with unspecified bounds")[^\n]*\n?)+'
test_new21_1397:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new21.C'
    sources:
      binary: new21.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deallocation")[^\n]*\n?)+'
test_new21_1398:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new21.C'
    sources:
      binary: new21.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deallocation")[^\n]*\n?)+'
test_new21_1399:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new21.C'
    sources:
      binary: new21.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deallocation")[^\n]*\n?)+'
test_new21_495:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new21.C'
    sources:
      binary: new21.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deallocation")[^\n]*\n?)+'
test_new21_496:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new21.C'
    sources:
      binary: new21.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deallocation")[^\n]*\n?)+'
test_new21_497:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new21.C'
    sources:
      binary: new21.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deallocation")[^\n]*\n?)+'
test_new22_1400:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new22.C'
    sources:
      binary: new22.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("with no value")[^\n]*\n?)+'
test_new22_1401:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new22.C'
    sources:
      binary: new22.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("with no value")[^\n]*\n?)+'
test_new22_1402:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new22.C'
    sources:
      binary: new22.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("with no value")[^\n]*\n?)+'
test_new22_498:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new22.C'
    sources:
      binary: new22.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("with no value")[^\n]*\n?)+'
test_new22_499:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new22.C'
    sources:
      binary: new22.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("with no value")[^\n]*\n?)+'
test_new22_500:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new22.C'
    sources:
      binary: new22.s
  group: GRPSERIAL
  validate:
    match:
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("with no value")[^\n]*\n?)+'
test_new23_1403:
  build:
    cflags: -std=gnu++98 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new23.C'
    sources:
      binary: ./new23.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new23_1404:
  build:
    cflags: -std=gnu++11 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new23.C'
    sources:
      binary: ./new23.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new23_1405:
  build:
    cflags: -std=gnu++14 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new23.C'
    sources:
      binary: ./new23.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new23_501:
  build:
    cflags: -std=gnu++98 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new23.C'
    sources:
      binary: ./new23.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new23_502:
  build:
    cflags: -std=gnu++11 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new23.C'
    sources:
      binary: ./new23.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new23_503:
  build:
    cflags: -std=gnu++14 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new23.C'
    sources:
      binary: ./new23.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new24_1406:
  build:
    cflags: "-std=gnu++98 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new24.C'
    sources:
      binary: new24.s
  group: GRPSERIAL
test_new24_1407:
  build:
    cflags: "-std=gnu++11 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new24.C'
    sources:
      binary: new24.s
  group: GRPSERIAL
test_new24_1408:
  build:
    cflags: "-std=gnu++14 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new24.C'
    sources:
      binary: new24.s
  group: GRPSERIAL
test_new24_504:
  build:
    cflags: "-std=gnu++98 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new24.C'
    sources:
      binary: new24.s
  group: GRPSERIAL
test_new24_505:
  build:
    cflags: "-std=gnu++11 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new24.C'
    sources:
      binary: new24.s
  group: GRPSERIAL
test_new24_506:
  build:
    cflags: "-std=gnu++14 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new24.C'
    sources:
      binary: new24.s
  group: GRPSERIAL
test_new25_1409:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new25.C'
    sources:
      binary: new25.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_new25_1410:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new25.C'
    sources:
      binary: new25.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_new25_1411:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new25.C'
    sources:
      binary: new25.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_new25_507:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new25.C'
    sources:
      binary: new25.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_new25_508:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new25.C'
    sources:
      binary: new25.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_new25_509:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new25.C'
    sources:
      binary: new25.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first parameter")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("dynamic exception
          specification")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'
test_new26_1412:
  build:
    cflags: -std=gnu++98 -O2 -fstrict-aliasing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new26.C'
    sources:
      binary: ./new26.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new26_1413:
  build:
    cflags: -std=gnu++11 -O2 -fstrict-aliasing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new26.C'
    sources:
      binary: ./new26.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new26_1414:
  build:
    cflags: -std=gnu++14 -O2 -fstrict-aliasing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new26.C'
    sources:
      binary: ./new26.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new26_510:
  build:
    cflags: -std=gnu++98 -O2 -fstrict-aliasing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new26.C'
    sources:
      binary: ./new26.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new26_511:
  build:
    cflags: -std=gnu++11 -O2 -fstrict-aliasing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new26.C'
    sources:
      binary: ./new26.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new26_512:
  build:
    cflags: -std=gnu++14 -O2 -fstrict-aliasing
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new26.C'
    sources:
      binary: ./new26.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new27_1415:
  build:
    cflags: -std=gnu++98 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new27.C'
    sources:
      binary: ./new27.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new27_1416:
  build:
    cflags: -std=gnu++11 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new27.C'
    sources:
      binary: ./new27.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new27_1417:
  build:
    cflags: -std=gnu++14 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new27.C'
    sources:
      binary: ./new27.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new27_513:
  build:
    cflags: -std=gnu++98 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new27.C'
    sources:
      binary: ./new27.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new27_514:
  build:
    cflags: -std=gnu++11 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new27.C'
    sources:
      binary: ./new27.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new27_515:
  build:
    cflags: -std=gnu++14 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new27.C'
    sources:
      binary: ./new27.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new28_1418:
  build:
    cflags: -std=gnu++98 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new28.C'
    sources:
      binary: ./new28.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new28_1419:
  build:
    cflags: -std=gnu++11 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new28.C'
    sources:
      binary: ./new28.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new28_1420:
  build:
    cflags: -std=gnu++14 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new28.C'
    sources:
      binary: ./new28.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new28_516:
  build:
    cflags: -std=gnu++98 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new28.C'
    sources:
      binary: ./new28.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new28_517:
  build:
    cflags: -std=gnu++11 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new28.C'
    sources:
      binary: ./new28.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new28_518:
  build:
    cflags: -std=gnu++14 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new28.C'
    sources:
      binary: ./new28.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new29_1421:
  build:
    cflags: -std=gnu++98 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new29.C'
    sources:
      binary: ./new29.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new29_1422:
  build:
    cflags: -std=gnu++11 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new29.C'
    sources:
      binary: ./new29.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new29_1423:
  build:
    cflags: -std=gnu++14 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new29.C'
    sources:
      binary: ./new29.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new29_519:
  build:
    cflags: -std=gnu++98 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new29.C'
    sources:
      binary: ./new29.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new29_520:
  build:
    cflags: -std=gnu++11 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new29.C'
    sources:
      binary: ./new29.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new29_521:
  build:
    cflags: -std=gnu++14 -O2
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new29.C'
    sources:
      binary: ./new29.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new2_1391:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new2.C'
    sources:
      binary: new2.s
  group: GRPSERIAL
test_new2_1392:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new2.C'
    sources:
      binary: new2.s
  group: GRPSERIAL
test_new2_1393:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new2.C'
    sources:
      binary: new2.s
  group: GRPSERIAL
test_new2_489:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new2.C'
    sources:
      binary: new2.s
  group: GRPSERIAL
test_new2_490:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new2.C'
    sources:
      binary: new2.s
  group: GRPSERIAL
test_new2_491:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new2.C'
    sources:
      binary: new2.s
  group: GRPSERIAL
test_new30_1427:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new30.C'
    sources:
      binary: new30.s
  group: GRPSERIAL
test_new30_1428:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new30.C'
    sources:
      binary: new30.s
  group: GRPSERIAL
test_new30_1429:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new30.C'
    sources:
      binary: new30.s
  group: GRPSERIAL
test_new30_525:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new30.C'
    sources:
      binary: new30.s
  group: GRPSERIAL
test_new30_526:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new30.C'
    sources:
      binary: new30.s
  group: GRPSERIAL
test_new30_527:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new30.C'
    sources:
      binary: new30.s
  group: GRPSERIAL
test_new31_1430:
  build:
    cflags: -std=gnu++98 -Wuninitialized
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new31.C'
    sources:
      binary: ./new31.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new31_1431:
  build:
    cflags: -std=gnu++11 -Wuninitialized
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new31.C'
    sources:
      binary: ./new31.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new31_1432:
  build:
    cflags: -std=gnu++14 -Wuninitialized
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new31.C'
    sources:
      binary: ./new31.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new31_528:
  build:
    cflags: -std=gnu++98 -Wuninitialized
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new31.C'
    sources:
      binary: ./new31.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new31_529:
  build:
    cflags: -std=gnu++11 -Wuninitialized
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new31.C'
    sources:
      binary: ./new31.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new31_530:
  build:
    cflags: -std=gnu++14 -Wuninitialized
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new31.C'
    sources:
      binary: ./new31.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new32_1433:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new32.C'
    sources:
      binary: new32.s
  group: GRPSERIAL
test_new32_1434:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new32.C'
    sources:
      binary: new32.s
  group: GRPSERIAL
test_new32_1435:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new32.C'
    sources:
      binary: new32.s
  group: GRPSERIAL
test_new32_531:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new32.C'
    sources:
      binary: new32.s
  group: GRPSERIAL
test_new32_532:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new32.C'
    sources:
      binary: new32.s
  group: GRPSERIAL
test_new32_533:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new32.C'
    sources:
      binary: new32.s
  group: GRPSERIAL
test_new33_1436:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new33.C'
    sources:
      binary: new33.s
  group: GRPSERIAL
test_new33_1437:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new33.C'
    sources:
      binary: new33.s
  group: GRPSERIAL
test_new33_1438:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new33.C'
    sources:
      binary: new33.s
  group: GRPSERIAL
test_new33_534:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new33.C'
    sources:
      binary: new33.s
  group: GRPSERIAL
test_new33_535:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new33.C'
    sources:
      binary: new33.s
  group: GRPSERIAL
test_new33_536:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new33.C'
    sources:
      binary: new33.s
  group: GRPSERIAL
test_new34_1439:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new34.C'
    sources:
      binary: new34.s
  group: GRPSERIAL
test_new34_1440:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new34.C'
    sources:
      binary: new34.s
  group: GRPSERIAL
test_new34_1441:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new34.C'
    sources:
      binary: new34.s
  group: GRPSERIAL
test_new34_537:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new34.C'
    sources:
      binary: new34.s
  group: GRPSERIAL
test_new34_538:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new34.C'
    sources:
      binary: new34.s
  group: GRPSERIAL
test_new34_539:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new34.C'
    sources:
      binary: new34.s
  group: GRPSERIAL
test_new35_1442:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new35.C'
    sources:
      binary: new35.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("array")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
test_new35_1443:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new35.C'
    sources:
      binary: new35.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("array")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
test_new35_1444:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new35.C'
    sources:
      binary: new35.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("array")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
test_new35_540:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new35.C'
    sources:
      binary: new35.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("array")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
test_new35_541:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new35.C'
    sources:
      binary: new35.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("array")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
test_new35_542:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new35.C'
    sources:
      binary: new35.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("array")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be constant|not
          a constant")[^\n]*\n?)+'
test_new36_1445:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new36.C'
    sources:
      binary: ./new36.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new36_1446:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new36.C'
    sources:
      binary: ./new36.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new36_1447:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new36.C'
    sources:
      binary: ./new36.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new36_543:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new36.C'
    sources:
      binary: ./new36.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new36_544:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new36.C'
    sources:
      binary: ./new36.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new36_545:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new36.C'
    sources:
      binary: ./new36.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new37_1448:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new37.C'
    sources:
      binary: new37.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|usable in a constant")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size in array
          new")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          has non-integral type")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("23:\''constexpr\''
          needed")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("23:ISO C\\\\+\\\\+
          forbids")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral or enumeration
          type")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|not a constant|runtime bound")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|not a constant")[^\n]*\n?)+'
test_new37_1449:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new37.C'
    sources:
      binary: new37.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|usable in a constant")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size in array
          new")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          has non-integral type")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("23:\''constexpr\''
          needed")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("23:ISO C\\\\+\\\\+
          forbids")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral or enumeration
          type")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|not a constant|runtime bound")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|not a constant")[^\n]*\n?)+'
test_new37_1450:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new37.C'
    sources:
      binary: new37.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|usable in a constant")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size in array
          new")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          has non-integral type")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("23:\''constexpr\''
          needed")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("23:ISO C\\\\+\\\\+
          forbids")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral or enumeration
          type")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|not a constant|runtime bound")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|not a constant")[^\n]*\n?)+'
test_new37_546:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new37.C'
    sources:
      binary: new37.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|usable in a constant")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size in array
          new")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          has non-integral type")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("23:\''constexpr\''
          needed")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("23:ISO C\\\\+\\\\+
          forbids")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral or enumeration
          type")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|not a constant|runtime bound")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|not a constant")[^\n]*\n?)+'
test_new37_547:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new37.C'
    sources:
      binary: new37.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|usable in a constant")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size in array
          new")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          has non-integral type")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("23:\''constexpr\''
          needed")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("23:ISO C\\\\+\\\\+
          forbids")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral or enumeration
          type")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|not a constant|runtime bound")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|not a constant")[^\n]*\n?)+'
test_new37_548:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new37.C'
    sources:
      binary: new37.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|usable in a constant")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size in array
          new")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          has non-integral type")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("23:\''constexpr\''
          needed")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("23:ISO C\\\\+\\\\+
          forbids")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integral or enumeration
          type")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|not a constant|runtime bound")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("variable length|array
          size|not a constant")[^\n]*\n?)+'
test_new38_1451:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new38.C'
    sources:
      binary: new38.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
test_new38_1452:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new38.C'
    sources:
      binary: new38.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
test_new38_1453:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new38.C'
    sources:
      binary: new38.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
test_new38_549:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new38.C'
    sources:
      binary: new38.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
test_new38_550:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new38.C'
    sources:
      binary: new38.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
test_new38_551:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new38.C'
    sources:
      binary: new38.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
test_new39_1454:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new39.C'
    sources:
      binary: ./new39.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new39_1455:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new39.C'
    sources:
      binary: ./new39.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new39_1456:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new39.C'
    sources:
      binary: ./new39.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new39_552:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new39.C'
    sources:
      binary: ./new39.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new39_553:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new39.C'
    sources:
      binary: ./new39.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new39_554:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new39.C'
    sources:
      binary: ./new39.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new3_1424:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new3.C'
    sources:
      binary: new3.s
  group: GRPSERIAL
test_new3_1425:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new3.C'
    sources:
      binary: new3.s
  group: GRPSERIAL
test_new3_1426:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new3.C'
    sources:
      binary: new3.s
  group: GRPSERIAL
test_new3_522:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new3.C'
    sources:
      binary: new3.s
  group: GRPSERIAL
test_new3_523:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new3.C'
    sources:
      binary: new3.s
  group: GRPSERIAL
test_new3_524:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new3.C'
    sources:
      binary: new3.s
  group: GRPSERIAL
test_new40_1460:
  build:
    cflags: -std=c++03
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new40.C'
    sources:
      binary: ./new40.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new40_558:
  build:
    cflags: -std=c++03
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new40.C'
    sources:
      binary: ./new40.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new41_1461:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new41.C'
    sources:
      binary: ./new41.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new41_1462:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new41.C'
    sources:
      binary: ./new41.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new41_1463:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new41.C'
    sources:
      binary: ./new41.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new41_559:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new41.C'
    sources:
      binary: ./new41.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new41_560:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new41.C'
    sources:
      binary: ./new41.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new41_561:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new41.C'
    sources:
      binary: ./new41.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new42_1464:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new42.C'
    sources:
      binary: ./new42.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new42_1465:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new42.C'
    sources:
      binary: ./new42.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new42_1466:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new42.C'
    sources:
      binary: ./new42.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new42_562:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new42.C'
    sources:
      binary: ./new42.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new42_563:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new42.C'
    sources:
      binary: ./new42.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new42_564:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new42.C'
    sources:
      binary: ./new42.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new43_1467:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new43.C'
    sources:
      binary: new43.s
  group: GRPSERIAL
  validate:
    match:
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+:137:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+:86:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+:87:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
test_new43_1468:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new43.C'
    sources:
      binary: new43.s
  group: GRPSERIAL
  validate:
    match:
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+:137:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+:86:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+:87:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
test_new43_1469:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new43.C'
    sources:
      binary: new43.s
  group: GRPSERIAL
  validate:
    match:
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+:137:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+:86:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+:87:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
test_new43_565:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new43.C'
    sources:
      binary: new43.s
  group: GRPSERIAL
  validate:
    match:
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+:137:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+:86:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+:87:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
test_new43_566:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new43.C'
    sources:
      binary: new43.s
  group: GRPSERIAL
  validate:
    match:
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+:137:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+:86:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+:87:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
test_new43_567:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new43.C'
    sources:
      binary: new43.s
  group: GRPSERIAL
  validate:
    match:
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+:137:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+:141:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+:152:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+:154:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+:157:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+:159:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+:161:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+:82:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+:86:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+:87:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is negative")[^\n]*\n?)+'
test_new44_1470:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new44.C'
    sources:
      binary: new44.s
  group: GRPSERIAL
  validate:
    match:
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+:121:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+:164:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+:165:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+:166:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+:168:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+:172:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+:184:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+:186:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+:187:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+:188:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+:189:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+:193:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+:194:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+:211:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+:213:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L214:
        expect: true
        expr: '(^|\n)([^\n]+:214:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+:215:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L216:
        expect: true
        expr: '(^|\n)([^\n]+:216:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+:217:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+:218:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+:231:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L232:
        expect: true
        expr: '(^|\n)([^\n]+:232:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+:233:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+:234:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+:235:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+:237:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+:240:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+:241:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+:242:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+:243:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L244:
        expect: true
        expr: '(^|\n)([^\n]+:244:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L245:
        expect: true
        expr: '(^|\n)([^\n]+:245:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L255:
        expect: true
        expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L256:
        expect: true
        expr: '(^|\n)([^\n]+:256:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L257:
        expect: true
        expr: '(^|\n)([^\n]+:257:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L258:
        expect: true
        expr: '(^|\n)([^\n]+:258:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L259:
        expect: true
        expr: '(^|\n)([^\n]+:259:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L260:
        expect: true
        expr: '(^|\n)([^\n]+:260:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L262:
        expect: true
        expr: '(^|\n)([^\n]+:262:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L264:
        expect: true
        expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L265:
        expect: true
        expr: '(^|\n)([^\n]+:265:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L266:
        expect: true
        expr: '(^|\n)([^\n]+:266:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+:267:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L269:
        expect: true
        expr: '(^|\n)([^\n]+:269:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+:279:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L282:
        expect: true
        expr: '(^|\n)([^\n]+:282:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L299:
        expect: true
        expr: '(^|\n)([^\n]+:299:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L300:
        expect: true
        expr: '(^|\n)([^\n]+:300:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L301:
        expect: true
        expr: '(^|\n)([^\n]+:301:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L318:
        expect: true
        expr: '(^|\n)([^\n]+:318:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L319:
        expect: true
        expr: '(^|\n)([^\n]+:319:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L320:
        expect: true
        expr: '(^|\n)([^\n]+:320:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L321:
        expect: true
        expr: '(^|\n)([^\n]+:321:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L322:
        expect: true
        expr: '(^|\n)([^\n]+:322:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L324:
        expect: true
        expr: '(^|\n)([^\n]+:324:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L345:
        expect: true
        expr: '(^|\n)([^\n]+:345:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L346:
        expect: true
        expr: '(^|\n)([^\n]+:346:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L347:
        expect: true
        expr: '(^|\n)([^\n]+:347:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L348:
        expect: true
        expr: '(^|\n)([^\n]+:348:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L349:
        expect: true
        expr: '(^|\n)([^\n]+:349:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L350:
        expect: true
        expr: '(^|\n)([^\n]+:350:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L351:
        expect: true
        expr: '(^|\n)([^\n]+:351:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L362:
        expect: true
        expr: '(^|\n)([^\n]+:362:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L363:
        expect: true
        expr: '(^|\n)([^\n]+:363:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L364:
        expect: true
        expr: '(^|\n)([^\n]+:364:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L365:
        expect: true
        expr: '(^|\n)([^\n]+:365:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L366:
        expect: true
        expr: '(^|\n)([^\n]+:366:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L367:
        expect: true
        expr: '(^|\n)([^\n]+:367:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L369:
        expect: true
        expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L372:
        expect: true
        expr: '(^|\n)([^\n]+:372:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L374:
        expect: true
        expr: '(^|\n)([^\n]+:374:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+:375:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L376:
        expect: true
        expr: '(^|\n)([^\n]+:376:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L377:
        expect: true
        expr: '(^|\n)([^\n]+:377:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L378:
        expect: true
        expr: '(^|\n)([^\n]+:378:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L379:
        expect: true
        expr: '(^|\n)([^\n]+:379:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L380:
        expect: true
        expr: '(^|\n)([^\n]+:380:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L381:
        expect: true
        expr: '(^|\n)([^\n]+:381:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L382:
        expect: true
        expr: '(^|\n)([^\n]+:382:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L383:
        expect: true
        expr: '(^|\n)([^\n]+:383:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L400:
        expect: true
        expr: '(^|\n)([^\n]+:400:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L401:
        expect: true
        expr: '(^|\n)([^\n]+:401:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L402:
        expect: true
        expr: '(^|\n)([^\n]+:402:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L403:
        expect: true
        expr: '(^|\n)([^\n]+:403:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+:404:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L406:
        expect: true
        expr: '(^|\n)([^\n]+:406:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L417:
        expect: true
        expr: '(^|\n)([^\n]+:417:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L418:
        expect: true
        expr: '(^|\n)([^\n]+:418:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L419:
        expect: true
        expr: '(^|\n)([^\n]+:419:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L422:
        expect: true
        expr: '(^|\n)([^\n]+:422:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L424:
        expect: true
        expr: '(^|\n)([^\n]+:424:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L425:
        expect: true
        expr: '(^|\n)([^\n]+:425:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L426:
        expect: true
        expr: '(^|\n)([^\n]+:426:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L427:
        expect: true
        expr: '(^|\n)([^\n]+:427:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L428:
        expect: true
        expr: '(^|\n)([^\n]+:428:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L429:
        expect: true
        expr: '(^|\n)([^\n]+:429:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L430:
        expect: true
        expr: '(^|\n)([^\n]+:430:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L439:
        expect: true
        expr: '(^|\n)([^\n]+:439:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L440:
        expect: true
        expr: '(^|\n)([^\n]+:440:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L441:
        expect: true
        expr: '(^|\n)([^\n]+:441:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L442:
        expect: true
        expr: '(^|\n)([^\n]+:442:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L443:
        expect: true
        expr: '(^|\n)([^\n]+:443:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L444:
        expect: true
        expr: '(^|\n)([^\n]+:444:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L445:
        expect: true
        expr: '(^|\n)([^\n]+:445:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L446:
        expect: true
        expr: '(^|\n)([^\n]+:446:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L447:
        expect: true
        expr: '(^|\n)([^\n]+:447:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L448:
        expect: true
        expr: '(^|\n)([^\n]+:448:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L449:
        expect: true
        expr: '(^|\n)([^\n]+:449:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L450:
        expect: true
        expr: '(^|\n)([^\n]+:450:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L451:
        expect: true
        expr: '(^|\n)([^\n]+:451:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L461:
        expect: true
        expr: '(^|\n)([^\n]+:461:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L462:
        expect: true
        expr: '(^|\n)([^\n]+:462:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L463:
        expect: true
        expr: '(^|\n)([^\n]+:463:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L464:
        expect: true
        expr: '(^|\n)([^\n]+:464:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L465:
        expect: true
        expr: '(^|\n)([^\n]+:465:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L466:
        expect: true
        expr: '(^|\n)([^\n]+:466:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L467:
        expect: true
        expr: '(^|\n)([^\n]+:467:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L468:
        expect: true
        expr: '(^|\n)([^\n]+:468:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L469:
        expect: true
        expr: '(^|\n)([^\n]+:469:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L470:
        expect: true
        expr: '(^|\n)([^\n]+:470:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L471:
        expect: true
        expr: '(^|\n)([^\n]+:471:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L472:
        expect: true
        expr: '(^|\n)([^\n]+:472:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L473:
        expect: true
        expr: '(^|\n)([^\n]+:473:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L474:
        expect: true
        expr: '(^|\n)([^\n]+:474:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L475:
        expect: true
        expr: '(^|\n)([^\n]+:475:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L476:
        expect: true
        expr: '(^|\n)([^\n]+:476:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L485:
        expect: true
        expr: '(^|\n)([^\n]+:485:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L486:
        expect: true
        expr: '(^|\n)([^\n]+:486:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L487:
        expect: true
        expr: '(^|\n)([^\n]+:487:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L488:
        expect: true
        expr: '(^|\n)([^\n]+:488:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L489:
        expect: true
        expr: '(^|\n)([^\n]+:489:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L490:
        expect: true
        expr: '(^|\n)([^\n]+:490:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L491:
        expect: true
        expr: '(^|\n)([^\n]+:491:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L492:
        expect: true
        expr: '(^|\n)([^\n]+:492:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L493:
        expect: true
        expr: '(^|\n)([^\n]+:493:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L494:
        expect: true
        expr: '(^|\n)([^\n]+:494:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L495:
        expect: true
        expr: '(^|\n)([^\n]+:495:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L496:
        expect: true
        expr: '(^|\n)([^\n]+:496:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L497:
        expect: true
        expr: '(^|\n)([^\n]+:497:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L498:
        expect: true
        expr: '(^|\n)([^\n]+:498:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L499:
        expect: true
        expr: '(^|\n)([^\n]+:499:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L500:
        expect: true
        expr: '(^|\n)([^\n]+:500:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L509:
        expect: true
        expr: '(^|\n)([^\n]+:509:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L510:
        expect: true
        expr: '(^|\n)([^\n]+:510:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L511:
        expect: true
        expr: '(^|\n)([^\n]+:511:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L512:
        expect: true
        expr: '(^|\n)([^\n]+:512:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L513:
        expect: true
        expr: '(^|\n)([^\n]+:513:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L514:
        expect: true
        expr: '(^|\n)([^\n]+:514:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L515:
        expect: true
        expr: '(^|\n)([^\n]+:515:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L516:
        expect: true
        expr: '(^|\n)([^\n]+:516:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L517:
        expect: true
        expr: '(^|\n)([^\n]+:517:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L518:
        expect: true
        expr: '(^|\n)([^\n]+:518:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L519:
        expect: true
        expr: '(^|\n)([^\n]+:519:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L520:
        expect: true
        expr: '(^|\n)([^\n]+:520:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L521:
        expect: true
        expr: '(^|\n)([^\n]+:521:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L522:
        expect: true
        expr: '(^|\n)([^\n]+:522:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L523:
        expect: true
        expr: '(^|\n)([^\n]+:523:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L524:
        expect: true
        expr: '(^|\n)([^\n]+:524:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
test_new44_1471:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new44.C'
    sources:
      binary: new44.s
  group: GRPSERIAL
  validate:
    match:
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+:121:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+:164:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+:165:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+:166:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+:168:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+:172:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+:184:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+:186:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+:187:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+:188:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+:189:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+:193:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+:194:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+:211:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+:213:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L214:
        expect: true
        expr: '(^|\n)([^\n]+:214:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+:215:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L216:
        expect: true
        expr: '(^|\n)([^\n]+:216:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+:217:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+:218:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+:231:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L232:
        expect: true
        expr: '(^|\n)([^\n]+:232:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+:233:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+:234:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+:235:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+:237:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+:240:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+:241:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+:242:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+:243:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L244:
        expect: true
        expr: '(^|\n)([^\n]+:244:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L245:
        expect: true
        expr: '(^|\n)([^\n]+:245:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L255:
        expect: true
        expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L256:
        expect: true
        expr: '(^|\n)([^\n]+:256:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L257:
        expect: true
        expr: '(^|\n)([^\n]+:257:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L258:
        expect: true
        expr: '(^|\n)([^\n]+:258:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L259:
        expect: true
        expr: '(^|\n)([^\n]+:259:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L260:
        expect: true
        expr: '(^|\n)([^\n]+:260:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L262:
        expect: true
        expr: '(^|\n)([^\n]+:262:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L264:
        expect: true
        expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L265:
        expect: true
        expr: '(^|\n)([^\n]+:265:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L266:
        expect: true
        expr: '(^|\n)([^\n]+:266:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+:267:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L269:
        expect: true
        expr: '(^|\n)([^\n]+:269:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+:279:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L282:
        expect: true
        expr: '(^|\n)([^\n]+:282:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L299:
        expect: true
        expr: '(^|\n)([^\n]+:299:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L300:
        expect: true
        expr: '(^|\n)([^\n]+:300:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L301:
        expect: true
        expr: '(^|\n)([^\n]+:301:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L318:
        expect: true
        expr: '(^|\n)([^\n]+:318:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L319:
        expect: true
        expr: '(^|\n)([^\n]+:319:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L320:
        expect: true
        expr: '(^|\n)([^\n]+:320:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L321:
        expect: true
        expr: '(^|\n)([^\n]+:321:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L322:
        expect: true
        expr: '(^|\n)([^\n]+:322:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L324:
        expect: true
        expr: '(^|\n)([^\n]+:324:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L345:
        expect: true
        expr: '(^|\n)([^\n]+:345:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L346:
        expect: true
        expr: '(^|\n)([^\n]+:346:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L347:
        expect: true
        expr: '(^|\n)([^\n]+:347:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L348:
        expect: true
        expr: '(^|\n)([^\n]+:348:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L349:
        expect: true
        expr: '(^|\n)([^\n]+:349:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L350:
        expect: true
        expr: '(^|\n)([^\n]+:350:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L351:
        expect: true
        expr: '(^|\n)([^\n]+:351:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L362:
        expect: true
        expr: '(^|\n)([^\n]+:362:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L363:
        expect: true
        expr: '(^|\n)([^\n]+:363:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L364:
        expect: true
        expr: '(^|\n)([^\n]+:364:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L365:
        expect: true
        expr: '(^|\n)([^\n]+:365:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L366:
        expect: true
        expr: '(^|\n)([^\n]+:366:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L367:
        expect: true
        expr: '(^|\n)([^\n]+:367:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L369:
        expect: true
        expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L372:
        expect: true
        expr: '(^|\n)([^\n]+:372:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L374:
        expect: true
        expr: '(^|\n)([^\n]+:374:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+:375:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L376:
        expect: true
        expr: '(^|\n)([^\n]+:376:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L377:
        expect: true
        expr: '(^|\n)([^\n]+:377:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L378:
        expect: true
        expr: '(^|\n)([^\n]+:378:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L379:
        expect: true
        expr: '(^|\n)([^\n]+:379:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L380:
        expect: true
        expr: '(^|\n)([^\n]+:380:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L381:
        expect: true
        expr: '(^|\n)([^\n]+:381:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L382:
        expect: true
        expr: '(^|\n)([^\n]+:382:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L383:
        expect: true
        expr: '(^|\n)([^\n]+:383:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L400:
        expect: true
        expr: '(^|\n)([^\n]+:400:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L401:
        expect: true
        expr: '(^|\n)([^\n]+:401:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L402:
        expect: true
        expr: '(^|\n)([^\n]+:402:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L403:
        expect: true
        expr: '(^|\n)([^\n]+:403:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+:404:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L406:
        expect: true
        expr: '(^|\n)([^\n]+:406:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L417:
        expect: true
        expr: '(^|\n)([^\n]+:417:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L418:
        expect: true
        expr: '(^|\n)([^\n]+:418:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L419:
        expect: true
        expr: '(^|\n)([^\n]+:419:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L422:
        expect: true
        expr: '(^|\n)([^\n]+:422:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L424:
        expect: true
        expr: '(^|\n)([^\n]+:424:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L425:
        expect: true
        expr: '(^|\n)([^\n]+:425:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L426:
        expect: true
        expr: '(^|\n)([^\n]+:426:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L427:
        expect: true
        expr: '(^|\n)([^\n]+:427:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L428:
        expect: true
        expr: '(^|\n)([^\n]+:428:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L429:
        expect: true
        expr: '(^|\n)([^\n]+:429:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L430:
        expect: true
        expr: '(^|\n)([^\n]+:430:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L439:
        expect: true
        expr: '(^|\n)([^\n]+:439:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L440:
        expect: true
        expr: '(^|\n)([^\n]+:440:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L441:
        expect: true
        expr: '(^|\n)([^\n]+:441:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L442:
        expect: true
        expr: '(^|\n)([^\n]+:442:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L443:
        expect: true
        expr: '(^|\n)([^\n]+:443:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L444:
        expect: true
        expr: '(^|\n)([^\n]+:444:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L445:
        expect: true
        expr: '(^|\n)([^\n]+:445:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L446:
        expect: true
        expr: '(^|\n)([^\n]+:446:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L447:
        expect: true
        expr: '(^|\n)([^\n]+:447:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L448:
        expect: true
        expr: '(^|\n)([^\n]+:448:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L449:
        expect: true
        expr: '(^|\n)([^\n]+:449:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L450:
        expect: true
        expr: '(^|\n)([^\n]+:450:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L451:
        expect: true
        expr: '(^|\n)([^\n]+:451:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L461:
        expect: true
        expr: '(^|\n)([^\n]+:461:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L462:
        expect: true
        expr: '(^|\n)([^\n]+:462:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L463:
        expect: true
        expr: '(^|\n)([^\n]+:463:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L464:
        expect: true
        expr: '(^|\n)([^\n]+:464:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L465:
        expect: true
        expr: '(^|\n)([^\n]+:465:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L466:
        expect: true
        expr: '(^|\n)([^\n]+:466:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L467:
        expect: true
        expr: '(^|\n)([^\n]+:467:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L468:
        expect: true
        expr: '(^|\n)([^\n]+:468:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L469:
        expect: true
        expr: '(^|\n)([^\n]+:469:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L470:
        expect: true
        expr: '(^|\n)([^\n]+:470:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L471:
        expect: true
        expr: '(^|\n)([^\n]+:471:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L472:
        expect: true
        expr: '(^|\n)([^\n]+:472:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L473:
        expect: true
        expr: '(^|\n)([^\n]+:473:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L474:
        expect: true
        expr: '(^|\n)([^\n]+:474:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L475:
        expect: true
        expr: '(^|\n)([^\n]+:475:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L476:
        expect: true
        expr: '(^|\n)([^\n]+:476:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L485:
        expect: true
        expr: '(^|\n)([^\n]+:485:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L486:
        expect: true
        expr: '(^|\n)([^\n]+:486:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L487:
        expect: true
        expr: '(^|\n)([^\n]+:487:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L488:
        expect: true
        expr: '(^|\n)([^\n]+:488:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L489:
        expect: true
        expr: '(^|\n)([^\n]+:489:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L490:
        expect: true
        expr: '(^|\n)([^\n]+:490:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L491:
        expect: true
        expr: '(^|\n)([^\n]+:491:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L492:
        expect: true
        expr: '(^|\n)([^\n]+:492:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L493:
        expect: true
        expr: '(^|\n)([^\n]+:493:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L494:
        expect: true
        expr: '(^|\n)([^\n]+:494:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L495:
        expect: true
        expr: '(^|\n)([^\n]+:495:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L496:
        expect: true
        expr: '(^|\n)([^\n]+:496:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L497:
        expect: true
        expr: '(^|\n)([^\n]+:497:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L498:
        expect: true
        expr: '(^|\n)([^\n]+:498:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L499:
        expect: true
        expr: '(^|\n)([^\n]+:499:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L500:
        expect: true
        expr: '(^|\n)([^\n]+:500:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L509:
        expect: true
        expr: '(^|\n)([^\n]+:509:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L510:
        expect: true
        expr: '(^|\n)([^\n]+:510:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L511:
        expect: true
        expr: '(^|\n)([^\n]+:511:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L512:
        expect: true
        expr: '(^|\n)([^\n]+:512:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L513:
        expect: true
        expr: '(^|\n)([^\n]+:513:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L514:
        expect: true
        expr: '(^|\n)([^\n]+:514:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L515:
        expect: true
        expr: '(^|\n)([^\n]+:515:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L516:
        expect: true
        expr: '(^|\n)([^\n]+:516:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L517:
        expect: true
        expr: '(^|\n)([^\n]+:517:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L518:
        expect: true
        expr: '(^|\n)([^\n]+:518:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L519:
        expect: true
        expr: '(^|\n)([^\n]+:519:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L520:
        expect: true
        expr: '(^|\n)([^\n]+:520:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L521:
        expect: true
        expr: '(^|\n)([^\n]+:521:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L522:
        expect: true
        expr: '(^|\n)([^\n]+:522:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L523:
        expect: true
        expr: '(^|\n)([^\n]+:523:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L524:
        expect: true
        expr: '(^|\n)([^\n]+:524:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
test_new44_1472:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new44.C'
    sources:
      binary: new44.s
  group: GRPSERIAL
  validate:
    match:
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+:121:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+:164:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+:165:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+:166:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+:168:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+:172:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+:184:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+:186:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+:187:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+:188:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+:189:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+:193:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+:194:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+:211:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+:213:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L214:
        expect: true
        expr: '(^|\n)([^\n]+:214:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+:215:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L216:
        expect: true
        expr: '(^|\n)([^\n]+:216:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+:217:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+:218:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+:231:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L232:
        expect: true
        expr: '(^|\n)([^\n]+:232:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+:233:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+:234:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+:235:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+:237:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+:240:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+:241:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+:242:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+:243:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L244:
        expect: true
        expr: '(^|\n)([^\n]+:244:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L245:
        expect: true
        expr: '(^|\n)([^\n]+:245:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L255:
        expect: true
        expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L256:
        expect: true
        expr: '(^|\n)([^\n]+:256:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L257:
        expect: true
        expr: '(^|\n)([^\n]+:257:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L258:
        expect: true
        expr: '(^|\n)([^\n]+:258:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L259:
        expect: true
        expr: '(^|\n)([^\n]+:259:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L260:
        expect: true
        expr: '(^|\n)([^\n]+:260:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L262:
        expect: true
        expr: '(^|\n)([^\n]+:262:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L264:
        expect: true
        expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L265:
        expect: true
        expr: '(^|\n)([^\n]+:265:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L266:
        expect: true
        expr: '(^|\n)([^\n]+:266:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+:267:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L269:
        expect: true
        expr: '(^|\n)([^\n]+:269:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+:279:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L282:
        expect: true
        expr: '(^|\n)([^\n]+:282:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L299:
        expect: true
        expr: '(^|\n)([^\n]+:299:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L300:
        expect: true
        expr: '(^|\n)([^\n]+:300:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L301:
        expect: true
        expr: '(^|\n)([^\n]+:301:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L318:
        expect: true
        expr: '(^|\n)([^\n]+:318:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L319:
        expect: true
        expr: '(^|\n)([^\n]+:319:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L320:
        expect: true
        expr: '(^|\n)([^\n]+:320:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L321:
        expect: true
        expr: '(^|\n)([^\n]+:321:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L322:
        expect: true
        expr: '(^|\n)([^\n]+:322:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L324:
        expect: true
        expr: '(^|\n)([^\n]+:324:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L345:
        expect: true
        expr: '(^|\n)([^\n]+:345:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L346:
        expect: true
        expr: '(^|\n)([^\n]+:346:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L347:
        expect: true
        expr: '(^|\n)([^\n]+:347:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L348:
        expect: true
        expr: '(^|\n)([^\n]+:348:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L349:
        expect: true
        expr: '(^|\n)([^\n]+:349:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L350:
        expect: true
        expr: '(^|\n)([^\n]+:350:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L351:
        expect: true
        expr: '(^|\n)([^\n]+:351:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L362:
        expect: true
        expr: '(^|\n)([^\n]+:362:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L363:
        expect: true
        expr: '(^|\n)([^\n]+:363:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L364:
        expect: true
        expr: '(^|\n)([^\n]+:364:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L365:
        expect: true
        expr: '(^|\n)([^\n]+:365:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L366:
        expect: true
        expr: '(^|\n)([^\n]+:366:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L367:
        expect: true
        expr: '(^|\n)([^\n]+:367:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L369:
        expect: true
        expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L372:
        expect: true
        expr: '(^|\n)([^\n]+:372:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L374:
        expect: true
        expr: '(^|\n)([^\n]+:374:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+:375:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L376:
        expect: true
        expr: '(^|\n)([^\n]+:376:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L377:
        expect: true
        expr: '(^|\n)([^\n]+:377:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L378:
        expect: true
        expr: '(^|\n)([^\n]+:378:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L379:
        expect: true
        expr: '(^|\n)([^\n]+:379:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L380:
        expect: true
        expr: '(^|\n)([^\n]+:380:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L381:
        expect: true
        expr: '(^|\n)([^\n]+:381:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L382:
        expect: true
        expr: '(^|\n)([^\n]+:382:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L383:
        expect: true
        expr: '(^|\n)([^\n]+:383:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L400:
        expect: true
        expr: '(^|\n)([^\n]+:400:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L401:
        expect: true
        expr: '(^|\n)([^\n]+:401:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L402:
        expect: true
        expr: '(^|\n)([^\n]+:402:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L403:
        expect: true
        expr: '(^|\n)([^\n]+:403:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+:404:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L406:
        expect: true
        expr: '(^|\n)([^\n]+:406:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L417:
        expect: true
        expr: '(^|\n)([^\n]+:417:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L418:
        expect: true
        expr: '(^|\n)([^\n]+:418:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L419:
        expect: true
        expr: '(^|\n)([^\n]+:419:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L422:
        expect: true
        expr: '(^|\n)([^\n]+:422:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L424:
        expect: true
        expr: '(^|\n)([^\n]+:424:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L425:
        expect: true
        expr: '(^|\n)([^\n]+:425:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L426:
        expect: true
        expr: '(^|\n)([^\n]+:426:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L427:
        expect: true
        expr: '(^|\n)([^\n]+:427:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L428:
        expect: true
        expr: '(^|\n)([^\n]+:428:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L429:
        expect: true
        expr: '(^|\n)([^\n]+:429:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L430:
        expect: true
        expr: '(^|\n)([^\n]+:430:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L439:
        expect: true
        expr: '(^|\n)([^\n]+:439:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L440:
        expect: true
        expr: '(^|\n)([^\n]+:440:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L441:
        expect: true
        expr: '(^|\n)([^\n]+:441:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L442:
        expect: true
        expr: '(^|\n)([^\n]+:442:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L443:
        expect: true
        expr: '(^|\n)([^\n]+:443:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L444:
        expect: true
        expr: '(^|\n)([^\n]+:444:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L445:
        expect: true
        expr: '(^|\n)([^\n]+:445:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L446:
        expect: true
        expr: '(^|\n)([^\n]+:446:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L447:
        expect: true
        expr: '(^|\n)([^\n]+:447:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L448:
        expect: true
        expr: '(^|\n)([^\n]+:448:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L449:
        expect: true
        expr: '(^|\n)([^\n]+:449:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L450:
        expect: true
        expr: '(^|\n)([^\n]+:450:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L451:
        expect: true
        expr: '(^|\n)([^\n]+:451:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L461:
        expect: true
        expr: '(^|\n)([^\n]+:461:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L462:
        expect: true
        expr: '(^|\n)([^\n]+:462:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L463:
        expect: true
        expr: '(^|\n)([^\n]+:463:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L464:
        expect: true
        expr: '(^|\n)([^\n]+:464:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L465:
        expect: true
        expr: '(^|\n)([^\n]+:465:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L466:
        expect: true
        expr: '(^|\n)([^\n]+:466:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L467:
        expect: true
        expr: '(^|\n)([^\n]+:467:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L468:
        expect: true
        expr: '(^|\n)([^\n]+:468:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L469:
        expect: true
        expr: '(^|\n)([^\n]+:469:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L470:
        expect: true
        expr: '(^|\n)([^\n]+:470:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L471:
        expect: true
        expr: '(^|\n)([^\n]+:471:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L472:
        expect: true
        expr: '(^|\n)([^\n]+:472:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L473:
        expect: true
        expr: '(^|\n)([^\n]+:473:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L474:
        expect: true
        expr: '(^|\n)([^\n]+:474:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L475:
        expect: true
        expr: '(^|\n)([^\n]+:475:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L476:
        expect: true
        expr: '(^|\n)([^\n]+:476:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L485:
        expect: true
        expr: '(^|\n)([^\n]+:485:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L486:
        expect: true
        expr: '(^|\n)([^\n]+:486:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L487:
        expect: true
        expr: '(^|\n)([^\n]+:487:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L488:
        expect: true
        expr: '(^|\n)([^\n]+:488:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L489:
        expect: true
        expr: '(^|\n)([^\n]+:489:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L490:
        expect: true
        expr: '(^|\n)([^\n]+:490:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L491:
        expect: true
        expr: '(^|\n)([^\n]+:491:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L492:
        expect: true
        expr: '(^|\n)([^\n]+:492:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L493:
        expect: true
        expr: '(^|\n)([^\n]+:493:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L494:
        expect: true
        expr: '(^|\n)([^\n]+:494:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L495:
        expect: true
        expr: '(^|\n)([^\n]+:495:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L496:
        expect: true
        expr: '(^|\n)([^\n]+:496:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L497:
        expect: true
        expr: '(^|\n)([^\n]+:497:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L498:
        expect: true
        expr: '(^|\n)([^\n]+:498:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L499:
        expect: true
        expr: '(^|\n)([^\n]+:499:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L500:
        expect: true
        expr: '(^|\n)([^\n]+:500:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L509:
        expect: true
        expr: '(^|\n)([^\n]+:509:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L510:
        expect: true
        expr: '(^|\n)([^\n]+:510:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L511:
        expect: true
        expr: '(^|\n)([^\n]+:511:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L512:
        expect: true
        expr: '(^|\n)([^\n]+:512:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L513:
        expect: true
        expr: '(^|\n)([^\n]+:513:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L514:
        expect: true
        expr: '(^|\n)([^\n]+:514:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L515:
        expect: true
        expr: '(^|\n)([^\n]+:515:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L516:
        expect: true
        expr: '(^|\n)([^\n]+:516:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L517:
        expect: true
        expr: '(^|\n)([^\n]+:517:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L518:
        expect: true
        expr: '(^|\n)([^\n]+:518:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L519:
        expect: true
        expr: '(^|\n)([^\n]+:519:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L520:
        expect: true
        expr: '(^|\n)([^\n]+:520:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L521:
        expect: true
        expr: '(^|\n)([^\n]+:521:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L522:
        expect: true
        expr: '(^|\n)([^\n]+:522:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L523:
        expect: true
        expr: '(^|\n)([^\n]+:523:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L524:
        expect: true
        expr: '(^|\n)([^\n]+:524:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
test_new44_568:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new44.C'
    sources:
      binary: new44.s
  group: GRPSERIAL
  validate:
    match:
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+:121:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+:164:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+:165:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+:166:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+:168:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+:172:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+:184:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+:186:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+:187:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+:188:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+:189:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+:193:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+:194:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+:211:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+:213:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L214:
        expect: true
        expr: '(^|\n)([^\n]+:214:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+:215:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L216:
        expect: true
        expr: '(^|\n)([^\n]+:216:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+:217:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+:218:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+:231:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L232:
        expect: true
        expr: '(^|\n)([^\n]+:232:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+:233:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+:234:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+:235:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+:237:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+:240:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+:241:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+:242:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+:243:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L244:
        expect: true
        expr: '(^|\n)([^\n]+:244:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L245:
        expect: true
        expr: '(^|\n)([^\n]+:245:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L255:
        expect: true
        expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L256:
        expect: true
        expr: '(^|\n)([^\n]+:256:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L257:
        expect: true
        expr: '(^|\n)([^\n]+:257:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L258:
        expect: true
        expr: '(^|\n)([^\n]+:258:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L259:
        expect: true
        expr: '(^|\n)([^\n]+:259:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L260:
        expect: true
        expr: '(^|\n)([^\n]+:260:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L262:
        expect: true
        expr: '(^|\n)([^\n]+:262:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L264:
        expect: true
        expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L265:
        expect: true
        expr: '(^|\n)([^\n]+:265:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L266:
        expect: true
        expr: '(^|\n)([^\n]+:266:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+:267:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L269:
        expect: true
        expr: '(^|\n)([^\n]+:269:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+:279:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L282:
        expect: true
        expr: '(^|\n)([^\n]+:282:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L299:
        expect: true
        expr: '(^|\n)([^\n]+:299:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L300:
        expect: true
        expr: '(^|\n)([^\n]+:300:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L301:
        expect: true
        expr: '(^|\n)([^\n]+:301:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L318:
        expect: true
        expr: '(^|\n)([^\n]+:318:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L319:
        expect: true
        expr: '(^|\n)([^\n]+:319:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L320:
        expect: true
        expr: '(^|\n)([^\n]+:320:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L321:
        expect: true
        expr: '(^|\n)([^\n]+:321:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L322:
        expect: true
        expr: '(^|\n)([^\n]+:322:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L324:
        expect: true
        expr: '(^|\n)([^\n]+:324:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L345:
        expect: true
        expr: '(^|\n)([^\n]+:345:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L346:
        expect: true
        expr: '(^|\n)([^\n]+:346:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L347:
        expect: true
        expr: '(^|\n)([^\n]+:347:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L348:
        expect: true
        expr: '(^|\n)([^\n]+:348:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L349:
        expect: true
        expr: '(^|\n)([^\n]+:349:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L350:
        expect: true
        expr: '(^|\n)([^\n]+:350:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L351:
        expect: true
        expr: '(^|\n)([^\n]+:351:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L362:
        expect: true
        expr: '(^|\n)([^\n]+:362:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L363:
        expect: true
        expr: '(^|\n)([^\n]+:363:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L364:
        expect: true
        expr: '(^|\n)([^\n]+:364:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L365:
        expect: true
        expr: '(^|\n)([^\n]+:365:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L366:
        expect: true
        expr: '(^|\n)([^\n]+:366:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L367:
        expect: true
        expr: '(^|\n)([^\n]+:367:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L369:
        expect: true
        expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L372:
        expect: true
        expr: '(^|\n)([^\n]+:372:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L374:
        expect: true
        expr: '(^|\n)([^\n]+:374:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+:375:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L376:
        expect: true
        expr: '(^|\n)([^\n]+:376:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L377:
        expect: true
        expr: '(^|\n)([^\n]+:377:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L378:
        expect: true
        expr: '(^|\n)([^\n]+:378:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L379:
        expect: true
        expr: '(^|\n)([^\n]+:379:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L380:
        expect: true
        expr: '(^|\n)([^\n]+:380:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L381:
        expect: true
        expr: '(^|\n)([^\n]+:381:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L382:
        expect: true
        expr: '(^|\n)([^\n]+:382:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L383:
        expect: true
        expr: '(^|\n)([^\n]+:383:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L400:
        expect: true
        expr: '(^|\n)([^\n]+:400:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L401:
        expect: true
        expr: '(^|\n)([^\n]+:401:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L402:
        expect: true
        expr: '(^|\n)([^\n]+:402:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L403:
        expect: true
        expr: '(^|\n)([^\n]+:403:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+:404:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L406:
        expect: true
        expr: '(^|\n)([^\n]+:406:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L417:
        expect: true
        expr: '(^|\n)([^\n]+:417:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L418:
        expect: true
        expr: '(^|\n)([^\n]+:418:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L419:
        expect: true
        expr: '(^|\n)([^\n]+:419:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L422:
        expect: true
        expr: '(^|\n)([^\n]+:422:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L424:
        expect: true
        expr: '(^|\n)([^\n]+:424:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L425:
        expect: true
        expr: '(^|\n)([^\n]+:425:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L426:
        expect: true
        expr: '(^|\n)([^\n]+:426:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L427:
        expect: true
        expr: '(^|\n)([^\n]+:427:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L428:
        expect: true
        expr: '(^|\n)([^\n]+:428:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L429:
        expect: true
        expr: '(^|\n)([^\n]+:429:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L430:
        expect: true
        expr: '(^|\n)([^\n]+:430:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L439:
        expect: true
        expr: '(^|\n)([^\n]+:439:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L440:
        expect: true
        expr: '(^|\n)([^\n]+:440:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L441:
        expect: true
        expr: '(^|\n)([^\n]+:441:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L442:
        expect: true
        expr: '(^|\n)([^\n]+:442:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L443:
        expect: true
        expr: '(^|\n)([^\n]+:443:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L444:
        expect: true
        expr: '(^|\n)([^\n]+:444:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L445:
        expect: true
        expr: '(^|\n)([^\n]+:445:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L446:
        expect: true
        expr: '(^|\n)([^\n]+:446:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L447:
        expect: true
        expr: '(^|\n)([^\n]+:447:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L448:
        expect: true
        expr: '(^|\n)([^\n]+:448:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L449:
        expect: true
        expr: '(^|\n)([^\n]+:449:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L450:
        expect: true
        expr: '(^|\n)([^\n]+:450:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L451:
        expect: true
        expr: '(^|\n)([^\n]+:451:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L461:
        expect: true
        expr: '(^|\n)([^\n]+:461:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L462:
        expect: true
        expr: '(^|\n)([^\n]+:462:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L463:
        expect: true
        expr: '(^|\n)([^\n]+:463:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L464:
        expect: true
        expr: '(^|\n)([^\n]+:464:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L465:
        expect: true
        expr: '(^|\n)([^\n]+:465:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L466:
        expect: true
        expr: '(^|\n)([^\n]+:466:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L467:
        expect: true
        expr: '(^|\n)([^\n]+:467:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L468:
        expect: true
        expr: '(^|\n)([^\n]+:468:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L469:
        expect: true
        expr: '(^|\n)([^\n]+:469:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L470:
        expect: true
        expr: '(^|\n)([^\n]+:470:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L471:
        expect: true
        expr: '(^|\n)([^\n]+:471:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L472:
        expect: true
        expr: '(^|\n)([^\n]+:472:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L473:
        expect: true
        expr: '(^|\n)([^\n]+:473:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L474:
        expect: true
        expr: '(^|\n)([^\n]+:474:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L475:
        expect: true
        expr: '(^|\n)([^\n]+:475:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L476:
        expect: true
        expr: '(^|\n)([^\n]+:476:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L485:
        expect: true
        expr: '(^|\n)([^\n]+:485:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L486:
        expect: true
        expr: '(^|\n)([^\n]+:486:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L487:
        expect: true
        expr: '(^|\n)([^\n]+:487:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L488:
        expect: true
        expr: '(^|\n)([^\n]+:488:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L489:
        expect: true
        expr: '(^|\n)([^\n]+:489:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L490:
        expect: true
        expr: '(^|\n)([^\n]+:490:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L491:
        expect: true
        expr: '(^|\n)([^\n]+:491:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L492:
        expect: true
        expr: '(^|\n)([^\n]+:492:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L493:
        expect: true
        expr: '(^|\n)([^\n]+:493:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L494:
        expect: true
        expr: '(^|\n)([^\n]+:494:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L495:
        expect: true
        expr: '(^|\n)([^\n]+:495:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L496:
        expect: true
        expr: '(^|\n)([^\n]+:496:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L497:
        expect: true
        expr: '(^|\n)([^\n]+:497:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L498:
        expect: true
        expr: '(^|\n)([^\n]+:498:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L499:
        expect: true
        expr: '(^|\n)([^\n]+:499:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L500:
        expect: true
        expr: '(^|\n)([^\n]+:500:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L509:
        expect: true
        expr: '(^|\n)([^\n]+:509:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L510:
        expect: true
        expr: '(^|\n)([^\n]+:510:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L511:
        expect: true
        expr: '(^|\n)([^\n]+:511:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L512:
        expect: true
        expr: '(^|\n)([^\n]+:512:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L513:
        expect: true
        expr: '(^|\n)([^\n]+:513:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L514:
        expect: true
        expr: '(^|\n)([^\n]+:514:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L515:
        expect: true
        expr: '(^|\n)([^\n]+:515:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L516:
        expect: true
        expr: '(^|\n)([^\n]+:516:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L517:
        expect: true
        expr: '(^|\n)([^\n]+:517:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L518:
        expect: true
        expr: '(^|\n)([^\n]+:518:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L519:
        expect: true
        expr: '(^|\n)([^\n]+:519:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L520:
        expect: true
        expr: '(^|\n)([^\n]+:520:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L521:
        expect: true
        expr: '(^|\n)([^\n]+:521:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L522:
        expect: true
        expr: '(^|\n)([^\n]+:522:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L523:
        expect: true
        expr: '(^|\n)([^\n]+:523:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L524:
        expect: true
        expr: '(^|\n)([^\n]+:524:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
test_new44_569:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new44.C'
    sources:
      binary: new44.s
  group: GRPSERIAL
  validate:
    match:
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+:121:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+:164:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+:165:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+:166:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+:168:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+:172:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+:184:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+:186:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+:187:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+:188:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+:189:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+:193:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+:194:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+:211:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+:213:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L214:
        expect: true
        expr: '(^|\n)([^\n]+:214:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+:215:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L216:
        expect: true
        expr: '(^|\n)([^\n]+:216:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+:217:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+:218:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+:231:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L232:
        expect: true
        expr: '(^|\n)([^\n]+:232:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+:233:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+:234:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+:235:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+:237:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+:240:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+:241:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+:242:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+:243:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L244:
        expect: true
        expr: '(^|\n)([^\n]+:244:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L245:
        expect: true
        expr: '(^|\n)([^\n]+:245:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L255:
        expect: true
        expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L256:
        expect: true
        expr: '(^|\n)([^\n]+:256:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L257:
        expect: true
        expr: '(^|\n)([^\n]+:257:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L258:
        expect: true
        expr: '(^|\n)([^\n]+:258:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L259:
        expect: true
        expr: '(^|\n)([^\n]+:259:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L260:
        expect: true
        expr: '(^|\n)([^\n]+:260:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L262:
        expect: true
        expr: '(^|\n)([^\n]+:262:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L264:
        expect: true
        expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L265:
        expect: true
        expr: '(^|\n)([^\n]+:265:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L266:
        expect: true
        expr: '(^|\n)([^\n]+:266:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+:267:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L269:
        expect: true
        expr: '(^|\n)([^\n]+:269:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+:279:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L282:
        expect: true
        expr: '(^|\n)([^\n]+:282:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L299:
        expect: true
        expr: '(^|\n)([^\n]+:299:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L300:
        expect: true
        expr: '(^|\n)([^\n]+:300:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L301:
        expect: true
        expr: '(^|\n)([^\n]+:301:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L318:
        expect: true
        expr: '(^|\n)([^\n]+:318:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L319:
        expect: true
        expr: '(^|\n)([^\n]+:319:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L320:
        expect: true
        expr: '(^|\n)([^\n]+:320:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L321:
        expect: true
        expr: '(^|\n)([^\n]+:321:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L322:
        expect: true
        expr: '(^|\n)([^\n]+:322:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L324:
        expect: true
        expr: '(^|\n)([^\n]+:324:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L345:
        expect: true
        expr: '(^|\n)([^\n]+:345:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L346:
        expect: true
        expr: '(^|\n)([^\n]+:346:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L347:
        expect: true
        expr: '(^|\n)([^\n]+:347:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L348:
        expect: true
        expr: '(^|\n)([^\n]+:348:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L349:
        expect: true
        expr: '(^|\n)([^\n]+:349:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L350:
        expect: true
        expr: '(^|\n)([^\n]+:350:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L351:
        expect: true
        expr: '(^|\n)([^\n]+:351:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L362:
        expect: true
        expr: '(^|\n)([^\n]+:362:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L363:
        expect: true
        expr: '(^|\n)([^\n]+:363:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L364:
        expect: true
        expr: '(^|\n)([^\n]+:364:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L365:
        expect: true
        expr: '(^|\n)([^\n]+:365:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L366:
        expect: true
        expr: '(^|\n)([^\n]+:366:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L367:
        expect: true
        expr: '(^|\n)([^\n]+:367:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L369:
        expect: true
        expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L372:
        expect: true
        expr: '(^|\n)([^\n]+:372:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L374:
        expect: true
        expr: '(^|\n)([^\n]+:374:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+:375:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L376:
        expect: true
        expr: '(^|\n)([^\n]+:376:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L377:
        expect: true
        expr: '(^|\n)([^\n]+:377:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L378:
        expect: true
        expr: '(^|\n)([^\n]+:378:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L379:
        expect: true
        expr: '(^|\n)([^\n]+:379:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L380:
        expect: true
        expr: '(^|\n)([^\n]+:380:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L381:
        expect: true
        expr: '(^|\n)([^\n]+:381:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L382:
        expect: true
        expr: '(^|\n)([^\n]+:382:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L383:
        expect: true
        expr: '(^|\n)([^\n]+:383:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L400:
        expect: true
        expr: '(^|\n)([^\n]+:400:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L401:
        expect: true
        expr: '(^|\n)([^\n]+:401:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L402:
        expect: true
        expr: '(^|\n)([^\n]+:402:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L403:
        expect: true
        expr: '(^|\n)([^\n]+:403:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+:404:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L406:
        expect: true
        expr: '(^|\n)([^\n]+:406:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L417:
        expect: true
        expr: '(^|\n)([^\n]+:417:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L418:
        expect: true
        expr: '(^|\n)([^\n]+:418:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L419:
        expect: true
        expr: '(^|\n)([^\n]+:419:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L422:
        expect: true
        expr: '(^|\n)([^\n]+:422:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L424:
        expect: true
        expr: '(^|\n)([^\n]+:424:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L425:
        expect: true
        expr: '(^|\n)([^\n]+:425:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L426:
        expect: true
        expr: '(^|\n)([^\n]+:426:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L427:
        expect: true
        expr: '(^|\n)([^\n]+:427:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L428:
        expect: true
        expr: '(^|\n)([^\n]+:428:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L429:
        expect: true
        expr: '(^|\n)([^\n]+:429:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L430:
        expect: true
        expr: '(^|\n)([^\n]+:430:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L439:
        expect: true
        expr: '(^|\n)([^\n]+:439:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L440:
        expect: true
        expr: '(^|\n)([^\n]+:440:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L441:
        expect: true
        expr: '(^|\n)([^\n]+:441:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L442:
        expect: true
        expr: '(^|\n)([^\n]+:442:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L443:
        expect: true
        expr: '(^|\n)([^\n]+:443:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L444:
        expect: true
        expr: '(^|\n)([^\n]+:444:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L445:
        expect: true
        expr: '(^|\n)([^\n]+:445:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L446:
        expect: true
        expr: '(^|\n)([^\n]+:446:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L447:
        expect: true
        expr: '(^|\n)([^\n]+:447:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L448:
        expect: true
        expr: '(^|\n)([^\n]+:448:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L449:
        expect: true
        expr: '(^|\n)([^\n]+:449:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L450:
        expect: true
        expr: '(^|\n)([^\n]+:450:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L451:
        expect: true
        expr: '(^|\n)([^\n]+:451:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L461:
        expect: true
        expr: '(^|\n)([^\n]+:461:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L462:
        expect: true
        expr: '(^|\n)([^\n]+:462:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L463:
        expect: true
        expr: '(^|\n)([^\n]+:463:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L464:
        expect: true
        expr: '(^|\n)([^\n]+:464:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L465:
        expect: true
        expr: '(^|\n)([^\n]+:465:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L466:
        expect: true
        expr: '(^|\n)([^\n]+:466:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L467:
        expect: true
        expr: '(^|\n)([^\n]+:467:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L468:
        expect: true
        expr: '(^|\n)([^\n]+:468:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L469:
        expect: true
        expr: '(^|\n)([^\n]+:469:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L470:
        expect: true
        expr: '(^|\n)([^\n]+:470:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L471:
        expect: true
        expr: '(^|\n)([^\n]+:471:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L472:
        expect: true
        expr: '(^|\n)([^\n]+:472:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L473:
        expect: true
        expr: '(^|\n)([^\n]+:473:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L474:
        expect: true
        expr: '(^|\n)([^\n]+:474:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L475:
        expect: true
        expr: '(^|\n)([^\n]+:475:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L476:
        expect: true
        expr: '(^|\n)([^\n]+:476:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L485:
        expect: true
        expr: '(^|\n)([^\n]+:485:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L486:
        expect: true
        expr: '(^|\n)([^\n]+:486:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L487:
        expect: true
        expr: '(^|\n)([^\n]+:487:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L488:
        expect: true
        expr: '(^|\n)([^\n]+:488:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L489:
        expect: true
        expr: '(^|\n)([^\n]+:489:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L490:
        expect: true
        expr: '(^|\n)([^\n]+:490:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L491:
        expect: true
        expr: '(^|\n)([^\n]+:491:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L492:
        expect: true
        expr: '(^|\n)([^\n]+:492:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L493:
        expect: true
        expr: '(^|\n)([^\n]+:493:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L494:
        expect: true
        expr: '(^|\n)([^\n]+:494:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L495:
        expect: true
        expr: '(^|\n)([^\n]+:495:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L496:
        expect: true
        expr: '(^|\n)([^\n]+:496:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L497:
        expect: true
        expr: '(^|\n)([^\n]+:497:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L498:
        expect: true
        expr: '(^|\n)([^\n]+:498:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L499:
        expect: true
        expr: '(^|\n)([^\n]+:499:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L500:
        expect: true
        expr: '(^|\n)([^\n]+:500:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L509:
        expect: true
        expr: '(^|\n)([^\n]+:509:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L510:
        expect: true
        expr: '(^|\n)([^\n]+:510:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L511:
        expect: true
        expr: '(^|\n)([^\n]+:511:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L512:
        expect: true
        expr: '(^|\n)([^\n]+:512:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L513:
        expect: true
        expr: '(^|\n)([^\n]+:513:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L514:
        expect: true
        expr: '(^|\n)([^\n]+:514:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L515:
        expect: true
        expr: '(^|\n)([^\n]+:515:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L516:
        expect: true
        expr: '(^|\n)([^\n]+:516:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L517:
        expect: true
        expr: '(^|\n)([^\n]+:517:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L518:
        expect: true
        expr: '(^|\n)([^\n]+:518:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L519:
        expect: true
        expr: '(^|\n)([^\n]+:519:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L520:
        expect: true
        expr: '(^|\n)([^\n]+:520:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L521:
        expect: true
        expr: '(^|\n)([^\n]+:521:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L522:
        expect: true
        expr: '(^|\n)([^\n]+:522:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L523:
        expect: true
        expr: '(^|\n)([^\n]+:523:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L524:
        expect: true
        expr: '(^|\n)([^\n]+:524:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
test_new44_570:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new44.C'
    sources:
      binary: new44.s
  group: GRPSERIAL
  validate:
    match:
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+:110:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+:114:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+:116:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+:121:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+:124:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+:126:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+:151:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+:162:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+:163:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+:164:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+:165:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+:166:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+:168:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+:171:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+:172:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+:173:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+:174:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+:184:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+:186:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+:187:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+:188:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+:189:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+:191:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+:192:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+:193:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+:194:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+:196:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+:197:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+:206:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+:207:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+:208:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+:209:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+:211:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+:212:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+:213:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L214:
        expect: true
        expr: '(^|\n)([^\n]+:214:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+:215:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L216:
        expect: true
        expr: '(^|\n)([^\n]+:216:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+:217:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+:218:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+:219:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+:220:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+:221:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+:231:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L232:
        expect: true
        expr: '(^|\n)([^\n]+:232:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+:233:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+:234:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+:235:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+:236:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+:237:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+:238:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+:239:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+:240:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+:241:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+:242:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+:243:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L244:
        expect: true
        expr: '(^|\n)([^\n]+:244:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L245:
        expect: true
        expr: '(^|\n)([^\n]+:245:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L254:
        expect: true
        expr: '(^|\n)([^\n]+:254:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L255:
        expect: true
        expr: '(^|\n)([^\n]+:255:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L256:
        expect: true
        expr: '(^|\n)([^\n]+:256:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L257:
        expect: true
        expr: '(^|\n)([^\n]+:257:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L258:
        expect: true
        expr: '(^|\n)([^\n]+:258:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L259:
        expect: true
        expr: '(^|\n)([^\n]+:259:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L260:
        expect: true
        expr: '(^|\n)([^\n]+:260:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L262:
        expect: true
        expr: '(^|\n)([^\n]+:262:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L264:
        expect: true
        expr: '(^|\n)([^\n]+:264:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L265:
        expect: true
        expr: '(^|\n)([^\n]+:265:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L266:
        expect: true
        expr: '(^|\n)([^\n]+:266:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+:267:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L268:
        expect: true
        expr: '(^|\n)([^\n]+:268:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L269:
        expect: true
        expr: '(^|\n)([^\n]+:269:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+:278:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+:279:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+:281:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L282:
        expect: true
        expr: '(^|\n)([^\n]+:282:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L299:
        expect: true
        expr: '(^|\n)([^\n]+:299:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L300:
        expect: true
        expr: '(^|\n)([^\n]+:300:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L301:
        expect: true
        expr: '(^|\n)([^\n]+:301:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L318:
        expect: true
        expr: '(^|\n)([^\n]+:318:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L319:
        expect: true
        expr: '(^|\n)([^\n]+:319:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L320:
        expect: true
        expr: '(^|\n)([^\n]+:320:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L321:
        expect: true
        expr: '(^|\n)([^\n]+:321:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L322:
        expect: true
        expr: '(^|\n)([^\n]+:322:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L323:
        expect: true
        expr: '(^|\n)([^\n]+:323:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L324:
        expect: true
        expr: '(^|\n)([^\n]+:324:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L345:
        expect: true
        expr: '(^|\n)([^\n]+:345:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L346:
        expect: true
        expr: '(^|\n)([^\n]+:346:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L347:
        expect: true
        expr: '(^|\n)([^\n]+:347:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L348:
        expect: true
        expr: '(^|\n)([^\n]+:348:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L349:
        expect: true
        expr: '(^|\n)([^\n]+:349:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L350:
        expect: true
        expr: '(^|\n)([^\n]+:350:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L351:
        expect: true
        expr: '(^|\n)([^\n]+:351:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L362:
        expect: true
        expr: '(^|\n)([^\n]+:362:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L363:
        expect: true
        expr: '(^|\n)([^\n]+:363:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L364:
        expect: true
        expr: '(^|\n)([^\n]+:364:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L365:
        expect: true
        expr: '(^|\n)([^\n]+:365:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L366:
        expect: true
        expr: '(^|\n)([^\n]+:366:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L367:
        expect: true
        expr: '(^|\n)([^\n]+:367:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+:368:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L369:
        expect: true
        expr: '(^|\n)([^\n]+:369:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L371:
        expect: true
        expr: '(^|\n)([^\n]+:371:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L372:
        expect: true
        expr: '(^|\n)([^\n]+:372:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L373:
        expect: true
        expr: '(^|\n)([^\n]+:373:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L374:
        expect: true
        expr: '(^|\n)([^\n]+:374:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+:375:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L376:
        expect: true
        expr: '(^|\n)([^\n]+:376:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L377:
        expect: true
        expr: '(^|\n)([^\n]+:377:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L378:
        expect: true
        expr: '(^|\n)([^\n]+:378:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L379:
        expect: true
        expr: '(^|\n)([^\n]+:379:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L380:
        expect: true
        expr: '(^|\n)([^\n]+:380:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L381:
        expect: true
        expr: '(^|\n)([^\n]+:381:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L382:
        expect: true
        expr: '(^|\n)([^\n]+:382:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L383:
        expect: true
        expr: '(^|\n)([^\n]+:383:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L400:
        expect: true
        expr: '(^|\n)([^\n]+:400:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L401:
        expect: true
        expr: '(^|\n)([^\n]+:401:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L402:
        expect: true
        expr: '(^|\n)([^\n]+:402:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L403:
        expect: true
        expr: '(^|\n)([^\n]+:403:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+:404:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L405:
        expect: true
        expr: '(^|\n)([^\n]+:405:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L406:
        expect: true
        expr: '(^|\n)([^\n]+:406:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L417:
        expect: true
        expr: '(^|\n)([^\n]+:417:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L418:
        expect: true
        expr: '(^|\n)([^\n]+:418:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L419:
        expect: true
        expr: '(^|\n)([^\n]+:419:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L420:
        expect: true
        expr: '(^|\n)([^\n]+:420:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L421:
        expect: true
        expr: '(^|\n)([^\n]+:421:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L422:
        expect: true
        expr: '(^|\n)([^\n]+:422:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L423:
        expect: true
        expr: '(^|\n)([^\n]+:423:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L424:
        expect: true
        expr: '(^|\n)([^\n]+:424:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L425:
        expect: true
        expr: '(^|\n)([^\n]+:425:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L426:
        expect: true
        expr: '(^|\n)([^\n]+:426:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L427:
        expect: true
        expr: '(^|\n)([^\n]+:427:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L428:
        expect: true
        expr: '(^|\n)([^\n]+:428:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L429:
        expect: true
        expr: '(^|\n)([^\n]+:429:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L430:
        expect: true
        expr: '(^|\n)([^\n]+:430:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L439:
        expect: true
        expr: '(^|\n)([^\n]+:439:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L440:
        expect: true
        expr: '(^|\n)([^\n]+:440:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L441:
        expect: true
        expr: '(^|\n)([^\n]+:441:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L442:
        expect: true
        expr: '(^|\n)([^\n]+:442:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L443:
        expect: true
        expr: '(^|\n)([^\n]+:443:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L444:
        expect: true
        expr: '(^|\n)([^\n]+:444:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L445:
        expect: true
        expr: '(^|\n)([^\n]+:445:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L446:
        expect: true
        expr: '(^|\n)([^\n]+:446:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L447:
        expect: true
        expr: '(^|\n)([^\n]+:447:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L448:
        expect: true
        expr: '(^|\n)([^\n]+:448:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L449:
        expect: true
        expr: '(^|\n)([^\n]+:449:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L450:
        expect: true
        expr: '(^|\n)([^\n]+:450:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L451:
        expect: true
        expr: '(^|\n)([^\n]+:451:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L452:
        expect: true
        expr: '(^|\n)([^\n]+:452:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L461:
        expect: true
        expr: '(^|\n)([^\n]+:461:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L462:
        expect: true
        expr: '(^|\n)([^\n]+:462:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L463:
        expect: true
        expr: '(^|\n)([^\n]+:463:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L464:
        expect: true
        expr: '(^|\n)([^\n]+:464:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L465:
        expect: true
        expr: '(^|\n)([^\n]+:465:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L466:
        expect: true
        expr: '(^|\n)([^\n]+:466:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L467:
        expect: true
        expr: '(^|\n)([^\n]+:467:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L468:
        expect: true
        expr: '(^|\n)([^\n]+:468:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L469:
        expect: true
        expr: '(^|\n)([^\n]+:469:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L470:
        expect: true
        expr: '(^|\n)([^\n]+:470:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L471:
        expect: true
        expr: '(^|\n)([^\n]+:471:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L472:
        expect: true
        expr: '(^|\n)([^\n]+:472:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L473:
        expect: true
        expr: '(^|\n)([^\n]+:473:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L474:
        expect: true
        expr: '(^|\n)([^\n]+:474:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L475:
        expect: true
        expr: '(^|\n)([^\n]+:475:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L476:
        expect: true
        expr: '(^|\n)([^\n]+:476:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L485:
        expect: true
        expr: '(^|\n)([^\n]+:485:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L486:
        expect: true
        expr: '(^|\n)([^\n]+:486:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L487:
        expect: true
        expr: '(^|\n)([^\n]+:487:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L488:
        expect: true
        expr: '(^|\n)([^\n]+:488:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L489:
        expect: true
        expr: '(^|\n)([^\n]+:489:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L490:
        expect: true
        expr: '(^|\n)([^\n]+:490:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L491:
        expect: true
        expr: '(^|\n)([^\n]+:491:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L492:
        expect: true
        expr: '(^|\n)([^\n]+:492:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L493:
        expect: true
        expr: '(^|\n)([^\n]+:493:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L494:
        expect: true
        expr: '(^|\n)([^\n]+:494:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L495:
        expect: true
        expr: '(^|\n)([^\n]+:495:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L496:
        expect: true
        expr: '(^|\n)([^\n]+:496:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L497:
        expect: true
        expr: '(^|\n)([^\n]+:497:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L498:
        expect: true
        expr: '(^|\n)([^\n]+:498:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L499:
        expect: true
        expr: '(^|\n)([^\n]+:499:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L500:
        expect: true
        expr: '(^|\n)([^\n]+:500:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L509:
        expect: true
        expr: '(^|\n)([^\n]+:509:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L510:
        expect: true
        expr: '(^|\n)([^\n]+:510:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L511:
        expect: true
        expr: '(^|\n)([^\n]+:511:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L512:
        expect: true
        expr: '(^|\n)([^\n]+:512:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L513:
        expect: true
        expr: '(^|\n)([^\n]+:513:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L514:
        expect: true
        expr: '(^|\n)([^\n]+:514:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L515:
        expect: true
        expr: '(^|\n)([^\n]+:515:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L516:
        expect: true
        expr: '(^|\n)([^\n]+:516:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L517:
        expect: true
        expr: '(^|\n)([^\n]+:517:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L518:
        expect: true
        expr: '(^|\n)([^\n]+:518:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L519:
        expect: true
        expr: '(^|\n)([^\n]+:519:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L520:
        expect: true
        expr: '(^|\n)([^\n]+:520:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L521:
        expect: true
        expr: '(^|\n)([^\n]+:521:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L522:
        expect: true
        expr: '(^|\n)([^\n]+:522:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L523:
        expect: true
        expr: '(^|\n)([^\n]+:523:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L524:
        expect: true
        expr: '(^|\n)([^\n]+:524:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+:74:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of unnamed
          array")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+:94:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array")[^\n]*\n?)+'
test_new45_1473:
  build:
    cflags: "-std=gnu++98 -O1 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new45.C'
    sources:
      binary: new45.s
  group: GRPSERIAL
test_new45_1474:
  build:
    cflags: "-std=gnu++11 -O1 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new45.C'
    sources:
      binary: new45.s
  group: GRPSERIAL
test_new45_1475:
  build:
    cflags: "-std=gnu++14 -O1 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new45.C'
    sources:
      binary: new45.s
  group: GRPSERIAL
test_new45_571:
  build:
    cflags: "-std=gnu++98 -O1 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new45.C'
    sources:
      binary: new45.s
  group: GRPSERIAL
test_new45_572:
  build:
    cflags: "-std=gnu++11 -O1 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new45.C'
    sources:
      binary: new45.s
  group: GRPSERIAL
test_new45_573:
  build:
    cflags: "-std=gnu++14 -O1 -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new45.C'
    sources:
      binary: new45.s
  group: GRPSERIAL
test_new46_1476:
  build:
    cflags: "-std=gnu++98 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new46.C'
    sources:
      binary: new46.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
test_new46_1477:
  build:
    cflags: "-std=gnu++11 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new46.C'
    sources:
      binary: new46.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
test_new46_1478:
  build:
    cflags: "-std=gnu++14 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new46.C'
    sources:
      binary: new46.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
test_new46_574:
  build:
    cflags: "-std=gnu++98 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new46.C'
    sources:
      binary: new46.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
test_new46_575:
  build:
    cflags: "-std=gnu++11 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new46.C'
    sources:
      binary: new46.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
test_new46_576:
  build:
    cflags: "-std=gnu++14 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new46.C'
    sources:
      binary: new46.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size of array
          is too large")[^\n]*\n?)+'
test_new47_1479:
  build:
    cflags: "-std=gnu++98 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new47.C'
    sources:
      binary: new47.s
  group: GRPSERIAL
test_new47_1480:
  build:
    cflags: "-std=gnu++11 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new47.C'
    sources:
      binary: new47.s
  group: GRPSERIAL
test_new47_1481:
  build:
    cflags: "-std=gnu++14 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new47.C'
    sources:
      binary: new47.s
  group: GRPSERIAL
test_new47_577:
  build:
    cflags: "-std=gnu++98 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new47.C'
    sources:
      binary: new47.s
  group: GRPSERIAL
test_new47_578:
  build:
    cflags: "-std=gnu++11 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new47.C'
    sources:
      binary: new47.s
  group: GRPSERIAL
test_new47_579:
  build:
    cflags: "-std=gnu++14 -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new47.C'
    sources:
      binary: new47.s
  group: GRPSERIAL
test_new48_1482:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new48.C'
    sources:
      binary: new48.s
  group: GRPSERIAL
test_new48_1483:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new48.C'
    sources:
      binary: new48.s
  group: GRPSERIAL
test_new48_1484:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new48.C'
    sources:
      binary: new48.s
  group: GRPSERIAL
test_new48_580:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new48.C'
    sources:
      binary: new48.s
  group: GRPSERIAL
test_new48_581:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new48.C'
    sources:
      binary: new48.s
  group: GRPSERIAL
test_new48_582:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new48.C'
    sources:
      binary: new48.s
  group: GRPSERIAL
test_new4_1457:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new4.C'
    sources:
      binary: new4.s
  group: GRPSERIAL
test_new4_1458:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new4.C'
    sources:
      binary: new4.s
  group: GRPSERIAL
test_new4_1459:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new4.C'
    sources:
      binary: new4.s
  group: GRPSERIAL
test_new4_555:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new4.C'
    sources:
      binary: new4.s
  group: GRPSERIAL
test_new4_556:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new4.C'
    sources:
      binary: new4.s
  group: GRPSERIAL
test_new4_557:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new4.C'
    sources:
      binary: new4.s
  group: GRPSERIAL
test_new5_1485:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new5.C'
    sources:
      binary: ./new5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new5_1486:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new5.C'
    sources:
      binary: ./new5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new5_1487:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new5.C'
    sources:
      binary: ./new5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new5_583:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new5.C'
    sources:
      binary: ./new5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new5_584:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new5.C'
    sources:
      binary: ./new5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new5_585:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new5.C'
    sources:
      binary: ./new5.exe
  group: GRPSERIAL
  run:
    cwd: .
test_new6_1488:
  build:
    cflags: "-std=gnu++98 -fkeep-inline-functions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new6.C'
    sources:
      binary: new6.s
  group: GRPSERIAL
test_new6_1489:
  build:
    cflags: "-std=gnu++11 -fkeep-inline-functions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new6.C'
    sources:
      binary: new6.s
  group: GRPSERIAL
test_new6_1490:
  build:
    cflags: "-std=gnu++14 -fkeep-inline-functions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new6.C'
    sources:
      binary: new6.s
  group: GRPSERIAL
test_new6_586:
  build:
    cflags: "-std=gnu++98 -fkeep-inline-functions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new6.C'
    sources:
      binary: new6.s
  group: GRPSERIAL
test_new6_587:
  build:
    cflags: "-std=gnu++11 -fkeep-inline-functions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new6.C'
    sources:
      binary: new6.s
  group: GRPSERIAL
test_new6_588:
  build:
    cflags: "-std=gnu++14 -fkeep-inline-functions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new6.C'
    sources:
      binary: new6.s
  group: GRPSERIAL
test_new7_1491:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new7.C'
    sources:
      binary: new7.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_new7_1492:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new7.C'
    sources:
      binary: new7.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_new7_1493:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new7.C'
    sources:
      binary: new7.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_new7_589:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new7.C'
    sources:
      binary: new7.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_new7_590:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new7.C'
    sources:
      binary: new7.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_new7_591:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new7.C'
    sources:
      binary: new7.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_new8_1494:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new8.C'
    sources:
      binary: new8.s
  group: GRPSERIAL
test_new8_1495:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new8.C'
    sources:
      binary: new8.s
  group: GRPSERIAL
test_new8_1496:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new8.C'
    sources:
      binary: new8.s
  group: GRPSERIAL
test_new8_592:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new8.C'
    sources:
      binary: new8.s
  group: GRPSERIAL
test_new8_593:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new8.C'
    sources:
      binary: new8.s
  group: GRPSERIAL
test_new8_594:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new8.C'
    sources:
      binary: new8.s
  group: GRPSERIAL
test_new9_1497:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new9.C'
    sources:
      binary: new9.s
  group: GRPSERIAL
test_new9_1498:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new9.C'
    sources:
      binary: new9.s
  group: GRPSERIAL
test_new9_1499:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new9.C'
    sources:
      binary: new9.s
  group: GRPSERIAL
test_new9_595:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new9.C'
    sources:
      binary: new9.s
  group: GRPSERIAL
test_new9_596:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new9.C'
    sources:
      binary: new9.s
  group: GRPSERIAL
test_new9_597:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/new9.C'
    sources:
      binary: new9.s
  group: GRPSERIAL
test_no-elide1_1500:
  build:
    cflags: "-std=gnu++98 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/no-elide1.C'
    sources:
      binary: no-elide1.s
  group: GRPSERIAL
test_no-elide1_1501:
  build:
    cflags: "-std=gnu++11 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/no-elide1.C'
    sources:
      binary: no-elide1.s
  group: GRPSERIAL
test_no-elide1_1502:
  build:
    cflags: "-std=gnu++14 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/no-elide1.C'
    sources:
      binary: no-elide1.s
  group: GRPSERIAL
test_no-elide1_598:
  build:
    cflags: "-std=gnu++98 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/no-elide1.C'
    sources:
      binary: no-elide1.s
  group: GRPSERIAL
test_no-elide1_599:
  build:
    cflags: "-std=gnu++11 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/no-elide1.C'
    sources:
      binary: no-elide1.s
  group: GRPSERIAL
test_no-elide1_600:
  build:
    cflags: "-std=gnu++14 -fno-elide-constructors\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/no-elide1.C'
    sources:
      binary: no-elide1.s
  group: GRPSERIAL
test_null1_1503:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/null1.C'
    sources:
      binary: null1.s
  group: GRPSERIAL
test_null1_601:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/null1.C'
    sources:
      binary: null1.s
  group: GRPSERIAL
test_placement1_1504:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement1.C'
    sources:
      binary: placement1.s
  group: GRPSERIAL
test_placement1_1505:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement1.C'
    sources:
      binary: placement1.s
  group: GRPSERIAL
test_placement1_1506:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement1.C'
    sources:
      binary: placement1.s
  group: GRPSERIAL
test_placement1_602:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement1.C'
    sources:
      binary: placement1.s
  group: GRPSERIAL
test_placement1_603:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement1.C'
    sources:
      binary: placement1.s
  group: GRPSERIAL
test_placement1_604:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement1.C'
    sources:
      binary: placement1.s
  group: GRPSERIAL
test_placement2_1507:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement2.C'
    sources:
      binary: ./placement2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_placement2_1508:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement2.C'
    sources:
      binary: ./placement2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_placement2_1509:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement2.C'
    sources:
      binary: ./placement2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_placement2_605:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement2.C'
    sources:
      binary: ./placement2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_placement2_606:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement2.C'
    sources:
      binary: ./placement2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_placement2_607:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement2.C'
    sources:
      binary: ./placement2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_placement3_1510:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement3.C'
    sources:
      binary: placement3.s
  group: GRPSERIAL
test_placement3_1511:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement3.C'
    sources:
      binary: placement3.s
  group: GRPSERIAL
test_placement3_1512:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement3.C'
    sources:
      binary: placement3.s
  group: GRPSERIAL
test_placement3_608:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement3.C'
    sources:
      binary: placement3.s
  group: GRPSERIAL
test_placement3_609:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement3.C'
    sources:
      binary: placement3.s
  group: GRPSERIAL
test_placement3_610:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement3.C'
    sources:
      binary: placement3.s
  group: GRPSERIAL
test_placement4_1513:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement4.C'
    sources:
      binary: placement4.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_placement4_1514:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement4.C'
    sources:
      binary: placement4.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_placement4_1515:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement4.C'
    sources:
      binary: placement4.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_placement4_611:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement4.C'
    sources:
      binary: placement4.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_placement4_612:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement4.C'
    sources:
      binary: placement4.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_placement4_613:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement4.C'
    sources:
      binary: placement4.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'
test_placement5_1516:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement5.C'
    sources:
      binary: placement5.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("placement")[^\n]*\n?)+'
test_placement5_1517:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement5.C'
    sources:
      binary: placement5.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("placement")[^\n]*\n?)+'
test_placement5_1518:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement5.C'
    sources:
      binary: placement5.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("placement")[^\n]*\n?)+'
test_placement5_614:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement5.C'
    sources:
      binary: placement5.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("placement")[^\n]*\n?)+'
test_placement5_615:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement5.C'
    sources:
      binary: placement5.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("placement")[^\n]*\n?)+'
test_placement5_616:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/placement5.C'
    sources:
      binary: placement5.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("placement")[^\n]*\n?)+'
test_pm1_1519:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm1.C'
    sources:
      binary: ./pm1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pm1_1520:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm1.C'
    sources:
      binary: ./pm1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pm1_1521:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm1.C'
    sources:
      binary: ./pm1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pm1_617:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm1.C'
    sources:
      binary: ./pm1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pm1_618:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm1.C'
    sources:
      binary: ./pm1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pm1_619:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm1.C'
    sources:
      binary: ./pm1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pm2_1522:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm2.C'
    sources:
      binary: pm2.s
  group: GRPSERIAL
test_pm2_1523:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm2.C'
    sources:
      binary: pm2.s
  group: GRPSERIAL
test_pm2_1524:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm2.C'
    sources:
      binary: pm2.s
  group: GRPSERIAL
test_pm2_620:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm2.C'
    sources:
      binary: pm2.s
  group: GRPSERIAL
test_pm2_621:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm2.C'
    sources:
      binary: pm2.s
  group: GRPSERIAL
test_pm2_622:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm2.C'
    sources:
      binary: pm2.s
  group: GRPSERIAL
test_pm3_1525:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm3.C'
    sources:
      binary: ./pm3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pm3_1526:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm3.C'
    sources:
      binary: ./pm3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pm3_1527:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm3.C'
    sources:
      binary: ./pm3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pm3_623:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm3.C'
    sources:
      binary: ./pm3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pm3_624:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm3.C'
    sources:
      binary: ./pm3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pm3_625:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pm3.C'
    sources:
      binary: ./pm3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pmf1_1528:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pmf1.C'
    sources:
      binary: pmf1.s
  group: GRPSERIAL
test_pmf1_1529:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pmf1.C'
    sources:
      binary: pmf1.s
  group: GRPSERIAL
test_pmf1_1530:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pmf1.C'
    sources:
      binary: pmf1.s
  group: GRPSERIAL
test_pmf1_626:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pmf1.C'
    sources:
      binary: pmf1.s
  group: GRPSERIAL
test_pmf1_627:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pmf1.C'
    sources:
      binary: pmf1.s
  group: GRPSERIAL
test_pmf1_628:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pmf1.C'
    sources:
      binary: pmf1.s
  group: GRPSERIAL
test_pr20039_1531:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr20039.C'
    sources:
      binary: pr20039.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr20039_1532:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr20039.C'
    sources:
      binary: pr20039.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr20039_1533:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr20039.C'
    sources:
      binary: pr20039.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr20039_629:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr20039.C'
    sources:
      binary: pr20039.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr20039_630:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr20039.C'
    sources:
      binary: pr20039.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr20039_631:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr20039.C'
    sources:
      binary: pr20039.s
  group: GRPSERIAL
  validate:
    match:
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr25811-3_1534:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811-3.C'
    sources:
      binary: pr25811-3.s
  group: GRPSERIAL
test_pr25811-3_1535:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811-3.C'
    sources:
      binary: pr25811-3.s
  group: GRPSERIAL
test_pr25811-3_1536:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811-3.C'
    sources:
      binary: pr25811-3.s
  group: GRPSERIAL
test_pr25811-3_632:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811-3.C'
    sources:
      binary: pr25811-3.s
  group: GRPSERIAL
test_pr25811-3_633:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811-3.C'
    sources:
      binary: pr25811-3.s
  group: GRPSERIAL
test_pr25811-3_634:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811-3.C'
    sources:
      binary: pr25811-3.s
  group: GRPSERIAL
test_pr25811-4_1537:
  build:
    cflags: "-std=gnu++98 -fpermissive\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811-4.C'
    sources:
      binary: pr25811-4.s
  group: GRPSERIAL
test_pr25811-4_1538:
  build:
    cflags: "-std=gnu++11 -fpermissive\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811-4.C'
    sources:
      binary: pr25811-4.s
  group: GRPSERIAL
test_pr25811-4_1539:
  build:
    cflags: "-std=gnu++14 -fpermissive\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811-4.C'
    sources:
      binary: pr25811-4.s
  group: GRPSERIAL
test_pr25811-4_635:
  build:
    cflags: "-std=gnu++98 -fpermissive\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811-4.C'
    sources:
      binary: pr25811-4.s
  group: GRPSERIAL
test_pr25811-4_636:
  build:
    cflags: "-std=gnu++11 -fpermissive\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811-4.C'
    sources:
      binary: pr25811-4.s
  group: GRPSERIAL
test_pr25811-4_637:
  build:
    cflags: "-std=gnu++14 -fpermissive\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811-4.C'
    sources:
      binary: pr25811-4.s
  group: GRPSERIAL
test_pr25811_1540:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811.C'
    sources:
      binary: pr25811.s
  group: GRPSERIAL
  validate:
    match:
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+:165:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr25811_1541:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811.C'
    sources:
      binary: pr25811.s
  group: GRPSERIAL
  validate:
    match:
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+:165:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr25811_1542:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811.C'
    sources:
      binary: pr25811.s
  group: GRPSERIAL
  validate:
    match:
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+:165:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr25811_638:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811.C'
    sources:
      binary: pr25811.s
  group: GRPSERIAL
  validate:
    match:
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+:165:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr25811_639:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811.C'
    sources:
      binary: pr25811.s
  group: GRPSERIAL
  validate:
    match:
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+:165:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr25811_640:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr25811.C'
    sources:
      binary: pr25811.s
  group: GRPSERIAL
  validate:
    match:
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+:118:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+:165:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+:205:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          reference member|uninitialized const member")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+:210:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr29043_1543:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr29043.C'
    sources:
      binary: pr29043.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr29043_1544:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr29043.C'
    sources:
      binary: pr29043.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr29043_1545:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr29043.C'
    sources:
      binary: pr29043.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr29043_641:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr29043.C'
    sources:
      binary: pr29043.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr29043_642:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr29043.C'
    sources:
      binary: pr29043.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr29043_643:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr29043.C'
    sources:
      binary: pr29043.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr29571_1546:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr29571.C'
    sources:
      binary: pr29571.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("division by zero")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant|conversion|initializ")[^\n]*\n?)+'
test_pr29571_1547:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr29571.C'
    sources:
      binary: pr29571.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("division by zero")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant|conversion|initializ")[^\n]*\n?)+'
test_pr29571_1548:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr29571.C'
    sources:
      binary: pr29571.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("division by zero")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant|conversion|initializ")[^\n]*\n?)+'
test_pr29571_644:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr29571.C'
    sources:
      binary: pr29571.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("division by zero")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant|conversion|initializ")[^\n]*\n?)+'
test_pr29571_645:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr29571.C'
    sources:
      binary: pr29571.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("division by zero")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant|conversion|initializ")[^\n]*\n?)+'
test_pr29571_646:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr29571.C'
    sources:
      binary: pr29571.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("division by zero")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("constant|conversion|initializ")[^\n]*\n?)+'
test_pr35878_1_1549:
  build:
    cflags: "-O2 -std=gnu++11 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr35878_1.C'
    sources:
      binary: pr35878_1.s
  group: GRPSERIAL
test_pr35878_1_647:
  build:
    cflags: "-O2 -std=gnu++11 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr35878_1.C'
    sources:
      binary: pr35878_1.s
  group: GRPSERIAL
test_pr35878_2_1550:
  build:
    cflags: "-O2 -std=gnu++17 -fcheck-new -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr35878_2.C'
    sources:
      binary: pr35878_2.s
  group: GRPSERIAL
test_pr35878_2_648:
  build:
    cflags: "-O2 -std=gnu++17 -fcheck-new -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr35878_2.C'
    sources:
      binary: pr35878_2.s
  group: GRPSERIAL
test_pr35878_3_1551:
  build:
    cflags: "-O2 -std=gnu++17 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr35878_3.C'
    sources:
      binary: pr35878_3.s
  group: GRPSERIAL
test_pr35878_3_649:
  build:
    cflags: "-O2 -std=gnu++17 -fdump-tree-optimized\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr35878_3.C'
    sources:
      binary: pr35878_3.s
  group: GRPSERIAL
test_pr42556_1552:
  build:
    cflags: "-std=gnu++98 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr42556.C'
    sources:
      binary: pr42556.s
  group: GRPSERIAL
test_pr42556_1553:
  build:
    cflags: "-std=gnu++11 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr42556.C'
    sources:
      binary: pr42556.s
  group: GRPSERIAL
test_pr42556_1554:
  build:
    cflags: "-std=gnu++14 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr42556.C'
    sources:
      binary: pr42556.s
  group: GRPSERIAL
test_pr42556_650:
  build:
    cflags: "-std=gnu++98 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr42556.C'
    sources:
      binary: pr42556.s
  group: GRPSERIAL
test_pr42556_651:
  build:
    cflags: "-std=gnu++11 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr42556.C'
    sources:
      binary: pr42556.s
  group: GRPSERIAL
test_pr42556_652:
  build:
    cflags: "-std=gnu++14 -fdump-tree-gimple\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr42556.C'
    sources:
      binary: pr42556.s
  group: GRPSERIAL
test_pr42844_1555:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr42844.C'
    sources:
      binary: pr42844.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr42844_1556:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr42844.C'
    sources:
      binary: pr42844.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr42844_1557:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr42844.C'
    sources:
      binary: pr42844.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr42844_653:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr42844.C'
    sources:
      binary: pr42844.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr42844_654:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr42844.C'
    sources:
      binary: pr42844.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr42844_655:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr42844.C'
    sources:
      binary: pr42844.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const")[^\n]*\n?)+'
test_pr43453_1558:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43453.C'
    sources:
      binary: pr43453.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too long")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too long")[^\n]*\n?)+'
test_pr43453_1559:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43453.C'
    sources:
      binary: pr43453.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too long")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too long")[^\n]*\n?)+'
test_pr43453_1560:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43453.C'
    sources:
      binary: pr43453.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too long")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too long")[^\n]*\n?)+'
test_pr43453_656:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43453.C'
    sources:
      binary: pr43453.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too long")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too long")[^\n]*\n?)+'
test_pr43453_657:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43453.C'
    sources:
      binary: pr43453.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too long")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too long")[^\n]*\n?)+'
test_pr43453_658:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43453.C'
    sources:
      binary: pr43453.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too long")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too long")[^\n]*\n?)+'
test_pr43719_1561:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43719.C'
    sources:
      binary: pr43719.s
  group: GRPSERIAL
  validate:
    match:
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+:180:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr43719_1562:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43719.C'
    sources:
      binary: pr43719.s
  group: GRPSERIAL
  validate:
    match:
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+:180:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr43719_1563:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43719.C'
    sources:
      binary: pr43719.s
  group: GRPSERIAL
  validate:
    match:
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+:180:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr43719_659:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43719.C'
    sources:
      binary: pr43719.s
  group: GRPSERIAL
  validate:
    match:
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+:180:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr43719_660:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43719.C'
    sources:
      binary: pr43719.s
  group: GRPSERIAL
  validate:
    match:
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+:180:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr43719_661:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43719.C'
    sources:
      binary: pr43719.s
  group: GRPSERIAL
  validate:
    match:
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+:140:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+:155:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+:160:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+:175:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+:180:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+:185:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|deleted")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+:190:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          reference member|uninitialized const member|deleted")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+:195:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized
          const member|deleted")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+:78:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr43890_1564:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43890.C'
    sources:
      binary: pr43890.s
  group: GRPSERIAL
test_pr43890_1565:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43890.C'
    sources:
      binary: pr43890.s
  group: GRPSERIAL
test_pr43890_1566:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43890.C'
    sources:
      binary: pr43890.s
  group: GRPSERIAL
test_pr43890_662:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43890.C'
    sources:
      binary: pr43890.s
  group: GRPSERIAL
test_pr43890_663:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43890.C'
    sources:
      binary: pr43890.s
  group: GRPSERIAL
test_pr43890_664:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr43890.C'
    sources:
      binary: pr43890.s
  group: GRPSERIAL
test_pr44086_1567:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr44086.C'
    sources:
      binary: pr44086.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr44086_1568:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr44086.C'
    sources:
      binary: pr44086.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr44086_1569:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr44086.C'
    sources:
      binary: pr44086.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr44086_665:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr44086.C'
    sources:
      binary: pr44086.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr44086_666:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr44086.C'
    sources:
      binary: pr44086.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr44086_667:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr44086.C'
    sources:
      binary: pr44086.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
test_pr48859_1570:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr48859.C'
    sources:
      binary: pr48859.s
  group: GRPSERIAL
test_pr48859_1571:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr48859.C'
    sources:
      binary: pr48859.s
  group: GRPSERIAL
test_pr48859_1572:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr48859.C'
    sources:
      binary: pr48859.s
  group: GRPSERIAL
test_pr48859_668:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr48859.C'
    sources:
      binary: pr48859.s
  group: GRPSERIAL
test_pr48859_669:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr48859.C'
    sources:
      binary: pr48859.s
  group: GRPSERIAL
test_pr48859_670:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr48859.C'
    sources:
      binary: pr48859.s
  group: GRPSERIAL
test_pr55497_1573:
  build:
    cflags: "-std=gnu++98 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr55497.C'
    sources:
      binary: pr55497.s
  group: GRPSERIAL
test_pr55497_1574:
  build:
    cflags: "-std=gnu++11 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr55497.C'
    sources:
      binary: pr55497.s
  group: GRPSERIAL
test_pr55497_1575:
  build:
    cflags: "-std=gnu++14 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr55497.C'
    sources:
      binary: pr55497.s
  group: GRPSERIAL
test_pr55497_671:
  build:
    cflags: "-std=gnu++98 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr55497.C'
    sources:
      binary: pr55497.s
  group: GRPSERIAL
test_pr55497_672:
  build:
    cflags: "-std=gnu++11 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr55497.C'
    sources:
      binary: pr55497.s
  group: GRPSERIAL
test_pr55497_673:
  build:
    cflags: "-std=gnu++14 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr55497.C'
    sources:
      binary: pr55497.s
  group: GRPSERIAL
test_pr58811_1576:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr58811.C'
    sources:
      binary: pr58811.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr58811_1577:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr58811.C'
    sources:
      binary: pr58811.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr58811_1578:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr58811.C'
    sources:
      binary: pr58811.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr58811_674:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr58811.C'
    sources:
      binary: pr58811.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr58811_675:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr58811.C'
    sources:
      binary: pr58811.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr58811_676:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr58811.C'
    sources:
      binary: pr58811.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr60572_1579:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr60572.C'
    sources:
      binary: pr60572.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr60572_1580:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr60572.C'
    sources:
      binary: pr60572.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr60572_1581:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr60572.C'
    sources:
      binary: pr60572.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr60572_677:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr60572.C'
    sources:
      binary: pr60572.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr60572_678:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr60572.C'
    sources:
      binary: pr60572.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr60572_679:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr60572.C'
    sources:
      binary: pr60572.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete type")[^\n]*\n?)+'
test_pr64527_1582:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr64527.C'
    sources:
      binary: ./pr64527.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr64527_1583:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr64527.C'
    sources:
      binary: ./pr64527.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr64527_680:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr64527.C'
    sources:
      binary: ./pr64527.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr64527_681:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr64527.C'
    sources:
      binary: ./pr64527.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr66857_1584:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr66857.C'
    sources:
      binary: ./pr66857.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr66857_1585:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr66857.C'
    sources:
      binary: ./pr66857.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr66857_1586:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr66857.C'
    sources:
      binary: ./pr66857.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr66857_682:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr66857.C'
    sources:
      binary: ./pr66857.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr66857_683:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr66857.C'
    sources:
      binary: ./pr66857.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr66857_684:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr66857.C'
    sources:
      binary: ./pr66857.exe
  group: GRPSERIAL
  run:
    cwd: .
test_pr69658_1587:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr69658.C'
    sources:
      binary: pr69658.s
  group: GRPSERIAL
test_pr69658_1588:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr69658.C'
    sources:
      binary: pr69658.s
  group: GRPSERIAL
test_pr69658_1589:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr69658.C'
    sources:
      binary: pr69658.s
  group: GRPSERIAL
test_pr69658_685:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr69658.C'
    sources:
      binary: pr69658.s
  group: GRPSERIAL
test_pr69658_686:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr69658.C'
    sources:
      binary: pr69658.s
  group: GRPSERIAL
test_pr69658_687:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr69658.C'
    sources:
      binary: pr69658.s
  group: GRPSERIAL
test_pr70501_1590:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr70501.C'
    sources:
      binary: pr70501.s
  group: GRPSERIAL
test_pr70501_1591:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr70501.C'
    sources:
      binary: pr70501.s
  group: GRPSERIAL
test_pr70501_1592:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr70501.C'
    sources:
      binary: pr70501.s
  group: GRPSERIAL
test_pr70501_688:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr70501.C'
    sources:
      binary: pr70501.s
  group: GRPSERIAL
test_pr70501_689:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr70501.C'
    sources:
      binary: pr70501.s
  group: GRPSERIAL
test_pr70501_690:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr70501.C'
    sources:
      binary: pr70501.s
  group: GRPSERIAL
test_pr71516_1593:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr71516.C'
    sources:
      binary: pr71516.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has initializer
          but incomplete type|invalid use of incomplete type")[^\n]*\n?)+'
test_pr71516_1594:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr71516.C'
    sources:
      binary: pr71516.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has initializer
          but incomplete type|invalid use of incomplete type")[^\n]*\n?)+'
test_pr71516_1595:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr71516.C'
    sources:
      binary: pr71516.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has initializer
          but incomplete type|invalid use of incomplete type")[^\n]*\n?)+'
test_pr71516_691:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr71516.C'
    sources:
      binary: pr71516.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has initializer
          but incomplete type|invalid use of incomplete type")[^\n]*\n?)+'
test_pr71516_692:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr71516.C'
    sources:
      binary: pr71516.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has initializer
          but incomplete type|invalid use of incomplete type")[^\n]*\n?)+'
test_pr71516_693:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/pr71516.C'
    sources:
      binary: pr71516.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has initializer
          but incomplete type|invalid use of incomplete type")[^\n]*\n?)+'
test_ptrfn1_1596:
  build:
    cflags: "-std=gnu++98 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn1.C'
    sources:
      binary: ptrfn1.s
  group: GRPSERIAL
test_ptrfn1_1597:
  build:
    cflags: "-std=gnu++11 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn1.C'
    sources:
      binary: ptrfn1.s
  group: GRPSERIAL
test_ptrfn1_1598:
  build:
    cflags: "-std=gnu++14 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn1.C'
    sources:
      binary: ptrfn1.s
  group: GRPSERIAL
test_ptrfn1_694:
  build:
    cflags: "-std=gnu++98 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn1.C'
    sources:
      binary: ptrfn1.s
  group: GRPSERIAL
test_ptrfn1_695:
  build:
    cflags: "-std=gnu++11 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn1.C'
    sources:
      binary: ptrfn1.s
  group: GRPSERIAL
test_ptrfn1_696:
  build:
    cflags: "-std=gnu++14 -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn1.C'
    sources:
      binary: ptrfn1.s
  group: GRPSERIAL
test_ptrfn2_1599:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn2.C'
    sources:
      binary: ptrfn2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ptrfn2_1600:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn2.C'
    sources:
      binary: ptrfn2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ptrfn2_1601:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn2.C'
    sources:
      binary: ptrfn2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ptrfn2_697:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn2.C'
    sources:
      binary: ptrfn2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ptrfn2_698:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn2.C'
    sources:
      binary: ptrfn2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ptrfn2_699:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn2.C'
    sources:
      binary: ptrfn2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ptrfn3_1602:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn3.C'
    sources:
      binary: ptrfn3.s
  group: GRPSERIAL
test_ptrfn3_1603:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn3.C'
    sources:
      binary: ptrfn3.s
  group: GRPSERIAL
test_ptrfn3_1604:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn3.C'
    sources:
      binary: ptrfn3.s
  group: GRPSERIAL
test_ptrfn3_700:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn3.C'
    sources:
      binary: ptrfn3.s
  group: GRPSERIAL
test_ptrfn3_701:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn3.C'
    sources:
      binary: ptrfn3.s
  group: GRPSERIAL
test_ptrfn3_702:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrfn3.C'
    sources:
      binary: ptrfn3.s
  group: GRPSERIAL
test_ptrmem1_1605:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem1.C'
    sources:
      binary: ptrmem1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ptrmem1_1606:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem1.C'
    sources:
      binary: ptrmem1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ptrmem1_1607:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem1.C'
    sources:
      binary: ptrmem1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ptrmem1_703:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem1.C'
    sources:
      binary: ptrmem1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ptrmem1_704:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem1.C'
    sources:
      binary: ptrmem1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ptrmem1_705:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem1.C'
    sources:
      binary: ptrmem1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_ptrmem2_1608:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem2.C'
    sources:
      binary: ./ptrmem2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ptrmem2_1609:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem2.C'
    sources:
      binary: ./ptrmem2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ptrmem2_1610:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem2.C'
    sources:
      binary: ./ptrmem2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ptrmem2_706:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem2.C'
    sources:
      binary: ./ptrmem2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ptrmem2_707:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem2.C'
    sources:
      binary: ./ptrmem2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ptrmem2_708:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem2.C'
    sources:
      binary: ./ptrmem2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ptrmem3_1611:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem3.C'
    sources:
      binary: ptrmem3.s
  group: GRPSERIAL
test_ptrmem3_1612:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem3.C'
    sources:
      binary: ptrmem3.s
  group: GRPSERIAL
test_ptrmem3_1613:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem3.C'
    sources:
      binary: ptrmem3.s
  group: GRPSERIAL
test_ptrmem3_709:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem3.C'
    sources:
      binary: ptrmem3.s
  group: GRPSERIAL
test_ptrmem3_710:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem3.C'
    sources:
      binary: ptrmem3.s
  group: GRPSERIAL
test_ptrmem3_711:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem3.C'
    sources:
      binary: ptrmem3.s
  group: GRPSERIAL
test_ptrmem4_1614:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem4.C'
    sources:
      binary: ./ptrmem4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ptrmem4_1615:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem4.C'
    sources:
      binary: ./ptrmem4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ptrmem4_1616:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem4.C'
    sources:
      binary: ./ptrmem4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ptrmem4_712:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem4.C'
    sources:
      binary: ./ptrmem4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ptrmem4_713:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem4.C'
    sources:
      binary: ./ptrmem4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ptrmem4_714:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ptrmem4.C'
    sources:
      binary: ./ptrmem4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref10_1620:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref10.C'
    sources:
      binary: ref10.s
  group: GRPSERIAL
test_ref10_1621:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref10.C'
    sources:
      binary: ref10.s
  group: GRPSERIAL
test_ref10_1622:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref10.C'
    sources:
      binary: ref10.s
  group: GRPSERIAL
test_ref10_718:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref10.C'
    sources:
      binary: ref10.s
  group: GRPSERIAL
test_ref10_719:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref10.C'
    sources:
      binary: ref10.s
  group: GRPSERIAL
test_ref10_720:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref10.C'
    sources:
      binary: ref10.s
  group: GRPSERIAL
test_ref11_1623:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref11.C'
    sources:
      binary: ref11.s
  group: GRPSERIAL
test_ref11_1624:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref11.C'
    sources:
      binary: ref11.s
  group: GRPSERIAL
test_ref11_1625:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref11.C'
    sources:
      binary: ref11.s
  group: GRPSERIAL
test_ref11_721:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref11.C'
    sources:
      binary: ref11.s
  group: GRPSERIAL
test_ref11_722:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref11.C'
    sources:
      binary: ref11.s
  group: GRPSERIAL
test_ref11_723:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref11.C'
    sources:
      binary: ref11.s
  group: GRPSERIAL
test_ref12_1626:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref12.C'
    sources:
      binary: ./ref12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref12_1627:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref12.C'
    sources:
      binary: ./ref12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref12_1628:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref12.C'
    sources:
      binary: ./ref12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref12_724:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref12.C'
    sources:
      binary: ./ref12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref12_725:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref12.C'
    sources:
      binary: ./ref12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref12_726:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref12.C'
    sources:
      binary: ./ref12.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref13_1629:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref13.C'
    sources:
      binary: ref13.s
  group: GRPSERIAL
test_ref13_1630:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref13.C'
    sources:
      binary: ref13.s
  group: GRPSERIAL
test_ref13_1631:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref13.C'
    sources:
      binary: ref13.s
  group: GRPSERIAL
test_ref13_727:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref13.C'
    sources:
      binary: ref13.s
  group: GRPSERIAL
test_ref13_728:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref13.C'
    sources:
      binary: ref13.s
  group: GRPSERIAL
test_ref13_729:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref13.C'
    sources:
      binary: ref13.s
  group: GRPSERIAL
test_ref14_1632:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref14.C'
    sources:
      binary: ref14.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have reference
          type")[^\n]*\n?)+'
test_ref14_1633:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref14.C'
    sources:
      binary: ref14.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have reference
          type")[^\n]*\n?)+'
test_ref14_1634:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref14.C'
    sources:
      binary: ref14.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have reference
          type")[^\n]*\n?)+'
test_ref14_730:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref14.C'
    sources:
      binary: ref14.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have reference
          type")[^\n]*\n?)+'
test_ref14_731:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref14.C'
    sources:
      binary: ref14.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have reference
          type")[^\n]*\n?)+'
test_ref14_732:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref14.C'
    sources:
      binary: ref14.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not have reference
          type")[^\n]*\n?)+'
test_ref15_1635:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref15.C'
    sources:
      binary: ./ref15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref15_1636:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref15.C'
    sources:
      binary: ./ref15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref15_1637:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref15.C'
    sources:
      binary: ./ref15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref15_733:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref15.C'
    sources:
      binary: ./ref15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref15_734:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref15.C'
    sources:
      binary: ./ref15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref15_735:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref15.C'
    sources:
      binary: ./ref15.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref16_1638:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref16.C'
    sources:
      binary: ./ref16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref16_1639:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref16.C'
    sources:
      binary: ./ref16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref16_1640:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref16.C'
    sources:
      binary: ./ref16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref16_736:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref16.C'
    sources:
      binary: ./ref16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref16_737:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref16.C'
    sources:
      binary: ./ref16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref16_738:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref16.C'
    sources:
      binary: ./ref16.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref17_1641:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref17.C'
    sources:
      binary: ref17.s
  group: GRPSERIAL
test_ref17_1642:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref17.C'
    sources:
      binary: ref17.s
  group: GRPSERIAL
test_ref17_1643:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref17.C'
    sources:
      binary: ref17.s
  group: GRPSERIAL
test_ref17_739:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref17.C'
    sources:
      binary: ref17.s
  group: GRPSERIAL
test_ref17_740:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref17.C'
    sources:
      binary: ref17.s
  group: GRPSERIAL
test_ref17_741:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref17.C'
    sources:
      binary: ref17.s
  group: GRPSERIAL
test_ref18_1644:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref18.C'
    sources:
      binary: ref18.s
  group: GRPSERIAL
test_ref18_1645:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref18.C'
    sources:
      binary: ref18.s
  group: GRPSERIAL
test_ref18_1646:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref18.C'
    sources:
      binary: ref18.s
  group: GRPSERIAL
test_ref18_742:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref18.C'
    sources:
      binary: ref18.s
  group: GRPSERIAL
test_ref18_743:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref18.C'
    sources:
      binary: ref18.s
  group: GRPSERIAL
test_ref18_744:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref18.C'
    sources:
      binary: ref18.s
  group: GRPSERIAL
test_ref19_1647:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref19.C'
    sources:
      binary: ./ref19.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref19_1648:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref19.C'
    sources:
      binary: ./ref19.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref19_1649:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref19.C'
    sources:
      binary: ./ref19.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref19_745:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref19.C'
    sources:
      binary: ./ref19.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref19_746:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref19.C'
    sources:
      binary: ./ref19.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref19_747:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref19.C'
    sources:
      binary: ./ref19.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref1_1617:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref1.C'
    sources:
      binary: ref1.s
  group: GRPSERIAL
test_ref1_1618:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref1.C'
    sources:
      binary: ref1.s
  group: GRPSERIAL
test_ref1_1619:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref1.C'
    sources:
      binary: ref1.s
  group: GRPSERIAL
test_ref1_715:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref1.C'
    sources:
      binary: ref1.s
  group: GRPSERIAL
test_ref1_716:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref1.C'
    sources:
      binary: ref1.s
  group: GRPSERIAL
test_ref1_717:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref1.C'
    sources:
      binary: ref1.s
  group: GRPSERIAL
test_ref20_1653:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref20.C'
    sources:
      binary: ./ref20.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref20_1654:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref20.C'
    sources:
      binary: ./ref20.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref20_1655:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref20.C'
    sources:
      binary: ./ref20.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref20_751:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref20.C'
    sources:
      binary: ./ref20.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref20_752:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref20.C'
    sources:
      binary: ./ref20.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref20_753:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref20.C'
    sources:
      binary: ./ref20.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref21_1656:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref21.C'
    sources:
      binary: ref21.s
  group: GRPSERIAL
test_ref21_1657:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref21.C'
    sources:
      binary: ref21.s
  group: GRPSERIAL
test_ref21_1658:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref21.C'
    sources:
      binary: ref21.s
  group: GRPSERIAL
test_ref21_754:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref21.C'
    sources:
      binary: ref21.s
  group: GRPSERIAL
test_ref21_755:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref21.C'
    sources:
      binary: ref21.s
  group: GRPSERIAL
test_ref21_756:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref21.C'
    sources:
      binary: ref21.s
  group: GRPSERIAL
test_ref22_1659:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref22.C'
    sources:
      binary: ./ref22.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref22_1660:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref22.C'
    sources:
      binary: ./ref22.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref22_1661:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref22.C'
    sources:
      binary: ./ref22.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref22_757:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref22.C'
    sources:
      binary: ./ref22.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref22_758:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref22.C'
    sources:
      binary: ./ref22.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref22_759:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref22.C'
    sources:
      binary: ./ref22.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref23_1662:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref23.C'
    sources:
      binary: ref23.s
  group: GRPSERIAL
test_ref23_1663:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref23.C'
    sources:
      binary: ref23.s
  group: GRPSERIAL
test_ref23_1664:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref23.C'
    sources:
      binary: ref23.s
  group: GRPSERIAL
test_ref23_760:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref23.C'
    sources:
      binary: ref23.s
  group: GRPSERIAL
test_ref23_761:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref23.C'
    sources:
      binary: ref23.s
  group: GRPSERIAL
test_ref23_762:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref23.C'
    sources:
      binary: ref23.s
  group: GRPSERIAL
test_ref2_1650:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref2.C'
    sources:
      binary: ref2.s
  group: GRPSERIAL
test_ref2_1651:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref2.C'
    sources:
      binary: ref2.s
  group: GRPSERIAL
test_ref2_1652:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref2.C'
    sources:
      binary: ref2.s
  group: GRPSERIAL
test_ref2_748:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref2.C'
    sources:
      binary: ref2.s
  group: GRPSERIAL
test_ref2_749:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref2.C'
    sources:
      binary: ref2.s
  group: GRPSERIAL
test_ref2_750:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref2.C'
    sources:
      binary: ref2.s
  group: GRPSERIAL
test_ref3_1665:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref3.C'
    sources:
      binary: ref3.s
  group: GRPSERIAL
test_ref3_1666:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref3.C'
    sources:
      binary: ref3.s
  group: GRPSERIAL
test_ref3_1667:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref3.C'
    sources:
      binary: ref3.s
  group: GRPSERIAL
test_ref3_763:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref3.C'
    sources:
      binary: ref3.s
  group: GRPSERIAL
test_ref3_764:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref3.C'
    sources:
      binary: ref3.s
  group: GRPSERIAL
test_ref3_765:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref3.C'
    sources:
      binary: ref3.s
  group: GRPSERIAL
test_ref4_1668:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref4.C'
    sources:
      binary: ./ref4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref4_1669:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref4.C'
    sources:
      binary: ./ref4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref4_1670:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref4.C'
    sources:
      binary: ./ref4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref4_766:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref4.C'
    sources:
      binary: ./ref4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref4_767:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref4.C'
    sources:
      binary: ./ref4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref4_768:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref4.C'
    sources:
      binary: ./ref4.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref5_1671:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref5.C'
    sources:
      binary: ref5.s
  group: GRPSERIAL
test_ref5_1672:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref5.C'
    sources:
      binary: ref5.s
  group: GRPSERIAL
test_ref5_1673:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref5.C'
    sources:
      binary: ref5.s
  group: GRPSERIAL
test_ref5_769:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref5.C'
    sources:
      binary: ref5.s
  group: GRPSERIAL
test_ref5_770:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref5.C'
    sources:
      binary: ref5.s
  group: GRPSERIAL
test_ref5_771:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref5.C'
    sources:
      binary: ref5.s
  group: GRPSERIAL
test_ref6_1674:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref6.C'
    sources:
      binary: ref6.s
  group: GRPSERIAL
test_ref6_1675:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref6.C'
    sources:
      binary: ref6.s
  group: GRPSERIAL
test_ref6_1676:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref6.C'
    sources:
      binary: ref6.s
  group: GRPSERIAL
test_ref6_772:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref6.C'
    sources:
      binary: ref6.s
  group: GRPSERIAL
test_ref6_773:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref6.C'
    sources:
      binary: ref6.s
  group: GRPSERIAL
test_ref6_774:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref6.C'
    sources:
      binary: ref6.s
  group: GRPSERIAL
test_ref7_1677:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref7.C'
    sources:
      binary: ref7.s
  group: GRPSERIAL
test_ref7_1678:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref7.C'
    sources:
      binary: ref7.s
  group: GRPSERIAL
test_ref7_1679:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref7.C'
    sources:
      binary: ref7.s
  group: GRPSERIAL
test_ref7_775:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref7.C'
    sources:
      binary: ref7.s
  group: GRPSERIAL
test_ref7_776:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref7.C'
    sources:
      binary: ref7.s
  group: GRPSERIAL
test_ref7_777:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref7.C'
    sources:
      binary: ref7.s
  group: GRPSERIAL
test_ref8_1680:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref8.C'
    sources:
      binary: ref8.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-const lvalue
          reference")[^\n]*\n?)+'
test_ref8_1681:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref8.C'
    sources:
      binary: ref8.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-const lvalue
          reference")[^\n]*\n?)+'
test_ref8_1682:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref8.C'
    sources:
      binary: ref8.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-const lvalue
          reference")[^\n]*\n?)+'
test_ref8_778:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref8.C'
    sources:
      binary: ref8.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-const lvalue
          reference")[^\n]*\n?)+'
test_ref8_779:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref8.C'
    sources:
      binary: ref8.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-const lvalue
          reference")[^\n]*\n?)+'
test_ref8_780:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref8.C'
    sources:
      binary: ref8.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-const lvalue
          reference")[^\n]*\n?)+'
test_ref9_1683:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref9.C'
    sources:
      binary: ./ref9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref9_1684:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref9.C'
    sources:
      binary: ./ref9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref9_1685:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref9.C'
    sources:
      binary: ./ref9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref9_781:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref9.C'
    sources:
      binary: ./ref9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref9_782:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref9.C'
    sources:
      binary: ./ref9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_ref9_783:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/ref9.C'
    sources:
      binary: ./ref9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_reference1_1686:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference1.C'
    sources:
      binary: reference1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference1_1687:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference1.C'
    sources:
      binary: reference1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference1_1688:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference1.C'
    sources:
      binary: reference1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference1_784:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference1.C'
    sources:
      binary: reference1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference1_785:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference1.C'
    sources:
      binary: reference1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference1_786:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference1.C'
    sources:
      binary: reference1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference2_1689:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference2.C'
    sources:
      binary: reference2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference2_1690:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference2.C'
    sources:
      binary: reference2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference2_1691:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference2.C'
    sources:
      binary: reference2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference2_787:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference2.C'
    sources:
      binary: reference2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference2_788:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference2.C'
    sources:
      binary: reference2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference2_789:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference2.C'
    sources:
      binary: reference2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference3_1692:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference3.C'
    sources:
      binary: reference3.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference3_1693:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference3.C'
    sources:
      binary: reference3.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference3_1694:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference3.C'
    sources:
      binary: reference3.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference3_790:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference3.C'
    sources:
      binary: reference3.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference3_791:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference3.C'
    sources:
      binary: reference3.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_reference3_792:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/reference3.C'
    sources:
      binary: reference3.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("value-initialization
          of reference")[^\n]*\n?)+'
test_save1_1695:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/save1.C'
    sources:
      binary: save1.s
  group: GRPSERIAL
test_save1_1696:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/save1.C'
    sources:
      binary: save1.s
  group: GRPSERIAL
test_save1_1697:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/save1.C'
    sources:
      binary: save1.s
  group: GRPSERIAL
test_save1_793:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/save1.C'
    sources:
      binary: save1.s
  group: GRPSERIAL
test_save1_794:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/save1.C'
    sources:
      binary: save1.s
  group: GRPSERIAL
test_save1_795:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/save1.C'
    sources:
      binary: save1.s
  group: GRPSERIAL
test_self1_1698:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/self1.C'
    sources:
      binary: self1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion")[^\n]*\n?)+'
test_self1_1699:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/self1.C'
    sources:
      binary: self1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion")[^\n]*\n?)+'
test_self1_1700:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/self1.C'
    sources:
      binary: self1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion")[^\n]*\n?)+'
test_self1_796:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/self1.C'
    sources:
      binary: self1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion")[^\n]*\n?)+'
test_self1_797:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/self1.C'
    sources:
      binary: self1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion")[^\n]*\n?)+'
test_self1_798:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/self1.C'
    sources:
      binary: self1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid conversion")[^\n]*\n?)+'
test_static-init1_1701:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init1.C'
    sources:
      binary: static-init1.s
  group: GRPSERIAL
test_static-init1_1702:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init1.C'
    sources:
      binary: static-init1.s
  group: GRPSERIAL
test_static-init1_1703:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init1.C'
    sources:
      binary: static-init1.s
  group: GRPSERIAL
test_static-init1_799:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init1.C'
    sources:
      binary: static-init1.s
  group: GRPSERIAL
test_static-init1_800:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init1.C'
    sources:
      binary: static-init1.s
  group: GRPSERIAL
test_static-init1_801:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init1.C'
    sources:
      binary: static-init1.s
  group: GRPSERIAL
test_static-init2_1704:
  build:
    cflags: "-std=gnu++98 -frounding-math\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init2.C'
    sources:
      binary: static-init2.s
  group: GRPSERIAL
test_static-init2_1705:
  build:
    cflags: "-std=gnu++11 -frounding-math\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init2.C'
    sources:
      binary: static-init2.s
  group: GRPSERIAL
test_static-init2_1706:
  build:
    cflags: "-std=gnu++14 -frounding-math\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init2.C'
    sources:
      binary: static-init2.s
  group: GRPSERIAL
test_static-init2_802:
  build:
    cflags: "-std=gnu++98 -frounding-math\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init2.C'
    sources:
      binary: static-init2.s
  group: GRPSERIAL
test_static-init2_803:
  build:
    cflags: "-std=gnu++11 -frounding-math\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init2.C'
    sources:
      binary: static-init2.s
  group: GRPSERIAL
test_static-init2_804:
  build:
    cflags: "-std=gnu++14 -frounding-math\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init2.C'
    sources:
      binary: static-init2.s
  group: GRPSERIAL
test_static-init3_1707:
  build:
    cflags: "-std=c++98 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init3.C'
    sources:
      binary: static-init3.s
  group: GRPSERIAL
test_static-init3_1708:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init3.C'
    sources:
      binary: static-init3.s
  group: GRPSERIAL
test_static-init3_1709:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init3.C'
    sources:
      binary: static-init3.s
  group: GRPSERIAL
test_static-init3_805:
  build:
    cflags: "-std=c++98 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init3.C'
    sources:
      binary: static-init3.s
  group: GRPSERIAL
test_static-init3_806:
  build:
    cflags: "-std=c++11 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init3.C'
    sources:
      binary: static-init3.s
  group: GRPSERIAL
test_static-init3_807:
  build:
    cflags: "-std=c++14 -pedantic-errors -Wno-long-long -ffat-lto-objects\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static-init3.C'
    sources:
      binary: static-init3.s
  group: GRPSERIAL
test_static1_1710:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static1.C'
    sources:
      binary: static1.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_static1_1711:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static1.C'
    sources:
      binary: static1.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_static1_1712:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static1.C'
    sources:
      binary: static1.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_static1_808:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static1.C'
    sources:
      binary: static1.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_static1_809:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static1.C'
    sources:
      binary: static1.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_static1_810:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static1.C'
    sources:
      binary: static1.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_static2_1713:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static2.C'
    sources:
      binary: ./static2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_static2_1714:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static2.C'
    sources:
      binary: ./static2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_static2_1715:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static2.C'
    sources:
      binary: ./static2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_static2_811:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static2.C'
    sources:
      binary: ./static2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_static2_812:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static2.C'
    sources:
      binary: ./static2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_static2_813:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static2.C'
    sources:
      binary: ./static2.exe
  group: GRPSERIAL
  run:
    cwd: .
test_static3_1716:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static3.C'
    sources:
      binary: ./static3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_static3_1717:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static3.C'
    sources:
      binary: ./static3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_static3_1718:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static3.C'
    sources:
      binary: ./static3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_static3_814:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static3.C'
    sources:
      binary: ./static3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_static3_815:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static3.C'
    sources:
      binary: ./static3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_static3_816:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static3.C'
    sources:
      binary: ./static3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_static4_1719:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static4.C'
    sources:
      binary: static4.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete|non-integral")[^\n]*\n?)+'
test_static4_1720:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static4.C'
    sources:
      binary: static4.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete|non-integral")[^\n]*\n?)+'
test_static4_1721:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static4.C'
    sources:
      binary: static4.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete|non-integral")[^\n]*\n?)+'
test_static4_817:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static4.C'
    sources:
      binary: static4.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete|non-integral")[^\n]*\n?)+'
test_static4_818:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static4.C'
    sources:
      binary: static4.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete|non-integral")[^\n]*\n?)+'
test_static4_819:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/static4.C'
    sources:
      binary: static4.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete|non-integral")[^\n]*\n?)+'
test_string1_1722:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/string1.C'
    sources:
      binary: string1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_string1_1723:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/string1.C'
    sources:
      binary: string1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_string1_1724:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/string1.C'
    sources:
      binary: string1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_string1_820:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/string1.C'
    sources:
      binary: string1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_string1_821:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/string1.C'
    sources:
      binary: string1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_string1_822:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/string1.C'
    sources:
      binary: string1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conversion")[^\n]*\n?)+'
test_struct1_1725:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct1.C'
    sources:
      binary: struct1.s
  group: GRPSERIAL
test_struct1_1726:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct1.C'
    sources:
      binary: struct1.s
  group: GRPSERIAL
test_struct1_1727:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct1.C'
    sources:
      binary: struct1.s
  group: GRPSERIAL
test_struct1_823:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct1.C'
    sources:
      binary: struct1.s
  group: GRPSERIAL
test_struct1_824:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct1.C'
    sources:
      binary: struct1.s
  group: GRPSERIAL
test_struct1_825:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct1.C'
    sources:
      binary: struct1.s
  group: GRPSERIAL
test_struct2_1728:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct2.C'
    sources:
      binary: struct2.s
  group: GRPSERIAL
test_struct2_1729:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct2.C'
    sources:
      binary: struct2.s
  group: GRPSERIAL
test_struct2_1730:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct2.C'
    sources:
      binary: struct2.s
  group: GRPSERIAL
test_struct2_826:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct2.C'
    sources:
      binary: struct2.s
  group: GRPSERIAL
test_struct2_827:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct2.C'
    sources:
      binary: struct2.s
  group: GRPSERIAL
test_struct2_828:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct2.C'
    sources:
      binary: struct2.s
  group: GRPSERIAL
test_struct3_1731:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct3.C'
    sources:
      binary: struct3.s
  group: GRPSERIAL
test_struct3_1732:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct3.C'
    sources:
      binary: struct3.s
  group: GRPSERIAL
test_struct3_1733:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct3.C'
    sources:
      binary: struct3.s
  group: GRPSERIAL
test_struct3_829:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct3.C'
    sources:
      binary: struct3.s
  group: GRPSERIAL
test_struct3_830:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct3.C'
    sources:
      binary: struct3.s
  group: GRPSERIAL
test_struct3_831:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/struct3.C'
    sources:
      binary: struct3.s
  group: GRPSERIAL
test_switch1_1734:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/switch1.C'
    sources:
      binary: switch1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''d\'' was not
          declared")[^\n]*\n?)+'
test_switch1_1735:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/switch1.C'
    sources:
      binary: switch1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''d\'' was not
          declared")[^\n]*\n?)+'
test_switch1_1736:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/switch1.C'
    sources:
      binary: switch1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''d\'' was not
          declared")[^\n]*\n?)+'
test_switch1_832:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/switch1.C'
    sources:
      binary: switch1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''d\'' was not
          declared")[^\n]*\n?)+'
test_switch1_833:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/switch1.C'
    sources:
      binary: switch1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''d\'' was not
          declared")[^\n]*\n?)+'
test_switch1_834:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/switch1.C'
    sources:
      binary: switch1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''d\'' was not
          declared")[^\n]*\n?)+'
test_synth1_1737:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth1.C'
    sources:
      binary: synth1.s
  group: GRPSERIAL
test_synth1_1738:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth1.C'
    sources:
      binary: synth1.s
  group: GRPSERIAL
test_synth1_1739:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth1.C'
    sources:
      binary: synth1.s
  group: GRPSERIAL
test_synth1_835:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth1.C'
    sources:
      binary: synth1.s
  group: GRPSERIAL
test_synth1_836:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth1.C'
    sources:
      binary: synth1.s
  group: GRPSERIAL
test_synth1_837:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth1.C'
    sources:
      binary: synth1.s
  group: GRPSERIAL
test_synth2_1740:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth2.C'
    sources:
      binary: synth2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_synth2_1741:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth2.C'
    sources:
      binary: synth2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_synth2_1742:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth2.C'
    sources:
      binary: synth2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_synth2_838:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth2.C'
    sources:
      binary: synth2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_synth2_839:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth2.C'
    sources:
      binary: synth2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_synth2_840:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth2.C'
    sources:
      binary: synth2.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
test_synth3_1743:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth3.C'
    sources:
      binary: synth3.s
  group: GRPSERIAL
test_synth3_1744:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth3.C'
    sources:
      binary: synth3.s
  group: GRPSERIAL
test_synth3_1745:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth3.C'
    sources:
      binary: synth3.s
  group: GRPSERIAL
test_synth3_841:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth3.C'
    sources:
      binary: synth3.s
  group: GRPSERIAL
test_synth3_842:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth3.C'
    sources:
      binary: synth3.s
  group: GRPSERIAL
test_synth3_843:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth3.C'
    sources:
      binary: synth3.s
  group: GRPSERIAL
test_synth4_1746:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth4.C'
    sources:
      binary: synth4.s
  group: GRPSERIAL
test_synth4_1747:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth4.C'
    sources:
      binary: synth4.s
  group: GRPSERIAL
test_synth4_1748:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth4.C'
    sources:
      binary: synth4.s
  group: GRPSERIAL
test_synth4_844:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth4.C'
    sources:
      binary: synth4.s
  group: GRPSERIAL
test_synth4_845:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth4.C'
    sources:
      binary: synth4.s
  group: GRPSERIAL
test_synth4_846:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/synth4.C'
    sources:
      binary: synth4.s
  group: GRPSERIAL
test_uninitialized1_1749:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/uninitialized1.C'
    sources:
      binary: uninitialized1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member in \''struct A\''|uninitialized reference member in \''struct
          A\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member in base \''struct A\'' of \''struct B\''|uninitialized reference
          member in base \''struct A\'' of \''struct B\''")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_uninitialized1_1750:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/uninitialized1.C'
    sources:
      binary: uninitialized1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member in \''struct A\''|uninitialized reference member in \''struct
          A\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member in base \''struct A\'' of \''struct B\''|uninitialized reference
          member in base \''struct A\'' of \''struct B\''")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_uninitialized1_1751:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/uninitialized1.C'
    sources:
      binary: uninitialized1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member in \''struct A\''|uninitialized reference member in \''struct
          A\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member in base \''struct A\'' of \''struct B\''|uninitialized reference
          member in base \''struct A\'' of \''struct B\''")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_uninitialized1_847:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/uninitialized1.C'
    sources:
      binary: uninitialized1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member in \''struct A\''|uninitialized reference member in \''struct
          A\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member in base \''struct A\'' of \''struct B\''|uninitialized reference
          member in base \''struct A\'' of \''struct B\''")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_uninitialized1_848:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/uninitialized1.C'
    sources:
      binary: uninitialized1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member in \''struct A\''|uninitialized reference member in \''struct
          A\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member in base \''struct A\'' of \''struct B\''|uninitialized reference
          member in base \''struct A\'' of \''struct B\''")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_uninitialized1_849:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/uninitialized1.C'
    sources:
      binary: uninitialized1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member in \''struct A\''|uninitialized reference member in \''struct
          A\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted|uninitialized
          const member in base \''struct A\'' of \''struct B\''|uninitialized reference
          member in base \''struct A\'' of \''struct B\''")[^\n]*\n?)+'
      L3:
        expect: true
        expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("uninitialized")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deleted")[^\n]*\n?)+'
test_union1_1752:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/union1.C'
    sources:
      binary: union1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference type")[^\n]*\n?)+'
test_union1_1753:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/union1.C'
    sources:
      binary: union1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference type")[^\n]*\n?)+'
test_union1_1754:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/union1.C'
    sources:
      binary: union1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference type")[^\n]*\n?)+'
test_union1_850:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/union1.C'
    sources:
      binary: union1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference type")[^\n]*\n?)+'
test_union1_851:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/union1.C'
    sources:
      binary: union1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference type")[^\n]*\n?)+'
test_union1_852:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/union1.C'
    sources:
      binary: union1.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference type")[^\n]*\n?)+'
test_union2_1755:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/union2.C'
    sources:
      binary: union2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
test_union2_1756:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/union2.C'
    sources:
      binary: union2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
test_union2_1757:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/union2.C'
    sources:
      binary: union2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
test_union2_853:
  build:
    cflags: "-std=gnu++98 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/union2.C'
    sources:
      binary: union2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
test_union2_854:
  build:
    cflags: "-std=gnu++11 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/union2.C'
    sources:
      binary: union2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
test_union2_855:
  build:
    cflags: "-std=gnu++14 \n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/union2.C'
    sources:
      binary: union2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces")[^\n]*\n?)+'
test_value10_1761:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value10.C'
    sources:
      binary: ./value10.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value10_1762:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value10.C'
    sources:
      binary: ./value10.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value10_1763:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value10.C'
    sources:
      binary: ./value10.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value10_859:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value10.C'
    sources:
      binary: ./value10.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value10_860:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value10.C'
    sources:
      binary: ./value10.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value10_861:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value10.C'
    sources:
      binary: ./value10.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value1_1758:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value1.C'
    sources:
      binary: ./value1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value1_1759:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value1.C'
    sources:
      binary: ./value1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value1_1760:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value1.C'
    sources:
      binary: ./value1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value1_856:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value1.C'
    sources:
      binary: ./value1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value1_857:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value1.C'
    sources:
      binary: ./value1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value1_858:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value1.C'
    sources:
      binary: ./value1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value2_1764:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value2.C'
    sources:
      binary: value2.s
  group: GRPSERIAL
test_value2_1765:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value2.C'
    sources:
      binary: value2.s
  group: GRPSERIAL
test_value2_1766:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value2.C'
    sources:
      binary: value2.s
  group: GRPSERIAL
test_value2_862:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value2.C'
    sources:
      binary: value2.s
  group: GRPSERIAL
test_value2_863:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value2.C'
    sources:
      binary: value2.s
  group: GRPSERIAL
test_value2_864:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value2.C'
    sources:
      binary: value2.s
  group: GRPSERIAL
test_value3_1767:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value3.C'
    sources:
      binary: ./value3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value3_1768:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value3.C'
    sources:
      binary: ./value3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value3_1769:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value3.C'
    sources:
      binary: ./value3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value3_865:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value3.C'
    sources:
      binary: ./value3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value3_866:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value3.C'
    sources:
      binary: ./value3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value3_867:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value3.C'
    sources:
      binary: ./value3.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value4_1770:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value4.C'
    sources:
      binary: value4.s
  group: GRPSERIAL
test_value4_1771:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value4.C'
    sources:
      binary: value4.s
  group: GRPSERIAL
test_value4_1772:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value4.C'
    sources:
      binary: value4.s
  group: GRPSERIAL
test_value4_868:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value4.C'
    sources:
      binary: value4.s
  group: GRPSERIAL
test_value4_869:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value4.C'
    sources:
      binary: value4.s
  group: GRPSERIAL
test_value4_870:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value4.C'
    sources:
      binary: value4.s
  group: GRPSERIAL
test_value5_1773:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value5.C'
    sources:
      binary: value5.s
  group: GRPSERIAL
test_value5_1774:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value5.C'
    sources:
      binary: value5.s
  group: GRPSERIAL
test_value5_1775:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value5.C'
    sources:
      binary: value5.s
  group: GRPSERIAL
test_value5_871:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value5.C'
    sources:
      binary: value5.s
  group: GRPSERIAL
test_value5_872:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value5.C'
    sources:
      binary: value5.s
  group: GRPSERIAL
test_value5_873:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value5.C'
    sources:
      binary: value5.s
  group: GRPSERIAL
test_value6_1776:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value6.C'
    sources:
      binary: value6.s
  group: GRPSERIAL
test_value6_1777:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value6.C'
    sources:
      binary: value6.s
  group: GRPSERIAL
test_value6_1778:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value6.C'
    sources:
      binary: value6.s
  group: GRPSERIAL
test_value6_874:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value6.C'
    sources:
      binary: value6.s
  group: GRPSERIAL
test_value6_875:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value6.C'
    sources:
      binary: value6.s
  group: GRPSERIAL
test_value6_876:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value6.C'
    sources:
      binary: value6.s
  group: GRPSERIAL
test_value7_1779:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value7.C'
    sources:
      binary: ./value7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value7_1780:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value7.C'
    sources:
      binary: ./value7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value7_1781:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value7.C'
    sources:
      binary: ./value7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value7_877:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value7.C'
    sources:
      binary: ./value7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value7_878:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value7.C'
    sources:
      binary: ./value7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value7_879:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value7.C'
    sources:
      binary: ./value7.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value8_1782:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value8.C'
    sources:
      binary: value8.s
  group: GRPSERIAL
test_value8_1783:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value8.C'
    sources:
      binary: value8.s
  group: GRPSERIAL
test_value8_1784:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value8.C'
    sources:
      binary: value8.s
  group: GRPSERIAL
test_value8_880:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value8.C'
    sources:
      binary: value8.s
  group: GRPSERIAL
test_value8_881:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value8.C'
    sources:
      binary: value8.s
  group: GRPSERIAL
test_value8_882:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value8.C'
    sources:
      binary: value8.s
  group: GRPSERIAL
test_value9_1785:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value9.C'
    sources:
      binary: ./value9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value9_1786:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value9.C'
    sources:
      binary: ./value9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value9_1787:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value9.C'
    sources:
      binary: ./value9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value9_883:
  build:
    cflags: -std=c++98  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value9.C'
    sources:
      binary: ./value9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value9_884:
  build:
    cflags: -std=c++11  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value9.C'
    sources:
      binary: ./value9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_value9_885:
  build:
    cflags: -std=c++14  -pedantic-errors -Wno-long-long
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/value9.C'
    sources:
      binary: ./value9.exe
  group: GRPSERIAL
  run:
    cwd: .
test_vbase1_1788:
  build:
    cflags: -std=gnu++98 -fdump-rtl-expand -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vbase1.C'
    sources:
      binary: ./vbase1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_vbase1_1789:
  build:
    cflags: -std=gnu++11 -fdump-rtl-expand -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vbase1.C'
    sources:
      binary: ./vbase1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_vbase1_1790:
  build:
    cflags: -std=gnu++14 -fdump-rtl-expand -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vbase1.C'
    sources:
      binary: ./vbase1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_vbase1_886:
  build:
    cflags: -std=gnu++98 -fdump-rtl-expand -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vbase1.C'
    sources:
      binary: ./vbase1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_vbase1_887:
  build:
    cflags: -std=gnu++11 -fdump-rtl-expand -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vbase1.C'
    sources:
      binary: ./vbase1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_vbase1_888:
  build:
    cflags: -std=gnu++14 -fdump-rtl-expand -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vbase1.C'
    sources:
      binary: ./vbase1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_vbase2_1791:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vbase2.C'
    sources:
      binary: vbase2.s
  group: GRPSERIAL
test_vbase2_1792:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vbase2.C'
    sources:
      binary: vbase2.s
  group: GRPSERIAL
test_vbase2_889:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vbase2.C'
    sources:
      binary: vbase2.s
  group: GRPSERIAL
test_vbase2_890:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vbase2.C'
    sources:
      binary: vbase2.s
  group: GRPSERIAL
test_vector1_1793:
  build:
    cflags: -std=gnu++98 -O2 -fpermissive
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vector1.C'
    sources:
      binary: ./vector1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_vector1_1794:
  build:
    cflags: -std=gnu++11 -O2 -fpermissive
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vector1.C'
    sources:
      binary: ./vector1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_vector1_1795:
  build:
    cflags: -std=gnu++14 -O2 -fpermissive
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vector1.C'
    sources:
      binary: ./vector1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_vector1_891:
  build:
    cflags: -std=gnu++98 -O2 -fpermissive
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vector1.C'
    sources:
      binary: ./vector1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_vector1_892:
  build:
    cflags: -std=gnu++11 -O2 -fpermissive
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vector1.C'
    sources:
      binary: ./vector1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_vector1_893:
  build:
    cflags: -std=gnu++14 -O2 -fpermissive
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/vector1.C'
    sources:
      binary: ./vector1.exe
  group: GRPSERIAL
  run:
    cwd: .
test_void1_1796:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/void1.C'
    sources:
      binary: void1.s
  group: GRPSERIAL
test_void1_1797:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/void1.C'
    sources:
      binary: void1.s
  group: GRPSERIAL
test_void1_1798:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/void1.C'
    sources:
      binary: void1.s
  group: GRPSERIAL
test_void1_894:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/void1.C'
    sources:
      binary: void1.s
  group: GRPSERIAL
test_void1_895:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/void1.C'
    sources:
      binary: void1.s
  group: GRPSERIAL
test_void1_896:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/void1.C'
    sources:
      binary: void1.s
  group: GRPSERIAL
test_volatile1_1799:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/volatile1.C'
    sources:
      binary: volatile1.s
  group: GRPSERIAL
test_volatile1_1800:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/volatile1.C'
    sources:
      binary: volatile1.s
  group: GRPSERIAL
test_volatile1_1801:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/volatile1.C'
    sources:
      binary: volatile1.s
  group: GRPSERIAL
test_volatile1_897:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/volatile1.C'
    sources:
      binary: volatile1.s
  group: GRPSERIAL
test_volatile1_898:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/volatile1.C'
    sources:
      binary: volatile1.s
  group: GRPSERIAL
test_volatile1_899:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/volatile1.C'
    sources:
      binary: volatile1.s
  group: GRPSERIAL
test_volatile2_1802:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/volatile2.C'
    sources:
      binary: volatile2.s
  group: GRPSERIAL
test_volatile2_1803:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/volatile2.C'
    sources:
      binary: volatile2.s
  group: GRPSERIAL
test_volatile2_1804:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/volatile2.C'
    sources:
      binary: volatile2.s
  group: GRPSERIAL
test_volatile2_900:
  build:
    cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/volatile2.C'
    sources:
      binary: volatile2.s
  group: GRPSERIAL
test_volatile2_901:
  build:
    cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/volatile2.C'
    sources:
      binary: volatile2.s
  group: GRPSERIAL
test_volatile2_902:
  build:
    cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/init/volatile2.C'
    sources:
      binary: volatile2.s
  group: GRPSERIAL
