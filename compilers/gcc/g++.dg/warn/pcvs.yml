test_Waddress-1_1:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-1.C'
    sources: {binary: Waddress-1.s, cflags: "-std=gnu++98 -Waddress -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address|comparison")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("address|comparison")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
test_Waddress-1_1470:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-1.C'
    sources: {binary: Waddress-1.s, cflags: "-std=gnu++98 -Waddress -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address|comparison")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("address|comparison")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
test_Waddress-1_1471:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-1.C'
    sources: {binary: Waddress-1.s, cflags: "-std=gnu++11 -Waddress -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address|comparison")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("address|comparison")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
test_Waddress-1_1472:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-1.C'
    sources: {binary: Waddress-1.s, cflags: "-std=gnu++14 -Waddress -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address|comparison")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("address|comparison")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
test_Waddress-1_2:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-1.C'
    sources: {binary: Waddress-1.s, cflags: "-std=gnu++11 -Waddress -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address|comparison")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("address|comparison")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
test_Waddress-1_3:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-1.C'
    sources: {binary: Waddress-1.s, cflags: "-std=gnu++14 -Waddress -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address|comparison")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("address|comparison")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("comparison")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("address")[^\n]*\n?)+'}
test_Waddress-2_1473:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-2.C'
    sources: {binary: Waddress-2.s, cflags: "-std=gnu++98 -Waddress\n -S"}
  group: GRPSERIAL
test_Waddress-2_1474:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-2.C'
    sources: {binary: Waddress-2.s, cflags: "-std=gnu++11 -Waddress\n -S"}
  group: GRPSERIAL
test_Waddress-2_1475:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-2.C'
    sources: {binary: Waddress-2.s, cflags: "-std=gnu++14 -Waddress\n -S"}
  group: GRPSERIAL
test_Waddress-2_4:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-2.C'
    sources: {binary: Waddress-2.s, cflags: "-std=gnu++98 -Waddress\n -S"}
  group: GRPSERIAL
test_Waddress-2_5:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-2.C'
    sources: {binary: Waddress-2.s, cflags: "-std=gnu++11 -Waddress\n -S"}
  group: GRPSERIAL
test_Waddress-2_6:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-2.C'
    sources: {binary: Waddress-2.s, cflags: "-std=gnu++14 -Waddress\n -S"}
  group: GRPSERIAL
test_Waddress-3_1476:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-3.C'
    sources: {binary: Waddress-3.s, cflags: "-std=gnu++11 -Waddress\n -S"}
  group: GRPSERIAL
test_Waddress-3_1477:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-3.C'
    sources: {binary: Waddress-3.s, cflags: "-std=gnu++14 -Waddress\n -S"}
  group: GRPSERIAL
test_Waddress-3_7:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-3.C'
    sources: {binary: Waddress-3.s, cflags: "-std=gnu++11 -Waddress\n -S"}
  group: GRPSERIAL
test_Waddress-3_8:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-3.C'
    sources: {binary: Waddress-3.s, cflags: "-std=gnu++14 -Waddress\n -S"}
  group: GRPSERIAL
test_Waddress-4_1478:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-4.C'
    sources: {binary: Waddress-4.s, cflags: "-std=gnu++14 -Waddress\n -S"}
  group: GRPSERIAL
test_Waddress-4_9:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Waddress-4.C'
    sources: {binary: Waddress-4.s, cflags: "-std=gnu++14 -Waddress\n -S"}
  group: GRPSERIAL
test_Wall-write-strings_10:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wall-write-strings.C'
    sources: {binary: Wall-write-strings.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wall-write-strings_11:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wall-write-strings.C'
    sources: {binary: Wall-write-strings.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wall-write-strings_12:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wall-write-strings.C'
    sources: {binary: Wall-write-strings.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wall-write-strings_1479:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wall-write-strings.C'
    sources: {binary: Wall-write-strings.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wall-write-strings_1480:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wall-write-strings.C'
    sources: {binary: Wall-write-strings.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wall-write-strings_1481:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wall-write-strings.C'
    sources: {binary: Wall-write-strings.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Walways-true-1_13:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Walways-true-1.C'
    sources: {binary: Walways-true-1.s, cflags: "-std=gnu++98 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
test_Walways-true-1_14:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Walways-true-1.C'
    sources: {binary: Walways-true-1.s, cflags: "-std=gnu++11 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
test_Walways-true-1_1482:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Walways-true-1.C'
    sources: {binary: Walways-true-1.s, cflags: "-std=gnu++98 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
test_Walways-true-1_1483:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Walways-true-1.C'
    sources: {binary: Walways-true-1.s, cflags: "-std=gnu++11 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
test_Walways-true-1_1484:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Walways-true-1.C'
    sources: {binary: Walways-true-1.s, cflags: "-std=gnu++14 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
test_Walways-true-1_15:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Walways-true-1.C'
    sources: {binary: Walways-true-1.s, cflags: "-std=gnu++14 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("always
          evaluate as|never be NULL")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
test_Walways-true-3_1485:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Walways-true-3.C'
    sources: {binary: Walways-true-3.s, cflags: "-std=gnu++98 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
test_Walways-true-3_1486:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Walways-true-3.C'
    sources: {binary: Walways-true-3.s, cflags: "-std=gnu++11 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
test_Walways-true-3_1487:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Walways-true-3.C'
    sources: {binary: Walways-true-3.s, cflags: "-std=gnu++14 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
test_Walways-true-3_16:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Walways-true-3.C'
    sources: {binary: Walways-true-3.s, cflags: "-std=gnu++98 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
test_Walways-true-3_17:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Walways-true-3.C'
    sources: {binary: Walways-true-3.s, cflags: "-std=gnu++11 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
test_Walways-true-3_18:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Walways-true-3.C'
    sources: {binary: Walways-true-3.s, cflags: "-std=gnu++14 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("never
          be NULL")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("address
          of")[^\n]*\n?)+'}
test_Warray-bounds-2_1488:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-2.C'
    sources: {binary: Warray-bounds-2.s, cflags: "-std=gnu++98 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Warray-bounds-2_1489:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-2.C'
    sources: {binary: Warray-bounds-2.s, cflags: "-std=gnu++11 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Warray-bounds-2_1490:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-2.C'
    sources: {binary: Warray-bounds-2.s, cflags: "-std=gnu++14 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Warray-bounds-2_19:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-2.C'
    sources: {binary: Warray-bounds-2.s, cflags: "-std=gnu++98 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Warray-bounds-2_20:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-2.C'
    sources: {binary: Warray-bounds-2.s, cflags: "-std=gnu++11 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Warray-bounds-2_21:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-2.C'
    sources: {binary: Warray-bounds-2.s, cflags: "-std=gnu++14 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Warray-bounds-3_1491:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-3.C'
    sources: {binary: Warray-bounds-3.s, cflags: "-std=gnu++98 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_Warray-bounds-3_1492:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-3.C'
    sources: {binary: Warray-bounds-3.s, cflags: "-std=gnu++11 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_Warray-bounds-3_1493:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-3.C'
    sources: {binary: Warray-bounds-3.s, cflags: "-std=gnu++14 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_Warray-bounds-3_22:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-3.C'
    sources: {binary: Warray-bounds-3.s, cflags: "-std=gnu++98 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_Warray-bounds-3_23:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-3.C'
    sources: {binary: Warray-bounds-3.s, cflags: "-std=gnu++11 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_Warray-bounds-3_24:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-3.C'
    sources: {binary: Warray-bounds-3.s, cflags: "-std=gnu++14 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_Warray-bounds-4_1494:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-4.C'
    sources: {binary: Warray-bounds-4.s, cflags: "-std=gnu++98 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("above
          array bounds")[^\n]*\n?)+'}
test_Warray-bounds-4_1495:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-4.C'
    sources: {binary: Warray-bounds-4.s, cflags: "-std=gnu++11 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("above
          array bounds")[^\n]*\n?)+'}
test_Warray-bounds-4_1496:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-4.C'
    sources: {binary: Warray-bounds-4.s, cflags: "-std=gnu++14 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("above
          array bounds")[^\n]*\n?)+'}
test_Warray-bounds-4_25:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-4.C'
    sources: {binary: Warray-bounds-4.s, cflags: "-std=gnu++98 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("above
          array bounds")[^\n]*\n?)+'}
test_Warray-bounds-4_26:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-4.C'
    sources: {binary: Warray-bounds-4.s, cflags: "-std=gnu++11 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("above
          array bounds")[^\n]*\n?)+'}
test_Warray-bounds-4_27:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-4.C'
    sources: {binary: Warray-bounds-4.s, cflags: "-std=gnu++14 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("above
          array bounds")[^\n]*\n?)+'}
test_Warray-bounds-5_1497:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-5.C'
    sources: {binary: Warray-bounds-5.s, cflags: "-std=gnu++98 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-5_1498:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-5.C'
    sources: {binary: Warray-bounds-5.s, cflags: "-std=gnu++11 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-5_1499:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-5.C'
    sources: {binary: Warray-bounds-5.s, cflags: "-std=gnu++14 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-5_28:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-5.C'
    sources: {binary: Warray-bounds-5.s, cflags: "-std=gnu++98 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-5_29:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-5.C'
    sources: {binary: Warray-bounds-5.s, cflags: "-std=gnu++11 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-5_30:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-5.C'
    sources: {binary: Warray-bounds-5.s, cflags: "-std=gnu++14 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-6_1500:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-6.C'
    sources: {binary: Warray-bounds-6.s, cflags: "-std=gnu++98 -O3 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-6_1501:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-6.C'
    sources: {binary: Warray-bounds-6.s, cflags: "-std=gnu++11 -O3 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-6_1502:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-6.C'
    sources: {binary: Warray-bounds-6.s, cflags: "-std=gnu++14 -O3 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-6_31:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-6.C'
    sources: {binary: Warray-bounds-6.s, cflags: "-std=gnu++98 -O3 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-6_32:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-6.C'
    sources: {binary: Warray-bounds-6.s, cflags: "-std=gnu++11 -O3 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-6_33:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-6.C'
    sources: {binary: Warray-bounds-6.s, cflags: "-std=gnu++14 -O3 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-7_1503:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-7.C'
    sources: {binary: Warray-bounds-7.s, cflags: "-std=gnu++98 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-7_1504:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-7.C'
    sources: {binary: Warray-bounds-7.s, cflags: "-std=gnu++11 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-7_1505:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-7.C'
    sources: {binary: Warray-bounds-7.s, cflags: "-std=gnu++14 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-7_34:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-7.C'
    sources: {binary: Warray-bounds-7.s, cflags: "-std=gnu++98 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-7_35:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-7.C'
    sources: {binary: Warray-bounds-7.s, cflags: "-std=gnu++11 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds-7_36:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds-7.C'
    sources: {binary: Warray-bounds-7.s, cflags: "-std=gnu++14 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
test_Warray-bounds_1506:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds.C'
    sources: {binary: Warray-bounds.s, cflags: "-std=gnu++98 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Warray-bounds_1507:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds.C'
    sources: {binary: Warray-bounds.s, cflags: "-std=gnu++11 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Warray-bounds_1508:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds.C'
    sources: {binary: Warray-bounds.s, cflags: "-std=gnu++14 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Warray-bounds_37:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds.C'
    sources: {binary: Warray-bounds.s, cflags: "-std=gnu++98 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Warray-bounds_38:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds.C'
    sources: {binary: Warray-bounds.s, cflags: "-std=gnu++11 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Warray-bounds_39:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Warray-bounds.C'
    sources: {binary: Warray-bounds.s, cflags: "-std=gnu++14 -O2 -Warray-bounds\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Wbool-operation-1_1509:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbool-operation-1.C'
    sources: {binary: Wbool-operation-1.s, cflags: "-std=gnu++11 -Wbool-operation\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("on
          an expression of type bool")[^\n]*\n?)+'}
test_Wbool-operation-1_1510:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbool-operation-1.C'
    sources: {binary: Wbool-operation-1.s, cflags: "-std=gnu++14 -Wbool-operation\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("on
          an expression of type bool")[^\n]*\n?)+'}
test_Wbool-operation-1_40:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbool-operation-1.C'
    sources: {binary: Wbool-operation-1.s, cflags: "-std=gnu++11 -Wbool-operation\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("on
          an expression of type bool")[^\n]*\n?)+'}
test_Wbool-operation-1_41:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbool-operation-1.C'
    sources: {binary: Wbool-operation-1.s, cflags: "-std=gnu++14 -Wbool-operation\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("on
          an expression of type bool")[^\n]*\n?)+'}
test_Wbraces1_1511:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces1.C'
    sources: {binary: Wbraces1.s, cflags: "-std=gnu++98 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wbraces1_1512:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces1.C'
    sources: {binary: Wbraces1.s, cflags: "-std=gnu++11 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wbraces1_1513:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces1.C'
    sources: {binary: Wbraces1.s, cflags: "-std=gnu++14 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wbraces1_42:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces1.C'
    sources: {binary: Wbraces1.s, cflags: "-std=gnu++98 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wbraces1_43:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces1.C'
    sources: {binary: Wbraces1.s, cflags: "-std=gnu++11 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wbraces1_44:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces1.C'
    sources: {binary: Wbraces1.s, cflags: "-std=gnu++14 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wbraces2_1514:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces2.C'
    sources: {binary: Wbraces2.s, cflags: "-std=gnu++98 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
test_Wbraces2_1515:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces2.C'
    sources: {binary: Wbraces2.s, cflags: "-std=gnu++11 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
test_Wbraces2_1516:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces2.C'
    sources: {binary: Wbraces2.s, cflags: "-std=gnu++14 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
test_Wbraces2_45:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces2.C'
    sources: {binary: Wbraces2.s, cflags: "-std=gnu++98 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
test_Wbraces2_46:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces2.C'
    sources: {binary: Wbraces2.s, cflags: "-std=gnu++11 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
test_Wbraces2_47:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces2.C'
    sources: {binary: Wbraces2.s, cflags: "-std=gnu++14 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("braces
          around scalar")[^\n]*\n?)+'}
test_Wbraces3_1517:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces3.C'
    sources: {binary: Wbraces3.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_Wbraces3_1518:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces3.C'
    sources: {binary: Wbraces3.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_Wbraces3_1519:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces3.C'
    sources: {binary: Wbraces3.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_Wbraces3_48:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces3.C'
    sources: {binary: Wbraces3.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_Wbraces3_49:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces3.C'
    sources: {binary: Wbraces3.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_Wbraces3_50:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces3.C'
    sources: {binary: Wbraces3.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_Wbraces4_1520:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces4.C'
    sources: {binary: Wbraces4.s, cflags: "-std=gnu++98 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
test_Wbraces4_1521:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces4.C'
    sources: {binary: Wbraces4.s, cflags: "-std=gnu++11 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
test_Wbraces4_1522:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces4.C'
    sources: {binary: Wbraces4.s, cflags: "-std=gnu++14 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
test_Wbraces4_51:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces4.C'
    sources: {binary: Wbraces4.s, cflags: "-std=gnu++98 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
test_Wbraces4_52:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces4.C'
    sources: {binary: Wbraces4.s, cflags: "-std=gnu++11 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
test_Wbraces4_53:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wbraces4.C'
    sources: {binary: Wbraces4.s, cflags: "-std=gnu++14 -Wmissing-braces\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("missing
          braces")[^\n]*\n?)+'}
test_Wcast-qual1_1523:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wcast-qual1.C'
    sources: {binary: Wcast-qual1.s, cflags: "-std=gnu++98 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("cast")[^\n]*\n?)+'}
test_Wcast-qual1_1524:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wcast-qual1.C'
    sources: {binary: Wcast-qual1.s, cflags: "-std=gnu++11 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("cast")[^\n]*\n?)+'}
test_Wcast-qual1_1525:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wcast-qual1.C'
    sources: {binary: Wcast-qual1.s, cflags: "-std=gnu++14 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("cast")[^\n]*\n?)+'}
test_Wcast-qual1_54:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wcast-qual1.C'
    sources: {binary: Wcast-qual1.s, cflags: "-std=gnu++98 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("cast")[^\n]*\n?)+'}
test_Wcast-qual1_55:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wcast-qual1.C'
    sources: {binary: Wcast-qual1.s, cflags: "-std=gnu++11 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("cast")[^\n]*\n?)+'}
test_Wcast-qual1_56:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wcast-qual1.C'
    sources: {binary: Wcast-qual1.s, cflags: "-std=gnu++14 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("cast")[^\n]*\n?)+'}
test_Wcast-qual2_1526:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wcast-qual2.C'
    sources: {binary: Wcast-qual2.s, cflags: "-std=gnu++98 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("cast")[^\n]*\n?)+'}
test_Wcast-qual2_1527:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wcast-qual2.C'
    sources: {binary: Wcast-qual2.s, cflags: "-std=gnu++11 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("cast")[^\n]*\n?)+'}
test_Wcast-qual2_1528:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wcast-qual2.C'
    sources: {binary: Wcast-qual2.s, cflags: "-std=gnu++14 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("cast")[^\n]*\n?)+'}
test_Wcast-qual2_57:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wcast-qual2.C'
    sources: {binary: Wcast-qual2.s, cflags: "-std=gnu++98 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("cast")[^\n]*\n?)+'}
test_Wcast-qual2_58:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wcast-qual2.C'
    sources: {binary: Wcast-qual2.s, cflags: "-std=gnu++11 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("cast")[^\n]*\n?)+'}
test_Wcast-qual2_59:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wcast-qual2.C'
    sources: {binary: Wcast-qual2.s, cflags: "-std=gnu++14 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("cast")[^\n]*\n?)+'}
test_Wchar-subscripts-2_1529:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wchar-subscripts-2.C'
    sources: {binary: Wchar-subscripts-2.s, cflags: "-std=gnu++98 -Wchar-subscripts\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Wchar-subscripts-2_1530:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wchar-subscripts-2.C'
    sources: {binary: Wchar-subscripts-2.s, cflags: "-std=gnu++11 -Wchar-subscripts\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Wchar-subscripts-2_1531:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wchar-subscripts-2.C'
    sources: {binary: Wchar-subscripts-2.s, cflags: "-std=gnu++14 -Wchar-subscripts\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Wchar-subscripts-2_60:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wchar-subscripts-2.C'
    sources: {binary: Wchar-subscripts-2.s, cflags: "-std=gnu++98 -Wchar-subscripts\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Wchar-subscripts-2_61:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wchar-subscripts-2.C'
    sources: {binary: Wchar-subscripts-2.s, cflags: "-std=gnu++11 -Wchar-subscripts\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Wchar-subscripts-2_62:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wchar-subscripts-2.C'
    sources: {binary: Wchar-subscripts-2.s, cflags: "-std=gnu++14 -Wchar-subscripts\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("array
          subscript")[^\n]*\n?)+'}
test_Wchar-subscripts_1532:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wchar-subscripts.C'
    sources: {binary: Wchar-subscripts.s, cflags: "-std=gnu++98 -Wchar-subscripts\n
        -S"}
  group: GRPSERIAL
test_Wchar-subscripts_1533:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wchar-subscripts.C'
    sources: {binary: Wchar-subscripts.s, cflags: "-std=gnu++11 -Wchar-subscripts\n
        -S"}
  group: GRPSERIAL
test_Wchar-subscripts_1534:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wchar-subscripts.C'
    sources: {binary: Wchar-subscripts.s, cflags: "-std=gnu++14 -Wchar-subscripts\n
        -S"}
  group: GRPSERIAL
test_Wchar-subscripts_63:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wchar-subscripts.C'
    sources: {binary: Wchar-subscripts.s, cflags: "-std=gnu++98 -Wchar-subscripts\n
        -S"}
  group: GRPSERIAL
test_Wchar-subscripts_64:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wchar-subscripts.C'
    sources: {binary: Wchar-subscripts.s, cflags: "-std=gnu++11 -Wchar-subscripts\n
        -S"}
  group: GRPSERIAL
test_Wchar-subscripts_65:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wchar-subscripts.C'
    sources: {binary: Wchar-subscripts.s, cflags: "-std=gnu++14 -Wchar-subscripts\n
        -S"}
  group: GRPSERIAL
test_Wconditionally-supported-1_1535:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconditionally-supported-1.C'
    sources: {binary: Wconditionally-supported-1.s, cflags: "-std=gnu++98 -Wconditionally-supported\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
test_Wconditionally-supported-1_1536:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconditionally-supported-1.C'
    sources: {binary: Wconditionally-supported-1.s, cflags: "-std=gnu++11 -Wconditionally-supported\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
test_Wconditionally-supported-1_1537:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconditionally-supported-1.C'
    sources: {binary: Wconditionally-supported-1.s, cflags: "-std=gnu++14 -Wconditionally-supported\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
test_Wconditionally-supported-1_66:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconditionally-supported-1.C'
    sources: {binary: Wconditionally-supported-1.s, cflags: "-std=gnu++98 -Wconditionally-supported\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
test_Wconditionally-supported-1_67:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconditionally-supported-1.C'
    sources: {binary: Wconditionally-supported-1.s, cflags: "-std=gnu++11 -Wconditionally-supported\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
test_Wconditionally-supported-1_68:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconditionally-supported-1.C'
    sources: {binary: Wconditionally-supported-1.s, cflags: "-std=gnu++14 -Wconditionally-supported\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("conditionally-supported")[^\n]*\n?)+'}
test_Wconversion-integer_1538:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-integer.C'
    sources: {binary: Wconversion-integer.s, cflags: "-std=gnu++98 -fsigned-char -Wconversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-integer_1539:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-integer.C'
    sources: {binary: Wconversion-integer.s, cflags: "-std=gnu++11 -fsigned-char -Wconversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-integer_1540:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-integer.C'
    sources: {binary: Wconversion-integer.s, cflags: "-std=gnu++14 -fsigned-char -Wconversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-integer_69:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-integer.C'
    sources: {binary: Wconversion-integer.s, cflags: "-std=gnu++98 -fsigned-char -Wconversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-integer_70:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-integer.C'
    sources: {binary: Wconversion-integer.s, cflags: "-std=gnu++11 -fsigned-char -Wconversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-integer_71:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-integer.C'
    sources: {binary: Wconversion-integer.s, cflags: "-std=gnu++14 -fsigned-char -Wconversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-null-2_1541:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-null-2.C'
    sources: {binary: Wconversion-null-2.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wconversion-null-2_1542:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-null-2.C'
    sources: {binary: Wconversion-null-2.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wconversion-null-2_1543:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-null-2.C'
    sources: {binary: Wconversion-null-2.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wconversion-null-2_72:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-null-2.C'
    sources: {binary: Wconversion-null-2.exe, cflags: -std=gnu++98}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wconversion-null-2_73:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-null-2.C'
    sources: {binary: Wconversion-null-2.exe, cflags: -std=gnu++11}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wconversion-null-2_74:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-null-2.C'
    sources: {binary: Wconversion-null-2.exe, cflags: -std=gnu++14}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wconversion-null-3_1544:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-null-3.C'
    sources: {binary: Wconversion-null-3.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\''")[^\n]*\n?)+'}
test_Wconversion-null-3_75:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-null-3.C'
    sources: {binary: Wconversion-null-3.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\''")[^\n]*\n?)+'}
test_Wconversion-null_1545:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-null.C'
    sources: {binary: Wconversion-null.exe, cflags: -std=gnu++98 -Wconversion -Wno-conversion-null
        -Wno-pointer-arith}
  group: GRPSERIAL
  run: {cwd: .}
test_Wconversion-null_1546:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-null.C'
    sources: {binary: Wconversion-null.exe, cflags: -std=gnu++11 -Wconversion -Wno-conversion-null
        -Wno-pointer-arith}
  group: GRPSERIAL
  run: {cwd: .}
test_Wconversion-null_1547:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-null.C'
    sources: {binary: Wconversion-null.exe, cflags: -std=gnu++14 -Wconversion -Wno-conversion-null
        -Wno-pointer-arith}
  group: GRPSERIAL
  run: {cwd: .}
test_Wconversion-null_76:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-null.C'
    sources: {binary: Wconversion-null.exe, cflags: -std=gnu++98 -Wconversion -Wno-conversion-null
        -Wno-pointer-arith}
  group: GRPSERIAL
  run: {cwd: .}
test_Wconversion-null_77:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-null.C'
    sources: {binary: Wconversion-null.exe, cflags: -std=gnu++11 -Wconversion -Wno-conversion-null
        -Wno-pointer-arith}
  group: GRPSERIAL
  run: {cwd: .}
test_Wconversion-null_78:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-null.C'
    sources: {binary: Wconversion-null.exe, cflags: -std=gnu++14 -Wconversion -Wno-conversion-null
        -Wno-pointer-arith}
  group: GRPSERIAL
  run: {cwd: .}
test_Wconversion-pr34389_1548:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-pr34389.C'
    sources: {binary: Wconversion-pr34389.s, cflags: "-std=gnu++98 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-pr34389_1549:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-pr34389.C'
    sources: {binary: Wconversion-pr34389.s, cflags: "-std=gnu++11 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-pr34389_1550:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-pr34389.C'
    sources: {binary: Wconversion-pr34389.s, cflags: "-std=gnu++14 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-pr34389_79:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-pr34389.C'
    sources: {binary: Wconversion-pr34389.s, cflags: "-std=gnu++98 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-pr34389_80:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-pr34389.C'
    sources: {binary: Wconversion-pr34389.s, cflags: "-std=gnu++11 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-pr34389_81:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-pr34389.C'
    sources: {binary: Wconversion-pr34389.s, cflags: "-std=gnu++14 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-real-integer-3_1551:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer-3.C'
    sources: {binary: Wconversion-real-integer-3.s, cflags: "-std=gnu++98 -Wconversion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("conversion
          to .float. alters .int. constant value")[^\n]*\n?)+'}
test_Wconversion-real-integer-3_1552:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer-3.C'
    sources: {binary: Wconversion-real-integer-3.s, cflags: "-std=gnu++11 -Wconversion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("conversion
          to .float. alters .int. constant value")[^\n]*\n?)+'}
test_Wconversion-real-integer-3_1553:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer-3.C'
    sources: {binary: Wconversion-real-integer-3.s, cflags: "-std=gnu++14 -Wconversion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("conversion
          to .float. alters .int. constant value")[^\n]*\n?)+'}
test_Wconversion-real-integer-3_82:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer-3.C'
    sources: {binary: Wconversion-real-integer-3.s, cflags: "-std=gnu++98 -Wconversion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("conversion
          to .float. alters .int. constant value")[^\n]*\n?)+'}
test_Wconversion-real-integer-3_83:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer-3.C'
    sources: {binary: Wconversion-real-integer-3.s, cflags: "-std=gnu++11 -Wconversion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("conversion
          to .float. alters .int. constant value")[^\n]*\n?)+'}
test_Wconversion-real-integer-3_84:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer-3.C'
    sources: {binary: Wconversion-real-integer-3.s, cflags: "-std=gnu++14 -Wconversion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("conversion
          to .float. alters .int. constant value")[^\n]*\n?)+'}
test_Wconversion-real-integer2_1557:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer2.C'
    sources: {binary: Wconversion-real-integer2.s, cflags: "-std=gnu++98 -Wconversion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("17:
          conversion to .float. alters .int. constant value")[^\n]*\n?)+'}
test_Wconversion-real-integer2_1558:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer2.C'
    sources: {binary: Wconversion-real-integer2.s, cflags: "-std=gnu++11 -Wconversion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("17:
          conversion to .float. alters .int. constant value")[^\n]*\n?)+'}
test_Wconversion-real-integer2_1559:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer2.C'
    sources: {binary: Wconversion-real-integer2.s, cflags: "-std=gnu++14 -Wconversion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("17:
          conversion to .float. alters .int. constant value")[^\n]*\n?)+'}
test_Wconversion-real-integer2_88:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer2.C'
    sources: {binary: Wconversion-real-integer2.s, cflags: "-std=gnu++98 -Wconversion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("17:
          conversion to .float. alters .int. constant value")[^\n]*\n?)+'}
test_Wconversion-real-integer2_89:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer2.C'
    sources: {binary: Wconversion-real-integer2.s, cflags: "-std=gnu++11 -Wconversion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("17:
          conversion to .float. alters .int. constant value")[^\n]*\n?)+'}
test_Wconversion-real-integer2_90:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer2.C'
    sources: {binary: Wconversion-real-integer2.s, cflags: "-std=gnu++14 -Wconversion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("17:
          conversion to .float. alters .int. constant value")[^\n]*\n?)+'}
test_Wconversion-real-integer_1554:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer.C'
    sources: {binary: Wconversion-real-integer.s, cflags: "-std=gnu++98 -Wconversion
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-real-integer_1555:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer.C'
    sources: {binary: Wconversion-real-integer.s, cflags: "-std=gnu++11 -Wconversion
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-real-integer_1556:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer.C'
    sources: {binary: Wconversion-real-integer.s, cflags: "-std=gnu++14 -Wconversion
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-real-integer_85:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer.C'
    sources: {binary: Wconversion-real-integer.s, cflags: "-std=gnu++98 -Wconversion
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-real-integer_86:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer.C'
    sources: {binary: Wconversion-real-integer.s, cflags: "-std=gnu++11 -Wconversion
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion-real-integer_87:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion-real-integer.C'
    sources: {binary: Wconversion-real-integer.s, cflags: "-std=gnu++14 -Wconversion
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_Wconversion1_1560:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion1.C'
    sources: {binary: Wconversion1.s, cflags: "-std=gnu++98 -fsigned-char -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("unsigned")[^\n]*\n?)+'}
test_Wconversion1_1561:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion1.C'
    sources: {binary: Wconversion1.s, cflags: "-std=gnu++11 -fsigned-char -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("unsigned")[^\n]*\n?)+'}
test_Wconversion1_1562:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion1.C'
    sources: {binary: Wconversion1.s, cflags: "-std=gnu++14 -fsigned-char -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("unsigned")[^\n]*\n?)+'}
test_Wconversion1_91:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion1.C'
    sources: {binary: Wconversion1.s, cflags: "-std=gnu++98 -fsigned-char -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("unsigned")[^\n]*\n?)+'}
test_Wconversion1_92:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion1.C'
    sources: {binary: Wconversion1.s, cflags: "-std=gnu++11 -fsigned-char -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("unsigned")[^\n]*\n?)+'}
test_Wconversion1_93:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion1.C'
    sources: {binary: Wconversion1.s, cflags: "-std=gnu++14 -fsigned-char -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("unsigned")[^\n]*\n?)+'}
test_Wconversion2_1563:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion2.C'
    sources: {binary: Wconversion2.s, cflags: "-std=gnu++98 -Wconversion-null\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("pointer
          type for argument")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_Wconversion2_1564:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion2.C'
    sources: {binary: Wconversion2.s, cflags: "-std=gnu++11 -Wconversion-null\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("pointer
          type for argument")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_Wconversion2_1565:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion2.C'
    sources: {binary: Wconversion2.s, cflags: "-std=gnu++14 -Wconversion-null\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("pointer
          type for argument")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_Wconversion2_94:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion2.C'
    sources: {binary: Wconversion2.s, cflags: "-std=gnu++98 -Wconversion-null\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("pointer
          type for argument")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_Wconversion2_95:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion2.C'
    sources: {binary: Wconversion2.s, cflags: "-std=gnu++11 -Wconversion-null\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("pointer
          type for argument")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_Wconversion2_96:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion2.C'
    sources: {binary: Wconversion2.s, cflags: "-std=gnu++14 -Wconversion-null\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("pointer
          type for argument")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
test_Wconversion3_1566:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion3.C'
    sources: {binary: Wconversion3.s, cflags: "-std=gnu++98 -O2 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
test_Wconversion3_1567:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion3.C'
    sources: {binary: Wconversion3.s, cflags: "-std=gnu++11 -O2 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
test_Wconversion3_1568:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion3.C'
    sources: {binary: Wconversion3.s, cflags: "-std=gnu++14 -O2 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
test_Wconversion3_97:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion3.C'
    sources: {binary: Wconversion3.s, cflags: "-std=gnu++98 -O2 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
test_Wconversion3_98:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion3.C'
    sources: {binary: Wconversion3.s, cflags: "-std=gnu++11 -O2 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
test_Wconversion3_99:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion3.C'
    sources: {binary: Wconversion3.s, cflags: "-std=gnu++14 -O2 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("may
          change the sign")[^\n]*\n?)+'}
test_Wconversion4_100:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion4.C'
    sources: {binary: Wconversion4.s, cflags: "-std=gnu++98 -Wconversion\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
test_Wconversion4_101:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion4.C'
    sources: {binary: Wconversion4.s, cflags: "-std=gnu++11 -Wconversion\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
test_Wconversion4_102:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion4.C'
    sources: {binary: Wconversion4.s, cflags: "-std=gnu++14 -Wconversion\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
test_Wconversion4_1569:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion4.C'
    sources: {binary: Wconversion4.s, cflags: "-std=gnu++98 -Wconversion\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
test_Wconversion4_1570:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion4.C'
    sources: {binary: Wconversion4.s, cflags: "-std=gnu++11 -Wconversion\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
test_Wconversion4_1571:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wconversion4.C'
    sources: {binary: Wconversion4.s, cflags: "-std=gnu++14 -Wconversion\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("may
          alter its value")[^\n]*\n?)+'}
test_Wctor-dtor_103:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wctor-dtor.C'
    sources: {binary: Wctor-dtor.s, cflags: "-std=gnu++98 -Wctor-dtor-privacy\n -S"}
  group: GRPSERIAL
test_Wctor-dtor_104:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wctor-dtor.C'
    sources: {binary: Wctor-dtor.s, cflags: "-std=gnu++11 -Wctor-dtor-privacy\n -S"}
  group: GRPSERIAL
test_Wctor-dtor_105:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wctor-dtor.C'
    sources: {binary: Wctor-dtor.s, cflags: "-std=gnu++14 -Wctor-dtor-privacy\n -S"}
  group: GRPSERIAL
test_Wctor-dtor_1572:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wctor-dtor.C'
    sources: {binary: Wctor-dtor.s, cflags: "-std=gnu++98 -Wctor-dtor-privacy\n -S"}
  group: GRPSERIAL
test_Wctor-dtor_1573:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wctor-dtor.C'
    sources: {binary: Wctor-dtor.s, cflags: "-std=gnu++11 -Wctor-dtor-privacy\n -S"}
  group: GRPSERIAL
test_Wctor-dtor_1574:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wctor-dtor.C'
    sources: {binary: Wctor-dtor.s, cflags: "-std=gnu++14 -Wctor-dtor-privacy\n -S"}
  group: GRPSERIAL
test_Wdelete-incomplete-1_106:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-1.C'
    sources: {binary: Wdelete-incomplete-1.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("incomplete")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("problem")[^\n]*\n?)+'}
test_Wdelete-incomplete-1_107:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-1.C'
    sources: {binary: Wdelete-incomplete-1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("incomplete")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("problem")[^\n]*\n?)+'}
test_Wdelete-incomplete-1_108:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-1.C'
    sources: {binary: Wdelete-incomplete-1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("incomplete")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("problem")[^\n]*\n?)+'}
test_Wdelete-incomplete-1_1575:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-1.C'
    sources: {binary: Wdelete-incomplete-1.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("incomplete")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("problem")[^\n]*\n?)+'}
test_Wdelete-incomplete-1_1576:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-1.C'
    sources: {binary: Wdelete-incomplete-1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("incomplete")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("problem")[^\n]*\n?)+'}
test_Wdelete-incomplete-1_1577:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-1.C'
    sources: {binary: Wdelete-incomplete-1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("incomplete")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("problem")[^\n]*\n?)+'}
test_Wdelete-incomplete-2_109:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-2.C'
    sources: {binary: Wdelete-incomplete-2.s, cflags: "-std=gnu++98 -Wno-delete-incomplete\n
        -S"}
  group: GRPSERIAL
test_Wdelete-incomplete-2_110:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-2.C'
    sources: {binary: Wdelete-incomplete-2.s, cflags: "-std=gnu++11 -Wno-delete-incomplete\n
        -S"}
  group: GRPSERIAL
test_Wdelete-incomplete-2_111:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-2.C'
    sources: {binary: Wdelete-incomplete-2.s, cflags: "-std=gnu++14 -Wno-delete-incomplete\n
        -S"}
  group: GRPSERIAL
test_Wdelete-incomplete-2_1578:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-2.C'
    sources: {binary: Wdelete-incomplete-2.s, cflags: "-std=gnu++98 -Wno-delete-incomplete\n
        -S"}
  group: GRPSERIAL
test_Wdelete-incomplete-2_1579:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-2.C'
    sources: {binary: Wdelete-incomplete-2.s, cflags: "-std=gnu++11 -Wno-delete-incomplete\n
        -S"}
  group: GRPSERIAL
test_Wdelete-incomplete-2_1580:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-2.C'
    sources: {binary: Wdelete-incomplete-2.s, cflags: "-std=gnu++14 -Wno-delete-incomplete\n
        -S"}
  group: GRPSERIAL
test_Wdelete-incomplete-3_112:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-3.C'
    sources: {binary: Wdelete-incomplete-3.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_Wdelete-incomplete-3_113:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-3.C'
    sources: {binary: Wdelete-incomplete-3.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_Wdelete-incomplete-3_114:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-3.C'
    sources: {binary: Wdelete-incomplete-3.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_Wdelete-incomplete-3_1581:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-3.C'
    sources: {binary: Wdelete-incomplete-3.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_Wdelete-incomplete-3_1582:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-3.C'
    sources: {binary: Wdelete-incomplete-3.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_Wdelete-incomplete-3_1583:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-3.C'
    sources: {binary: Wdelete-incomplete-3.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_Wdelete-incomplete-4_115:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-4.C'
    sources: {binary: Wdelete-incomplete-4.s, cflags: "-std=gnu++98 -Wno-delete-incomplete\n
        -S"}
  group: GRPSERIAL
test_Wdelete-incomplete-4_116:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-4.C'
    sources: {binary: Wdelete-incomplete-4.s, cflags: "-std=gnu++11 -Wno-delete-incomplete\n
        -S"}
  group: GRPSERIAL
test_Wdelete-incomplete-4_117:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-4.C'
    sources: {binary: Wdelete-incomplete-4.s, cflags: "-std=gnu++14 -Wno-delete-incomplete\n
        -S"}
  group: GRPSERIAL
test_Wdelete-incomplete-4_1584:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-4.C'
    sources: {binary: Wdelete-incomplete-4.s, cflags: "-std=gnu++98 -Wno-delete-incomplete\n
        -S"}
  group: GRPSERIAL
test_Wdelete-incomplete-4_1585:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-4.C'
    sources: {binary: Wdelete-incomplete-4.s, cflags: "-std=gnu++11 -Wno-delete-incomplete\n
        -S"}
  group: GRPSERIAL
test_Wdelete-incomplete-4_1586:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdelete-incomplete-4.C'
    sources: {binary: Wdelete-incomplete-4.s, cflags: "-std=gnu++14 -Wno-delete-incomplete\n
        -S"}
  group: GRPSERIAL
test_Wdiv-by-zero-2_118:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-2.C'
    sources: {binary: Wdiv-by-zero-2.s, cflags: "-std=gnu++11 -O2 -Wdiv-by-zero\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_Wdiv-by-zero-2_119:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-2.C'
    sources: {binary: Wdiv-by-zero-2.s, cflags: "-std=gnu++14 -O2 -Wdiv-by-zero\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_Wdiv-by-zero-2_1587:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-2.C'
    sources: {binary: Wdiv-by-zero-2.s, cflags: "-std=gnu++11 -O2 -Wdiv-by-zero\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_Wdiv-by-zero-2_1588:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-2.C'
    sources: {binary: Wdiv-by-zero-2.s, cflags: "-std=gnu++14 -O2 -Wdiv-by-zero\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_Wdiv-by-zero-bogus-2_120:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-bogus-2.C'
    sources: {binary: Wdiv-by-zero-bogus-2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_Wdiv-by-zero-bogus-2_121:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-bogus-2.C'
    sources: {binary: Wdiv-by-zero-bogus-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_Wdiv-by-zero-bogus-2_122:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-bogus-2.C'
    sources: {binary: Wdiv-by-zero-bogus-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_Wdiv-by-zero-bogus-2_1589:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-bogus-2.C'
    sources: {binary: Wdiv-by-zero-bogus-2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_Wdiv-by-zero-bogus-2_1590:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-bogus-2.C'
    sources: {binary: Wdiv-by-zero-bogus-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_Wdiv-by-zero-bogus-2_1591:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-bogus-2.C'
    sources: {binary: Wdiv-by-zero-bogus-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_Wdiv-by-zero-bogus_123:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-bogus.C'
    sources: {binary: Wdiv-by-zero-bogus.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_Wdiv-by-zero-bogus_124:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-bogus.C'
    sources: {binary: Wdiv-by-zero-bogus.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_Wdiv-by-zero-bogus_125:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-bogus.C'
    sources: {binary: Wdiv-by-zero-bogus.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_Wdiv-by-zero-bogus_1592:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-bogus.C'
    sources: {binary: Wdiv-by-zero-bogus.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_Wdiv-by-zero-bogus_1593:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-bogus.C'
    sources: {binary: Wdiv-by-zero-bogus.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_Wdiv-by-zero-bogus_1594:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero-bogus.C'
    sources: {binary: Wdiv-by-zero-bogus.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_Wdiv-by-zero_126:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero.C'
    sources: {binary: Wdiv-by-zero.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("division
          by")[^\n]*\n?)+'}
test_Wdiv-by-zero_127:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero.C'
    sources: {binary: Wdiv-by-zero.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("division
          by")[^\n]*\n?)+'}
test_Wdiv-by-zero_128:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero.C'
    sources: {binary: Wdiv-by-zero.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("division
          by")[^\n]*\n?)+'}
test_Wdiv-by-zero_1595:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero.C'
    sources: {binary: Wdiv-by-zero.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("division
          by")[^\n]*\n?)+'}
test_Wdiv-by-zero_1596:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero.C'
    sources: {binary: Wdiv-by-zero.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("division
          by")[^\n]*\n?)+'}
test_Wdiv-by-zero_1597:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdiv-by-zero.C'
    sources: {binary: Wdiv-by-zero.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("division
          by")[^\n]*\n?)+'}
test_Wdouble-promotion_129:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdouble-promotion.C'
    sources: {binary: Wdouble-promotion.s, cflags: "-std=gnu++98 -Wdouble-promotion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("18:implicit")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("18:implicit")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("9:implicit")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("9:implicit")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("implicit")[^\n]*\n?)+'}
test_Wdouble-promotion_130:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdouble-promotion.C'
    sources: {binary: Wdouble-promotion.s, cflags: "-std=gnu++11 -Wdouble-promotion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("18:implicit")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("18:implicit")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("9:implicit")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("9:implicit")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("implicit")[^\n]*\n?)+'}
test_Wdouble-promotion_131:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdouble-promotion.C'
    sources: {binary: Wdouble-promotion.s, cflags: "-std=gnu++14 -Wdouble-promotion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("18:implicit")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("18:implicit")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("9:implicit")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("9:implicit")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("implicit")[^\n]*\n?)+'}
test_Wdouble-promotion_1598:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdouble-promotion.C'
    sources: {binary: Wdouble-promotion.s, cflags: "-std=gnu++98 -Wdouble-promotion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("18:implicit")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("18:implicit")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("9:implicit")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("9:implicit")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("implicit")[^\n]*\n?)+'}
test_Wdouble-promotion_1599:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdouble-promotion.C'
    sources: {binary: Wdouble-promotion.s, cflags: "-std=gnu++11 -Wdouble-promotion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("18:implicit")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("18:implicit")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("9:implicit")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("9:implicit")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("implicit")[^\n]*\n?)+'}
test_Wdouble-promotion_1600:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdouble-promotion.C'
    sources: {binary: Wdouble-promotion.s, cflags: "-std=gnu++14 -Wdouble-promotion
        -ftrack-macro-expansion=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("18:implicit")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("18:implicit")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("17:implicit")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("15:implicit")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("9:implicit")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("9:implicit")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("implicit")[^\n]*\n?)+'}
test_Wdtor1_132:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdtor1.C'
    sources: {binary: Wdtor1.s, cflags: "-std=gnu++98 -Wnon-virtual-dtor\n -S"}
  group: GRPSERIAL
test_Wdtor1_133:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdtor1.C'
    sources: {binary: Wdtor1.s, cflags: "-std=gnu++11 -Wnon-virtual-dtor\n -S"}
  group: GRPSERIAL
test_Wdtor1_134:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdtor1.C'
    sources: {binary: Wdtor1.s, cflags: "-std=gnu++14 -Wnon-virtual-dtor\n -S"}
  group: GRPSERIAL
test_Wdtor1_1601:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdtor1.C'
    sources: {binary: Wdtor1.s, cflags: "-std=gnu++98 -Wnon-virtual-dtor\n -S"}
  group: GRPSERIAL
test_Wdtor1_1602:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdtor1.C'
    sources: {binary: Wdtor1.s, cflags: "-std=gnu++11 -Wnon-virtual-dtor\n -S"}
  group: GRPSERIAL
test_Wdtor1_1603:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wdtor1.C'
    sources: {binary: Wdtor1.s, cflags: "-std=gnu++14 -Wnon-virtual-dtor\n -S"}
  group: GRPSERIAL
test_Wduplicated-branches1_135:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches1.C'
    sources: {binary: Wduplicated-branches1.s, cflags: "-std=gnu++98 -Wduplicated-branches\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("this
          condition has identical branches")[^\n]*\n?)+'}
test_Wduplicated-branches1_136:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches1.C'
    sources: {binary: Wduplicated-branches1.s, cflags: "-std=gnu++11 -Wduplicated-branches\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("this
          condition has identical branches")[^\n]*\n?)+'}
test_Wduplicated-branches1_137:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches1.C'
    sources: {binary: Wduplicated-branches1.s, cflags: "-std=gnu++14 -Wduplicated-branches\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("this
          condition has identical branches")[^\n]*\n?)+'}
test_Wduplicated-branches1_1604:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches1.C'
    sources: {binary: Wduplicated-branches1.s, cflags: "-std=gnu++98 -Wduplicated-branches\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("this
          condition has identical branches")[^\n]*\n?)+'}
test_Wduplicated-branches1_1605:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches1.C'
    sources: {binary: Wduplicated-branches1.s, cflags: "-std=gnu++11 -Wduplicated-branches\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("this
          condition has identical branches")[^\n]*\n?)+'}
test_Wduplicated-branches1_1606:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches1.C'
    sources: {binary: Wduplicated-branches1.s, cflags: "-std=gnu++14 -Wduplicated-branches\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("this
          condition has identical branches")[^\n]*\n?)+'}
test_Wduplicated-branches2_138:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches2.C'
    sources: {binary: Wduplicated-branches2.s, cflags: "-std=gnu++11 -Wduplicated-branches\n
        -S"}
  group: GRPSERIAL
test_Wduplicated-branches2_139:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches2.C'
    sources: {binary: Wduplicated-branches2.s, cflags: "-std=gnu++14 -Wduplicated-branches\n
        -S"}
  group: GRPSERIAL
test_Wduplicated-branches2_1607:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches2.C'
    sources: {binary: Wduplicated-branches2.s, cflags: "-std=gnu++11 -Wduplicated-branches\n
        -S"}
  group: GRPSERIAL
test_Wduplicated-branches2_1608:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches2.C'
    sources: {binary: Wduplicated-branches2.s, cflags: "-std=gnu++14 -Wduplicated-branches\n
        -S"}
  group: GRPSERIAL
test_Wduplicated-branches3_140:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches3.C'
    sources: {binary: Wduplicated-branches3.s, cflags: "-std=gnu++98 -Wduplicated-branches
        -fopenmp\n -S"}
  group: GRPSERIAL
test_Wduplicated-branches3_141:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches3.C'
    sources: {binary: Wduplicated-branches3.s, cflags: "-std=gnu++11 -Wduplicated-branches
        -fopenmp\n -S"}
  group: GRPSERIAL
test_Wduplicated-branches3_142:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches3.C'
    sources: {binary: Wduplicated-branches3.s, cflags: "-std=gnu++14 -Wduplicated-branches
        -fopenmp\n -S"}
  group: GRPSERIAL
test_Wduplicated-branches3_1609:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches3.C'
    sources: {binary: Wduplicated-branches3.s, cflags: "-std=gnu++98 -Wduplicated-branches
        -fopenmp\n -S"}
  group: GRPSERIAL
test_Wduplicated-branches3_1610:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches3.C'
    sources: {binary: Wduplicated-branches3.s, cflags: "-std=gnu++11 -Wduplicated-branches
        -fopenmp\n -S"}
  group: GRPSERIAL
test_Wduplicated-branches3_1611:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wduplicated-branches3.C'
    sources: {binary: Wduplicated-branches3.s, cflags: "-std=gnu++14 -Wduplicated-branches
        -fopenmp\n -S"}
  group: GRPSERIAL
test_Wenum-compare-no-2_143:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare-no-2.C'
    sources: {binary: Wenum-compare-no-2.s, cflags: "-std=gnu++98 -Wno-enum-compare\n
        -S"}
  group: GRPSERIAL
test_Wenum-compare-no-2_144:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare-no-2.C'
    sources: {binary: Wenum-compare-no-2.s, cflags: "-std=gnu++11 -Wno-enum-compare\n
        -S"}
  group: GRPSERIAL
test_Wenum-compare-no-2_145:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare-no-2.C'
    sources: {binary: Wenum-compare-no-2.s, cflags: "-std=gnu++14 -Wno-enum-compare\n
        -S"}
  group: GRPSERIAL
test_Wenum-compare-no-2_1612:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare-no-2.C'
    sources: {binary: Wenum-compare-no-2.s, cflags: "-std=gnu++98 -Wno-enum-compare\n
        -S"}
  group: GRPSERIAL
test_Wenum-compare-no-2_1613:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare-no-2.C'
    sources: {binary: Wenum-compare-no-2.s, cflags: "-std=gnu++11 -Wno-enum-compare\n
        -S"}
  group: GRPSERIAL
test_Wenum-compare-no-2_1614:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare-no-2.C'
    sources: {binary: Wenum-compare-no-2.s, cflags: "-std=gnu++14 -Wno-enum-compare\n
        -S"}
  group: GRPSERIAL
test_Wenum-compare-no_146:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare-no.C'
    sources: {binary: Wenum-compare-no.s, cflags: "-std=gnu++98 -Wno-enum-compare\n
        -S"}
  group: GRPSERIAL
test_Wenum-compare-no_147:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare-no.C'
    sources: {binary: Wenum-compare-no.s, cflags: "-std=gnu++11 -Wno-enum-compare\n
        -S"}
  group: GRPSERIAL
test_Wenum-compare-no_148:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare-no.C'
    sources: {binary: Wenum-compare-no.s, cflags: "-std=gnu++14 -Wno-enum-compare\n
        -S"}
  group: GRPSERIAL
test_Wenum-compare-no_1615:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare-no.C'
    sources: {binary: Wenum-compare-no.s, cflags: "-std=gnu++98 -Wno-enum-compare\n
        -S"}
  group: GRPSERIAL
test_Wenum-compare-no_1616:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare-no.C'
    sources: {binary: Wenum-compare-no.s, cflags: "-std=gnu++11 -Wno-enum-compare\n
        -S"}
  group: GRPSERIAL
test_Wenum-compare-no_1617:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare-no.C'
    sources: {binary: Wenum-compare-no.s, cflags: "-std=gnu++14 -Wno-enum-compare\n
        -S"}
  group: GRPSERIAL
test_Wenum-compare_149:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare.C'
    sources: {binary: Wenum-compare.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between")[^\n]*\n?)+'}
test_Wenum-compare_150:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare.C'
    sources: {binary: Wenum-compare.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between")[^\n]*\n?)+'}
test_Wenum-compare_151:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare.C'
    sources: {binary: Wenum-compare.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between")[^\n]*\n?)+'}
test_Wenum-compare_1618:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare.C'
    sources: {binary: Wenum-compare.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between")[^\n]*\n?)+'}
test_Wenum-compare_1619:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare.C'
    sources: {binary: Wenum-compare.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between")[^\n]*\n?)+'}
test_Wenum-compare_1620:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wenum-compare.C'
    sources: {binary: Wenum-compare.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between")[^\n]*\n?)+'}
test_Wextra-1_152:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-1.C'
    sources: {binary: Wextra-1.s, cflags: "-std=gnu++98 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("const")[^\n]*\n?)+'}
test_Wextra-1_153:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-1.C'
    sources: {binary: Wextra-1.s, cflags: "-std=gnu++11 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("const")[^\n]*\n?)+'}
test_Wextra-1_154:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-1.C'
    sources: {binary: Wextra-1.s, cflags: "-std=gnu++14 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("const")[^\n]*\n?)+'}
test_Wextra-1_1621:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-1.C'
    sources: {binary: Wextra-1.s, cflags: "-std=gnu++98 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("const")[^\n]*\n?)+'}
test_Wextra-1_1622:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-1.C'
    sources: {binary: Wextra-1.s, cflags: "-std=gnu++11 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("const")[^\n]*\n?)+'}
test_Wextra-1_1623:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-1.C'
    sources: {binary: Wextra-1.s, cflags: "-std=gnu++14 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("const")[^\n]*\n?)+'}
test_Wextra-2_155:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-2.C'
    sources: {binary: Wextra-2.s, cflags: "-std=gnu++98 -Wextra\n -S"}
  group: GRPSERIAL
test_Wextra-2_156:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-2.C'
    sources: {binary: Wextra-2.s, cflags: "-std=gnu++11 -Wextra\n -S"}
  group: GRPSERIAL
test_Wextra-2_157:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-2.C'
    sources: {binary: Wextra-2.s, cflags: "-std=gnu++14 -Wextra\n -S"}
  group: GRPSERIAL
test_Wextra-2_1624:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-2.C'
    sources: {binary: Wextra-2.s, cflags: "-std=gnu++98 -Wextra\n -S"}
  group: GRPSERIAL
test_Wextra-2_1625:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-2.C'
    sources: {binary: Wextra-2.s, cflags: "-std=gnu++11 -Wextra\n -S"}
  group: GRPSERIAL
test_Wextra-2_1626:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-2.C'
    sources: {binary: Wextra-2.s, cflags: "-std=gnu++14 -Wextra\n -S"}
  group: GRPSERIAL
test_Wextra-3_158:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-3.C'
    sources: {binary: Wextra-3.s, cflags: "-std=gnu++98 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
test_Wextra-3_159:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-3.C'
    sources: {binary: Wextra-3.s, cflags: "-std=gnu++11 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
test_Wextra-3_160:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-3.C'
    sources: {binary: Wextra-3.s, cflags: "-std=gnu++14 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
test_Wextra-3_1627:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-3.C'
    sources: {binary: Wextra-3.s, cflags: "-std=gnu++98 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
test_Wextra-3_1628:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-3.C'
    sources: {binary: Wextra-3.s, cflags: "-std=gnu++11 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
test_Wextra-3_1629:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wextra-3.C'
    sources: {binary: Wextra-3.s, cflags: "-std=gnu++14 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("ordered
          comparison")[^\n]*\n?)+'}
test_Wfloat-equal-1_161:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wfloat-equal-1.C'
    sources: {binary: Wfloat-equal-1.s, cflags: "-std=gnu++98 -Wfloat-equal\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
test_Wfloat-equal-1_162:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wfloat-equal-1.C'
    sources: {binary: Wfloat-equal-1.s, cflags: "-std=gnu++11 -Wfloat-equal\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
test_Wfloat-equal-1_163:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wfloat-equal-1.C'
    sources: {binary: Wfloat-equal-1.s, cflags: "-std=gnu++14 -Wfloat-equal\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
test_Wfloat-equal-1_1630:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wfloat-equal-1.C'
    sources: {binary: Wfloat-equal-1.s, cflags: "-std=gnu++98 -Wfloat-equal\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
test_Wfloat-equal-1_1631:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wfloat-equal-1.C'
    sources: {binary: Wfloat-equal-1.s, cflags: "-std=gnu++11 -Wfloat-equal\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
test_Wfloat-equal-1_1632:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wfloat-equal-1.C'
    sources: {binary: Wfloat-equal-1.s, cflags: "-std=gnu++14 -Wfloat-equal\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparing
          floating point")[^\n]*\n?)+'}
test_Wformat-1_1633:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wformat-1.C'
    sources: {binary: Wformat-1.s, cflags: "-std=gnu++98 -Wformat -Wformat-security\n
        -S"}
  group: GRPSERIAL
test_Wformat-1_1634:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wformat-1.C'
    sources: {binary: Wformat-1.s, cflags: "-std=gnu++11 -Wformat -Wformat-security\n
        -S"}
  group: GRPSERIAL
test_Wformat-1_1635:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wformat-1.C'
    sources: {binary: Wformat-1.s, cflags: "-std=gnu++14 -Wformat -Wformat-security\n
        -S"}
  group: GRPSERIAL
test_Wformat-1_164:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wformat-1.C'
    sources: {binary: Wformat-1.s, cflags: "-std=gnu++98 -Wformat -Wformat-security\n
        -S"}
  group: GRPSERIAL
test_Wformat-1_165:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wformat-1.C'
    sources: {binary: Wformat-1.s, cflags: "-std=gnu++11 -Wformat -Wformat-security\n
        -S"}
  group: GRPSERIAL
test_Wformat-1_166:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wformat-1.C'
    sources: {binary: Wformat-1.s, cflags: "-std=gnu++14 -Wformat -Wformat-security\n
        -S"}
  group: GRPSERIAL
test_Wignored-attributes-1_1636:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wignored-attributes-1.C'
    sources: {binary: Wignored-attributes-1.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes on template argument")[^\n]*\n?)+'}
test_Wignored-attributes-1_1637:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wignored-attributes-1.C'
    sources: {binary: Wignored-attributes-1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes on template argument")[^\n]*\n?)+'}
test_Wignored-attributes-1_1638:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wignored-attributes-1.C'
    sources: {binary: Wignored-attributes-1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes on template argument")[^\n]*\n?)+'}
test_Wignored-attributes-1_167:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wignored-attributes-1.C'
    sources: {binary: Wignored-attributes-1.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes on template argument")[^\n]*\n?)+'}
test_Wignored-attributes-1_168:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wignored-attributes-1.C'
    sources: {binary: Wignored-attributes-1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes on template argument")[^\n]*\n?)+'}
test_Wignored-attributes-1_169:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wignored-attributes-1.C'
    sources: {binary: Wignored-attributes-1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          attributes on template argument")[^\n]*\n?)+'}
test_Wignored-attributes-2_1639:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wignored-attributes-2.C'
    sources: {binary: Wignored-attributes-2.s, cflags: "-std=gnu++98 -Wno-ignored-attributes\n
        -S"}
  group: GRPSERIAL
test_Wignored-attributes-2_1640:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wignored-attributes-2.C'
    sources: {binary: Wignored-attributes-2.s, cflags: "-std=gnu++11 -Wno-ignored-attributes\n
        -S"}
  group: GRPSERIAL
test_Wignored-attributes-2_1641:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wignored-attributes-2.C'
    sources: {binary: Wignored-attributes-2.s, cflags: "-std=gnu++14 -Wno-ignored-attributes\n
        -S"}
  group: GRPSERIAL
test_Wignored-attributes-2_170:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wignored-attributes-2.C'
    sources: {binary: Wignored-attributes-2.s, cflags: "-std=gnu++98 -Wno-ignored-attributes\n
        -S"}
  group: GRPSERIAL
test_Wignored-attributes-2_171:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wignored-attributes-2.C'
    sources: {binary: Wignored-attributes-2.s, cflags: "-std=gnu++11 -Wno-ignored-attributes\n
        -S"}
  group: GRPSERIAL
test_Wignored-attributes-2_172:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wignored-attributes-2.C'
    sources: {binary: Wignored-attributes-2.s, cflags: "-std=gnu++14 -Wno-ignored-attributes\n
        -S"}
  group: GRPSERIAL
test_Wimplicit-fallthrough-1_1642:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wimplicit-fallthrough-1.C'
    sources: {binary: Wimplicit-fallthrough-1.s, cflags: "-std=gnu++11 -Wimplicit-fallthrough\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("statement
          may fall through")[^\n]*\n?)+'}
test_Wimplicit-fallthrough-1_1643:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wimplicit-fallthrough-1.C'
    sources: {binary: Wimplicit-fallthrough-1.s, cflags: "-std=gnu++14 -Wimplicit-fallthrough\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("statement
          may fall through")[^\n]*\n?)+'}
test_Wimplicit-fallthrough-1_173:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wimplicit-fallthrough-1.C'
    sources: {binary: Wimplicit-fallthrough-1.s, cflags: "-std=gnu++11 -Wimplicit-fallthrough\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("statement
          may fall through")[^\n]*\n?)+'}
test_Wimplicit-fallthrough-1_174:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wimplicit-fallthrough-1.C'
    sources: {binary: Wimplicit-fallthrough-1.s, cflags: "-std=gnu++14 -Wimplicit-fallthrough\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("statement
          may fall through")[^\n]*\n?)+'}
test_Wimplicit-fallthrough-2_1644:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wimplicit-fallthrough-2.C'
    sources: {binary: Wimplicit-fallthrough-2.s, cflags: "-std=gnu++98 -Wimplicit-fallthrough\n
        -S"}
  group: GRPSERIAL
test_Wimplicit-fallthrough-2_1645:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wimplicit-fallthrough-2.C'
    sources: {binary: Wimplicit-fallthrough-2.s, cflags: "-std=gnu++11 -Wimplicit-fallthrough\n
        -S"}
  group: GRPSERIAL
test_Wimplicit-fallthrough-2_1646:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wimplicit-fallthrough-2.C'
    sources: {binary: Wimplicit-fallthrough-2.s, cflags: "-std=gnu++14 -Wimplicit-fallthrough\n
        -S"}
  group: GRPSERIAL
test_Wimplicit-fallthrough-2_175:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wimplicit-fallthrough-2.C'
    sources: {binary: Wimplicit-fallthrough-2.s, cflags: "-std=gnu++98 -Wimplicit-fallthrough\n
        -S"}
  group: GRPSERIAL
test_Wimplicit-fallthrough-2_176:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wimplicit-fallthrough-2.C'
    sources: {binary: Wimplicit-fallthrough-2.s, cflags: "-std=gnu++11 -Wimplicit-fallthrough\n
        -S"}
  group: GRPSERIAL
test_Wimplicit-fallthrough-2_177:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wimplicit-fallthrough-2.C'
    sources: {binary: Wimplicit-fallthrough-2.s, cflags: "-std=gnu++14 -Wimplicit-fallthrough\n
        -S"}
  group: GRPSERIAL
test_Winit-self-2_1647:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self-2.C'
    sources: {binary: Winit-self-2.s, cflags: "-std=gnu++98 -Winit-self\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("is
          initialized with itself")[^\n]*\n?)+'}
test_Winit-self-2_1648:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self-2.C'
    sources: {binary: Winit-self-2.s, cflags: "-std=gnu++11 -Winit-self\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("is
          initialized with itself")[^\n]*\n?)+'}
test_Winit-self-2_1649:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self-2.C'
    sources: {binary: Winit-self-2.s, cflags: "-std=gnu++14 -Winit-self\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("is
          initialized with itself")[^\n]*\n?)+'}
test_Winit-self-2_178:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self-2.C'
    sources: {binary: Winit-self-2.s, cflags: "-std=gnu++98 -Winit-self\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("is
          initialized with itself")[^\n]*\n?)+'}
test_Winit-self-2_179:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self-2.C'
    sources: {binary: Winit-self-2.s, cflags: "-std=gnu++11 -Winit-self\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("is
          initialized with itself")[^\n]*\n?)+'}
test_Winit-self-2_180:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self-2.C'
    sources: {binary: Winit-self-2.s, cflags: "-std=gnu++14 -Winit-self\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("is
          initialized with itself")[^\n]*\n?)+'}
test_Winit-self-3_1650:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self-3.C'
    sources: {binary: Winit-self-3.s, cflags: "-std=gnu++98 -Winit-self\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
test_Winit-self-3_1651:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self-3.C'
    sources: {binary: Winit-self-3.s, cflags: "-std=gnu++11 -Winit-self\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
test_Winit-self-3_1652:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self-3.C'
    sources: {binary: Winit-self-3.s, cflags: "-std=gnu++14 -Winit-self\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
test_Winit-self-3_181:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self-3.C'
    sources: {binary: Winit-self-3.s, cflags: "-std=gnu++98 -Winit-self\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
test_Winit-self-3_182:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self-3.C'
    sources: {binary: Winit-self-3.s, cflags: "-std=gnu++11 -Winit-self\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
test_Winit-self-3_183:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self-3.C'
    sources: {binary: Winit-self-3.s, cflags: "-std=gnu++14 -Winit-self\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
test_Winit-self_1653:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self.C'
    sources: {binary: Winit-self.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("is
          initialized with itself")[^\n]*\n?)+'}
test_Winit-self_1654:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self.C'
    sources: {binary: Winit-self.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("is
          initialized with itself")[^\n]*\n?)+'}
test_Winit-self_1655:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self.C'
    sources: {binary: Winit-self.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("is
          initialized with itself")[^\n]*\n?)+'}
test_Winit-self_184:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self.C'
    sources: {binary: Winit-self.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("is
          initialized with itself")[^\n]*\n?)+'}
test_Winit-self_185:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self.C'
    sources: {binary: Winit-self.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("is
          initialized with itself")[^\n]*\n?)+'}
test_Winit-self_186:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winit-self.C'
    sources: {binary: Winit-self.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("is
          initialized with itself")[^\n]*\n?)+'}
test_Winline-1_1656:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-1.C'
    sources: {binary: Winline-1.s, cflags: "-std=gnu++98 -Winline -O2\n -S"}
  group: GRPSERIAL
test_Winline-1_1657:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-1.C'
    sources: {binary: Winline-1.s, cflags: "-std=gnu++11 -Winline -O2\n -S"}
  group: GRPSERIAL
test_Winline-1_1658:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-1.C'
    sources: {binary: Winline-1.s, cflags: "-std=gnu++14 -Winline -O2\n -S"}
  group: GRPSERIAL
test_Winline-1_187:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-1.C'
    sources: {binary: Winline-1.s, cflags: "-std=gnu++98 -Winline -O2\n -S"}
  group: GRPSERIAL
test_Winline-1_188:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-1.C'
    sources: {binary: Winline-1.s, cflags: "-std=gnu++11 -Winline -O2\n -S"}
  group: GRPSERIAL
test_Winline-1_189:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-1.C'
    sources: {binary: Winline-1.s, cflags: "-std=gnu++14 -Winline -O2\n -S"}
  group: GRPSERIAL
test_Winline-2_1659:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-2.C'
    sources: {binary: Winline-2.s, cflags: "-std=gnu++98 -Winline -O3\n -S"}
  group: GRPSERIAL
test_Winline-2_1660:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-2.C'
    sources: {binary: Winline-2.s, cflags: "-std=gnu++11 -Winline -O3\n -S"}
  group: GRPSERIAL
test_Winline-2_1661:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-2.C'
    sources: {binary: Winline-2.s, cflags: "-std=gnu++14 -Winline -O3\n -S"}
  group: GRPSERIAL
test_Winline-2_190:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-2.C'
    sources: {binary: Winline-2.s, cflags: "-std=gnu++98 -Winline -O3\n -S"}
  group: GRPSERIAL
test_Winline-2_191:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-2.C'
    sources: {binary: Winline-2.s, cflags: "-std=gnu++11 -Winline -O3\n -S"}
  group: GRPSERIAL
test_Winline-2_192:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-2.C'
    sources: {binary: Winline-2.s, cflags: "-std=gnu++14 -Winline -O3\n -S"}
  group: GRPSERIAL
test_Winline-3_1662:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-3.C'
    sources: {binary: Winline-3.s, cflags: "-std=gnu++98 -Winline -O\n -S"}
  group: GRPSERIAL
test_Winline-3_1663:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-3.C'
    sources: {binary: Winline-3.s, cflags: "-std=gnu++11 -Winline -O\n -S"}
  group: GRPSERIAL
test_Winline-3_1664:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-3.C'
    sources: {binary: Winline-3.s, cflags: "-std=gnu++14 -Winline -O\n -S"}
  group: GRPSERIAL
test_Winline-3_193:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-3.C'
    sources: {binary: Winline-3.s, cflags: "-std=gnu++98 -Winline -O\n -S"}
  group: GRPSERIAL
test_Winline-3_194:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-3.C'
    sources: {binary: Winline-3.s, cflags: "-std=gnu++11 -Winline -O\n -S"}
  group: GRPSERIAL
test_Winline-3_195:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-3.C'
    sources: {binary: Winline-3.s, cflags: "-std=gnu++14 -Winline -O\n -S"}
  group: GRPSERIAL
test_Winline-4_1665:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-4.C'
    sources: {binary: Winline-4.s, cflags: "-std=gnu++98 -O2 -Winline\n -S"}
  group: GRPSERIAL
test_Winline-4_1666:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-4.C'
    sources: {binary: Winline-4.s, cflags: "-std=gnu++11 -O2 -Winline\n -S"}
  group: GRPSERIAL
test_Winline-4_1667:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-4.C'
    sources: {binary: Winline-4.s, cflags: "-std=gnu++14 -O2 -Winline\n -S"}
  group: GRPSERIAL
test_Winline-4_196:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-4.C'
    sources: {binary: Winline-4.s, cflags: "-std=gnu++98 -O2 -Winline\n -S"}
  group: GRPSERIAL
test_Winline-4_197:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-4.C'
    sources: {binary: Winline-4.s, cflags: "-std=gnu++11 -O2 -Winline\n -S"}
  group: GRPSERIAL
test_Winline-4_198:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Winline-4.C'
    sources: {binary: Winline-4.s, cflags: "-std=gnu++14 -O2 -Winline\n -S"}
  group: GRPSERIAL
test_Wint-in-bool-context-1_1668:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wint-in-bool-context-1.C'
    sources: {binary: Wint-in-bool-context-1.s, cflags: "-std=gnu++98 -Wint-in-bool-context\n
        -S"}
  group: GRPSERIAL
test_Wint-in-bool-context-1_1669:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wint-in-bool-context-1.C'
    sources: {binary: Wint-in-bool-context-1.s, cflags: "-std=gnu++11 -Wint-in-bool-context\n
        -S"}
  group: GRPSERIAL
test_Wint-in-bool-context-1_1670:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wint-in-bool-context-1.C'
    sources: {binary: Wint-in-bool-context-1.s, cflags: "-std=gnu++14 -Wint-in-bool-context\n
        -S"}
  group: GRPSERIAL
test_Wint-in-bool-context-1_199:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wint-in-bool-context-1.C'
    sources: {binary: Wint-in-bool-context-1.s, cflags: "-std=gnu++98 -Wint-in-bool-context\n
        -S"}
  group: GRPSERIAL
test_Wint-in-bool-context-1_200:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wint-in-bool-context-1.C'
    sources: {binary: Wint-in-bool-context-1.s, cflags: "-std=gnu++11 -Wint-in-bool-context\n
        -S"}
  group: GRPSERIAL
test_Wint-in-bool-context-1_201:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wint-in-bool-context-1.C'
    sources: {binary: Wint-in-bool-context-1.s, cflags: "-std=gnu++14 -Wint-in-bool-context\n
        -S"}
  group: GRPSERIAL
test_Wlogical-op-1_1671:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wlogical-op-1.C'
    sources: {binary: Wlogical-op-1.s, cflags: "-std=gnu++98 -Wlogical-op\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
test_Wlogical-op-1_1672:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wlogical-op-1.C'
    sources: {binary: Wlogical-op-1.s, cflags: "-std=gnu++11 -Wlogical-op\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
test_Wlogical-op-1_1673:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wlogical-op-1.C'
    sources: {binary: Wlogical-op-1.s, cflags: "-std=gnu++14 -Wlogical-op\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
test_Wlogical-op-1_202:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wlogical-op-1.C'
    sources: {binary: Wlogical-op-1.s, cflags: "-std=gnu++98 -Wlogical-op\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
test_Wlogical-op-1_203:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wlogical-op-1.C'
    sources: {binary: Wlogical-op-1.s, cflags: "-std=gnu++11 -Wlogical-op\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
test_Wlogical-op-1_204:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wlogical-op-1.C'
    sources: {binary: Wlogical-op-1.s, cflags: "-std=gnu++14 -Wlogical-op\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("logical")[^\n]*\n?)+'}
test_Wlogical-op-2_1674:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wlogical-op-2.C'
    sources: {binary: Wlogical-op-2.s, cflags: "-std=gnu++11 -Wlogical-op\n -S"}
  group: GRPSERIAL
test_Wlogical-op-2_1675:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wlogical-op-2.C'
    sources: {binary: Wlogical-op-2.s, cflags: "-std=gnu++14 -Wlogical-op\n -S"}
  group: GRPSERIAL
test_Wlogical-op-2_205:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wlogical-op-2.C'
    sources: {binary: Wlogical-op-2.s, cflags: "-std=gnu++11 -Wlogical-op\n -S"}
  group: GRPSERIAL
test_Wlogical-op-2_206:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wlogical-op-2.C'
    sources: {binary: Wlogical-op-2.s, cflags: "-std=gnu++14 -Wlogical-op\n -S"}
  group: GRPSERIAL
test_Wmemset-transposed-args-1_1676:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmemset-transposed-args-1.C'
    sources: {binary: Wmemset-transposed-args-1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
test_Wmemset-transposed-args-1_1677:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmemset-transposed-args-1.C'
    sources: {binary: Wmemset-transposed-args-1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
test_Wmemset-transposed-args-1_1678:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmemset-transposed-args-1.C'
    sources: {binary: Wmemset-transposed-args-1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
test_Wmemset-transposed-args-1_207:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmemset-transposed-args-1.C'
    sources: {binary: Wmemset-transposed-args-1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
test_Wmemset-transposed-args-1_208:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmemset-transposed-args-1.C'
    sources: {binary: Wmemset-transposed-args-1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
test_Wmemset-transposed-args-1_209:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmemset-transposed-args-1.C'
    sources: {binary: Wmemset-transposed-args-1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*(".memset.
          used with constant zero length parameter; this could be due to transposed
          parameters")[^\n]*\n?)+'}
test_Wmissing-declarations-1_1679:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmissing-declarations-1.C'
    sources: {binary: Wmissing-declarations-1.s, cflags: "-std=gnu++98 -Wmissing-declarations\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("no
          previous declaration")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("no
          previous declaration")[^\n]*\n?)+'}
test_Wmissing-declarations-1_1680:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmissing-declarations-1.C'
    sources: {binary: Wmissing-declarations-1.s, cflags: "-std=gnu++11 -Wmissing-declarations\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("no
          previous declaration")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("no
          previous declaration")[^\n]*\n?)+'}
test_Wmissing-declarations-1_1681:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmissing-declarations-1.C'
    sources: {binary: Wmissing-declarations-1.s, cflags: "-std=gnu++14 -Wmissing-declarations\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("no
          previous declaration")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("no
          previous declaration")[^\n]*\n?)+'}
test_Wmissing-declarations-1_210:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmissing-declarations-1.C'
    sources: {binary: Wmissing-declarations-1.s, cflags: "-std=gnu++98 -Wmissing-declarations\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("no
          previous declaration")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("no
          previous declaration")[^\n]*\n?)+'}
test_Wmissing-declarations-1_211:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmissing-declarations-1.C'
    sources: {binary: Wmissing-declarations-1.s, cflags: "-std=gnu++11 -Wmissing-declarations\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("no
          previous declaration")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("no
          previous declaration")[^\n]*\n?)+'}
test_Wmissing-declarations-1_212:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmissing-declarations-1.C'
    sources: {binary: Wmissing-declarations-1.s, cflags: "-std=gnu++14 -Wmissing-declarations\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("no
          previous declaration")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("no
          previous declaration")[^\n]*\n?)+'}
test_Wmissing-field-initializers-1_1682:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmissing-field-initializers-1.C'
    sources: {binary: Wmissing-field-initializers-1.s, cflags: "-std=gnu++98 -Wmissing-field-initializers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
test_Wmissing-field-initializers-1_1683:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmissing-field-initializers-1.C'
    sources: {binary: Wmissing-field-initializers-1.s, cflags: "-std=gnu++11 -Wmissing-field-initializers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
test_Wmissing-field-initializers-1_1684:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmissing-field-initializers-1.C'
    sources: {binary: Wmissing-field-initializers-1.s, cflags: "-std=gnu++14 -Wmissing-field-initializers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
test_Wmissing-field-initializers-1_213:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmissing-field-initializers-1.C'
    sources: {binary: Wmissing-field-initializers-1.s, cflags: "-std=gnu++98 -Wmissing-field-initializers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
test_Wmissing-field-initializers-1_214:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmissing-field-initializers-1.C'
    sources: {binary: Wmissing-field-initializers-1.s, cflags: "-std=gnu++11 -Wmissing-field-initializers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
test_Wmissing-field-initializers-1_215:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wmissing-field-initializers-1.C'
    sources: {binary: Wmissing-field-initializers-1.s, cflags: "-std=gnu++14 -Wmissing-field-initializers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("missing
          initializer")[^\n]*\n?)+'}
test_Wno-div-by-zero_1685:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-div-by-zero.C'
    sources: {binary: Wno-div-by-zero.s, cflags: "-std=gnu++98 -Wno-div-by-zero\n
        -S"}
  group: GRPSERIAL
test_Wno-div-by-zero_1686:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-div-by-zero.C'
    sources: {binary: Wno-div-by-zero.s, cflags: "-std=gnu++11 -Wno-div-by-zero\n
        -S"}
  group: GRPSERIAL
test_Wno-div-by-zero_1687:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-div-by-zero.C'
    sources: {binary: Wno-div-by-zero.s, cflags: "-std=gnu++14 -Wno-div-by-zero\n
        -S"}
  group: GRPSERIAL
test_Wno-div-by-zero_216:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-div-by-zero.C'
    sources: {binary: Wno-div-by-zero.s, cflags: "-std=gnu++98 -Wno-div-by-zero\n
        -S"}
  group: GRPSERIAL
test_Wno-div-by-zero_217:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-div-by-zero.C'
    sources: {binary: Wno-div-by-zero.s, cflags: "-std=gnu++11 -Wno-div-by-zero\n
        -S"}
  group: GRPSERIAL
test_Wno-div-by-zero_218:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-div-by-zero.C'
    sources: {binary: Wno-div-by-zero.s, cflags: "-std=gnu++14 -Wno-div-by-zero\n
        -S"}
  group: GRPSERIAL
test_Wno-narrowing1_1688:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-narrowing1.C'
    sources: {binary: Wno-narrowing1.s, cflags: "-std=gnu++98 -Wall -Wextra -pedantic
        -Wno-narrowing\n -S"}
  group: GRPSERIAL
test_Wno-narrowing1_1689:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-narrowing1.C'
    sources: {binary: Wno-narrowing1.s, cflags: "-std=gnu++11 -Wall -Wextra -pedantic
        -Wno-narrowing\n -S"}
  group: GRPSERIAL
test_Wno-narrowing1_1690:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-narrowing1.C'
    sources: {binary: Wno-narrowing1.s, cflags: "-std=gnu++14 -Wall -Wextra -pedantic
        -Wno-narrowing\n -S"}
  group: GRPSERIAL
test_Wno-narrowing1_219:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-narrowing1.C'
    sources: {binary: Wno-narrowing1.s, cflags: "-std=gnu++98 -Wall -Wextra -pedantic
        -Wno-narrowing\n -S"}
  group: GRPSERIAL
test_Wno-narrowing1_220:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-narrowing1.C'
    sources: {binary: Wno-narrowing1.s, cflags: "-std=gnu++11 -Wall -Wextra -pedantic
        -Wno-narrowing\n -S"}
  group: GRPSERIAL
test_Wno-narrowing1_221:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-narrowing1.C'
    sources: {binary: Wno-narrowing1.s, cflags: "-std=gnu++14 -Wall -Wextra -pedantic
        -Wno-narrowing\n -S"}
  group: GRPSERIAL
test_Wno-return-local-addr_1691:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-return-local-addr.C'
    sources: {binary: Wno-return-local-addr.o, cflags: "-std=gnu++98 -Wno-return-local-addr\n
        -c"}
  group: GRPSERIAL
test_Wno-return-local-addr_1692:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-return-local-addr.C'
    sources: {binary: Wno-return-local-addr.o, cflags: "-std=gnu++11 -Wno-return-local-addr\n
        -c"}
  group: GRPSERIAL
test_Wno-return-local-addr_1693:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-return-local-addr.C'
    sources: {binary: Wno-return-local-addr.o, cflags: "-std=gnu++14 -Wno-return-local-addr\n
        -c"}
  group: GRPSERIAL
test_Wno-return-local-addr_222:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-return-local-addr.C'
    sources: {binary: Wno-return-local-addr.o, cflags: "-std=gnu++98 -Wno-return-local-addr\n
        -c"}
  group: GRPSERIAL
test_Wno-return-local-addr_223:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-return-local-addr.C'
    sources: {binary: Wno-return-local-addr.o, cflags: "-std=gnu++11 -Wno-return-local-addr\n
        -c"}
  group: GRPSERIAL
test_Wno-return-local-addr_224:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wno-return-local-addr.C'
    sources: {binary: Wno-return-local-addr.o, cflags: "-std=gnu++14 -Wno-return-local-addr\n
        -c"}
  group: GRPSERIAL
test_Wnonnull-compare-1_1694:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-1.C'
    sources: {binary: Wnonnull-compare-1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_Wnonnull-compare-1_1695:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-1.C'
    sources: {binary: Wnonnull-compare-1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_Wnonnull-compare-1_1696:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-1.C'
    sources: {binary: Wnonnull-compare-1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_Wnonnull-compare-1_225:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-1.C'
    sources: {binary: Wnonnull-compare-1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_Wnonnull-compare-1_226:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-1.C'
    sources: {binary: Wnonnull-compare-1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_Wnonnull-compare-1_227:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-1.C'
    sources: {binary: Wnonnull-compare-1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_Wnonnull-compare-2_1697:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-2.C'
    sources: {binary: Wnonnull-compare-2.s, cflags: "-std=gnu++98 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-2_1698:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-2.C'
    sources: {binary: Wnonnull-compare-2.s, cflags: "-std=gnu++11 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-2_1699:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-2.C'
    sources: {binary: Wnonnull-compare-2.s, cflags: "-std=gnu++14 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-2_228:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-2.C'
    sources: {binary: Wnonnull-compare-2.s, cflags: "-std=gnu++98 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-2_229:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-2.C'
    sources: {binary: Wnonnull-compare-2.s, cflags: "-std=gnu++11 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-2_230:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-2.C'
    sources: {binary: Wnonnull-compare-2.s, cflags: "-std=gnu++14 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-3_1700:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-3.C'
    sources: {binary: Wnonnull-compare-3.s, cflags: "-std=gnu++98 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-3_1701:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-3.C'
    sources: {binary: Wnonnull-compare-3.s, cflags: "-std=gnu++11 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-3_1702:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-3.C'
    sources: {binary: Wnonnull-compare-3.s, cflags: "-std=gnu++14 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-3_231:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-3.C'
    sources: {binary: Wnonnull-compare-3.s, cflags: "-std=gnu++98 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-3_232:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-3.C'
    sources: {binary: Wnonnull-compare-3.s, cflags: "-std=gnu++11 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-3_233:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-3.C'
    sources: {binary: Wnonnull-compare-3.s, cflags: "-std=gnu++14 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-4_1703:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-4.C'
    sources: {binary: Wnonnull-compare-4.s, cflags: "-std=gnu++98 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-4_1704:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-4.C'
    sources: {binary: Wnonnull-compare-4.s, cflags: "-std=gnu++11 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-4_1705:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-4.C'
    sources: {binary: Wnonnull-compare-4.s, cflags: "-std=gnu++14 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-4_234:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-4.C'
    sources: {binary: Wnonnull-compare-4.s, cflags: "-std=gnu++98 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-4_235:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-4.C'
    sources: {binary: Wnonnull-compare-4.s, cflags: "-std=gnu++11 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-4_236:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-4.C'
    sources: {binary: Wnonnull-compare-4.s, cflags: "-std=gnu++14 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-5_1706:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-5.C'
    sources: {binary: Wnonnull-compare-5.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_Wnonnull-compare-5_1707:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-5.C'
    sources: {binary: Wnonnull-compare-5.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_Wnonnull-compare-5_1708:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-5.C'
    sources: {binary: Wnonnull-compare-5.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_Wnonnull-compare-5_237:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-5.C'
    sources: {binary: Wnonnull-compare-5.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_Wnonnull-compare-5_238:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-5.C'
    sources: {binary: Wnonnull-compare-5.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_Wnonnull-compare-5_239:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-5.C'
    sources: {binary: Wnonnull-compare-5.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_Wnonnull-compare-6_1709:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-6.C'
    sources: {binary: Wnonnull-compare-6.s, cflags: "-std=gnu++98 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-6_1710:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-6.C'
    sources: {binary: Wnonnull-compare-6.s, cflags: "-std=gnu++11 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-6_1711:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-6.C'
    sources: {binary: Wnonnull-compare-6.s, cflags: "-std=gnu++14 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-6_240:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-6.C'
    sources: {binary: Wnonnull-compare-6.s, cflags: "-std=gnu++98 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-6_241:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-6.C'
    sources: {binary: Wnonnull-compare-6.s, cflags: "-std=gnu++11 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-6_242:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-6.C'
    sources: {binary: Wnonnull-compare-6.s, cflags: "-std=gnu++14 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-7_1712:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-7.C'
    sources: {binary: Wnonnull-compare-7.s, cflags: "-std=gnu++98 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-7_1713:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-7.C'
    sources: {binary: Wnonnull-compare-7.s, cflags: "-std=gnu++11 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-7_1714:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-7.C'
    sources: {binary: Wnonnull-compare-7.s, cflags: "-std=gnu++14 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-7_243:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-7.C'
    sources: {binary: Wnonnull-compare-7.s, cflags: "-std=gnu++98 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-7_244:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-7.C'
    sources: {binary: Wnonnull-compare-7.s, cflags: "-std=gnu++11 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-7_245:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-7.C'
    sources: {binary: Wnonnull-compare-7.s, cflags: "-std=gnu++14 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-8_1715:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-8.C'
    sources: {binary: Wnonnull-compare-8.s, cflags: "-std=gnu++98 -O2 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-8_1716:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-8.C'
    sources: {binary: Wnonnull-compare-8.s, cflags: "-std=gnu++11 -O2 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-8_1717:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-8.C'
    sources: {binary: Wnonnull-compare-8.s, cflags: "-std=gnu++14 -O2 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-8_246:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-8.C'
    sources: {binary: Wnonnull-compare-8.s, cflags: "-std=gnu++98 -O2 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-8_247:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-8.C'
    sources: {binary: Wnonnull-compare-8.s, cflags: "-std=gnu++11 -O2 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull-compare-8_248:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull-compare-8.C'
    sources: {binary: Wnonnull-compare-8.s, cflags: "-std=gnu++14 -O2 -Wnonnull-compare\n
        -S"}
  group: GRPSERIAL
test_Wnonnull1_1718:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull1.C'
    sources: {binary: Wnonnull1.s, cflags: "-std=gnu++98 -Wnonnull\n -S"}
  group: GRPSERIAL
test_Wnonnull1_1719:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull1.C'
    sources: {binary: Wnonnull1.s, cflags: "-std=gnu++11 -Wnonnull\n -S"}
  group: GRPSERIAL
test_Wnonnull1_1720:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull1.C'
    sources: {binary: Wnonnull1.s, cflags: "-std=gnu++14 -Wnonnull\n -S"}
  group: GRPSERIAL
test_Wnonnull1_249:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull1.C'
    sources: {binary: Wnonnull1.s, cflags: "-std=gnu++98 -Wnonnull\n -S"}
  group: GRPSERIAL
test_Wnonnull1_250:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull1.C'
    sources: {binary: Wnonnull1.s, cflags: "-std=gnu++11 -Wnonnull\n -S"}
  group: GRPSERIAL
test_Wnonnull1_251:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull1.C'
    sources: {binary: Wnonnull1.s, cflags: "-std=gnu++14 -Wnonnull\n -S"}
  group: GRPSERIAL
test_Wnonnull2_1721:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull2.C'
    sources: {binary: Wnonnull2.s, cflags: "-std=gnu++98 -Wnonnull\n -S"}
  group: GRPSERIAL
test_Wnonnull2_1722:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull2.C'
    sources: {binary: Wnonnull2.s, cflags: "-std=gnu++11 -Wnonnull\n -S"}
  group: GRPSERIAL
test_Wnonnull2_1723:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull2.C'
    sources: {binary: Wnonnull2.s, cflags: "-std=gnu++14 -Wnonnull\n -S"}
  group: GRPSERIAL
test_Wnonnull2_252:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull2.C'
    sources: {binary: Wnonnull2.s, cflags: "-std=gnu++98 -Wnonnull\n -S"}
  group: GRPSERIAL
test_Wnonnull2_253:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull2.C'
    sources: {binary: Wnonnull2.s, cflags: "-std=gnu++11 -Wnonnull\n -S"}
  group: GRPSERIAL
test_Wnonnull2_254:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull2.C'
    sources: {binary: Wnonnull2.s, cflags: "-std=gnu++14 -Wnonnull\n -S"}
  group: GRPSERIAL
test_Wnonnull3_1724:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull3.C'
    sources: {binary: Wnonnull3.s, cflags: "-std=gnu++98 -Wnonnull\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument where non-null required")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument where non-null required")[^\n]*\n?)+'}
test_Wnonnull3_1725:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull3.C'
    sources: {binary: Wnonnull3.s, cflags: "-std=gnu++11 -Wnonnull\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument where non-null required")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument where non-null required")[^\n]*\n?)+'}
test_Wnonnull3_1726:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull3.C'
    sources: {binary: Wnonnull3.s, cflags: "-std=gnu++14 -Wnonnull\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument where non-null required")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument where non-null required")[^\n]*\n?)+'}
test_Wnonnull3_255:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull3.C'
    sources: {binary: Wnonnull3.s, cflags: "-std=gnu++98 -Wnonnull\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument where non-null required")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument where non-null required")[^\n]*\n?)+'}
test_Wnonnull3_256:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull3.C'
    sources: {binary: Wnonnull3.s, cflags: "-std=gnu++11 -Wnonnull\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument where non-null required")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument where non-null required")[^\n]*\n?)+'}
test_Wnonnull3_257:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnonnull3.C'
    sources: {binary: Wnonnull3.s, cflags: "-std=gnu++14 -Wnonnull\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument where non-null required")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("null
          argument where non-null required")[^\n]*\n?)+'}
test_Wnull-conversion-1_1727:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnull-conversion-1.C'
    sources: {binary: Wnull-conversion-1.s, cflags: "-std=gnu++98 -Wconversion-null\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("converting
          to non-pointer")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
test_Wnull-conversion-1_1728:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnull-conversion-1.C'
    sources: {binary: Wnull-conversion-1.s, cflags: "-std=gnu++11 -Wconversion-null\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("converting
          to non-pointer")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
test_Wnull-conversion-1_1729:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnull-conversion-1.C'
    sources: {binary: Wnull-conversion-1.s, cflags: "-std=gnu++14 -Wconversion-null\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("converting
          to non-pointer")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
test_Wnull-conversion-1_258:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnull-conversion-1.C'
    sources: {binary: Wnull-conversion-1.s, cflags: "-std=gnu++98 -Wconversion-null\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("converting
          to non-pointer")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
test_Wnull-conversion-1_259:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnull-conversion-1.C'
    sources: {binary: Wnull-conversion-1.s, cflags: "-std=gnu++11 -Wconversion-null\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("converting
          to non-pointer")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
test_Wnull-conversion-1_260:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnull-conversion-1.C'
    sources: {binary: Wnull-conversion-1.s, cflags: "-std=gnu++14 -Wconversion-null\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("converting
          to non-pointer")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("converting
          \''false\'' to pointer")[^\n]*\n?)+'}
test_Wnull-conversion-2_1730:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnull-conversion-2.C'
    sources: {binary: Wnull-conversion-2.s, cflags: "-std=gnu++98 -Wconversion-null\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
test_Wnull-conversion-2_1731:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnull-conversion-2.C'
    sources: {binary: Wnull-conversion-2.s, cflags: "-std=gnu++11 -Wconversion-null\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
test_Wnull-conversion-2_1732:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnull-conversion-2.C'
    sources: {binary: Wnull-conversion-2.s, cflags: "-std=gnu++14 -Wconversion-null\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
test_Wnull-conversion-2_261:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnull-conversion-2.C'
    sources: {binary: Wnull-conversion-2.s, cflags: "-std=gnu++98 -Wconversion-null\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
test_Wnull-conversion-2_262:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnull-conversion-2.C'
    sources: {binary: Wnull-conversion-2.s, cflags: "-std=gnu++11 -Wconversion-null\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
test_Wnull-conversion-2_263:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnull-conversion-2.C'
    sources: {binary: Wnull-conversion-2.s, cflags: "-std=gnu++14 -Wconversion-null\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("passing
          NULL to")[^\n]*\n?)+'}
test_Wnvdtor-2_1733:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-2.C'
    sources: {binary: Wnvdtor-2.s, cflags: "-std=gnu++98 -Wnon-virtual-dtor\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
test_Wnvdtor-2_1734:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-2.C'
    sources: {binary: Wnvdtor-2.s, cflags: "-std=gnu++11 -Wnon-virtual-dtor\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
test_Wnvdtor-2_1735:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-2.C'
    sources: {binary: Wnvdtor-2.s, cflags: "-std=gnu++14 -Wnon-virtual-dtor\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
test_Wnvdtor-2_264:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-2.C'
    sources: {binary: Wnvdtor-2.s, cflags: "-std=gnu++98 -Wnon-virtual-dtor\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
test_Wnvdtor-2_265:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-2.C'
    sources: {binary: Wnvdtor-2.s, cflags: "-std=gnu++11 -Wnon-virtual-dtor\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
test_Wnvdtor-2_266:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-2.C'
    sources: {binary: Wnvdtor-2.s, cflags: "-std=gnu++14 -Wnon-virtual-dtor\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
test_Wnvdtor-3_1736:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-3.C'
    sources: {binary: Wnvdtor-3.s, cflags: "-std=gnu++98 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
test_Wnvdtor-3_1737:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-3.C'
    sources: {binary: Wnvdtor-3.s, cflags: "-std=gnu++11 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
test_Wnvdtor-3_1738:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-3.C'
    sources: {binary: Wnvdtor-3.s, cflags: "-std=gnu++14 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
test_Wnvdtor-3_267:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-3.C'
    sources: {binary: Wnvdtor-3.s, cflags: "-std=gnu++98 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
test_Wnvdtor-3_268:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-3.C'
    sources: {binary: Wnvdtor-3.s, cflags: "-std=gnu++11 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
test_Wnvdtor-3_269:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-3.C'
    sources: {binary: Wnvdtor-3.s, cflags: "-std=gnu++14 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("accessible
          non-virtual destructor")[^\n]*\n?)+'}
test_Wnvdtor-4_1739:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-4.C'
    sources: {binary: Wnvdtor-4.s, cflags: "-std=gnu++98 -Weffc++ -Wno-non-virtual-dtor\n
        -S"}
  group: GRPSERIAL
test_Wnvdtor-4_1740:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-4.C'
    sources: {binary: Wnvdtor-4.s, cflags: "-std=gnu++11 -Weffc++ -Wno-non-virtual-dtor\n
        -S"}
  group: GRPSERIAL
test_Wnvdtor-4_1741:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-4.C'
    sources: {binary: Wnvdtor-4.s, cflags: "-std=gnu++14 -Weffc++ -Wno-non-virtual-dtor\n
        -S"}
  group: GRPSERIAL
test_Wnvdtor-4_270:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-4.C'
    sources: {binary: Wnvdtor-4.s, cflags: "-std=gnu++98 -Weffc++ -Wno-non-virtual-dtor\n
        -S"}
  group: GRPSERIAL
test_Wnvdtor-4_271:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-4.C'
    sources: {binary: Wnvdtor-4.s, cflags: "-std=gnu++11 -Weffc++ -Wno-non-virtual-dtor\n
        -S"}
  group: GRPSERIAL
test_Wnvdtor-4_272:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wnvdtor-4.C'
    sources: {binary: Wnvdtor-4.s, cflags: "-std=gnu++14 -Weffc++ -Wno-non-virtual-dtor\n
        -S"}
  group: GRPSERIAL
test_Woverflow-1_1742:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-1.C'
    sources: {binary: Woverflow-1.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow")[^\n]*\n?)+'}
test_Woverflow-1_1743:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-1.C'
    sources: {binary: Woverflow-1.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow")[^\n]*\n?)+'}
test_Woverflow-1_1744:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-1.C'
    sources: {binary: Woverflow-1.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow")[^\n]*\n?)+'}
test_Woverflow-1_273:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-1.C'
    sources: {binary: Woverflow-1.s, cflags: "-std=gnu++98 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow")[^\n]*\n?)+'}
test_Woverflow-1_274:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-1.C'
    sources: {binary: Woverflow-1.s, cflags: "-std=gnu++11 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow")[^\n]*\n?)+'}
test_Woverflow-1_275:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-1.C'
    sources: {binary: Woverflow-1.s, cflags: "-std=gnu++14 -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow")[^\n]*\n?)+'}
test_Woverflow-2_1745:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-2.C'
    sources: {binary: Woverflow-2.s, cflags: "-std=gnu++98 -O2 -Woverflow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow")[^\n]*\n?)+'}
test_Woverflow-2_1746:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-2.C'
    sources: {binary: Woverflow-2.s, cflags: "-std=gnu++11 -O2 -Woverflow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow")[^\n]*\n?)+'}
test_Woverflow-2_1747:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-2.C'
    sources: {binary: Woverflow-2.s, cflags: "-std=gnu++14 -O2 -Woverflow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow")[^\n]*\n?)+'}
test_Woverflow-2_276:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-2.C'
    sources: {binary: Woverflow-2.s, cflags: "-std=gnu++98 -O2 -Woverflow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow")[^\n]*\n?)+'}
test_Woverflow-2_277:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-2.C'
    sources: {binary: Woverflow-2.s, cflags: "-std=gnu++11 -O2 -Woverflow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow")[^\n]*\n?)+'}
test_Woverflow-2_278:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-2.C'
    sources: {binary: Woverflow-2.s, cflags: "-std=gnu++14 -O2 -Woverflow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow")[^\n]*\n?)+'}
test_Woverflow-3_1748:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-3.C'
    sources: {binary: Woverflow-3.s, cflags: "-std=gnu++98 -O2 -Wno-overflow\n -S"}
  group: GRPSERIAL
test_Woverflow-3_1749:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-3.C'
    sources: {binary: Woverflow-3.s, cflags: "-std=gnu++11 -O2 -Wno-overflow\n -S"}
  group: GRPSERIAL
test_Woverflow-3_1750:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-3.C'
    sources: {binary: Woverflow-3.s, cflags: "-std=gnu++14 -O2 -Wno-overflow\n -S"}
  group: GRPSERIAL
test_Woverflow-3_279:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-3.C'
    sources: {binary: Woverflow-3.s, cflags: "-std=gnu++98 -O2 -Wno-overflow\n -S"}
  group: GRPSERIAL
test_Woverflow-3_280:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-3.C'
    sources: {binary: Woverflow-3.s, cflags: "-std=gnu++11 -O2 -Wno-overflow\n -S"}
  group: GRPSERIAL
test_Woverflow-3_281:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-3.C'
    sources: {binary: Woverflow-3.s, cflags: "-std=gnu++14 -O2 -Wno-overflow\n -S"}
  group: GRPSERIAL
test_Woverflow-4_1751:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-4.C'
    sources: {binary: Woverflow-4.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
test_Woverflow-4_1752:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-4.C'
    sources: {binary: Woverflow-4.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
test_Woverflow-4_1753:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-4.C'
    sources: {binary: Woverflow-4.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
test_Woverflow-4_282:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-4.C'
    sources: {binary: Woverflow-4.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
test_Woverflow-4_283:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-4.C'
    sources: {binary: Woverflow-4.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
test_Woverflow-4_284:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverflow-4.C'
    sources: {binary: Woverflow-4.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
test_Woverloaded-1_1754:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverloaded-1.C'
    sources: {binary: Woverloaded-1.s, cflags: "-std=gnu++98 -Woverloaded-virtual\n
        -S"}
  group: GRPSERIAL
test_Woverloaded-1_1755:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverloaded-1.C'
    sources: {binary: Woverloaded-1.s, cflags: "-std=gnu++11 -Woverloaded-virtual\n
        -S"}
  group: GRPSERIAL
test_Woverloaded-1_1756:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverloaded-1.C'
    sources: {binary: Woverloaded-1.s, cflags: "-std=gnu++14 -Woverloaded-virtual\n
        -S"}
  group: GRPSERIAL
test_Woverloaded-1_285:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverloaded-1.C'
    sources: {binary: Woverloaded-1.s, cflags: "-std=gnu++98 -Woverloaded-virtual\n
        -S"}
  group: GRPSERIAL
test_Woverloaded-1_286:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverloaded-1.C'
    sources: {binary: Woverloaded-1.s, cflags: "-std=gnu++11 -Woverloaded-virtual\n
        -S"}
  group: GRPSERIAL
test_Woverloaded-1_287:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Woverloaded-1.C'
    sources: {binary: Woverloaded-1.s, cflags: "-std=gnu++14 -Woverloaded-virtual\n
        -S"}
  group: GRPSERIAL
test_Wpadded-1_1757:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wpadded-1.C'
    sources: {binary: Wpadded-1.s, cflags: "-std=gnu++98 -Wpadded\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("padding
          struct size to alignment boundary")[^\n]*\n?)+'}
test_Wpadded-1_1758:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wpadded-1.C'
    sources: {binary: Wpadded-1.s, cflags: "-std=gnu++11 -Wpadded\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("padding
          struct size to alignment boundary")[^\n]*\n?)+'}
test_Wpadded-1_1759:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wpadded-1.C'
    sources: {binary: Wpadded-1.s, cflags: "-std=gnu++14 -Wpadded\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("padding
          struct size to alignment boundary")[^\n]*\n?)+'}
test_Wpadded-1_288:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wpadded-1.C'
    sources: {binary: Wpadded-1.s, cflags: "-std=gnu++98 -Wpadded\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("padding
          struct size to alignment boundary")[^\n]*\n?)+'}
test_Wpadded-1_289:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wpadded-1.C'
    sources: {binary: Wpadded-1.s, cflags: "-std=gnu++11 -Wpadded\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("padding
          struct size to alignment boundary")[^\n]*\n?)+'}
test_Wpadded-1_290:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wpadded-1.C'
    sources: {binary: Wpadded-1.s, cflags: "-std=gnu++14 -Wpadded\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("padding
          struct size to alignment boundary")[^\n]*\n?)+'}
test_Wparentheses-10_1763:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-10.C'
    sources: {binary: Wparentheses-10.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-10_1764:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-10.C'
    sources: {binary: Wparentheses-10.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-10_1765:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-10.C'
    sources: {binary: Wparentheses-10.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-10_294:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-10.C'
    sources: {binary: Wparentheses-10.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-10_295:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-10.C'
    sources: {binary: Wparentheses-10.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-10_296:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-10.C'
    sources: {binary: Wparentheses-10.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-11_1766:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-11.C'
    sources: {binary: Wparentheses-11.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-11_1767:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-11.C'
    sources: {binary: Wparentheses-11.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-11_1768:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-11.C'
    sources: {binary: Wparentheses-11.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-11_297:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-11.C'
    sources: {binary: Wparentheses-11.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-11_298:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-11.C'
    sources: {binary: Wparentheses-11.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-11_299:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-11.C'
    sources: {binary: Wparentheses-11.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-12_1769:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-12.C'
    sources: {binary: Wparentheses-12.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-12_1770:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-12.C'
    sources: {binary: Wparentheses-12.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-12_1771:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-12.C'
    sources: {binary: Wparentheses-12.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-12_300:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-12.C'
    sources: {binary: Wparentheses-12.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-12_301:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-12.C'
    sources: {binary: Wparentheses-12.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-12_302:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-12.C'
    sources: {binary: Wparentheses-12.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-13_1772:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-13.C'
    sources: {binary: Wparentheses-13.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-13_1773:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-13.C'
    sources: {binary: Wparentheses-13.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-13_1774:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-13.C'
    sources: {binary: Wparentheses-13.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-13_303:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-13.C'
    sources: {binary: Wparentheses-13.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-13_304:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-13.C'
    sources: {binary: Wparentheses-13.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-13_305:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-13.C'
    sources: {binary: Wparentheses-13.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-14_1775:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-14.C'
    sources: {binary: Wparentheses-14.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-14_1776:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-14.C'
    sources: {binary: Wparentheses-14.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-14_1777:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-14.C'
    sources: {binary: Wparentheses-14.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-14_306:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-14.C'
    sources: {binary: Wparentheses-14.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-14_307:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-14.C'
    sources: {binary: Wparentheses-14.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-14_308:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-14.C'
    sources: {binary: Wparentheses-14.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-15_1778:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-15.C'
    sources: {binary: Wparentheses-15.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
test_Wparentheses-15_1779:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-15.C'
    sources: {binary: Wparentheses-15.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
test_Wparentheses-15_1780:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-15.C'
    sources: {binary: Wparentheses-15.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
test_Wparentheses-15_309:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-15.C'
    sources: {binary: Wparentheses-15.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
test_Wparentheses-15_310:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-15.C'
    sources: {binary: Wparentheses-15.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
test_Wparentheses-15_311:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-15.C'
    sources: {binary: Wparentheses-15.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
test_Wparentheses-16_1781:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-16.C'
    sources: {binary: Wparentheses-16.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-16_1782:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-16.C'
    sources: {binary: Wparentheses-16.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-16_1783:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-16.C'
    sources: {binary: Wparentheses-16.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-16_312:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-16.C'
    sources: {binary: Wparentheses-16.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-16_313:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-16.C'
    sources: {binary: Wparentheses-16.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-16_314:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-16.C'
    sources: {binary: Wparentheses-16.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-17_1784:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-17.C'
    sources: {binary: Wparentheses-17.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-17_1785:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-17.C'
    sources: {binary: Wparentheses-17.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-17_1786:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-17.C'
    sources: {binary: Wparentheses-17.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-17_315:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-17.C'
    sources: {binary: Wparentheses-17.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-17_316:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-17.C'
    sources: {binary: Wparentheses-17.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-17_317:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-17.C'
    sources: {binary: Wparentheses-17.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-18_1787:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-18.C'
    sources: {binary: Wparentheses-18.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-18_1788:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-18.C'
    sources: {binary: Wparentheses-18.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-18_1789:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-18.C'
    sources: {binary: Wparentheses-18.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-18_318:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-18.C'
    sources: {binary: Wparentheses-18.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-18_319:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-18.C'
    sources: {binary: Wparentheses-18.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-18_320:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-18.C'
    sources: {binary: Wparentheses-18.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-19_1790:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-19.C'
    sources: {binary: Wparentheses-19.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-19_1791:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-19.C'
    sources: {binary: Wparentheses-19.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-19_1792:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-19.C'
    sources: {binary: Wparentheses-19.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-19_321:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-19.C'
    sources: {binary: Wparentheses-19.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-19_322:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-19.C'
    sources: {binary: Wparentheses-19.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-19_323:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-19.C'
    sources: {binary: Wparentheses-19.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-1_1760:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-1.C'
    sources: {binary: Wparentheses-1.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-1_1761:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-1.C'
    sources: {binary: Wparentheses-1.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-1_1762:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-1.C'
    sources: {binary: Wparentheses-1.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-1_291:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-1.C'
    sources: {binary: Wparentheses-1.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-1_292:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-1.C'
    sources: {binary: Wparentheses-1.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-1_293:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-1.C'
    sources: {binary: Wparentheses-1.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-20_1796:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-20.C'
    sources: {binary: Wparentheses-20.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-20_1797:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-20.C'
    sources: {binary: Wparentheses-20.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-20_1798:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-20.C'
    sources: {binary: Wparentheses-20.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-20_327:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-20.C'
    sources: {binary: Wparentheses-20.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-20_328:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-20.C'
    sources: {binary: Wparentheses-20.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-20_329:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-20.C'
    sources: {binary: Wparentheses-20.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-21_1799:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-21.C'
    sources: {binary: Wparentheses-21.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-21_1800:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-21.C'
    sources: {binary: Wparentheses-21.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-21_1801:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-21.C'
    sources: {binary: Wparentheses-21.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-21_330:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-21.C'
    sources: {binary: Wparentheses-21.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-21_331:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-21.C'
    sources: {binary: Wparentheses-21.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-21_332:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-21.C'
    sources: {binary: Wparentheses-21.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-22_1802:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-22.C'
    sources: {binary: Wparentheses-22.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-22_1803:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-22.C'
    sources: {binary: Wparentheses-22.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-22_1804:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-22.C'
    sources: {binary: Wparentheses-22.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-22_333:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-22.C'
    sources: {binary: Wparentheses-22.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-22_334:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-22.C'
    sources: {binary: Wparentheses-22.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-22_335:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-22.C'
    sources: {binary: Wparentheses-22.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-23_1805:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-23.C'
    sources: {binary: Wparentheses-23.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-23_1806:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-23.C'
    sources: {binary: Wparentheses-23.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-23_1807:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-23.C'
    sources: {binary: Wparentheses-23.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-23_336:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-23.C'
    sources: {binary: Wparentheses-23.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-23_337:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-23.C'
    sources: {binary: Wparentheses-23.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-23_338:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-23.C'
    sources: {binary: Wparentheses-23.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("assignment")[^\n]*\n?)+'}
test_Wparentheses-24_1808:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-24.C'
    sources: {binary: Wparentheses-24.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-24_1809:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-24.C'
    sources: {binary: Wparentheses-24.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-24_1810:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-24.C'
    sources: {binary: Wparentheses-24.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-24_339:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-24.C'
    sources: {binary: Wparentheses-24.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-24_340:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-24.C'
    sources: {binary: Wparentheses-24.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-24_341:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-24.C'
    sources: {binary: Wparentheses-24.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-25_1811:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-25.C'
    sources: {binary: Wparentheses-25.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L162: {expect: true, expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L163: {expect: true, expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L164: {expect: true, expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L165: {expect: true, expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L166: {expect: true, expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L170: {expect: true, expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L171: {expect: true, expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L175: {expect: true, expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L176: {expect: true, expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L179: {expect: true, expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L181: {expect: true, expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L182: {expect: true, expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L185: {expect: true, expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L189: {expect: true, expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L190: {expect: true, expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L191: {expect: true, expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L194: {expect: true, expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L198: {expect: true, expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L199: {expect: true, expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L200: {expect: true, expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L203: {expect: true, expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L204: {expect: true, expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L205: {expect: true, expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L206: {expect: true, expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L207: {expect: true, expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L208: {expect: true, expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L210: {expect: true, expr: '(^|\n)([^\n]+(:210:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-25_1812:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-25.C'
    sources: {binary: Wparentheses-25.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L162: {expect: true, expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L163: {expect: true, expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L164: {expect: true, expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L165: {expect: true, expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L166: {expect: true, expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L170: {expect: true, expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L171: {expect: true, expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L175: {expect: true, expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L176: {expect: true, expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L179: {expect: true, expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L181: {expect: true, expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L182: {expect: true, expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L185: {expect: true, expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L189: {expect: true, expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L190: {expect: true, expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L191: {expect: true, expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L194: {expect: true, expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L198: {expect: true, expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L199: {expect: true, expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L200: {expect: true, expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L203: {expect: true, expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L204: {expect: true, expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L205: {expect: true, expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L206: {expect: true, expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L207: {expect: true, expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L208: {expect: true, expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L210: {expect: true, expr: '(^|\n)([^\n]+(:210:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-25_1813:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-25.C'
    sources: {binary: Wparentheses-25.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L162: {expect: true, expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L163: {expect: true, expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L164: {expect: true, expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L165: {expect: true, expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L166: {expect: true, expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L170: {expect: true, expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L171: {expect: true, expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L175: {expect: true, expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L176: {expect: true, expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L179: {expect: true, expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L181: {expect: true, expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L182: {expect: true, expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L185: {expect: true, expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L189: {expect: true, expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L190: {expect: true, expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L191: {expect: true, expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L194: {expect: true, expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L198: {expect: true, expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L199: {expect: true, expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L200: {expect: true, expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L203: {expect: true, expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L204: {expect: true, expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L205: {expect: true, expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L206: {expect: true, expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L207: {expect: true, expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L208: {expect: true, expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L210: {expect: true, expr: '(^|\n)([^\n]+(:210:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-25_342:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-25.C'
    sources: {binary: Wparentheses-25.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L162: {expect: true, expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L163: {expect: true, expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L164: {expect: true, expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L165: {expect: true, expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L166: {expect: true, expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L170: {expect: true, expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L171: {expect: true, expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L175: {expect: true, expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L176: {expect: true, expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L179: {expect: true, expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L181: {expect: true, expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L182: {expect: true, expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L185: {expect: true, expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L189: {expect: true, expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L190: {expect: true, expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L191: {expect: true, expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L194: {expect: true, expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L198: {expect: true, expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L199: {expect: true, expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L200: {expect: true, expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L203: {expect: true, expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L204: {expect: true, expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L205: {expect: true, expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L206: {expect: true, expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L207: {expect: true, expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L208: {expect: true, expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L210: {expect: true, expr: '(^|\n)([^\n]+(:210:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-25_343:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-25.C'
    sources: {binary: Wparentheses-25.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L162: {expect: true, expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L163: {expect: true, expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L164: {expect: true, expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L165: {expect: true, expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L166: {expect: true, expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L170: {expect: true, expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L171: {expect: true, expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L175: {expect: true, expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L176: {expect: true, expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L179: {expect: true, expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L181: {expect: true, expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L182: {expect: true, expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L185: {expect: true, expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L189: {expect: true, expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L190: {expect: true, expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L191: {expect: true, expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L194: {expect: true, expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L198: {expect: true, expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L199: {expect: true, expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L200: {expect: true, expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L203: {expect: true, expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L204: {expect: true, expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L205: {expect: true, expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L206: {expect: true, expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L207: {expect: true, expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L208: {expect: true, expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L210: {expect: true, expr: '(^|\n)([^\n]+(:210:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-25_344:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-25.C'
    sources: {binary: Wparentheses-25.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L162: {expect: true, expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L163: {expect: true, expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L164: {expect: true, expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L165: {expect: true, expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L166: {expect: true, expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L167: {expect: true, expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L169: {expect: true, expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L170: {expect: true, expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L171: {expect: true, expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L175: {expect: true, expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L176: {expect: true, expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L177: {expect: true, expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L179: {expect: true, expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L181: {expect: true, expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L182: {expect: true, expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L183: {expect: true, expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L185: {expect: true, expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L189: {expect: true, expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L190: {expect: true, expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L191: {expect: true, expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L194: {expect: true, expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L198: {expect: true, expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L199: {expect: true, expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L200: {expect: true, expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L203: {expect: true, expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L204: {expect: true, expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L205: {expect: true, expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L206: {expect: true, expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L207: {expect: true, expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L208: {expect: true, expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L209: {expect: true, expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L210: {expect: true, expr: '(^|\n)([^\n]+(:210:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-26_1814:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-26.C'
    sources: {binary: Wparentheses-26.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around \''\\\\+\''")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around arithmetic")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around arithmetic")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around \''\\\\+\''")[^\n]*\n?)+'}
test_Wparentheses-26_1815:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-26.C'
    sources: {binary: Wparentheses-26.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around \''\\\\+\''")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around arithmetic")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around arithmetic")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around \''\\\\+\''")[^\n]*\n?)+'}
test_Wparentheses-26_1816:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-26.C'
    sources: {binary: Wparentheses-26.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around \''\\\\+\''")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around arithmetic")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around arithmetic")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around \''\\\\+\''")[^\n]*\n?)+'}
test_Wparentheses-26_345:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-26.C'
    sources: {binary: Wparentheses-26.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around \''\\\\+\''")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around arithmetic")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around arithmetic")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around \''\\\\+\''")[^\n]*\n?)+'}
test_Wparentheses-26_346:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-26.C'
    sources: {binary: Wparentheses-26.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around \''\\\\+\''")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around arithmetic")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around arithmetic")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around \''\\\\+\''")[^\n]*\n?)+'}
test_Wparentheses-26_347:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-26.C'
    sources: {binary: Wparentheses-26.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around \''\\\\+\''")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around arithmetic")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around arithmetic")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses around \''\\\\+\''")[^\n]*\n?)+'}
test_Wparentheses-27_1817:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-27.C'
    sources: {binary: Wparentheses-27.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("17:suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-27_1818:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-27.C'
    sources: {binary: Wparentheses-27.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("17:suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-27_1819:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-27.C'
    sources: {binary: Wparentheses-27.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("17:suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-27_348:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-27.C'
    sources: {binary: Wparentheses-27.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("17:suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-27_349:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-27.C'
    sources: {binary: Wparentheses-27.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("17:suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-27_350:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-27.C'
    sources: {binary: Wparentheses-27.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("17:suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-28_1820:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-28.C'
    sources: {binary: Wparentheses-28.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-28_1821:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-28.C'
    sources: {binary: Wparentheses-28.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-28_1822:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-28.C'
    sources: {binary: Wparentheses-28.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-28_351:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-28.C'
    sources: {binary: Wparentheses-28.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-28_352:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-28.C'
    sources: {binary: Wparentheses-28.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-28_353:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-28.C'
    sources: {binary: Wparentheses-28.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-29_1823:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-29.C'
    sources: {binary: Wparentheses-29.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-29_1824:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-29.C'
    sources: {binary: Wparentheses-29.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-29_1825:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-29.C'
    sources: {binary: Wparentheses-29.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-29_354:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-29.C'
    sources: {binary: Wparentheses-29.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-29_355:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-29.C'
    sources: {binary: Wparentheses-29.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-29_356:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-29.C'
    sources: {binary: Wparentheses-29.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("ambiguous")[^\n]*\n?)+'}
test_Wparentheses-2_1793:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-2.C'
    sources: {binary: Wparentheses-2.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-2_1794:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-2.C'
    sources: {binary: Wparentheses-2.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-2_1795:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-2.C'
    sources: {binary: Wparentheses-2.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-2_324:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-2.C'
    sources: {binary: Wparentheses-2.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-2_325:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-2.C'
    sources: {binary: Wparentheses-2.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-2_326:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-2.C'
    sources: {binary: Wparentheses-2.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-30_1829:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-30.C'
    sources: {binary: Wparentheses-30.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("9:suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-30_1830:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-30.C'
    sources: {binary: Wparentheses-30.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("9:suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-30_1831:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-30.C'
    sources: {binary: Wparentheses-30.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("9:suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-30_360:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-30.C'
    sources: {binary: Wparentheses-30.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("9:suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-30_361:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-30.C'
    sources: {binary: Wparentheses-30.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("9:suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-30_362:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-30.C'
    sources: {binary: Wparentheses-30.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("9:suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-3_1826:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-3.C'
    sources: {binary: Wparentheses-3.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-3_1827:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-3.C'
    sources: {binary: Wparentheses-3.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-3_1828:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-3.C'
    sources: {binary: Wparentheses-3.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-3_357:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-3.C'
    sources: {binary: Wparentheses-3.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-3_358:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-3.C'
    sources: {binary: Wparentheses-3.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-3_359:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-3.C'
    sources: {binary: Wparentheses-3.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-4_1832:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-4.C'
    sources: {binary: Wparentheses-4.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-4_1833:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-4.C'
    sources: {binary: Wparentheses-4.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-4_1834:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-4.C'
    sources: {binary: Wparentheses-4.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-4_363:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-4.C'
    sources: {binary: Wparentheses-4.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-4_364:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-4.C'
    sources: {binary: Wparentheses-4.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-4_365:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-4.C'
    sources: {binary: Wparentheses-4.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
test_Wparentheses-5_1835:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-5.C'
    sources: {binary: Wparentheses-5.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-5_1836:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-5.C'
    sources: {binary: Wparentheses-5.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-5_1837:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-5.C'
    sources: {binary: Wparentheses-5.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-5_366:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-5.C'
    sources: {binary: Wparentheses-5.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-5_367:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-5.C'
    sources: {binary: Wparentheses-5.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-5_368:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-5.C'
    sources: {binary: Wparentheses-5.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
test_Wparentheses-6_1838:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-6.C'
    sources: {binary: Wparentheses-6.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
test_Wparentheses-6_1839:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-6.C'
    sources: {binary: Wparentheses-6.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
test_Wparentheses-6_1840:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-6.C'
    sources: {binary: Wparentheses-6.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
test_Wparentheses-6_369:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-6.C'
    sources: {binary: Wparentheses-6.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
test_Wparentheses-6_370:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-6.C'
    sources: {binary: Wparentheses-6.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
test_Wparentheses-6_371:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-6.C'
    sources: {binary: Wparentheses-6.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("comparison")[^\n]*\n?)+'}
test_Wparentheses-7_1841:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-7.C'
    sources: {binary: Wparentheses-7.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-7_1842:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-7.C'
    sources: {binary: Wparentheses-7.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-7_1843:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-7.C'
    sources: {binary: Wparentheses-7.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-7_372:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-7.C'
    sources: {binary: Wparentheses-7.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-7_373:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-7.C'
    sources: {binary: Wparentheses-7.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-7_374:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-7.C'
    sources: {binary: Wparentheses-7.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-8_1844:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-8.C'
    sources: {binary: Wparentheses-8.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-8_1845:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-8.C'
    sources: {binary: Wparentheses-8.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-8_1846:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-8.C'
    sources: {binary: Wparentheses-8.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-8_375:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-8.C'
    sources: {binary: Wparentheses-8.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-8_376:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-8.C'
    sources: {binary: Wparentheses-8.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-8_377:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-8.C'
    sources: {binary: Wparentheses-8.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-9_1847:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-9.C'
    sources: {binary: Wparentheses-9.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-9_1848:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-9.C'
    sources: {binary: Wparentheses-9.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-9_1849:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-9.C'
    sources: {binary: Wparentheses-9.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-9_378:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-9.C'
    sources: {binary: Wparentheses-9.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-9_379:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-9.C'
    sources: {binary: Wparentheses-9.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wparentheses-9_380:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wparentheses-9.C'
    sources: {binary: Wparentheses-9.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("parentheses")[^\n]*\n?)+'}
test_Wplacement-new-size-1_1850:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-1.C'
    sources: {binary: Wplacement-new-size-1.s, cflags: "-std=gnu++98 -Wno-pedantic
        -Wplacement-new=1\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L137: {expect: true, expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size-1_1851:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-1.C'
    sources: {binary: Wplacement-new-size-1.s, cflags: "-std=gnu++11 -Wno-pedantic
        -Wplacement-new=1\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L137: {expect: true, expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size-1_1852:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-1.C'
    sources: {binary: Wplacement-new-size-1.s, cflags: "-std=gnu++14 -Wno-pedantic
        -Wplacement-new=1\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L137: {expect: true, expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size-1_381:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-1.C'
    sources: {binary: Wplacement-new-size-1.s, cflags: "-std=gnu++98 -Wno-pedantic
        -Wplacement-new=1\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L137: {expect: true, expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size-1_382:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-1.C'
    sources: {binary: Wplacement-new-size-1.s, cflags: "-std=gnu++11 -Wno-pedantic
        -Wplacement-new=1\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L137: {expect: true, expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size-1_383:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-1.C'
    sources: {binary: Wplacement-new-size-1.s, cflags: "-std=gnu++14 -Wno-pedantic
        -Wplacement-new=1\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L137: {expect: true, expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size-2_1853:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-2.C'
    sources: {binary: Wplacement-new-size-2.s, cflags: "-std=gnu++98 -Wno-pedantic
        -Wplacement-new=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L115: {expect: true, expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L127: {expect: true, expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L147: {expect: true, expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L148: {expect: true, expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L160: {expect: true, expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L171: {expect: true, expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L194: {expect: true, expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size-2_1854:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-2.C'
    sources: {binary: Wplacement-new-size-2.s, cflags: "-std=gnu++11 -Wno-pedantic
        -Wplacement-new=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L115: {expect: true, expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L127: {expect: true, expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L147: {expect: true, expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L148: {expect: true, expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L160: {expect: true, expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L171: {expect: true, expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L194: {expect: true, expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size-2_1855:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-2.C'
    sources: {binary: Wplacement-new-size-2.s, cflags: "-std=gnu++14 -Wno-pedantic
        -Wplacement-new=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L115: {expect: true, expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L127: {expect: true, expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L147: {expect: true, expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L148: {expect: true, expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L160: {expect: true, expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L171: {expect: true, expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L194: {expect: true, expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size-2_384:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-2.C'
    sources: {binary: Wplacement-new-size-2.s, cflags: "-std=gnu++98 -Wno-pedantic
        -Wplacement-new=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L115: {expect: true, expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L127: {expect: true, expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L147: {expect: true, expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L148: {expect: true, expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L160: {expect: true, expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L171: {expect: true, expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L194: {expect: true, expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size-2_385:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-2.C'
    sources: {binary: Wplacement-new-size-2.s, cflags: "-std=gnu++11 -Wno-pedantic
        -Wplacement-new=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L115: {expect: true, expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L127: {expect: true, expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L147: {expect: true, expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L148: {expect: true, expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L160: {expect: true, expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L171: {expect: true, expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L194: {expect: true, expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size-2_386:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-2.C'
    sources: {binary: Wplacement-new-size-2.s, cflags: "-std=gnu++14 -Wno-pedantic
        -Wplacement-new=2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L115: {expect: true, expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L127: {expect: true, expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L146: {expect: true, expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L147: {expect: true, expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L148: {expect: true, expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L160: {expect: true, expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L171: {expect: true, expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L187: {expect: true, expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L194: {expect: true, expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L75: {expect: true, expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size-3_1856:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-3.C'
    sources: {binary: Wplacement-new-size-3.s, cflags: "-std=gnu++98 -Wplacement-new\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new")[^\n]*\n?)+'}
test_Wplacement-new-size-3_1857:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-3.C'
    sources: {binary: Wplacement-new-size-3.s, cflags: "-std=gnu++11 -Wplacement-new\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new")[^\n]*\n?)+'}
test_Wplacement-new-size-3_1858:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-3.C'
    sources: {binary: Wplacement-new-size-3.s, cflags: "-std=gnu++14 -Wplacement-new\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new")[^\n]*\n?)+'}
test_Wplacement-new-size-3_387:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-3.C'
    sources: {binary: Wplacement-new-size-3.s, cflags: "-std=gnu++98 -Wplacement-new\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new")[^\n]*\n?)+'}
test_Wplacement-new-size-3_388:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-3.C'
    sources: {binary: Wplacement-new-size-3.s, cflags: "-std=gnu++11 -Wplacement-new\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new")[^\n]*\n?)+'}
test_Wplacement-new-size-3_389:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-3.C'
    sources: {binary: Wplacement-new-size-3.s, cflags: "-std=gnu++14 -Wplacement-new\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new")[^\n]*\n?)+'}
test_Wplacement-new-size-4_1859:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-4.C'
    sources: {binary: Wplacement-new-size-4.s, cflags: "-std=c++98 -pedantic-errors
        -Wno-long-long -Wplacement-new -Wvla -Wno-error=vla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("non-constant
          array new length must be specified without parentheses around the type-id")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ forbids variable length array")[^\n]*\n?)+'}
test_Wplacement-new-size-4_1860:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-4.C'
    sources: {binary: Wplacement-new-size-4.s, cflags: "-std=c++11 -pedantic-errors
        -Wno-long-long -Wplacement-new -Wvla -Wno-error=vla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("non-constant
          array new length must be specified without parentheses around the type-id")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ forbids variable length array")[^\n]*\n?)+'}
test_Wplacement-new-size-4_1861:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-4.C'
    sources: {binary: Wplacement-new-size-4.s, cflags: "-std=c++14 -pedantic-errors
        -Wno-long-long -Wplacement-new -Wvla -Wno-error=vla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("non-constant
          array new length must be specified without parentheses around the type-id")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ forbids variable length array")[^\n]*\n?)+'}
test_Wplacement-new-size-4_390:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-4.C'
    sources: {binary: Wplacement-new-size-4.s, cflags: "-std=c++98 -pedantic-errors
        -Wno-long-long -Wplacement-new -Wvla -Wno-error=vla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("non-constant
          array new length must be specified without parentheses around the type-id")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ forbids variable length array")[^\n]*\n?)+'}
test_Wplacement-new-size-4_391:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-4.C'
    sources: {binary: Wplacement-new-size-4.s, cflags: "-std=c++11 -pedantic-errors
        -Wno-long-long -Wplacement-new -Wvla -Wno-error=vla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("non-constant
          array new length must be specified without parentheses around the type-id")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ forbids variable length array")[^\n]*\n?)+'}
test_Wplacement-new-size-4_392:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size-4.C'
    sources: {binary: Wplacement-new-size-4.s, cflags: "-std=c++14 -pedantic-errors
        -Wno-long-long -Wplacement-new -Wvla -Wno-error=vla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("non-constant
          array new length must be specified without parentheses around the type-id")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ forbids variable length array")[^\n]*\n?)+'}
test_Wplacement-new-size_1862:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size.C'
    sources: {binary: Wplacement-new-size.s, cflags: "-std=gnu++98 -Wplacement-new
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L121: {expect: true, expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L124: {expect: true, expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L125: {expect: true, expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L127: {expect: true, expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L143: {expect: true, expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L150: {expect: true, expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L160: {expect: true, expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L166: {expect: true, expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L170: {expect: true, expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L179: {expect: true, expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L185: {expect: true, expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L190: {expect: true, expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L200: {expect: true, expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L203: {expect: true, expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L205: {expect: true, expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L213: {expect: true, expr: '(^|\n)([^\n]+(:213:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L214: {expect: true, expr: '(^|\n)([^\n]+(:214:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L217: {expect: true, expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L218: {expect: true, expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L219: {expect: true, expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L220: {expect: true, expr: '(^|\n)([^\n]+(:220:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L221: {expect: true, expr: '(^|\n)([^\n]+(:221:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+(:222:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L223: {expect: true, expr: '(^|\n)([^\n]+(:223:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L224: {expect: true, expr: '(^|\n)([^\n]+(:224:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L228: {expect: true, expr: '(^|\n)([^\n]+(:228:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L231: {expect: true, expr: '(^|\n)([^\n]+(:231:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L235: {expect: true, expr: '(^|\n)([^\n]+(:235:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L236: {expect: true, expr: '(^|\n)([^\n]+(:236:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L237: {expect: true, expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L243: {expect: true, expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L244: {expect: true, expr: '(^|\n)([^\n]+(:244:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L245: {expect: true, expr: '(^|\n)([^\n]+(:245:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L246: {expect: true, expr: '(^|\n)([^\n]+(:246:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L251: {expect: true, expr: '(^|\n)([^\n]+(:251:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L252: {expect: true, expr: '(^|\n)([^\n]+(:252:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L257: {expect: true, expr: '(^|\n)([^\n]+(:257:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L262: {expect: true, expr: '(^|\n)([^\n]+(:262:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L272: {expect: true, expr: '(^|\n)([^\n]+(:272:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L275: {expect: true, expr: '(^|\n)([^\n]+(:275:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L278: {expect: true, expr: '(^|\n)([^\n]+(:278:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L279: {expect: true, expr: '(^|\n)([^\n]+(:279:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L281: {expect: true, expr: '(^|\n)([^\n]+(:281:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L282: {expect: true, expr: '(^|\n)([^\n]+(:282:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L285: {expect: true, expr: '(^|\n)([^\n]+(:285:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L288: {expect: true, expr: '(^|\n)([^\n]+(:288:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L289: {expect: true, expr: '(^|\n)([^\n]+(:289:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L290: {expect: true, expr: '(^|\n)([^\n]+(:290:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L291: {expect: true, expr: '(^|\n)([^\n]+(:291:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L302: {expect: true, expr: '(^|\n)([^\n]+(:302:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L304: {expect: true, expr: '(^|\n)([^\n]+(:304:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L307: {expect: true, expr: '(^|\n)([^\n]+(:307:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L308: {expect: true, expr: '(^|\n)([^\n]+(:308:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L309: {expect: true, expr: '(^|\n)([^\n]+(:309:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L310: {expect: true, expr: '(^|\n)([^\n]+(:310:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L314: {expect: true, expr: '(^|\n)([^\n]+(:314:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L317: {expect: true, expr: '(^|\n)([^\n]+(:317:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L318: {expect: true, expr: '(^|\n)([^\n]+(:318:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L319: {expect: true, expr: '(^|\n)([^\n]+(:319:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L320: {expect: true, expr: '(^|\n)([^\n]+(:320:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L321: {expect: true, expr: '(^|\n)([^\n]+(:321:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L323: {expect: true, expr: '(^|\n)([^\n]+(:323:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L324: {expect: true, expr: '(^|\n)([^\n]+(:324:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L325: {expect: true, expr: '(^|\n)([^\n]+(:325:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L327: {expect: true, expr: '(^|\n)([^\n]+(:327:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L329: {expect: true, expr: '(^|\n)([^\n]+(:329:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L330: {expect: true, expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L331: {expect: true, expr: '(^|\n)([^\n]+(:331:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L337: {expect: true, expr: '(^|\n)([^\n]+(:337:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L339: {expect: true, expr: '(^|\n)([^\n]+(:339:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L352: {expect: true, expr: '(^|\n)([^\n]+(:352:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an object of type .S. and size .2. in a region of type
          .char \\\\\\[2\\\\\\]. and size .1.")[^\n]*\n?)+'}
      L358: {expect: true, expr: '(^|\n)([^\n]+(:358:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an array of objects of type .S. and size .2. in a region
          of type .char \\\\\\[2\\\\\\]. and size .1.")[^\n]*\n?)+'}
      L362: {expect: true, expr: '(^|\n)([^\n]+(:362:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an object of type .S \\\\\\[2\\\\\\]. and size .4. in a
          region of type .char \\\\\\[2\\\\\\]. and size at most .2.")[^\n]*\n?)+'}
      L407: {expect: true, expr: '(^|\n)([^\n]+(:407:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L450: {expect: true, expr: '(^|\n)([^\n]+(:450:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L451: {expect: true, expr: '(^|\n)([^\n]+(:451:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L453: {expect: true, expr: '(^|\n)([^\n]+(:453:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L454: {expect: true, expr: '(^|\n)([^\n]+(:454:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size_1863:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size.C'
    sources: {binary: Wplacement-new-size.s, cflags: "-std=gnu++11 -Wplacement-new
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L121: {expect: true, expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L124: {expect: true, expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L125: {expect: true, expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L127: {expect: true, expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L143: {expect: true, expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L150: {expect: true, expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L160: {expect: true, expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L166: {expect: true, expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L170: {expect: true, expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L179: {expect: true, expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L185: {expect: true, expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L190: {expect: true, expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L200: {expect: true, expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L203: {expect: true, expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L205: {expect: true, expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L213: {expect: true, expr: '(^|\n)([^\n]+(:213:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L214: {expect: true, expr: '(^|\n)([^\n]+(:214:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L217: {expect: true, expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L218: {expect: true, expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L219: {expect: true, expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L220: {expect: true, expr: '(^|\n)([^\n]+(:220:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L221: {expect: true, expr: '(^|\n)([^\n]+(:221:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+(:222:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L223: {expect: true, expr: '(^|\n)([^\n]+(:223:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L224: {expect: true, expr: '(^|\n)([^\n]+(:224:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L228: {expect: true, expr: '(^|\n)([^\n]+(:228:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L231: {expect: true, expr: '(^|\n)([^\n]+(:231:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L235: {expect: true, expr: '(^|\n)([^\n]+(:235:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L236: {expect: true, expr: '(^|\n)([^\n]+(:236:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L237: {expect: true, expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L243: {expect: true, expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L244: {expect: true, expr: '(^|\n)([^\n]+(:244:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L245: {expect: true, expr: '(^|\n)([^\n]+(:245:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L246: {expect: true, expr: '(^|\n)([^\n]+(:246:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L251: {expect: true, expr: '(^|\n)([^\n]+(:251:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L252: {expect: true, expr: '(^|\n)([^\n]+(:252:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L257: {expect: true, expr: '(^|\n)([^\n]+(:257:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L262: {expect: true, expr: '(^|\n)([^\n]+(:262:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L272: {expect: true, expr: '(^|\n)([^\n]+(:272:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L275: {expect: true, expr: '(^|\n)([^\n]+(:275:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L278: {expect: true, expr: '(^|\n)([^\n]+(:278:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L279: {expect: true, expr: '(^|\n)([^\n]+(:279:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L281: {expect: true, expr: '(^|\n)([^\n]+(:281:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L282: {expect: true, expr: '(^|\n)([^\n]+(:282:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L285: {expect: true, expr: '(^|\n)([^\n]+(:285:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L288: {expect: true, expr: '(^|\n)([^\n]+(:288:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L289: {expect: true, expr: '(^|\n)([^\n]+(:289:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L290: {expect: true, expr: '(^|\n)([^\n]+(:290:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L291: {expect: true, expr: '(^|\n)([^\n]+(:291:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L302: {expect: true, expr: '(^|\n)([^\n]+(:302:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L304: {expect: true, expr: '(^|\n)([^\n]+(:304:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L307: {expect: true, expr: '(^|\n)([^\n]+(:307:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L308: {expect: true, expr: '(^|\n)([^\n]+(:308:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L309: {expect: true, expr: '(^|\n)([^\n]+(:309:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L310: {expect: true, expr: '(^|\n)([^\n]+(:310:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L314: {expect: true, expr: '(^|\n)([^\n]+(:314:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L317: {expect: true, expr: '(^|\n)([^\n]+(:317:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L318: {expect: true, expr: '(^|\n)([^\n]+(:318:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L319: {expect: true, expr: '(^|\n)([^\n]+(:319:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L320: {expect: true, expr: '(^|\n)([^\n]+(:320:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L321: {expect: true, expr: '(^|\n)([^\n]+(:321:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L323: {expect: true, expr: '(^|\n)([^\n]+(:323:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L324: {expect: true, expr: '(^|\n)([^\n]+(:324:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L325: {expect: true, expr: '(^|\n)([^\n]+(:325:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L327: {expect: true, expr: '(^|\n)([^\n]+(:327:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L329: {expect: true, expr: '(^|\n)([^\n]+(:329:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L330: {expect: true, expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L331: {expect: true, expr: '(^|\n)([^\n]+(:331:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L337: {expect: true, expr: '(^|\n)([^\n]+(:337:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L339: {expect: true, expr: '(^|\n)([^\n]+(:339:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L352: {expect: true, expr: '(^|\n)([^\n]+(:352:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an object of type .S. and size .2. in a region of type
          .char \\\\\\[2\\\\\\]. and size .1.")[^\n]*\n?)+'}
      L358: {expect: true, expr: '(^|\n)([^\n]+(:358:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an array of objects of type .S. and size .2. in a region
          of type .char \\\\\\[2\\\\\\]. and size .1.")[^\n]*\n?)+'}
      L362: {expect: true, expr: '(^|\n)([^\n]+(:362:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an object of type .S \\\\\\[2\\\\\\]. and size .4. in a
          region of type .char \\\\\\[2\\\\\\]. and size at most .2.")[^\n]*\n?)+'}
      L407: {expect: true, expr: '(^|\n)([^\n]+(:407:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L450: {expect: true, expr: '(^|\n)([^\n]+(:450:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L451: {expect: true, expr: '(^|\n)([^\n]+(:451:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L453: {expect: true, expr: '(^|\n)([^\n]+(:453:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L454: {expect: true, expr: '(^|\n)([^\n]+(:454:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size_1864:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size.C'
    sources: {binary: Wplacement-new-size.s, cflags: "-std=gnu++14 -Wplacement-new
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L121: {expect: true, expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L124: {expect: true, expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L125: {expect: true, expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L127: {expect: true, expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L143: {expect: true, expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L150: {expect: true, expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L160: {expect: true, expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L166: {expect: true, expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L170: {expect: true, expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L179: {expect: true, expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L185: {expect: true, expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L190: {expect: true, expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L200: {expect: true, expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L203: {expect: true, expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L205: {expect: true, expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L213: {expect: true, expr: '(^|\n)([^\n]+(:213:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L214: {expect: true, expr: '(^|\n)([^\n]+(:214:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L217: {expect: true, expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L218: {expect: true, expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L219: {expect: true, expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L220: {expect: true, expr: '(^|\n)([^\n]+(:220:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L221: {expect: true, expr: '(^|\n)([^\n]+(:221:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+(:222:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L223: {expect: true, expr: '(^|\n)([^\n]+(:223:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L224: {expect: true, expr: '(^|\n)([^\n]+(:224:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L228: {expect: true, expr: '(^|\n)([^\n]+(:228:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L231: {expect: true, expr: '(^|\n)([^\n]+(:231:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L235: {expect: true, expr: '(^|\n)([^\n]+(:235:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L236: {expect: true, expr: '(^|\n)([^\n]+(:236:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L237: {expect: true, expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L243: {expect: true, expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L244: {expect: true, expr: '(^|\n)([^\n]+(:244:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L245: {expect: true, expr: '(^|\n)([^\n]+(:245:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L246: {expect: true, expr: '(^|\n)([^\n]+(:246:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L251: {expect: true, expr: '(^|\n)([^\n]+(:251:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L252: {expect: true, expr: '(^|\n)([^\n]+(:252:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L257: {expect: true, expr: '(^|\n)([^\n]+(:257:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L262: {expect: true, expr: '(^|\n)([^\n]+(:262:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L272: {expect: true, expr: '(^|\n)([^\n]+(:272:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L275: {expect: true, expr: '(^|\n)([^\n]+(:275:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L278: {expect: true, expr: '(^|\n)([^\n]+(:278:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L279: {expect: true, expr: '(^|\n)([^\n]+(:279:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L281: {expect: true, expr: '(^|\n)([^\n]+(:281:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L282: {expect: true, expr: '(^|\n)([^\n]+(:282:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L285: {expect: true, expr: '(^|\n)([^\n]+(:285:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L288: {expect: true, expr: '(^|\n)([^\n]+(:288:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L289: {expect: true, expr: '(^|\n)([^\n]+(:289:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L290: {expect: true, expr: '(^|\n)([^\n]+(:290:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L291: {expect: true, expr: '(^|\n)([^\n]+(:291:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L302: {expect: true, expr: '(^|\n)([^\n]+(:302:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L304: {expect: true, expr: '(^|\n)([^\n]+(:304:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L307: {expect: true, expr: '(^|\n)([^\n]+(:307:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L308: {expect: true, expr: '(^|\n)([^\n]+(:308:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L309: {expect: true, expr: '(^|\n)([^\n]+(:309:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L310: {expect: true, expr: '(^|\n)([^\n]+(:310:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L314: {expect: true, expr: '(^|\n)([^\n]+(:314:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L317: {expect: true, expr: '(^|\n)([^\n]+(:317:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L318: {expect: true, expr: '(^|\n)([^\n]+(:318:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L319: {expect: true, expr: '(^|\n)([^\n]+(:319:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L320: {expect: true, expr: '(^|\n)([^\n]+(:320:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L321: {expect: true, expr: '(^|\n)([^\n]+(:321:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L323: {expect: true, expr: '(^|\n)([^\n]+(:323:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L324: {expect: true, expr: '(^|\n)([^\n]+(:324:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L325: {expect: true, expr: '(^|\n)([^\n]+(:325:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L327: {expect: true, expr: '(^|\n)([^\n]+(:327:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L329: {expect: true, expr: '(^|\n)([^\n]+(:329:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L330: {expect: true, expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L331: {expect: true, expr: '(^|\n)([^\n]+(:331:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L337: {expect: true, expr: '(^|\n)([^\n]+(:337:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L339: {expect: true, expr: '(^|\n)([^\n]+(:339:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L352: {expect: true, expr: '(^|\n)([^\n]+(:352:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an object of type .S. and size .2. in a region of type
          .char \\\\\\[2\\\\\\]. and size .1.")[^\n]*\n?)+'}
      L358: {expect: true, expr: '(^|\n)([^\n]+(:358:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an array of objects of type .S. and size .2. in a region
          of type .char \\\\\\[2\\\\\\]. and size .1.")[^\n]*\n?)+'}
      L362: {expect: true, expr: '(^|\n)([^\n]+(:362:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an object of type .S \\\\\\[2\\\\\\]. and size .4. in a
          region of type .char \\\\\\[2\\\\\\]. and size at most .2.")[^\n]*\n?)+'}
      L407: {expect: true, expr: '(^|\n)([^\n]+(:407:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L450: {expect: true, expr: '(^|\n)([^\n]+(:450:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L451: {expect: true, expr: '(^|\n)([^\n]+(:451:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L453: {expect: true, expr: '(^|\n)([^\n]+(:453:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L454: {expect: true, expr: '(^|\n)([^\n]+(:454:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size_393:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size.C'
    sources: {binary: Wplacement-new-size.s, cflags: "-std=gnu++98 -Wplacement-new
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L121: {expect: true, expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L124: {expect: true, expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L125: {expect: true, expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L127: {expect: true, expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L143: {expect: true, expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L150: {expect: true, expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L160: {expect: true, expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L166: {expect: true, expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L170: {expect: true, expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L179: {expect: true, expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L185: {expect: true, expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L190: {expect: true, expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L200: {expect: true, expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L203: {expect: true, expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L205: {expect: true, expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L213: {expect: true, expr: '(^|\n)([^\n]+(:213:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L214: {expect: true, expr: '(^|\n)([^\n]+(:214:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L217: {expect: true, expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L218: {expect: true, expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L219: {expect: true, expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L220: {expect: true, expr: '(^|\n)([^\n]+(:220:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L221: {expect: true, expr: '(^|\n)([^\n]+(:221:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+(:222:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L223: {expect: true, expr: '(^|\n)([^\n]+(:223:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L224: {expect: true, expr: '(^|\n)([^\n]+(:224:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L228: {expect: true, expr: '(^|\n)([^\n]+(:228:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L231: {expect: true, expr: '(^|\n)([^\n]+(:231:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L235: {expect: true, expr: '(^|\n)([^\n]+(:235:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L236: {expect: true, expr: '(^|\n)([^\n]+(:236:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L237: {expect: true, expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L243: {expect: true, expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L244: {expect: true, expr: '(^|\n)([^\n]+(:244:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L245: {expect: true, expr: '(^|\n)([^\n]+(:245:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L246: {expect: true, expr: '(^|\n)([^\n]+(:246:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L251: {expect: true, expr: '(^|\n)([^\n]+(:251:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L252: {expect: true, expr: '(^|\n)([^\n]+(:252:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L257: {expect: true, expr: '(^|\n)([^\n]+(:257:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L262: {expect: true, expr: '(^|\n)([^\n]+(:262:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L272: {expect: true, expr: '(^|\n)([^\n]+(:272:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L275: {expect: true, expr: '(^|\n)([^\n]+(:275:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L278: {expect: true, expr: '(^|\n)([^\n]+(:278:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L279: {expect: true, expr: '(^|\n)([^\n]+(:279:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L281: {expect: true, expr: '(^|\n)([^\n]+(:281:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L282: {expect: true, expr: '(^|\n)([^\n]+(:282:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L285: {expect: true, expr: '(^|\n)([^\n]+(:285:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L288: {expect: true, expr: '(^|\n)([^\n]+(:288:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L289: {expect: true, expr: '(^|\n)([^\n]+(:289:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L290: {expect: true, expr: '(^|\n)([^\n]+(:290:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L291: {expect: true, expr: '(^|\n)([^\n]+(:291:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L302: {expect: true, expr: '(^|\n)([^\n]+(:302:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L304: {expect: true, expr: '(^|\n)([^\n]+(:304:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L307: {expect: true, expr: '(^|\n)([^\n]+(:307:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L308: {expect: true, expr: '(^|\n)([^\n]+(:308:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L309: {expect: true, expr: '(^|\n)([^\n]+(:309:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L310: {expect: true, expr: '(^|\n)([^\n]+(:310:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L314: {expect: true, expr: '(^|\n)([^\n]+(:314:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L317: {expect: true, expr: '(^|\n)([^\n]+(:317:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L318: {expect: true, expr: '(^|\n)([^\n]+(:318:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L319: {expect: true, expr: '(^|\n)([^\n]+(:319:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L320: {expect: true, expr: '(^|\n)([^\n]+(:320:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L321: {expect: true, expr: '(^|\n)([^\n]+(:321:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L323: {expect: true, expr: '(^|\n)([^\n]+(:323:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L324: {expect: true, expr: '(^|\n)([^\n]+(:324:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L325: {expect: true, expr: '(^|\n)([^\n]+(:325:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L327: {expect: true, expr: '(^|\n)([^\n]+(:327:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L329: {expect: true, expr: '(^|\n)([^\n]+(:329:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L330: {expect: true, expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L331: {expect: true, expr: '(^|\n)([^\n]+(:331:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L337: {expect: true, expr: '(^|\n)([^\n]+(:337:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L339: {expect: true, expr: '(^|\n)([^\n]+(:339:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L352: {expect: true, expr: '(^|\n)([^\n]+(:352:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an object of type .S. and size .2. in a region of type
          .char \\\\\\[2\\\\\\]. and size .1.")[^\n]*\n?)+'}
      L358: {expect: true, expr: '(^|\n)([^\n]+(:358:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an array of objects of type .S. and size .2. in a region
          of type .char \\\\\\[2\\\\\\]. and size .1.")[^\n]*\n?)+'}
      L362: {expect: true, expr: '(^|\n)([^\n]+(:362:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an object of type .S \\\\\\[2\\\\\\]. and size .4. in a
          region of type .char \\\\\\[2\\\\\\]. and size at most .2.")[^\n]*\n?)+'}
      L407: {expect: true, expr: '(^|\n)([^\n]+(:407:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L450: {expect: true, expr: '(^|\n)([^\n]+(:450:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L451: {expect: true, expr: '(^|\n)([^\n]+(:451:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L453: {expect: true, expr: '(^|\n)([^\n]+(:453:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L454: {expect: true, expr: '(^|\n)([^\n]+(:454:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size_394:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size.C'
    sources: {binary: Wplacement-new-size.s, cflags: "-std=gnu++11 -Wplacement-new
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L121: {expect: true, expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L124: {expect: true, expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L125: {expect: true, expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L127: {expect: true, expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L143: {expect: true, expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L150: {expect: true, expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L160: {expect: true, expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L166: {expect: true, expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L170: {expect: true, expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L179: {expect: true, expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L185: {expect: true, expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L190: {expect: true, expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L200: {expect: true, expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L203: {expect: true, expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L205: {expect: true, expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L213: {expect: true, expr: '(^|\n)([^\n]+(:213:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L214: {expect: true, expr: '(^|\n)([^\n]+(:214:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L217: {expect: true, expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L218: {expect: true, expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L219: {expect: true, expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L220: {expect: true, expr: '(^|\n)([^\n]+(:220:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L221: {expect: true, expr: '(^|\n)([^\n]+(:221:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+(:222:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L223: {expect: true, expr: '(^|\n)([^\n]+(:223:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L224: {expect: true, expr: '(^|\n)([^\n]+(:224:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L228: {expect: true, expr: '(^|\n)([^\n]+(:228:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L231: {expect: true, expr: '(^|\n)([^\n]+(:231:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L235: {expect: true, expr: '(^|\n)([^\n]+(:235:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L236: {expect: true, expr: '(^|\n)([^\n]+(:236:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L237: {expect: true, expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L243: {expect: true, expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L244: {expect: true, expr: '(^|\n)([^\n]+(:244:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L245: {expect: true, expr: '(^|\n)([^\n]+(:245:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L246: {expect: true, expr: '(^|\n)([^\n]+(:246:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L251: {expect: true, expr: '(^|\n)([^\n]+(:251:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L252: {expect: true, expr: '(^|\n)([^\n]+(:252:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L257: {expect: true, expr: '(^|\n)([^\n]+(:257:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L262: {expect: true, expr: '(^|\n)([^\n]+(:262:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L272: {expect: true, expr: '(^|\n)([^\n]+(:272:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L275: {expect: true, expr: '(^|\n)([^\n]+(:275:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L278: {expect: true, expr: '(^|\n)([^\n]+(:278:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L279: {expect: true, expr: '(^|\n)([^\n]+(:279:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L281: {expect: true, expr: '(^|\n)([^\n]+(:281:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L282: {expect: true, expr: '(^|\n)([^\n]+(:282:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L285: {expect: true, expr: '(^|\n)([^\n]+(:285:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L288: {expect: true, expr: '(^|\n)([^\n]+(:288:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L289: {expect: true, expr: '(^|\n)([^\n]+(:289:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L290: {expect: true, expr: '(^|\n)([^\n]+(:290:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L291: {expect: true, expr: '(^|\n)([^\n]+(:291:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L302: {expect: true, expr: '(^|\n)([^\n]+(:302:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L304: {expect: true, expr: '(^|\n)([^\n]+(:304:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L307: {expect: true, expr: '(^|\n)([^\n]+(:307:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L308: {expect: true, expr: '(^|\n)([^\n]+(:308:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L309: {expect: true, expr: '(^|\n)([^\n]+(:309:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L310: {expect: true, expr: '(^|\n)([^\n]+(:310:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L314: {expect: true, expr: '(^|\n)([^\n]+(:314:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L317: {expect: true, expr: '(^|\n)([^\n]+(:317:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L318: {expect: true, expr: '(^|\n)([^\n]+(:318:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L319: {expect: true, expr: '(^|\n)([^\n]+(:319:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L320: {expect: true, expr: '(^|\n)([^\n]+(:320:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L321: {expect: true, expr: '(^|\n)([^\n]+(:321:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L323: {expect: true, expr: '(^|\n)([^\n]+(:323:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L324: {expect: true, expr: '(^|\n)([^\n]+(:324:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L325: {expect: true, expr: '(^|\n)([^\n]+(:325:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L327: {expect: true, expr: '(^|\n)([^\n]+(:327:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L329: {expect: true, expr: '(^|\n)([^\n]+(:329:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L330: {expect: true, expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L331: {expect: true, expr: '(^|\n)([^\n]+(:331:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L337: {expect: true, expr: '(^|\n)([^\n]+(:337:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L339: {expect: true, expr: '(^|\n)([^\n]+(:339:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L352: {expect: true, expr: '(^|\n)([^\n]+(:352:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an object of type .S. and size .2. in a region of type
          .char \\\\\\[2\\\\\\]. and size .1.")[^\n]*\n?)+'}
      L358: {expect: true, expr: '(^|\n)([^\n]+(:358:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an array of objects of type .S. and size .2. in a region
          of type .char \\\\\\[2\\\\\\]. and size .1.")[^\n]*\n?)+'}
      L362: {expect: true, expr: '(^|\n)([^\n]+(:362:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an object of type .S \\\\\\[2\\\\\\]. and size .4. in a
          region of type .char \\\\\\[2\\\\\\]. and size at most .2.")[^\n]*\n?)+'}
      L407: {expect: true, expr: '(^|\n)([^\n]+(:407:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L450: {expect: true, expr: '(^|\n)([^\n]+(:450:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L451: {expect: true, expr: '(^|\n)([^\n]+(:451:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L453: {expect: true, expr: '(^|\n)([^\n]+(:453:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L454: {expect: true, expr: '(^|\n)([^\n]+(:454:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wplacement-new-size_395:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wplacement-new-size.C'
    sources: {binary: Wplacement-new-size.s, cflags: "-std=gnu++14 -Wplacement-new
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L120: {expect: true, expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L121: {expect: true, expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L124: {expect: true, expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L125: {expect: true, expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L127: {expect: true, expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L128: {expect: true, expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L143: {expect: true, expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L149: {expect: true, expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L150: {expect: true, expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L151: {expect: true, expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L155: {expect: true, expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L157: {expect: true, expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L158: {expect: true, expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L159: {expect: true, expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L160: {expect: true, expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L166: {expect: true, expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L168: {expect: true, expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L170: {expect: true, expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L172: {expect: true, expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L173: {expect: true, expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L178: {expect: true, expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L179: {expect: true, expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L180: {expect: true, expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L184: {expect: true, expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L185: {expect: true, expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L186: {expect: true, expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L188: {expect: true, expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L190: {expect: true, expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L192: {expect: true, expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L193: {expect: true, expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L195: {expect: true, expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L197: {expect: true, expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L200: {expect: true, expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L201: {expect: true, expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L202: {expect: true, expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L203: {expect: true, expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L205: {expect: true, expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L213: {expect: true, expr: '(^|\n)([^\n]+(:213:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L214: {expect: true, expr: '(^|\n)([^\n]+(:214:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L217: {expect: true, expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L218: {expect: true, expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L219: {expect: true, expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L220: {expect: true, expr: '(^|\n)([^\n]+(:220:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L221: {expect: true, expr: '(^|\n)([^\n]+(:221:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L222: {expect: true, expr: '(^|\n)([^\n]+(:222:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L223: {expect: true, expr: '(^|\n)([^\n]+(:223:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L224: {expect: true, expr: '(^|\n)([^\n]+(:224:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L228: {expect: true, expr: '(^|\n)([^\n]+(:228:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L231: {expect: true, expr: '(^|\n)([^\n]+(:231:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L235: {expect: true, expr: '(^|\n)([^\n]+(:235:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L236: {expect: true, expr: '(^|\n)([^\n]+(:236:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L237: {expect: true, expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L243: {expect: true, expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L244: {expect: true, expr: '(^|\n)([^\n]+(:244:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L245: {expect: true, expr: '(^|\n)([^\n]+(:245:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L246: {expect: true, expr: '(^|\n)([^\n]+(:246:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L251: {expect: true, expr: '(^|\n)([^\n]+(:251:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L252: {expect: true, expr: '(^|\n)([^\n]+(:252:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L257: {expect: true, expr: '(^|\n)([^\n]+(:257:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L262: {expect: true, expr: '(^|\n)([^\n]+(:262:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L272: {expect: true, expr: '(^|\n)([^\n]+(:272:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L275: {expect: true, expr: '(^|\n)([^\n]+(:275:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L278: {expect: true, expr: '(^|\n)([^\n]+(:278:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L279: {expect: true, expr: '(^|\n)([^\n]+(:279:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L281: {expect: true, expr: '(^|\n)([^\n]+(:281:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L282: {expect: true, expr: '(^|\n)([^\n]+(:282:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L285: {expect: true, expr: '(^|\n)([^\n]+(:285:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L288: {expect: true, expr: '(^|\n)([^\n]+(:288:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L289: {expect: true, expr: '(^|\n)([^\n]+(:289:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L290: {expect: true, expr: '(^|\n)([^\n]+(:290:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L291: {expect: true, expr: '(^|\n)([^\n]+(:291:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L302: {expect: true, expr: '(^|\n)([^\n]+(:302:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L303: {expect: true, expr: '(^|\n)([^\n]+(:303:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L304: {expect: true, expr: '(^|\n)([^\n]+(:304:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L307: {expect: true, expr: '(^|\n)([^\n]+(:307:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L308: {expect: true, expr: '(^|\n)([^\n]+(:308:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L309: {expect: true, expr: '(^|\n)([^\n]+(:309:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L310: {expect: true, expr: '(^|\n)([^\n]+(:310:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L314: {expect: true, expr: '(^|\n)([^\n]+(:314:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L317: {expect: true, expr: '(^|\n)([^\n]+(:317:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L318: {expect: true, expr: '(^|\n)([^\n]+(:318:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L319: {expect: true, expr: '(^|\n)([^\n]+(:319:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L320: {expect: true, expr: '(^|\n)([^\n]+(:320:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L321: {expect: true, expr: '(^|\n)([^\n]+(:321:)[^\n]*[0-9]+: warning:[^\n]*("address|placement")[^\n]*\n?)+'}
      L323: {expect: true, expr: '(^|\n)([^\n]+(:323:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L324: {expect: true, expr: '(^|\n)([^\n]+(:324:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L325: {expect: true, expr: '(^|\n)([^\n]+(:325:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L327: {expect: true, expr: '(^|\n)([^\n]+(:327:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L329: {expect: true, expr: '(^|\n)([^\n]+(:329:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L330: {expect: true, expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L331: {expect: true, expr: '(^|\n)([^\n]+(:331:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L337: {expect: true, expr: '(^|\n)([^\n]+(:337:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L339: {expect: true, expr: '(^|\n)([^\n]+(:339:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L352: {expect: true, expr: '(^|\n)([^\n]+(:352:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an object of type .S. and size .2. in a region of type
          .char \\\\\\[2\\\\\\]. and size .1.")[^\n]*\n?)+'}
      L358: {expect: true, expr: '(^|\n)([^\n]+(:358:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an array of objects of type .S. and size .2. in a region
          of type .char \\\\\\[2\\\\\\]. and size .1.")[^\n]*\n?)+'}
      L362: {expect: true, expr: '(^|\n)([^\n]+(:362:)[^\n]*[0-9]+: warning:[^\n]*("placement
          new constructing an object of type .S \\\\\\[2\\\\\\]. and size .4. in a
          region of type .char \\\\\\[2\\\\\\]. and size at most .2.")[^\n]*\n?)+'}
      L407: {expect: true, expr: '(^|\n)([^\n]+(:407:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L450: {expect: true, expr: '(^|\n)([^\n]+(:450:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L451: {expect: true, expr: '(^|\n)([^\n]+(:451:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L453: {expect: true, expr: '(^|\n)([^\n]+(:453:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L454: {expect: true, expr: '(^|\n)([^\n]+(:454:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("placement")[^\n]*\n?)+'}
test_Wpointer-arith-1_1865:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wpointer-arith-1.C'
    sources: {binary: Wpointer-arith-1.s, cflags: "-std=gnu++98 -Wpointer-arith\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          incrementing a pointer")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          incrementing a pointer")[^\n]*\n?)+'}
test_Wpointer-arith-1_1866:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wpointer-arith-1.C'
    sources: {binary: Wpointer-arith-1.s, cflags: "-std=gnu++11 -Wpointer-arith\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          incrementing a pointer")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          incrementing a pointer")[^\n]*\n?)+'}
test_Wpointer-arith-1_1867:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wpointer-arith-1.C'
    sources: {binary: Wpointer-arith-1.s, cflags: "-std=gnu++14 -Wpointer-arith\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          incrementing a pointer")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          incrementing a pointer")[^\n]*\n?)+'}
test_Wpointer-arith-1_396:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wpointer-arith-1.C'
    sources: {binary: Wpointer-arith-1.s, cflags: "-std=gnu++98 -Wpointer-arith\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          incrementing a pointer")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          incrementing a pointer")[^\n]*\n?)+'}
test_Wpointer-arith-1_397:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wpointer-arith-1.C'
    sources: {binary: Wpointer-arith-1.s, cflags: "-std=gnu++11 -Wpointer-arith\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          incrementing a pointer")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          incrementing a pointer")[^\n]*\n?)+'}
test_Wpointer-arith-1_398:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wpointer-arith-1.C'
    sources: {binary: Wpointer-arith-1.s, cflags: "-std=gnu++14 -Wpointer-arith\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          incrementing a pointer")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("forbids
          incrementing a pointer")[^\n]*\n?)+'}
test_Wredundant-decls-spec_1868:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wredundant-decls-spec.C'
    sources: {binary: Wredundant-decls-spec.s, cflags: "-std=gnu++98 -Wredundant-decls\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("redundant
          redeclaration")[^\n]*\n?)+'}
test_Wredundant-decls-spec_1869:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wredundant-decls-spec.C'
    sources: {binary: Wredundant-decls-spec.s, cflags: "-std=gnu++11 -Wredundant-decls\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("redundant
          redeclaration")[^\n]*\n?)+'}
test_Wredundant-decls-spec_1870:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wredundant-decls-spec.C'
    sources: {binary: Wredundant-decls-spec.s, cflags: "-std=gnu++14 -Wredundant-decls\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("redundant
          redeclaration")[^\n]*\n?)+'}
test_Wredundant-decls-spec_399:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wredundant-decls-spec.C'
    sources: {binary: Wredundant-decls-spec.s, cflags: "-std=gnu++98 -Wredundant-decls\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("redundant
          redeclaration")[^\n]*\n?)+'}
test_Wredundant-decls-spec_400:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wredundant-decls-spec.C'
    sources: {binary: Wredundant-decls-spec.s, cflags: "-std=gnu++11 -Wredundant-decls\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("redundant
          redeclaration")[^\n]*\n?)+'}
test_Wredundant-decls-spec_401:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wredundant-decls-spec.C'
    sources: {binary: Wredundant-decls-spec.s, cflags: "-std=gnu++14 -Wredundant-decls\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("redundant
          redeclaration")[^\n]*\n?)+'}
test_Wreorder-1_1871:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreorder-1.C'
    sources: {binary: Wreorder-1.s, cflags: "-std=gnu++98 -Wreorder -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wreorder-1_1872:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreorder-1.C'
    sources: {binary: Wreorder-1.s, cflags: "-std=gnu++11 -Wreorder -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wreorder-1_1873:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreorder-1.C'
    sources: {binary: Wreorder-1.s, cflags: "-std=gnu++14 -Wreorder -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wreorder-1_402:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreorder-1.C'
    sources: {binary: Wreorder-1.s, cflags: "-std=gnu++98 -Wreorder -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wreorder-1_403:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreorder-1.C'
    sources: {binary: Wreorder-1.s, cflags: "-std=gnu++11 -Wreorder -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wreorder-1_404:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreorder-1.C'
    sources: {binary: Wreorder-1.s, cflags: "-std=gnu++14 -Wreorder -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_Wrestrict-1_1874:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wrestrict-1.C'
    sources: {binary: Wrestrict-1.s, cflags: "-std=gnu++98 -Wrestrict\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
test_Wrestrict-1_1875:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wrestrict-1.C'
    sources: {binary: Wrestrict-1.s, cflags: "-std=gnu++11 -Wrestrict\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
test_Wrestrict-1_1876:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wrestrict-1.C'
    sources: {binary: Wrestrict-1.s, cflags: "-std=gnu++14 -Wrestrict\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
test_Wrestrict-1_405:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wrestrict-1.C'
    sources: {binary: Wrestrict-1.s, cflags: "-std=gnu++98 -Wrestrict\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
test_Wrestrict-1_406:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wrestrict-1.C'
    sources: {binary: Wrestrict-1.s, cflags: "-std=gnu++11 -Wrestrict\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
test_Wrestrict-1_407:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wrestrict-1.C'
    sources: {binary: Wrestrict-1.s, cflags: "-std=gnu++14 -Wrestrict\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
test_Wrestrict-2_1877:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wrestrict-2.C'
    sources: {binary: Wrestrict-2.s, cflags: "-std=gnu++98 -Wrestrict\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
test_Wrestrict-2_1878:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wrestrict-2.C'
    sources: {binary: Wrestrict-2.s, cflags: "-std=gnu++11 -Wrestrict\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
test_Wrestrict-2_1879:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wrestrict-2.C'
    sources: {binary: Wrestrict-2.s, cflags: "-std=gnu++14 -Wrestrict\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
test_Wrestrict-2_408:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wrestrict-2.C'
    sources: {binary: Wrestrict-2.s, cflags: "-std=gnu++98 -Wrestrict\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
test_Wrestrict-2_409:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wrestrict-2.C'
    sources: {binary: Wrestrict-2.s, cflags: "-std=gnu++11 -Wrestrict\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
test_Wrestrict-2_410:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wrestrict-2.C'
    sources: {binary: Wrestrict-2.s, cflags: "-std=gnu++14 -Wrestrict\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("to
          restrict-qualified parameter aliases with")[^\n]*\n?)+'}
test_Wreturn-1_1880:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-1.C'
    sources: {binary: Wreturn-1.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-1_1881:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-1.C'
    sources: {binary: Wreturn-1.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-1_1882:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-1.C'
    sources: {binary: Wreturn-1.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-1_411:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-1.C'
    sources: {binary: Wreturn-1.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-1_412:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-1.C'
    sources: {binary: Wreturn-1.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-1_413:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-1.C'
    sources: {binary: Wreturn-1.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-2_1883:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-2.C'
    sources: {binary: Wreturn-2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_Wreturn-2_1884:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-2.C'
    sources: {binary: Wreturn-2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_Wreturn-2_1885:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-2.C'
    sources: {binary: Wreturn-2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_Wreturn-2_414:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-2.C'
    sources: {binary: Wreturn-2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_Wreturn-2_415:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-2.C'
    sources: {binary: Wreturn-2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_Wreturn-2_416:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-2.C'
    sources: {binary: Wreturn-2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_Wreturn-3_1886:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-3.C'
    sources: {binary: Wreturn-3.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-3_1887:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-3.C'
    sources: {binary: Wreturn-3.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-3_1888:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-3.C'
    sources: {binary: Wreturn-3.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-3_417:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-3.C'
    sources: {binary: Wreturn-3.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-3_418:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-3.C'
    sources: {binary: Wreturn-3.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-3_419:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-3.C'
    sources: {binary: Wreturn-3.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-4_1889:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-4.C'
    sources: {binary: Wreturn-4.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_Wreturn-4_1890:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-4.C'
    sources: {binary: Wreturn-4.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_Wreturn-4_1891:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-4.C'
    sources: {binary: Wreturn-4.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_Wreturn-4_420:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-4.C'
    sources: {binary: Wreturn-4.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_Wreturn-4_421:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-4.C'
    sources: {binary: Wreturn-4.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_Wreturn-4_422:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-4.C'
    sources: {binary: Wreturn-4.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_Wreturn-local-addr-2_1892:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-local-addr-2.C'
    sources: {binary: Wreturn-local-addr-2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("reference
          to temporary")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("reference
          to temporary")[^\n]*\n?)+'}
test_Wreturn-local-addr-2_1893:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-local-addr-2.C'
    sources: {binary: Wreturn-local-addr-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("reference
          to temporary")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("reference
          to temporary")[^\n]*\n?)+'}
test_Wreturn-local-addr-2_1894:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-local-addr-2.C'
    sources: {binary: Wreturn-local-addr-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("reference
          to temporary")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("reference
          to temporary")[^\n]*\n?)+'}
test_Wreturn-local-addr-2_423:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-local-addr-2.C'
    sources: {binary: Wreturn-local-addr-2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("reference
          to temporary")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("reference
          to temporary")[^\n]*\n?)+'}
test_Wreturn-local-addr-2_424:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-local-addr-2.C'
    sources: {binary: Wreturn-local-addr-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("reference
          to temporary")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("reference
          to temporary")[^\n]*\n?)+'}
test_Wreturn-local-addr-2_425:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-local-addr-2.C'
    sources: {binary: Wreturn-local-addr-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("reference
          to temporary")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("reference
          to temporary")[^\n]*\n?)+'}
test_Wreturn-local-addr_1895:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-local-addr.C'
    sources: {binary: Wreturn-local-addr.o, cflags: "-std=gnu++98 -Werror=return-local-addr\n
        -c"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("address
          of local variable")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference
          to local variable")[^\n]*\n?)+'}
test_Wreturn-local-addr_1896:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-local-addr.C'
    sources: {binary: Wreturn-local-addr.o, cflags: "-std=gnu++11 -Werror=return-local-addr\n
        -c"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("address
          of local variable")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference
          to local variable")[^\n]*\n?)+'}
test_Wreturn-local-addr_1897:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-local-addr.C'
    sources: {binary: Wreturn-local-addr.o, cflags: "-std=gnu++14 -Werror=return-local-addr\n
        -c"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("address
          of local variable")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference
          to local variable")[^\n]*\n?)+'}
test_Wreturn-local-addr_426:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-local-addr.C'
    sources: {binary: Wreturn-local-addr.o, cflags: "-std=gnu++98 -Werror=return-local-addr\n
        -c"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("address
          of local variable")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference
          to local variable")[^\n]*\n?)+'}
test_Wreturn-local-addr_427:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-local-addr.C'
    sources: {binary: Wreturn-local-addr.o, cflags: "-std=gnu++11 -Werror=return-local-addr\n
        -c"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("address
          of local variable")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference
          to local variable")[^\n]*\n?)+'}
test_Wreturn-local-addr_428:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-local-addr.C'
    sources: {binary: Wreturn-local-addr.o, cflags: "-std=gnu++14 -Werror=return-local-addr\n
        -c"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("address
          of local variable")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("returning
          reference to temporary")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("reference
          to local variable")[^\n]*\n?)+'}
test_Wreturn-type-10_1901:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-10.C'
    sources: {binary: Wreturn-type-10.s, cflags: "-std=gnu++98 -Os -Wreturn-type\n
        -S"}
  group: GRPSERIAL
test_Wreturn-type-10_1902:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-10.C'
    sources: {binary: Wreturn-type-10.s, cflags: "-std=gnu++11 -Os -Wreturn-type\n
        -S"}
  group: GRPSERIAL
test_Wreturn-type-10_1903:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-10.C'
    sources: {binary: Wreturn-type-10.s, cflags: "-std=gnu++14 -Os -Wreturn-type\n
        -S"}
  group: GRPSERIAL
test_Wreturn-type-10_432:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-10.C'
    sources: {binary: Wreturn-type-10.s, cflags: "-std=gnu++98 -Os -Wreturn-type\n
        -S"}
  group: GRPSERIAL
test_Wreturn-type-10_433:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-10.C'
    sources: {binary: Wreturn-type-10.s, cflags: "-std=gnu++11 -Os -Wreturn-type\n
        -S"}
  group: GRPSERIAL
test_Wreturn-type-10_434:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-10.C'
    sources: {binary: Wreturn-type-10.s, cflags: "-std=gnu++14 -Os -Wreturn-type\n
        -S"}
  group: GRPSERIAL
test_Wreturn-type-1_1898:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-1.C'
    sources: {binary: Wreturn-type-1.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-1_1899:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-1.C'
    sources: {binary: Wreturn-type-1.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-1_1900:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-1.C'
    sources: {binary: Wreturn-type-1.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-1_429:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-1.C'
    sources: {binary: Wreturn-type-1.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-1_430:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-1.C'
    sources: {binary: Wreturn-type-1.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-1_431:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-1.C'
    sources: {binary: Wreturn-type-1.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-2_1904:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-2.C'
    sources: {binary: Wreturn-type-2.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-2_1905:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-2.C'
    sources: {binary: Wreturn-type-2.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-2_1906:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-2.C'
    sources: {binary: Wreturn-type-2.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-2_435:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-2.C'
    sources: {binary: Wreturn-type-2.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-2_436:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-2.C'
    sources: {binary: Wreturn-type-2.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-2_437:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-2.C'
    sources: {binary: Wreturn-type-2.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-3_1907:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-3.C'
    sources: {binary: Wreturn-type-3.s, cflags: "-std=gnu++98 -Wreturn-type -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_Wreturn-type-3_1908:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-3.C'
    sources: {binary: Wreturn-type-3.s, cflags: "-std=gnu++11 -Wreturn-type -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_Wreturn-type-3_1909:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-3.C'
    sources: {binary: Wreturn-type-3.s, cflags: "-std=gnu++14 -Wreturn-type -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_Wreturn-type-3_438:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-3.C'
    sources: {binary: Wreturn-type-3.s, cflags: "-std=gnu++98 -Wreturn-type -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_Wreturn-type-3_439:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-3.C'
    sources: {binary: Wreturn-type-3.s, cflags: "-std=gnu++11 -Wreturn-type -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_Wreturn-type-3_440:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-3.C'
    sources: {binary: Wreturn-type-3.s, cflags: "-std=gnu++14 -Wreturn-type -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_Wreturn-type-4_1910:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-4.C'
    sources: {binary: Wreturn-type-4.s, cflags: "-std=gnu++98 -Wignored-qualifiers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
test_Wreturn-type-4_1911:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-4.C'
    sources: {binary: Wreturn-type-4.s, cflags: "-std=gnu++11 -Wignored-qualifiers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
test_Wreturn-type-4_1912:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-4.C'
    sources: {binary: Wreturn-type-4.s, cflags: "-std=gnu++14 -Wignored-qualifiers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
test_Wreturn-type-4_441:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-4.C'
    sources: {binary: Wreturn-type-4.s, cflags: "-std=gnu++98 -Wignored-qualifiers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
test_Wreturn-type-4_442:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-4.C'
    sources: {binary: Wreturn-type-4.s, cflags: "-std=gnu++11 -Wignored-qualifiers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
test_Wreturn-type-4_443:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-4.C'
    sources: {binary: Wreturn-type-4.s, cflags: "-std=gnu++14 -Wignored-qualifiers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("type
          qualifiers ignored")[^\n]*\n?)+'}
test_Wreturn-type-5_1913:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-5.C'
    sources: {binary: Wreturn-type-5.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-5_1914:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-5.C'
    sources: {binary: Wreturn-type-5.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-5_1915:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-5.C'
    sources: {binary: Wreturn-type-5.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-5_444:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-5.C'
    sources: {binary: Wreturn-type-5.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-5_445:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-5.C'
    sources: {binary: Wreturn-type-5.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-5_446:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-5.C'
    sources: {binary: Wreturn-type-5.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-6_1916:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-6.C'
    sources: {binary: Wreturn-type-6.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
test_Wreturn-type-6_1917:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-6.C'
    sources: {binary: Wreturn-type-6.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
test_Wreturn-type-6_1918:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-6.C'
    sources: {binary: Wreturn-type-6.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
test_Wreturn-type-6_447:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-6.C'
    sources: {binary: Wreturn-type-6.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
test_Wreturn-type-6_448:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-6.C'
    sources: {binary: Wreturn-type-6.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
test_Wreturn-type-6_449:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-6.C'
    sources: {binary: Wreturn-type-6.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
test_Wreturn-type-7_1919:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-7.C'
    sources: {binary: Wreturn-type-7.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-7_1920:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-7.C'
    sources: {binary: Wreturn-type-7.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-7_1921:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-7.C'
    sources: {binary: Wreturn-type-7.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-7_450:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-7.C'
    sources: {binary: Wreturn-type-7.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-7_451:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-7.C'
    sources: {binary: Wreturn-type-7.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-7_452:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-7.C'
    sources: {binary: Wreturn-type-7.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
test_Wreturn-type-8_1922:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-8.C'
    sources: {binary: Wreturn-type-8.s, cflags: "-std=gnu++98 -O0 -Wall\n -S"}
  group: GRPSERIAL
test_Wreturn-type-8_1923:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-8.C'
    sources: {binary: Wreturn-type-8.s, cflags: "-std=gnu++11 -O0 -Wall\n -S"}
  group: GRPSERIAL
test_Wreturn-type-8_1924:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-8.C'
    sources: {binary: Wreturn-type-8.s, cflags: "-std=gnu++14 -O0 -Wall\n -S"}
  group: GRPSERIAL
test_Wreturn-type-8_453:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-8.C'
    sources: {binary: Wreturn-type-8.s, cflags: "-std=gnu++98 -O0 -Wall\n -S"}
  group: GRPSERIAL
test_Wreturn-type-8_454:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-8.C'
    sources: {binary: Wreturn-type-8.s, cflags: "-std=gnu++11 -O0 -Wall\n -S"}
  group: GRPSERIAL
test_Wreturn-type-8_455:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-8.C'
    sources: {binary: Wreturn-type-8.s, cflags: "-std=gnu++14 -O0 -Wall\n -S"}
  group: GRPSERIAL
test_Wreturn-type-9_1925:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-9.C'
    sources: {binary: Wreturn-type-9.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
test_Wreturn-type-9_1926:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-9.C'
    sources: {binary: Wreturn-type-9.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
test_Wreturn-type-9_1927:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-9.C'
    sources: {binary: Wreturn-type-9.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
test_Wreturn-type-9_456:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-9.C'
    sources: {binary: Wreturn-type-9.s, cflags: "-std=gnu++98 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
test_Wreturn-type-9_457:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-9.C'
    sources: {binary: Wreturn-type-9.s, cflags: "-std=gnu++11 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
test_Wreturn-type-9_458:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wreturn-type-9.C'
    sources: {binary: Wreturn-type-9.s, cflags: "-std=gnu++14 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement")[^\n]*\n?)+'}
test_Wsequence-point-1_1928:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-1.C'
    sources: {binary: Wsequence-point-1.s, cflags: "-std=gnu++98 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-1_1929:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-1.C'
    sources: {binary: Wsequence-point-1.s, cflags: "-std=gnu++11 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-1_1930:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-1.C'
    sources: {binary: Wsequence-point-1.s, cflags: "-std=gnu++14 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-1_459:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-1.C'
    sources: {binary: Wsequence-point-1.s, cflags: "-std=gnu++98 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-1_460:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-1.C'
    sources: {binary: Wsequence-point-1.s, cflags: "-std=gnu++11 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-1_461:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-1.C'
    sources: {binary: Wsequence-point-1.s, cflags: "-std=gnu++14 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-2_1931:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-2.C'
    sources: {binary: Wsequence-point-2.s, cflags: "-std=gnu++11 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-2_1932:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-2.C'
    sources: {binary: Wsequence-point-2.s, cflags: "-std=gnu++14 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-2_462:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-2.C'
    sources: {binary: Wsequence-point-2.s, cflags: "-std=gnu++11 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-2_463:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-2.C'
    sources: {binary: Wsequence-point-2.s, cflags: "-std=gnu++14 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-3_1933:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-3.C'
    sources: {binary: Wsequence-point-3.s, cflags: "-std=gnu++98 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-3_1934:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-3.C'
    sources: {binary: Wsequence-point-3.s, cflags: "-std=gnu++11 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-3_1935:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-3.C'
    sources: {binary: Wsequence-point-3.s, cflags: "-std=gnu++14 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-3_464:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-3.C'
    sources: {binary: Wsequence-point-3.s, cflags: "-std=gnu++98 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-3_465:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-3.C'
    sources: {binary: Wsequence-point-3.s, cflags: "-std=gnu++11 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-3_466:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-3.C'
    sources: {binary: Wsequence-point-3.s, cflags: "-std=gnu++14 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
test_Wsequence-point-pr18050_1936:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-pr18050.C'
    sources: {binary: Wsequence-point-pr18050.s, cflags: "-std=gnu++98 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("operation
          on \''y\'' may be undefined")[^\n]*\n?)+'}
test_Wsequence-point-pr18050_1937:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-pr18050.C'
    sources: {binary: Wsequence-point-pr18050.s, cflags: "-std=gnu++11 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("operation
          on \''y\'' may be undefined")[^\n]*\n?)+'}
test_Wsequence-point-pr18050_1938:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-pr18050.C'
    sources: {binary: Wsequence-point-pr18050.s, cflags: "-std=gnu++14 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("operation
          on \''y\'' may be undefined")[^\n]*\n?)+'}
test_Wsequence-point-pr18050_467:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-pr18050.C'
    sources: {binary: Wsequence-point-pr18050.s, cflags: "-std=gnu++98 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("operation
          on \''y\'' may be undefined")[^\n]*\n?)+'}
test_Wsequence-point-pr18050_468:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-pr18050.C'
    sources: {binary: Wsequence-point-pr18050.s, cflags: "-std=gnu++11 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("operation
          on \''y\'' may be undefined")[^\n]*\n?)+'}
test_Wsequence-point-pr18050_469:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsequence-point-pr18050.C'
    sources: {binary: Wsequence-point-pr18050.s, cflags: "-std=gnu++14 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("operation
          on \''y\'' may be undefined")[^\n]*\n?)+'}
test_Wshadow-10_1942:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-10.C'
    sources: {binary: Wshadow-10.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-10_1943:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-10.C'
    sources: {binary: Wshadow-10.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-10_1944:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-10.C'
    sources: {binary: Wshadow-10.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-10_473:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-10.C'
    sources: {binary: Wshadow-10.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-10_474:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-10.C'
    sources: {binary: Wshadow-10.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-10_475:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-10.C'
    sources: {binary: Wshadow-10.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-11_1945:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-11.C'
    sources: {binary: Wshadow-11.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
test_Wshadow-11_1946:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-11.C'
    sources: {binary: Wshadow-11.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
test_Wshadow-11_1947:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-11.C'
    sources: {binary: Wshadow-11.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
test_Wshadow-11_476:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-11.C'
    sources: {binary: Wshadow-11.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
test_Wshadow-11_477:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-11.C'
    sources: {binary: Wshadow-11.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
test_Wshadow-11_478:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-11.C'
    sources: {binary: Wshadow-11.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
test_Wshadow-12_1948:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-12.C'
    sources: {binary: Wshadow-12.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
test_Wshadow-12_1949:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-12.C'
    sources: {binary: Wshadow-12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
test_Wshadow-12_1950:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-12.C'
    sources: {binary: Wshadow-12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
test_Wshadow-12_479:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-12.C'
    sources: {binary: Wshadow-12.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
test_Wshadow-12_480:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-12.C'
    sources: {binary: Wshadow-12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
test_Wshadow-12_481:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-12.C'
    sources: {binary: Wshadow-12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
test_Wshadow-1_1939:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-1.C'
    sources: {binary: Wshadow-1.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global decl")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a member")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global decl")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-1_1940:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-1.C'
    sources: {binary: Wshadow-1.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global decl")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a member")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global decl")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-1_1941:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-1.C'
    sources: {binary: Wshadow-1.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global decl")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a member")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global decl")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-1_470:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-1.C'
    sources: {binary: Wshadow-1.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global decl")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a member")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global decl")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-1_471:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-1.C'
    sources: {binary: Wshadow-1.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global decl")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a member")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global decl")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-1_472:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-1.C'
    sources: {binary: Wshadow-1.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global decl")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a member")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global decl")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-2_1951:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-2.C'
    sources: {binary: Wshadow-2.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-2_1952:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-2.C'
    sources: {binary: Wshadow-2.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-2_1953:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-2.C'
    sources: {binary: Wshadow-2.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-2_482:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-2.C'
    sources: {binary: Wshadow-2.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-2_483:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-2.C'
    sources: {binary: Wshadow-2.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-2_484:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-2.C'
    sources: {binary: Wshadow-2.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-3_1954:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-3.C'
    sources: {binary: Wshadow-3.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-3_1955:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-3.C'
    sources: {binary: Wshadow-3.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-3_1956:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-3.C'
    sources: {binary: Wshadow-3.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-3_485:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-3.C'
    sources: {binary: Wshadow-3.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-3_486:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-3.C'
    sources: {binary: Wshadow-3.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-3_487:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-3.C'
    sources: {binary: Wshadow-3.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-4_1957:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-4.C'
    sources: {binary: Wshadow-4.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-4_1958:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-4.C'
    sources: {binary: Wshadow-4.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-4_1959:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-4.C'
    sources: {binary: Wshadow-4.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-4_488:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-4.C'
    sources: {binary: Wshadow-4.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-4_489:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-4.C'
    sources: {binary: Wshadow-4.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-4_490:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-4.C'
    sources: {binary: Wshadow-4.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-5_1960:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-5.C'
    sources: {binary: Wshadow-5.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("12:\''bar\''
          was not declared in this scope")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("a
          function-definition is not allowed here")[^\n]*\n?)+'}
test_Wshadow-5_1961:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-5.C'
    sources: {binary: Wshadow-5.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("12:\''bar\''
          was not declared in this scope")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("a
          function-definition is not allowed here")[^\n]*\n?)+'}
test_Wshadow-5_1962:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-5.C'
    sources: {binary: Wshadow-5.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("12:\''bar\''
          was not declared in this scope")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("a
          function-definition is not allowed here")[^\n]*\n?)+'}
test_Wshadow-5_491:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-5.C'
    sources: {binary: Wshadow-5.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("12:\''bar\''
          was not declared in this scope")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("a
          function-definition is not allowed here")[^\n]*\n?)+'}
test_Wshadow-5_492:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-5.C'
    sources: {binary: Wshadow-5.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("12:\''bar\''
          was not declared in this scope")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("a
          function-definition is not allowed here")[^\n]*\n?)+'}
test_Wshadow-5_493:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-5.C'
    sources: {binary: Wshadow-5.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("12:\''bar\''
          was not declared in this scope")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("a
          function-definition is not allowed here")[^\n]*\n?)+'}
test_Wshadow-6_1963:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-6.C'
    sources: {binary: Wshadow-6.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a member of")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a lambda capture")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a lambda capture")[^\n]*\n?)+'}
test_Wshadow-6_1964:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-6.C'
    sources: {binary: Wshadow-6.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a member of")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a lambda capture")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a lambda capture")[^\n]*\n?)+'}
test_Wshadow-6_494:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-6.C'
    sources: {binary: Wshadow-6.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a member of")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a lambda capture")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a lambda capture")[^\n]*\n?)+'}
test_Wshadow-6_495:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-6.C'
    sources: {binary: Wshadow-6.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a member of")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a lambda capture")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a lambda capture")[^\n]*\n?)+'}
test_Wshadow-7_1965:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-7.C'
    sources: {binary: Wshadow-7.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-7_1966:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-7.C'
    sources: {binary: Wshadow-7.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-7_1967:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-7.C'
    sources: {binary: Wshadow-7.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-7_496:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-7.C'
    sources: {binary: Wshadow-7.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-7_497:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-7.C'
    sources: {binary: Wshadow-7.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-7_498:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-7.C'
    sources: {binary: Wshadow-7.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-8_1968:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-8.C'
    sources: {binary: Wshadow-8.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-8_1969:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-8.C'
    sources: {binary: Wshadow-8.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-8_1970:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-8.C'
    sources: {binary: Wshadow-8.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-8_499:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-8.C'
    sources: {binary: Wshadow-8.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-8_500:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-8.C'
    sources: {binary: Wshadow-8.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-8_501:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-8.C'
    sources: {binary: Wshadow-8.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
test_Wshadow-9_1971:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-9.C'
    sources: {binary: Wshadow-9.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
test_Wshadow-9_1972:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-9.C'
    sources: {binary: Wshadow-9.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
test_Wshadow-9_1973:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-9.C'
    sources: {binary: Wshadow-9.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
test_Wshadow-9_502:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-9.C'
    sources: {binary: Wshadow-9.s, cflags: "-std=gnu++98 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
test_Wshadow-9_503:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-9.C'
    sources: {binary: Wshadow-9.s, cflags: "-std=gnu++11 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
test_Wshadow-9_504:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-9.C'
    sources: {binary: Wshadow-9.s, cflags: "-std=gnu++14 -Wshadow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a global")[^\n]*\n?)+'}
test_Wshadow-compatible-local-1_1974:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-compatible-local-1.C'
    sources: {binary: Wshadow-compatible-local-1.s, cflags: "-std=gnu++98 -Wshadow=compatible-local\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-compatible-local-1_1975:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-compatible-local-1.C'
    sources: {binary: Wshadow-compatible-local-1.s, cflags: "-std=gnu++11 -Wshadow=compatible-local\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-compatible-local-1_1976:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-compatible-local-1.C'
    sources: {binary: Wshadow-compatible-local-1.s, cflags: "-std=gnu++14 -Wshadow=compatible-local\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-compatible-local-1_505:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-compatible-local-1.C'
    sources: {binary: Wshadow-compatible-local-1.s, cflags: "-std=gnu++98 -Wshadow=compatible-local\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-compatible-local-1_506:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-compatible-local-1.C'
    sources: {binary: Wshadow-compatible-local-1.s, cflags: "-std=gnu++11 -Wshadow=compatible-local\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-compatible-local-1_507:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-compatible-local-1.C'
    sources: {binary: Wshadow-compatible-local-1.s, cflags: "-std=gnu++14 -Wshadow=compatible-local\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-local-1_1977:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-local-1.C'
    sources: {binary: Wshadow-local-1.s, cflags: "-std=gnu++98 -Wshadow=local\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-local-1_1978:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-local-1.C'
    sources: {binary: Wshadow-local-1.s, cflags: "-std=gnu++11 -Wshadow=local\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-local-1_1979:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-local-1.C'
    sources: {binary: Wshadow-local-1.s, cflags: "-std=gnu++14 -Wshadow=local\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-local-1_508:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-local-1.C'
    sources: {binary: Wshadow-local-1.s, cflags: "-std=gnu++98 -Wshadow=local\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-local-1_509:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-local-1.C'
    sources: {binary: Wshadow-local-1.s, cflags: "-std=gnu++11 -Wshadow=local\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-local-1_510:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-local-1.C'
    sources: {binary: Wshadow-local-1.s, cflags: "-std=gnu++14 -Wshadow=local\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-local-2_1980:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-local-2.C'
    sources: {binary: Wshadow-local-2.s, cflags: "-std=gnu++98 -Wshadow=local\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-local-2_1981:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-local-2.C'
    sources: {binary: Wshadow-local-2.s, cflags: "-std=gnu++11 -Wshadow=local\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-local-2_1982:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-local-2.C'
    sources: {binary: Wshadow-local-2.s, cflags: "-std=gnu++14 -Wshadow=local\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-local-2_511:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-local-2.C'
    sources: {binary: Wshadow-local-2.s, cflags: "-std=gnu++98 -Wshadow=local\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-local-2_512:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-local-2.C'
    sources: {binary: Wshadow-local-2.s, cflags: "-std=gnu++11 -Wshadow=local\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wshadow-local-2_513:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wshadow-local-2.C'
    sources: {binary: Wshadow-local-2.s, cflags: "-std=gnu++14 -Wshadow=local\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a parameter")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          a previous local")[^\n]*\n?)+'}
test_Wsign-compare-1_1983:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-1.C'
    sources: {binary: Wsign-compare-1.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-1_1984:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-1.C'
    sources: {binary: Wsign-compare-1.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-1_1985:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-1.C'
    sources: {binary: Wsign-compare-1.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-1_514:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-1.C'
    sources: {binary: Wsign-compare-1.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-1_515:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-1.C'
    sources: {binary: Wsign-compare-1.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-1_516:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-1.C'
    sources: {binary: Wsign-compare-1.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-2_1986:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-2.C'
    sources: {binary: Wsign-compare-2.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned integer expressions")[^\n]*\n?)+'}
test_Wsign-compare-2_1987:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-2.C'
    sources: {binary: Wsign-compare-2.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned integer expressions")[^\n]*\n?)+'}
test_Wsign-compare-2_1988:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-2.C'
    sources: {binary: Wsign-compare-2.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned integer expressions")[^\n]*\n?)+'}
test_Wsign-compare-2_517:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-2.C'
    sources: {binary: Wsign-compare-2.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned integer expressions")[^\n]*\n?)+'}
test_Wsign-compare-2_518:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-2.C'
    sources: {binary: Wsign-compare-2.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned integer expressions")[^\n]*\n?)+'}
test_Wsign-compare-2_519:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-2.C'
    sources: {binary: Wsign-compare-2.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned integer expressions")[^\n]*\n?)+'}
test_Wsign-compare-3_1989:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-3.C'
    sources: {binary: Wsign-compare-3.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-3_1990:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-3.C'
    sources: {binary: Wsign-compare-3.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-3_1991:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-3.C'
    sources: {binary: Wsign-compare-3.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-3_520:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-3.C'
    sources: {binary: Wsign-compare-3.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-3_521:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-3.C'
    sources: {binary: Wsign-compare-3.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-3_522:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-3.C'
    sources: {binary: Wsign-compare-3.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-4_1992:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-4.C'
    sources: {binary: Wsign-compare-4.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned")[^\n]*\n?)+'}
test_Wsign-compare-4_1993:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-4.C'
    sources: {binary: Wsign-compare-4.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned")[^\n]*\n?)+'}
test_Wsign-compare-4_1994:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-4.C'
    sources: {binary: Wsign-compare-4.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned")[^\n]*\n?)+'}
test_Wsign-compare-4_523:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-4.C'
    sources: {binary: Wsign-compare-4.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned")[^\n]*\n?)+'}
test_Wsign-compare-4_524:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-4.C'
    sources: {binary: Wsign-compare-4.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned")[^\n]*\n?)+'}
test_Wsign-compare-4_525:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-4.C'
    sources: {binary: Wsign-compare-4.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          between signed and unsigned")[^\n]*\n?)+'}
test_Wsign-compare-5_1995:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-5.C'
    sources: {binary: Wsign-compare-5.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-5_1996:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-5.C'
    sources: {binary: Wsign-compare-5.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-5_1997:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-5.C'
    sources: {binary: Wsign-compare-5.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-5_526:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-5.C'
    sources: {binary: Wsign-compare-5.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-5_527:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-5.C'
    sources: {binary: Wsign-compare-5.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-5_528:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-5.C'
    sources: {binary: Wsign-compare-5.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_Wsign-compare-6_1998:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-6.C'
    sources: {binary: Wsign-compare-6.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("5:comparison
          between signed and unsigned")[^\n]*\n?)+'}
test_Wsign-compare-6_1999:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-6.C'
    sources: {binary: Wsign-compare-6.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("5:comparison
          between signed and unsigned")[^\n]*\n?)+'}
test_Wsign-compare-6_2000:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-6.C'
    sources: {binary: Wsign-compare-6.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("5:comparison
          between signed and unsigned")[^\n]*\n?)+'}
test_Wsign-compare-6_529:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-6.C'
    sources: {binary: Wsign-compare-6.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("5:comparison
          between signed and unsigned")[^\n]*\n?)+'}
test_Wsign-compare-6_530:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-6.C'
    sources: {binary: Wsign-compare-6.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("5:comparison
          between signed and unsigned")[^\n]*\n?)+'}
test_Wsign-compare-6_531:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-6.C'
    sources: {binary: Wsign-compare-6.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("5:comparison
          between signed and unsigned")[^\n]*\n?)+'}
test_Wsign-compare-7_2001:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-7.C'
    sources: {binary: Wsign-compare-7.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("signed")[^\n]*\n?)+'}
test_Wsign-compare-7_2002:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-7.C'
    sources: {binary: Wsign-compare-7.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("signed")[^\n]*\n?)+'}
test_Wsign-compare-7_2003:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-7.C'
    sources: {binary: Wsign-compare-7.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("signed")[^\n]*\n?)+'}
test_Wsign-compare-7_532:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-7.C'
    sources: {binary: Wsign-compare-7.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("signed")[^\n]*\n?)+'}
test_Wsign-compare-7_533:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-7.C'
    sources: {binary: Wsign-compare-7.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("signed")[^\n]*\n?)+'}
test_Wsign-compare-7_534:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-compare-7.C'
    sources: {binary: Wsign-compare-7.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("signed")[^\n]*\n?)+'}
test_Wsign-conversion-2_2004:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-conversion-2.C'
    sources: {binary: Wsign-conversion-2.s, cflags: "-std=gnu++98 -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
test_Wsign-conversion-2_2005:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-conversion-2.C'
    sources: {binary: Wsign-conversion-2.s, cflags: "-std=gnu++11 -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
test_Wsign-conversion-2_2006:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-conversion-2.C'
    sources: {binary: Wsign-conversion-2.s, cflags: "-std=gnu++14 -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
test_Wsign-conversion-2_535:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-conversion-2.C'
    sources: {binary: Wsign-conversion-2.s, cflags: "-std=gnu++98 -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
test_Wsign-conversion-2_536:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-conversion-2.C'
    sources: {binary: Wsign-conversion-2.s, cflags: "-std=gnu++11 -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
test_Wsign-conversion-2_537:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-conversion-2.C'
    sources: {binary: Wsign-conversion-2.s, cflags: "-std=gnu++14 -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
test_Wsign-conversion_2007:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-conversion.C'
    sources: {binary: Wsign-conversion.s, cflags: "-std=gnu++98 -fsigned-char -Wsign-conversion
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
test_Wsign-conversion_2008:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-conversion.C'
    sources: {binary: Wsign-conversion.s, cflags: "-std=gnu++11 -fsigned-char -Wsign-conversion
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
test_Wsign-conversion_2009:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-conversion.C'
    sources: {binary: Wsign-conversion.s, cflags: "-std=gnu++14 -fsigned-char -Wsign-conversion
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
test_Wsign-conversion_538:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-conversion.C'
    sources: {binary: Wsign-conversion.s, cflags: "-std=gnu++98 -fsigned-char -Wsign-conversion
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
test_Wsign-conversion_539:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-conversion.C'
    sources: {binary: Wsign-conversion.s, cflags: "-std=gnu++11 -fsigned-char -Wsign-conversion
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
test_Wsign-conversion_540:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsign-conversion.C'
    sources: {binary: Wsign-conversion.s, cflags: "-std=gnu++14 -fsigned-char -Wsign-conversion
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L90: {expect: true, expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L91: {expect: true, expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
test_Wsizeof-pointer-memaccess-1_2010:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsizeof-pointer-memaccess-1.C'
    sources: {binary: Wsizeof-pointer-memaccess-1.s, cflags: "-std=gnu++98 -Wall -Wno-sizeof-array-argument\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("call
          is the same expression as the destination; did you mean to provide an explicit
          length?")[^\n]*\n?)+'}
test_Wsizeof-pointer-memaccess-1_2011:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsizeof-pointer-memaccess-1.C'
    sources: {binary: Wsizeof-pointer-memaccess-1.s, cflags: "-std=gnu++11 -Wall -Wno-sizeof-array-argument\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("call
          is the same expression as the destination; did you mean to provide an explicit
          length?")[^\n]*\n?)+'}
test_Wsizeof-pointer-memaccess-1_2012:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsizeof-pointer-memaccess-1.C'
    sources: {binary: Wsizeof-pointer-memaccess-1.s, cflags: "-std=gnu++14 -Wall -Wno-sizeof-array-argument\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("call
          is the same expression as the destination; did you mean to provide an explicit
          length?")[^\n]*\n?)+'}
test_Wsizeof-pointer-memaccess-1_541:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsizeof-pointer-memaccess-1.C'
    sources: {binary: Wsizeof-pointer-memaccess-1.s, cflags: "-std=gnu++98 -Wall -Wno-sizeof-array-argument\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("call
          is the same expression as the destination; did you mean to provide an explicit
          length?")[^\n]*\n?)+'}
test_Wsizeof-pointer-memaccess-1_542:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsizeof-pointer-memaccess-1.C'
    sources: {binary: Wsizeof-pointer-memaccess-1.s, cflags: "-std=gnu++11 -Wall -Wno-sizeof-array-argument\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("call
          is the same expression as the destination; did you mean to provide an explicit
          length?")[^\n]*\n?)+'}
test_Wsizeof-pointer-memaccess-1_543:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsizeof-pointer-memaccess-1.C'
    sources: {binary: Wsizeof-pointer-memaccess-1.s, cflags: "-std=gnu++14 -Wall -Wno-sizeof-array-argument\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("call
          is the same expression as the destination; did you mean to provide an explicit
          length?")[^\n]*\n?)+'}
test_Wstrict-aliasing-1_2013:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-1.C'
    sources: {binary: Wstrict-aliasing-1.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-1_2014:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-1.C'
    sources: {binary: Wstrict-aliasing-1.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-1_2015:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-1.C'
    sources: {binary: Wstrict-aliasing-1.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-1_544:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-1.C'
    sources: {binary: Wstrict-aliasing-1.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-1_545:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-1.C'
    sources: {binary: Wstrict-aliasing-1.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-1_546:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-1.C'
    sources: {binary: Wstrict-aliasing-1.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-2_2016:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-2.C'
    sources: {binary: Wstrict-aliasing-2.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-2_2017:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-2.C'
    sources: {binary: Wstrict-aliasing-2.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-2_2018:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-2.C'
    sources: {binary: Wstrict-aliasing-2.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-2_547:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-2.C'
    sources: {binary: Wstrict-aliasing-2.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-2_548:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-2.C'
    sources: {binary: Wstrict-aliasing-2.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-2_549:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-2.C'
    sources: {binary: Wstrict-aliasing-2.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-3_2019:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-3.C'
    sources: {binary: Wstrict-aliasing-3.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-3_2020:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-3.C'
    sources: {binary: Wstrict-aliasing-3.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-3_2021:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-3.C'
    sources: {binary: Wstrict-aliasing-3.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-3_550:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-3.C'
    sources: {binary: Wstrict-aliasing-3.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-3_551:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-3.C'
    sources: {binary: Wstrict-aliasing-3.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-3_552:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-3.C'
    sources: {binary: Wstrict-aliasing-3.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-4_2022:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-4.C'
    sources: {binary: Wstrict-aliasing-4.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-4_2023:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-4.C'
    sources: {binary: Wstrict-aliasing-4.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-4_2024:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-4.C'
    sources: {binary: Wstrict-aliasing-4.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-4_553:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-4.C'
    sources: {binary: Wstrict-aliasing-4.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-4_554:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-4.C'
    sources: {binary: Wstrict-aliasing-4.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-4_555:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-4.C'
    sources: {binary: Wstrict-aliasing-4.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-5_2025:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-5.C'
    sources: {binary: Wstrict-aliasing-5.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-5_2026:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-5.C'
    sources: {binary: Wstrict-aliasing-5.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-5_2027:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-5.C'
    sources: {binary: Wstrict-aliasing-5.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-5_556:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-5.C'
    sources: {binary: Wstrict-aliasing-5.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-5_557:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-5.C'
    sources: {binary: Wstrict-aliasing-5.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-5_558:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-5.C'
    sources: {binary: Wstrict-aliasing-5.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-6_2028:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-6.C'
    sources: {binary: Wstrict-aliasing-6.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-6_2029:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-6.C'
    sources: {binary: Wstrict-aliasing-6.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-6_2030:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-6.C'
    sources: {binary: Wstrict-aliasing-6.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-6_559:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-6.C'
    sources: {binary: Wstrict-aliasing-6.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-6_560:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-6.C'
    sources: {binary: Wstrict-aliasing-6.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-6_561:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-6.C'
    sources: {binary: Wstrict-aliasing-6.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-7_2031:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-7.C'
    sources: {binary: Wstrict-aliasing-7.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-7_2032:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-7.C'
    sources: {binary: Wstrict-aliasing-7.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-7_2033:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-7.C'
    sources: {binary: Wstrict-aliasing-7.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-7_562:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-7.C'
    sources: {binary: Wstrict-aliasing-7.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-7_563:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-7.C'
    sources: {binary: Wstrict-aliasing-7.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-7_564:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-7.C'
    sources: {binary: Wstrict-aliasing-7.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-8_2034:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-8.C'
    sources: {binary: Wstrict-aliasing-8.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-8_2035:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-8.C'
    sources: {binary: Wstrict-aliasing-8.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-8_2036:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-8.C'
    sources: {binary: Wstrict-aliasing-8.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-8_565:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-8.C'
    sources: {binary: Wstrict-aliasing-8.s, cflags: "-std=gnu++98 -Wstrict-aliasing=2
        -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-8_566:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-8.C'
    sources: {binary: Wstrict-aliasing-8.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-8_567:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-8.C'
    sources: {binary: Wstrict-aliasing-8.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-bogus-base-derived_2037:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-base-derived.C'
    sources: {binary: Wstrict-aliasing-bogus-base-derived.s, cflags: "-std=gnu++98
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-base-derived_2038:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-base-derived.C'
    sources: {binary: Wstrict-aliasing-bogus-base-derived.s, cflags: "-std=gnu++11
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-base-derived_2039:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-base-derived.C'
    sources: {binary: Wstrict-aliasing-bogus-base-derived.s, cflags: "-std=gnu++14
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-base-derived_568:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-base-derived.C'
    sources: {binary: Wstrict-aliasing-bogus-base-derived.s, cflags: "-std=gnu++98
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-base-derived_569:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-base-derived.C'
    sources: {binary: Wstrict-aliasing-bogus-base-derived.s, cflags: "-std=gnu++11
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-base-derived_570:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-base-derived.C'
    sources: {binary: Wstrict-aliasing-bogus-base-derived.s, cflags: "-std=gnu++14
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-char-1_2040:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-char-1.C'
    sources: {binary: Wstrict-aliasing-bogus-char-1.s, cflags: "-std=gnu++98 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-char-1_2041:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-char-1.C'
    sources: {binary: Wstrict-aliasing-bogus-char-1.s, cflags: "-std=gnu++11 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-char-1_2042:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-char-1.C'
    sources: {binary: Wstrict-aliasing-bogus-char-1.s, cflags: "-std=gnu++14 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-char-1_571:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-char-1.C'
    sources: {binary: Wstrict-aliasing-bogus-char-1.s, cflags: "-std=gnu++98 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-char-1_572:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-char-1.C'
    sources: {binary: Wstrict-aliasing-bogus-char-1.s, cflags: "-std=gnu++11 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-char-1_573:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-char-1.C'
    sources: {binary: Wstrict-aliasing-bogus-char-1.s, cflags: "-std=gnu++14 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-char-2_2043:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-char-2.C'
    sources: {binary: Wstrict-aliasing-bogus-char-2.s, cflags: "-std=gnu++98 -O2 -Wstrict-aliasing\n
        -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-char-2_2044:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-char-2.C'
    sources: {binary: Wstrict-aliasing-bogus-char-2.s, cflags: "-std=gnu++11 -O2 -Wstrict-aliasing\n
        -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-char-2_2045:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-char-2.C'
    sources: {binary: Wstrict-aliasing-bogus-char-2.s, cflags: "-std=gnu++14 -O2 -Wstrict-aliasing\n
        -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-char-2_574:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-char-2.C'
    sources: {binary: Wstrict-aliasing-bogus-char-2.s, cflags: "-std=gnu++98 -O2 -Wstrict-aliasing\n
        -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-char-2_575:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-char-2.C'
    sources: {binary: Wstrict-aliasing-bogus-char-2.s, cflags: "-std=gnu++11 -O2 -Wstrict-aliasing\n
        -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-char-2_576:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-char-2.C'
    sources: {binary: Wstrict-aliasing-bogus-char-2.s, cflags: "-std=gnu++14 -O2 -Wstrict-aliasing\n
        -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-const_2046:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-const.C'
    sources: {binary: Wstrict-aliasing-bogus-const.s, cflags: "-std=gnu++98 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-const_2047:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-const.C'
    sources: {binary: Wstrict-aliasing-bogus-const.s, cflags: "-std=gnu++11 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-const_2048:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-const.C'
    sources: {binary: Wstrict-aliasing-bogus-const.s, cflags: "-std=gnu++14 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-const_577:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-const.C'
    sources: {binary: Wstrict-aliasing-bogus-const.s, cflags: "-std=gnu++98 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-const_578:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-const.C'
    sources: {binary: Wstrict-aliasing-bogus-const.s, cflags: "-std=gnu++11 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-const_579:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-const.C'
    sources: {binary: Wstrict-aliasing-bogus-const.s, cflags: "-std=gnu++14 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape-2_2049:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape-2.C'
    sources: {binary: Wstrict-aliasing-bogus-escape-2.s, cflags: "-std=gnu++98 -O2
        -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape-2_2050:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape-2.C'
    sources: {binary: Wstrict-aliasing-bogus-escape-2.s, cflags: "-std=gnu++11 -O2
        -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape-2_2051:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape-2.C'
    sources: {binary: Wstrict-aliasing-bogus-escape-2.s, cflags: "-std=gnu++14 -O2
        -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape-2_580:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape-2.C'
    sources: {binary: Wstrict-aliasing-bogus-escape-2.s, cflags: "-std=gnu++98 -O2
        -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape-2_581:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape-2.C'
    sources: {binary: Wstrict-aliasing-bogus-escape-2.s, cflags: "-std=gnu++11 -O2
        -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape-2_582:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape-2.C'
    sources: {binary: Wstrict-aliasing-bogus-escape-2.s, cflags: "-std=gnu++14 -O2
        -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape-3_2052:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape-3.C'
    sources: {binary: Wstrict-aliasing-bogus-escape-3.s, cflags: "-std=gnu++98 -O2
        -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape-3_2053:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape-3.C'
    sources: {binary: Wstrict-aliasing-bogus-escape-3.s, cflags: "-std=gnu++11 -O2
        -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape-3_2054:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape-3.C'
    sources: {binary: Wstrict-aliasing-bogus-escape-3.s, cflags: "-std=gnu++14 -O2
        -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape-3_583:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape-3.C'
    sources: {binary: Wstrict-aliasing-bogus-escape-3.s, cflags: "-std=gnu++98 -O2
        -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape-3_584:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape-3.C'
    sources: {binary: Wstrict-aliasing-bogus-escape-3.s, cflags: "-std=gnu++11 -O2
        -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape-3_585:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape-3.C'
    sources: {binary: Wstrict-aliasing-bogus-escape-3.s, cflags: "-std=gnu++14 -O2
        -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape_2055:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape.C'
    sources: {binary: Wstrict-aliasing-bogus-escape.s, cflags: "-std=gnu++98 -O2 -Wstrict-aliasing\n
        -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape_2056:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape.C'
    sources: {binary: Wstrict-aliasing-bogus-escape.s, cflags: "-std=gnu++11 -O2 -Wstrict-aliasing\n
        -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape_2057:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape.C'
    sources: {binary: Wstrict-aliasing-bogus-escape.s, cflags: "-std=gnu++14 -O2 -Wstrict-aliasing\n
        -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape_586:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape.C'
    sources: {binary: Wstrict-aliasing-bogus-escape.s, cflags: "-std=gnu++98 -O2 -Wstrict-aliasing\n
        -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape_587:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape.C'
    sources: {binary: Wstrict-aliasing-bogus-escape.s, cflags: "-std=gnu++11 -O2 -Wstrict-aliasing\n
        -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-escape_588:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-escape.C'
    sources: {binary: Wstrict-aliasing-bogus-escape.s, cflags: "-std=gnu++14 -O2 -Wstrict-aliasing\n
        -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-nested-arrays_2058:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-nested-arrays.C'
    sources: {binary: Wstrict-aliasing-bogus-nested-arrays.s, cflags: "-std=gnu++98
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-nested-arrays_2059:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-nested-arrays.C'
    sources: {binary: Wstrict-aliasing-bogus-nested-arrays.s, cflags: "-std=gnu++11
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-nested-arrays_2060:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-nested-arrays.C'
    sources: {binary: Wstrict-aliasing-bogus-nested-arrays.s, cflags: "-std=gnu++14
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-nested-arrays_589:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-nested-arrays.C'
    sources: {binary: Wstrict-aliasing-bogus-nested-arrays.s, cflags: "-std=gnu++98
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-nested-arrays_590:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-nested-arrays.C'
    sources: {binary: Wstrict-aliasing-bogus-nested-arrays.s, cflags: "-std=gnu++11
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-nested-arrays_591:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-nested-arrays.C'
    sources: {binary: Wstrict-aliasing-bogus-nested-arrays.s, cflags: "-std=gnu++14
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-placement-new_2061:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-placement-new.C'
    sources: {binary: Wstrict-aliasing-bogus-placement-new.s, cflags: "-std=gnu++98
        -O2 -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-placement-new_2062:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-placement-new.C'
    sources: {binary: Wstrict-aliasing-bogus-placement-new.s, cflags: "-std=gnu++11
        -O2 -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-placement-new_2063:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-placement-new.C'
    sources: {binary: Wstrict-aliasing-bogus-placement-new.s, cflags: "-std=gnu++14
        -O2 -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-placement-new_592:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-placement-new.C'
    sources: {binary: Wstrict-aliasing-bogus-placement-new.s, cflags: "-std=gnu++98
        -O2 -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-placement-new_593:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-placement-new.C'
    sources: {binary: Wstrict-aliasing-bogus-placement-new.s, cflags: "-std=gnu++11
        -O2 -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-placement-new_594:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-placement-new.C'
    sources: {binary: Wstrict-aliasing-bogus-placement-new.s, cflags: "-std=gnu++14
        -O2 -Wstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-signed-unsigned_2064:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-signed-unsigned.C'
    sources: {binary: Wstrict-aliasing-bogus-signed-unsigned.s, cflags: "-std=gnu++98
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-signed-unsigned_2065:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-signed-unsigned.C'
    sources: {binary: Wstrict-aliasing-bogus-signed-unsigned.s, cflags: "-std=gnu++11
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-signed-unsigned_2066:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-signed-unsigned.C'
    sources: {binary: Wstrict-aliasing-bogus-signed-unsigned.s, cflags: "-std=gnu++14
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-signed-unsigned_595:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-signed-unsigned.C'
    sources: {binary: Wstrict-aliasing-bogus-signed-unsigned.s, cflags: "-std=gnu++98
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-signed-unsigned_596:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-signed-unsigned.C'
    sources: {binary: Wstrict-aliasing-bogus-signed-unsigned.s, cflags: "-std=gnu++11
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-signed-unsigned_597:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-signed-unsigned.C'
    sources: {binary: Wstrict-aliasing-bogus-signed-unsigned.s, cflags: "-std=gnu++14
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-struct-included_2067:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-struct-included.C'
    sources: {binary: Wstrict-aliasing-bogus-struct-included.s, cflags: "-std=gnu++98
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-struct-included_2068:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-struct-included.C'
    sources: {binary: Wstrict-aliasing-bogus-struct-included.s, cflags: "-std=gnu++11
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-struct-included_2069:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-struct-included.C'
    sources: {binary: Wstrict-aliasing-bogus-struct-included.s, cflags: "-std=gnu++14
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-struct-included_598:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-struct-included.C'
    sources: {binary: Wstrict-aliasing-bogus-struct-included.s, cflags: "-std=gnu++98
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-struct-included_599:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-struct-included.C'
    sources: {binary: Wstrict-aliasing-bogus-struct-included.s, cflags: "-std=gnu++11
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-struct-included_600:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-struct-included.C'
    sources: {binary: Wstrict-aliasing-bogus-struct-included.s, cflags: "-std=gnu++14
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-union-2_2070:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-union-2.C'
    sources: {binary: Wstrict-aliasing-bogus-union-2.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2 -Wall\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-union-2_2071:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-union-2.C'
    sources: {binary: Wstrict-aliasing-bogus-union-2.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2 -Wall\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-union-2_601:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-union-2.C'
    sources: {binary: Wstrict-aliasing-bogus-union-2.s, cflags: "-std=gnu++11 -Wstrict-aliasing=2
        -O2 -Wall\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-union-2_602:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-union-2.C'
    sources: {binary: Wstrict-aliasing-bogus-union-2.s, cflags: "-std=gnu++14 -Wstrict-aliasing=2
        -O2 -Wall\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-union_2072:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-union.C'
    sources: {binary: Wstrict-aliasing-bogus-union.s, cflags: "-std=gnu++98 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-union_2073:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-union.C'
    sources: {binary: Wstrict-aliasing-bogus-union.s, cflags: "-std=gnu++11 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-union_2074:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-union.C'
    sources: {binary: Wstrict-aliasing-bogus-union.s, cflags: "-std=gnu++14 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-union_603:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-union.C'
    sources: {binary: Wstrict-aliasing-bogus-union.s, cflags: "-std=gnu++98 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-union_604:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-union.C'
    sources: {binary: Wstrict-aliasing-bogus-union.s, cflags: "-std=gnu++11 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-bogus-union_605:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-bogus-union.C'
    sources: {binary: Wstrict-aliasing-bogus-union.s, cflags: "-std=gnu++14 -O2 -Wstrict-aliasing
        -fstrict-aliasing\n -S"}
  group: GRPSERIAL
test_Wstrict-aliasing-float-ref-int-obj_2075:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-float-ref-int-obj.C'
    sources: {binary: Wstrict-aliasing-float-ref-int-obj.s, cflags: "-std=gnu++98
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("does
          break strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-float-ref-int-obj_2076:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-float-ref-int-obj.C'
    sources: {binary: Wstrict-aliasing-float-ref-int-obj.s, cflags: "-std=gnu++11
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("does
          break strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-float-ref-int-obj_2077:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-float-ref-int-obj.C'
    sources: {binary: Wstrict-aliasing-float-ref-int-obj.s, cflags: "-std=gnu++14
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("does
          break strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-float-ref-int-obj_606:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-float-ref-int-obj.C'
    sources: {binary: Wstrict-aliasing-float-ref-int-obj.s, cflags: "-std=gnu++98
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("does
          break strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-float-ref-int-obj_607:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-float-ref-int-obj.C'
    sources: {binary: Wstrict-aliasing-float-ref-int-obj.s, cflags: "-std=gnu++11
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("does
          break strict-aliasing")[^\n]*\n?)+'}
test_Wstrict-aliasing-float-ref-int-obj_608:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstrict-aliasing-float-ref-int-obj.C'
    sources: {binary: Wstrict-aliasing-float-ref-int-obj.s, cflags: "-std=gnu++14
        -O2 -Wstrict-aliasing -fstrict-aliasing\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("does
          break strict-aliasing")[^\n]*\n?)+'}
test_Wstring-literal-comparison-1_2078:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-1.C'
    sources: {binary: Wstring-literal-comparison-1.s, cflags: "-std=gnu++98 -Waddress\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          with string")[^\n]*\n?)+'}
test_Wstring-literal-comparison-1_2079:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-1.C'
    sources: {binary: Wstring-literal-comparison-1.s, cflags: "-std=gnu++11 -Waddress\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          with string")[^\n]*\n?)+'}
test_Wstring-literal-comparison-1_2080:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-1.C'
    sources: {binary: Wstring-literal-comparison-1.s, cflags: "-std=gnu++14 -Waddress\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          with string")[^\n]*\n?)+'}
test_Wstring-literal-comparison-1_609:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-1.C'
    sources: {binary: Wstring-literal-comparison-1.s, cflags: "-std=gnu++98 -Waddress\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          with string")[^\n]*\n?)+'}
test_Wstring-literal-comparison-1_610:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-1.C'
    sources: {binary: Wstring-literal-comparison-1.s, cflags: "-std=gnu++11 -Waddress\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          with string")[^\n]*\n?)+'}
test_Wstring-literal-comparison-1_611:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-1.C'
    sources: {binary: Wstring-literal-comparison-1.s, cflags: "-std=gnu++14 -Waddress\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          with string")[^\n]*\n?)+'}
test_Wstring-literal-comparison-2_2081:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-2.C'
    sources: {binary: Wstring-literal-comparison-2.s, cflags: "-std=gnu++98 -Wall\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          with string")[^\n]*\n?)+'}
test_Wstring-literal-comparison-2_2082:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-2.C'
    sources: {binary: Wstring-literal-comparison-2.s, cflags: "-std=gnu++11 -Wall\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          with string")[^\n]*\n?)+'}
test_Wstring-literal-comparison-2_2083:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-2.C'
    sources: {binary: Wstring-literal-comparison-2.s, cflags: "-std=gnu++14 -Wall\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          with string")[^\n]*\n?)+'}
test_Wstring-literal-comparison-2_612:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-2.C'
    sources: {binary: Wstring-literal-comparison-2.s, cflags: "-std=gnu++98 -Wall\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          with string")[^\n]*\n?)+'}
test_Wstring-literal-comparison-2_613:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-2.C'
    sources: {binary: Wstring-literal-comparison-2.s, cflags: "-std=gnu++11 -Wall\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          with string")[^\n]*\n?)+'}
test_Wstring-literal-comparison-2_614:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-2.C'
    sources: {binary: Wstring-literal-comparison-2.s, cflags: "-std=gnu++14 -Wall\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          with string")[^\n]*\n?)+'}
test_Wstring-literal-comparison-3_2084:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-3.C'
    sources: {binary: Wstring-literal-comparison-3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_Wstring-literal-comparison-3_2085:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-3.C'
    sources: {binary: Wstring-literal-comparison-3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_Wstring-literal-comparison-3_2086:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-3.C'
    sources: {binary: Wstring-literal-comparison-3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_Wstring-literal-comparison-3_615:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-3.C'
    sources: {binary: Wstring-literal-comparison-3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_Wstring-literal-comparison-3_616:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-3.C'
    sources: {binary: Wstring-literal-comparison-3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_Wstring-literal-comparison-3_617:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-3.C'
    sources: {binary: Wstring-literal-comparison-3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_Wstring-literal-comparison-4_2087:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-4.C'
    sources: {binary: Wstring-literal-comparison-4.s, cflags: "-std=gnu++98 -Wall
        -Wno-address\n -S"}
  group: GRPSERIAL
test_Wstring-literal-comparison-4_2088:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-4.C'
    sources: {binary: Wstring-literal-comparison-4.s, cflags: "-std=gnu++11 -Wall
        -Wno-address\n -S"}
  group: GRPSERIAL
test_Wstring-literal-comparison-4_2089:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-4.C'
    sources: {binary: Wstring-literal-comparison-4.s, cflags: "-std=gnu++14 -Wall
        -Wno-address\n -S"}
  group: GRPSERIAL
test_Wstring-literal-comparison-4_618:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-4.C'
    sources: {binary: Wstring-literal-comparison-4.s, cflags: "-std=gnu++98 -Wall
        -Wno-address\n -S"}
  group: GRPSERIAL
test_Wstring-literal-comparison-4_619:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-4.C'
    sources: {binary: Wstring-literal-comparison-4.s, cflags: "-std=gnu++11 -Wall
        -Wno-address\n -S"}
  group: GRPSERIAL
test_Wstring-literal-comparison-4_620:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wstring-literal-comparison-4.C'
    sources: {binary: Wstring-literal-comparison-4.s, cflags: "-std=gnu++14 -Wall
        -Wno-address\n -S"}
  group: GRPSERIAL
test_Wsubobject-linkage-1_2090:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-1.C'
    sources: {binary: Wsubobject-linkage-1.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("no
          linkage")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("no
          linkage")[^\n]*\n?)+'}
test_Wsubobject-linkage-1_2091:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-1.C'
    sources: {binary: Wsubobject-linkage-1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("no
          linkage")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("no
          linkage")[^\n]*\n?)+'}
test_Wsubobject-linkage-1_2092:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-1.C'
    sources: {binary: Wsubobject-linkage-1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("no
          linkage")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("no
          linkage")[^\n]*\n?)+'}
test_Wsubobject-linkage-1_621:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-1.C'
    sources: {binary: Wsubobject-linkage-1.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("no
          linkage")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("no
          linkage")[^\n]*\n?)+'}
test_Wsubobject-linkage-1_622:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-1.C'
    sources: {binary: Wsubobject-linkage-1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("no
          linkage")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("no
          linkage")[^\n]*\n?)+'}
test_Wsubobject-linkage-1_623:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-1.C'
    sources: {binary: Wsubobject-linkage-1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("no
          linkage")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("no
          linkage")[^\n]*\n?)+'}
test_Wsubobject-linkage-2_2093:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-2.C'
    sources: {binary: Wsubobject-linkage-2.s, cflags: "-std=gnu++98 -Wno-subobject-linkage\n
        -S"}
  group: GRPSERIAL
test_Wsubobject-linkage-2_2094:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-2.C'
    sources: {binary: Wsubobject-linkage-2.s, cflags: "-std=gnu++11 -Wno-subobject-linkage\n
        -S"}
  group: GRPSERIAL
test_Wsubobject-linkage-2_2095:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-2.C'
    sources: {binary: Wsubobject-linkage-2.s, cflags: "-std=gnu++14 -Wno-subobject-linkage\n
        -S"}
  group: GRPSERIAL
test_Wsubobject-linkage-2_624:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-2.C'
    sources: {binary: Wsubobject-linkage-2.s, cflags: "-std=gnu++98 -Wno-subobject-linkage\n
        -S"}
  group: GRPSERIAL
test_Wsubobject-linkage-2_625:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-2.C'
    sources: {binary: Wsubobject-linkage-2.s, cflags: "-std=gnu++11 -Wno-subobject-linkage\n
        -S"}
  group: GRPSERIAL
test_Wsubobject-linkage-2_626:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-2.C'
    sources: {binary: Wsubobject-linkage-2.s, cflags: "-std=gnu++14 -Wno-subobject-linkage\n
        -S"}
  group: GRPSERIAL
test_Wsubobject-linkage-3_2096:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-3.C'
    sources: {binary: Wsubobject-linkage-3.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          namespace")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          namespace")[^\n]*\n?)+'}
test_Wsubobject-linkage-3_2097:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-3.C'
    sources: {binary: Wsubobject-linkage-3.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          namespace")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          namespace")[^\n]*\n?)+'}
test_Wsubobject-linkage-3_2098:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-3.C'
    sources: {binary: Wsubobject-linkage-3.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          namespace")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          namespace")[^\n]*\n?)+'}
test_Wsubobject-linkage-3_627:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-3.C'
    sources: {binary: Wsubobject-linkage-3.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          namespace")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          namespace")[^\n]*\n?)+'}
test_Wsubobject-linkage-3_628:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-3.C'
    sources: {binary: Wsubobject-linkage-3.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          namespace")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          namespace")[^\n]*\n?)+'}
test_Wsubobject-linkage-3_629:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-3.C'
    sources: {binary: Wsubobject-linkage-3.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          namespace")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("anonymous
          namespace")[^\n]*\n?)+'}
test_Wsubobject-linkage-4_2099:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-4.C'
    sources: {binary: Wsubobject-linkage-4.s, cflags: "-std=gnu++98 -Wno-subobject-linkage\n
        -S"}
  group: GRPSERIAL
test_Wsubobject-linkage-4_2100:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-4.C'
    sources: {binary: Wsubobject-linkage-4.s, cflags: "-std=gnu++11 -Wno-subobject-linkage\n
        -S"}
  group: GRPSERIAL
test_Wsubobject-linkage-4_2101:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-4.C'
    sources: {binary: Wsubobject-linkage-4.s, cflags: "-std=gnu++14 -Wno-subobject-linkage\n
        -S"}
  group: GRPSERIAL
test_Wsubobject-linkage-4_630:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-4.C'
    sources: {binary: Wsubobject-linkage-4.s, cflags: "-std=gnu++98 -Wno-subobject-linkage\n
        -S"}
  group: GRPSERIAL
test_Wsubobject-linkage-4_631:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-4.C'
    sources: {binary: Wsubobject-linkage-4.s, cflags: "-std=gnu++11 -Wno-subobject-linkage\n
        -S"}
  group: GRPSERIAL
test_Wsubobject-linkage-4_632:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsubobject-linkage-4.C'
    sources: {binary: Wsubobject-linkage-4.s, cflags: "-std=gnu++14 -Wno-subobject-linkage\n
        -S"}
  group: GRPSERIAL
test_Wsuggest-final-2_2102:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsuggest-final-2.C'
    sources: {binary: Wsuggest-final-2.s, cflags: "-std=gnu++98 -O2 -Wsuggest-final-types\n
        -S"}
  group: GRPSERIAL
test_Wsuggest-final-2_2103:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsuggest-final-2.C'
    sources: {binary: Wsuggest-final-2.s, cflags: "-std=gnu++11 -O2 -Wsuggest-final-types\n
        -S"}
  group: GRPSERIAL
test_Wsuggest-final-2_2104:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsuggest-final-2.C'
    sources: {binary: Wsuggest-final-2.s, cflags: "-std=gnu++14 -O2 -Wsuggest-final-types\n
        -S"}
  group: GRPSERIAL
test_Wsuggest-final-2_633:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsuggest-final-2.C'
    sources: {binary: Wsuggest-final-2.s, cflags: "-std=gnu++98 -O2 -Wsuggest-final-types\n
        -S"}
  group: GRPSERIAL
test_Wsuggest-final-2_634:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsuggest-final-2.C'
    sources: {binary: Wsuggest-final-2.s, cflags: "-std=gnu++11 -O2 -Wsuggest-final-types\n
        -S"}
  group: GRPSERIAL
test_Wsuggest-final-2_635:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsuggest-final-2.C'
    sources: {binary: Wsuggest-final-2.s, cflags: "-std=gnu++14 -O2 -Wsuggest-final-types\n
        -S"}
  group: GRPSERIAL
test_Wsuggest-final_2105:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsuggest-final.C'
    sources: {binary: Wsuggest-final.s, cflags: "-std=gnu++98 -O2 -Wsuggest-final-types
        -Wsuggest-final-methods\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 4 calls")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 2 calls")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 2 calls")[^\n]*\n?)+'}
test_Wsuggest-final_2106:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsuggest-final.C'
    sources: {binary: Wsuggest-final.s, cflags: "-std=gnu++11 -O2 -Wsuggest-final-types
        -Wsuggest-final-methods\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 4 calls")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 2 calls")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 2 calls")[^\n]*\n?)+'}
test_Wsuggest-final_2107:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsuggest-final.C'
    sources: {binary: Wsuggest-final.s, cflags: "-std=gnu++14 -O2 -Wsuggest-final-types
        -Wsuggest-final-methods\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 4 calls")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 2 calls")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 2 calls")[^\n]*\n?)+'}
test_Wsuggest-final_636:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsuggest-final.C'
    sources: {binary: Wsuggest-final.s, cflags: "-std=gnu++98 -O2 -Wsuggest-final-types
        -Wsuggest-final-methods\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 4 calls")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 2 calls")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 2 calls")[^\n]*\n?)+'}
test_Wsuggest-final_637:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsuggest-final.C'
    sources: {binary: Wsuggest-final.s, cflags: "-std=gnu++11 -O2 -Wsuggest-final-types
        -Wsuggest-final-methods\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 4 calls")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 2 calls")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 2 calls")[^\n]*\n?)+'}
test_Wsuggest-final_638:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsuggest-final.C'
    sources: {binary: Wsuggest-final.s, cflags: "-std=gnu++14 -O2 -Wsuggest-final-types
        -Wsuggest-final-methods\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 4 calls")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 2 calls")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("final
          would enable devirtualization of 2 calls")[^\n]*\n?)+'}
test_Wsuggest-override_2108:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsuggest-override.C'
    sources: {binary: Wsuggest-override.s, cflags: "-std=c++11 -Wsuggest-override\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("can
          be marked override")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("can
          be marked override")[^\n]*\n?)+'}
test_Wsuggest-override_639:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsuggest-override.C'
    sources: {binary: Wsuggest-override.s, cflags: "-std=c++11 -Wsuggest-override\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("can
          be marked override")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("can
          be marked override")[^\n]*\n?)+'}
test_Wswitch-1_2109:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-1.C'
    sources: {binary: Wswitch-1.s, cflags: "-std=gnu++98 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e1\'' not handled in switch")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e2\'' not handled in switch")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e2\'' not handled in switch")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("case
          value")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("case
          value")[^\n]*\n?)+'}
test_Wswitch-1_2110:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-1.C'
    sources: {binary: Wswitch-1.s, cflags: "-std=gnu++11 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e1\'' not handled in switch")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e2\'' not handled in switch")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e2\'' not handled in switch")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("case
          value")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("case
          value")[^\n]*\n?)+'}
test_Wswitch-1_2111:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-1.C'
    sources: {binary: Wswitch-1.s, cflags: "-std=gnu++14 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e1\'' not handled in switch")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e2\'' not handled in switch")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e2\'' not handled in switch")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("case
          value")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("case
          value")[^\n]*\n?)+'}
test_Wswitch-1_640:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-1.C'
    sources: {binary: Wswitch-1.s, cflags: "-std=gnu++98 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e1\'' not handled in switch")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e2\'' not handled in switch")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e2\'' not handled in switch")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("case
          value")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("case
          value")[^\n]*\n?)+'}
test_Wswitch-1_641:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-1.C'
    sources: {binary: Wswitch-1.s, cflags: "-std=gnu++11 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e1\'' not handled in switch")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e2\'' not handled in switch")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e2\'' not handled in switch")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("case
          value")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("case
          value")[^\n]*\n?)+'}
test_Wswitch-1_642:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-1.C'
    sources: {binary: Wswitch-1.s, cflags: "-std=gnu++14 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e1\'' not handled in switch")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e2\'' not handled in switch")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e2\'' not handled in switch")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("case
          value")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("case
          value")[^\n]*\n?)+'}
test_Wswitch-2_2112:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-2.C'
    sources: {binary: Wswitch-2.s, cflags: "-std=gnu++98 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e4\'' not handled in switch")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e1\'' not handled in switch")[^\n]*\n?)+'}
test_Wswitch-2_2113:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-2.C'
    sources: {binary: Wswitch-2.s, cflags: "-std=gnu++11 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e4\'' not handled in switch")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e1\'' not handled in switch")[^\n]*\n?)+'}
test_Wswitch-2_2114:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-2.C'
    sources: {binary: Wswitch-2.s, cflags: "-std=gnu++14 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e4\'' not handled in switch")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e1\'' not handled in switch")[^\n]*\n?)+'}
test_Wswitch-2_643:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-2.C'
    sources: {binary: Wswitch-2.s, cflags: "-std=gnu++98 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e4\'' not handled in switch")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e1\'' not handled in switch")[^\n]*\n?)+'}
test_Wswitch-2_644:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-2.C'
    sources: {binary: Wswitch-2.s, cflags: "-std=gnu++11 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e4\'' not handled in switch")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e1\'' not handled in switch")[^\n]*\n?)+'}
test_Wswitch-2_645:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-2.C'
    sources: {binary: Wswitch-2.s, cflags: "-std=gnu++14 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e4\'' not handled in switch")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("enumeration
          value \''e1\'' not handled in switch")[^\n]*\n?)+'}
test_Wswitch-3_2115:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-3.C'
    sources: {binary: Wswitch-3.s, cflags: "-std=gnu++98 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not
          in enumerated type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not
          in enumerated type")[^\n]*\n?)+'}
test_Wswitch-3_2116:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-3.C'
    sources: {binary: Wswitch-3.s, cflags: "-std=gnu++11 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not
          in enumerated type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not
          in enumerated type")[^\n]*\n?)+'}
test_Wswitch-3_2117:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-3.C'
    sources: {binary: Wswitch-3.s, cflags: "-std=gnu++14 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not
          in enumerated type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not
          in enumerated type")[^\n]*\n?)+'}
test_Wswitch-3_646:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-3.C'
    sources: {binary: Wswitch-3.s, cflags: "-std=gnu++98 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not
          in enumerated type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not
          in enumerated type")[^\n]*\n?)+'}
test_Wswitch-3_647:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-3.C'
    sources: {binary: Wswitch-3.s, cflags: "-std=gnu++11 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not
          in enumerated type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not
          in enumerated type")[^\n]*\n?)+'}
test_Wswitch-3_648:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-3.C'
    sources: {binary: Wswitch-3.s, cflags: "-std=gnu++14 -Wswitch\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not
          in enumerated type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not
          in enumerated type")[^\n]*\n?)+'}
test_Wswitch-default-1_2118:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-default-1.C'
    sources: {binary: Wswitch-default-1.s, cflags: "-std=gnu++98 -Wswitch-default\n
        -S"}
  group: GRPSERIAL
test_Wswitch-default-1_2119:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-default-1.C'
    sources: {binary: Wswitch-default-1.s, cflags: "-std=gnu++11 -Wswitch-default\n
        -S"}
  group: GRPSERIAL
test_Wswitch-default-1_2120:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-default-1.C'
    sources: {binary: Wswitch-default-1.s, cflags: "-std=gnu++14 -Wswitch-default\n
        -S"}
  group: GRPSERIAL
test_Wswitch-default-1_649:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-default-1.C'
    sources: {binary: Wswitch-default-1.s, cflags: "-std=gnu++98 -Wswitch-default\n
        -S"}
  group: GRPSERIAL
test_Wswitch-default-1_650:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-default-1.C'
    sources: {binary: Wswitch-default-1.s, cflags: "-std=gnu++11 -Wswitch-default\n
        -S"}
  group: GRPSERIAL
test_Wswitch-default-1_651:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-default-1.C'
    sources: {binary: Wswitch-default-1.s, cflags: "-std=gnu++14 -Wswitch-default\n
        -S"}
  group: GRPSERIAL
test_Wswitch-default-2_2121:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-default-2.C'
    sources: {binary: Wswitch-default-2.s, cflags: "-std=gnu++98 -Wswitch-default\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("switch
          missing default case")[^\n]*\n?)+'}
test_Wswitch-default-2_2122:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-default-2.C'
    sources: {binary: Wswitch-default-2.s, cflags: "-std=gnu++11 -Wswitch-default\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("switch
          missing default case")[^\n]*\n?)+'}
test_Wswitch-default-2_2123:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-default-2.C'
    sources: {binary: Wswitch-default-2.s, cflags: "-std=gnu++14 -Wswitch-default\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("switch
          missing default case")[^\n]*\n?)+'}
test_Wswitch-default-2_652:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-default-2.C'
    sources: {binary: Wswitch-default-2.s, cflags: "-std=gnu++98 -Wswitch-default\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("switch
          missing default case")[^\n]*\n?)+'}
test_Wswitch-default-2_653:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-default-2.C'
    sources: {binary: Wswitch-default-2.s, cflags: "-std=gnu++11 -Wswitch-default\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("switch
          missing default case")[^\n]*\n?)+'}
test_Wswitch-default-2_654:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-default-2.C'
    sources: {binary: Wswitch-default-2.s, cflags: "-std=gnu++14 -Wswitch-default\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("switch
          missing default case")[^\n]*\n?)+'}
test_Wswitch-unreachable-1_2124:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-unreachable-1.C'
    sources: {binary: Wswitch-unreachable-1.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("statement
          will never be executed")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("statement
          will never be executed")[^\n]*\n?)+'}
test_Wswitch-unreachable-1_2125:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-unreachable-1.C'
    sources: {binary: Wswitch-unreachable-1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("statement
          will never be executed")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("statement
          will never be executed")[^\n]*\n?)+'}
test_Wswitch-unreachable-1_2126:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-unreachable-1.C'
    sources: {binary: Wswitch-unreachable-1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("statement
          will never be executed")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("statement
          will never be executed")[^\n]*\n?)+'}
test_Wswitch-unreachable-1_655:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-unreachable-1.C'
    sources: {binary: Wswitch-unreachable-1.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("statement
          will never be executed")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("statement
          will never be executed")[^\n]*\n?)+'}
test_Wswitch-unreachable-1_656:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-unreachable-1.C'
    sources: {binary: Wswitch-unreachable-1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("statement
          will never be executed")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("statement
          will never be executed")[^\n]*\n?)+'}
test_Wswitch-unreachable-1_657:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wswitch-unreachable-1.C'
    sources: {binary: Wswitch-unreachable-1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("statement
          will never be executed")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("statement
          will never be executed")[^\n]*\n?)+'}
test_Wsystem-headers1_2127:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsystem-headers1.C'
    sources: {binary: Wsystem-headers1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_Wsystem-headers1_2128:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsystem-headers1.C'
    sources: {binary: Wsystem-headers1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_Wsystem-headers1_2129:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsystem-headers1.C'
    sources: {binary: Wsystem-headers1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_Wsystem-headers1_658:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsystem-headers1.C'
    sources: {binary: Wsystem-headers1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_Wsystem-headers1_659:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsystem-headers1.C'
    sources: {binary: Wsystem-headers1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_Wsystem-headers1_660:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsystem-headers1.C'
    sources: {binary: Wsystem-headers1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_Wsystem-headers1a_2130:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsystem-headers1a.C'
    sources: {binary: Wsystem-headers1a.s, cflags: "-std=gnu++98 -Wsystem-headers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("different
          exception spec")[^\n]*\n?)+'}
test_Wsystem-headers1a_2131:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsystem-headers1a.C'
    sources: {binary: Wsystem-headers1a.s, cflags: "-std=gnu++11 -Wsystem-headers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("different
          exception spec")[^\n]*\n?)+'}
test_Wsystem-headers1a_2132:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsystem-headers1a.C'
    sources: {binary: Wsystem-headers1a.s, cflags: "-std=gnu++14 -Wsystem-headers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("different
          exception spec")[^\n]*\n?)+'}
test_Wsystem-headers1a_661:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsystem-headers1a.C'
    sources: {binary: Wsystem-headers1a.s, cflags: "-std=gnu++98 -Wsystem-headers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("different
          exception spec")[^\n]*\n?)+'}
test_Wsystem-headers1a_662:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsystem-headers1a.C'
    sources: {binary: Wsystem-headers1a.s, cflags: "-std=gnu++11 -Wsystem-headers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("different
          exception spec")[^\n]*\n?)+'}
test_Wsystem-headers1a_663:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wsystem-headers1a.C'
    sources: {binary: Wsystem-headers1a.s, cflags: "-std=gnu++14 -Wsystem-headers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("different
          exception spec")[^\n]*\n?)+'}
test_Wtautological-compare2_2136:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtautological-compare2.C'
    sources: {binary: Wtautological-compare2.s, cflags: "-std=gnu++98 -Wtautological-compare\n
        -S"}
  group: GRPSERIAL
test_Wtautological-compare2_2137:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtautological-compare2.C'
    sources: {binary: Wtautological-compare2.s, cflags: "-std=gnu++11 -Wtautological-compare\n
        -S"}
  group: GRPSERIAL
test_Wtautological-compare2_2138:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtautological-compare2.C'
    sources: {binary: Wtautological-compare2.s, cflags: "-std=gnu++14 -Wtautological-compare\n
        -S"}
  group: GRPSERIAL
test_Wtautological-compare2_667:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtautological-compare2.C'
    sources: {binary: Wtautological-compare2.s, cflags: "-std=gnu++98 -Wtautological-compare\n
        -S"}
  group: GRPSERIAL
test_Wtautological-compare2_668:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtautological-compare2.C'
    sources: {binary: Wtautological-compare2.s, cflags: "-std=gnu++11 -Wtautological-compare\n
        -S"}
  group: GRPSERIAL
test_Wtautological-compare2_669:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtautological-compare2.C'
    sources: {binary: Wtautological-compare2.s, cflags: "-std=gnu++14 -Wtautological-compare\n
        -S"}
  group: GRPSERIAL
test_Wtautological-compare_2133:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtautological-compare.C'
    sources: {binary: Wtautological-compare.s, cflags: "-std=gnu++98 -Wtautological-compare\n
        -S"}
  group: GRPSERIAL
test_Wtautological-compare_2134:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtautological-compare.C'
    sources: {binary: Wtautological-compare.s, cflags: "-std=gnu++11 -Wtautological-compare\n
        -S"}
  group: GRPSERIAL
test_Wtautological-compare_2135:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtautological-compare.C'
    sources: {binary: Wtautological-compare.s, cflags: "-std=gnu++14 -Wtautological-compare\n
        -S"}
  group: GRPSERIAL
test_Wtautological-compare_664:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtautological-compare.C'
    sources: {binary: Wtautological-compare.s, cflags: "-std=gnu++98 -Wtautological-compare\n
        -S"}
  group: GRPSERIAL
test_Wtautological-compare_665:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtautological-compare.C'
    sources: {binary: Wtautological-compare.s, cflags: "-std=gnu++11 -Wtautological-compare\n
        -S"}
  group: GRPSERIAL
test_Wtautological-compare_666:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtautological-compare.C'
    sources: {binary: Wtautological-compare.s, cflags: "-std=gnu++14 -Wtautological-compare\n
        -S"}
  group: GRPSERIAL
test_Wterminate1_2139:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wterminate1.C'
    sources: {binary: Wterminate1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("terminate")[^\n]*\n?)+'}
test_Wterminate1_2140:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wterminate1.C'
    sources: {binary: Wterminate1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("terminate")[^\n]*\n?)+'}
test_Wterminate1_2141:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wterminate1.C'
    sources: {binary: Wterminate1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("terminate")[^\n]*\n?)+'}
test_Wterminate1_670:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wterminate1.C'
    sources: {binary: Wterminate1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("terminate")[^\n]*\n?)+'}
test_Wterminate1_671:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wterminate1.C'
    sources: {binary: Wterminate1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("terminate")[^\n]*\n?)+'}
test_Wterminate1_672:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wterminate1.C'
    sources: {binary: Wterminate1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("terminate")[^\n]*\n?)+'}
test_Wtype-limits-Wextra_2142:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits-Wextra.C'
    sources: {binary: Wtype-limits-Wextra.s, cflags: "-std=gnu++98 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
test_Wtype-limits-Wextra_2143:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits-Wextra.C'
    sources: {binary: Wtype-limits-Wextra.s, cflags: "-std=gnu++11 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
test_Wtype-limits-Wextra_2144:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits-Wextra.C'
    sources: {binary: Wtype-limits-Wextra.s, cflags: "-std=gnu++14 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
test_Wtype-limits-Wextra_673:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits-Wextra.C'
    sources: {binary: Wtype-limits-Wextra.s, cflags: "-std=gnu++98 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
test_Wtype-limits-Wextra_674:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits-Wextra.C'
    sources: {binary: Wtype-limits-Wextra.s, cflags: "-std=gnu++11 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
test_Wtype-limits-Wextra_675:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits-Wextra.C'
    sources: {binary: Wtype-limits-Wextra.s, cflags: "-std=gnu++14 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
test_Wtype-limits-no_2145:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits-no.C'
    sources: {binary: Wtype-limits-no.s, cflags: "-std=gnu++98 -Wextra -Wno-type-limits\n
        -S"}
  group: GRPSERIAL
test_Wtype-limits-no_2146:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits-no.C'
    sources: {binary: Wtype-limits-no.s, cflags: "-std=gnu++11 -Wextra -Wno-type-limits\n
        -S"}
  group: GRPSERIAL
test_Wtype-limits-no_2147:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits-no.C'
    sources: {binary: Wtype-limits-no.s, cflags: "-std=gnu++14 -Wextra -Wno-type-limits\n
        -S"}
  group: GRPSERIAL
test_Wtype-limits-no_676:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits-no.C'
    sources: {binary: Wtype-limits-no.s, cflags: "-std=gnu++98 -Wextra -Wno-type-limits\n
        -S"}
  group: GRPSERIAL
test_Wtype-limits-no_677:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits-no.C'
    sources: {binary: Wtype-limits-no.s, cflags: "-std=gnu++11 -Wextra -Wno-type-limits\n
        -S"}
  group: GRPSERIAL
test_Wtype-limits-no_678:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits-no.C'
    sources: {binary: Wtype-limits-no.s, cflags: "-std=gnu++14 -Wextra -Wno-type-limits\n
        -S"}
  group: GRPSERIAL
test_Wtype-limits2_2151:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits2.C'
    sources: {binary: Wtype-limits2.s, cflags: "-std=gnu++98 -Wtype-limits\n -S"}
  group: GRPSERIAL
test_Wtype-limits2_2152:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits2.C'
    sources: {binary: Wtype-limits2.s, cflags: "-std=gnu++11 -Wtype-limits\n -S"}
  group: GRPSERIAL
test_Wtype-limits2_2153:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits2.C'
    sources: {binary: Wtype-limits2.s, cflags: "-std=gnu++14 -Wtype-limits\n -S"}
  group: GRPSERIAL
test_Wtype-limits2_682:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits2.C'
    sources: {binary: Wtype-limits2.s, cflags: "-std=gnu++98 -Wtype-limits\n -S"}
  group: GRPSERIAL
test_Wtype-limits2_683:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits2.C'
    sources: {binary: Wtype-limits2.s, cflags: "-std=gnu++11 -Wtype-limits\n -S"}
  group: GRPSERIAL
test_Wtype-limits2_684:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits2.C'
    sources: {binary: Wtype-limits2.s, cflags: "-std=gnu++14 -Wtype-limits\n -S"}
  group: GRPSERIAL
test_Wtype-limits_2148:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits.C'
    sources: {binary: Wtype-limits.s, cflags: "-std=gnu++98 -Wtype-limits\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
test_Wtype-limits_2149:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits.C'
    sources: {binary: Wtype-limits.s, cflags: "-std=gnu++11 -Wtype-limits\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
test_Wtype-limits_2150:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits.C'
    sources: {binary: Wtype-limits.s, cflags: "-std=gnu++14 -Wtype-limits\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
test_Wtype-limits_679:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits.C'
    sources: {binary: Wtype-limits.s, cflags: "-std=gnu++98 -Wtype-limits\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
test_Wtype-limits_680:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits.C'
    sources: {binary: Wtype-limits.s, cflags: "-std=gnu++11 -Wtype-limits\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
test_Wtype-limits_681:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wtype-limits.C'
    sources: {binary: Wtype-limits.s, cflags: "-std=gnu++14 -Wtype-limits\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression < 0 is always false")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          of unsigned expression >= 0 is always true")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always false due to limited range of data type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("comparison
          is always true due to limited range of data type")[^\n]*\n?)+'}
test_Wuninitializable-member-no_2154:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitializable-member-no.C'
    sources: {binary: Wuninitializable-member-no.s, cflags: "-std=gnu++98 -Wall -Wextra
        -Wno-uninitialized\n -S"}
  group: GRPSERIAL
test_Wuninitializable-member-no_2155:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitializable-member-no.C'
    sources: {binary: Wuninitializable-member-no.s, cflags: "-std=gnu++11 -Wall -Wextra
        -Wno-uninitialized\n -S"}
  group: GRPSERIAL
test_Wuninitializable-member-no_2156:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitializable-member-no.C'
    sources: {binary: Wuninitializable-member-no.s, cflags: "-std=gnu++14 -Wall -Wextra
        -Wno-uninitialized\n -S"}
  group: GRPSERIAL
test_Wuninitializable-member-no_685:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitializable-member-no.C'
    sources: {binary: Wuninitializable-member-no.s, cflags: "-std=gnu++98 -Wall -Wextra
        -Wno-uninitialized\n -S"}
  group: GRPSERIAL
test_Wuninitializable-member-no_686:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitializable-member-no.C'
    sources: {binary: Wuninitializable-member-no.s, cflags: "-std=gnu++11 -Wall -Wextra
        -Wno-uninitialized\n -S"}
  group: GRPSERIAL
test_Wuninitializable-member-no_687:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitializable-member-no.C'
    sources: {binary: Wuninitializable-member-no.s, cflags: "-std=gnu++14 -Wall -Wextra
        -Wno-uninitialized\n -S"}
  group: GRPSERIAL
test_Wuninitializable-member_2157:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitializable-member.C'
    sources: {binary: Wuninitializable-member.s, cflags: "-std=gnu++98 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("non-static
          const member \''const int Y::var\'' in class without a constructor")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("non-static
          reference \''int& X::flag\'' in class without a constructor")[^\n]*\n?)+'}
test_Wuninitializable-member_2158:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitializable-member.C'
    sources: {binary: Wuninitializable-member.s, cflags: "-std=gnu++11 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("non-static
          const member \''const int Y::var\'' in class without a constructor")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("non-static
          reference \''int& X::flag\'' in class without a constructor")[^\n]*\n?)+'}
test_Wuninitializable-member_2159:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitializable-member.C'
    sources: {binary: Wuninitializable-member.s, cflags: "-std=gnu++14 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("non-static
          const member \''const int Y::var\'' in class without a constructor")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("non-static
          reference \''int& X::flag\'' in class without a constructor")[^\n]*\n?)+'}
test_Wuninitializable-member_688:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitializable-member.C'
    sources: {binary: Wuninitializable-member.s, cflags: "-std=gnu++98 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("non-static
          const member \''const int Y::var\'' in class without a constructor")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("non-static
          reference \''int& X::flag\'' in class without a constructor")[^\n]*\n?)+'}
test_Wuninitializable-member_689:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitializable-member.C'
    sources: {binary: Wuninitializable-member.s, cflags: "-std=gnu++11 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("non-static
          const member \''const int Y::var\'' in class without a constructor")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("non-static
          reference \''int& X::flag\'' in class without a constructor")[^\n]*\n?)+'}
test_Wuninitializable-member_690:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitializable-member.C'
    sources: {binary: Wuninitializable-member.s, cflags: "-std=gnu++14 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("non-static
          const member \''const int Y::var\'' in class without a constructor")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("non-static
          reference \''int& X::flag\'' in class without a constructor")[^\n]*\n?)+'}
test_Wuninitialized-1_2160:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-1.C'
    sources: {binary: Wuninitialized-1.s, cflags: "-std=gnu++98 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-1_2161:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-1.C'
    sources: {binary: Wuninitialized-1.s, cflags: "-std=gnu++11 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-1_2162:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-1.C'
    sources: {binary: Wuninitialized-1.s, cflags: "-std=gnu++14 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-1_691:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-1.C'
    sources: {binary: Wuninitialized-1.s, cflags: "-std=gnu++98 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-1_692:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-1.C'
    sources: {binary: Wuninitialized-1.s, cflags: "-std=gnu++11 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-1_693:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-1.C'
    sources: {binary: Wuninitialized-1.s, cflags: "-std=gnu++14 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-2_2163:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-2.C'
    sources: {binary: Wuninitialized-2.s, cflags: "-std=gnu++98 -O -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-2_2164:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-2.C'
    sources: {binary: Wuninitialized-2.s, cflags: "-std=gnu++11 -O -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-2_2165:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-2.C'
    sources: {binary: Wuninitialized-2.s, cflags: "-std=gnu++14 -O -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-2_694:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-2.C'
    sources: {binary: Wuninitialized-2.s, cflags: "-std=gnu++98 -O -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-2_695:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-2.C'
    sources: {binary: Wuninitialized-2.s, cflags: "-std=gnu++11 -O -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-2_696:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-2.C'
    sources: {binary: Wuninitialized-2.s, cflags: "-std=gnu++14 -O -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-3_2166:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-3.C'
    sources: {binary: Wuninitialized-3.s, cflags: "-std=gnu++98 -Wuninitialized -O\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-3_2167:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-3.C'
    sources: {binary: Wuninitialized-3.s, cflags: "-std=gnu++11 -Wuninitialized -O\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-3_2168:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-3.C'
    sources: {binary: Wuninitialized-3.s, cflags: "-std=gnu++14 -Wuninitialized -O\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-3_697:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-3.C'
    sources: {binary: Wuninitialized-3.s, cflags: "-std=gnu++98 -Wuninitialized -O\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-3_698:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-3.C'
    sources: {binary: Wuninitialized-3.s, cflags: "-std=gnu++11 -Wuninitialized -O\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-3_699:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-3.C'
    sources: {binary: Wuninitialized-3.s, cflags: "-std=gnu++14 -Wuninitialized -O\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-4_2169:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-4.C'
    sources: {binary: Wuninitialized-4.s, cflags: "-std=gnu++98 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-4_2170:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-4.C'
    sources: {binary: Wuninitialized-4.s, cflags: "-std=gnu++11 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-4_2171:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-4.C'
    sources: {binary: Wuninitialized-4.s, cflags: "-std=gnu++14 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-4_700:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-4.C'
    sources: {binary: Wuninitialized-4.s, cflags: "-std=gnu++98 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-4_701:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-4.C'
    sources: {binary: Wuninitialized-4.s, cflags: "-std=gnu++11 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-4_702:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-4.C'
    sources: {binary: Wuninitialized-4.s, cflags: "-std=gnu++14 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-5_2172:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-5.C'
    sources: {binary: Wuninitialized-5.s, cflags: "-std=gnu++98 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("may
          be used uninitialized")[^\n]*\n?)+'}
test_Wuninitialized-5_2173:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-5.C'
    sources: {binary: Wuninitialized-5.s, cflags: "-std=gnu++11 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("may
          be used uninitialized")[^\n]*\n?)+'}
test_Wuninitialized-5_2174:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-5.C'
    sources: {binary: Wuninitialized-5.s, cflags: "-std=gnu++14 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("may
          be used uninitialized")[^\n]*\n?)+'}
test_Wuninitialized-5_703:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-5.C'
    sources: {binary: Wuninitialized-5.s, cflags: "-std=gnu++98 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("may
          be used uninitialized")[^\n]*\n?)+'}
test_Wuninitialized-5_704:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-5.C'
    sources: {binary: Wuninitialized-5.s, cflags: "-std=gnu++11 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("may
          be used uninitialized")[^\n]*\n?)+'}
test_Wuninitialized-5_705:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-5.C'
    sources: {binary: Wuninitialized-5.s, cflags: "-std=gnu++14 -O2 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("may
          be used uninitialized")[^\n]*\n?)+'}
test_Wuninitialized-6_2175:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-6.C'
    sources: {binary: Wuninitialized-6.s, cflags: "-std=gnu++98 -Wuninitialized -O2\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-6_2176:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-6.C'
    sources: {binary: Wuninitialized-6.s, cflags: "-std=gnu++11 -Wuninitialized -O2\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-6_2177:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-6.C'
    sources: {binary: Wuninitialized-6.s, cflags: "-std=gnu++14 -Wuninitialized -O2\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-6_706:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-6.C'
    sources: {binary: Wuninitialized-6.s, cflags: "-std=gnu++98 -Wuninitialized -O2\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-6_707:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-6.C'
    sources: {binary: Wuninitialized-6.s, cflags: "-std=gnu++11 -Wuninitialized -O2\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-6_708:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-6.C'
    sources: {binary: Wuninitialized-6.s, cflags: "-std=gnu++14 -Wuninitialized -O2\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-7_2178:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-7.C'
    sources: {binary: Wuninitialized-7.s, cflags: "-std=gnu++11 -O -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("x.
          is used uninitialized")[^\n]*\n?)+'}
test_Wuninitialized-7_2179:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-7.C'
    sources: {binary: Wuninitialized-7.s, cflags: "-std=gnu++14 -O -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("x.
          is used uninitialized")[^\n]*\n?)+'}
test_Wuninitialized-7_709:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-7.C'
    sources: {binary: Wuninitialized-7.s, cflags: "-std=gnu++11 -O -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("x.
          is used uninitialized")[^\n]*\n?)+'}
test_Wuninitialized-7_710:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-7.C'
    sources: {binary: Wuninitialized-7.s, cflags: "-std=gnu++14 -O -Wuninitialized\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("x.
          is used uninitialized")[^\n]*\n?)+'}
test_Wuninitialized-8_2180:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-8.C'
    sources: {binary: Wuninitialized-8.s, cflags: "-std=gnu++98 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-8_2181:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-8.C'
    sources: {binary: Wuninitialized-8.s, cflags: "-std=gnu++11 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-8_2182:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-8.C'
    sources: {binary: Wuninitialized-8.s, cflags: "-std=gnu++14 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-8_711:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-8.C'
    sources: {binary: Wuninitialized-8.s, cflags: "-std=gnu++98 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-8_712:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-8.C'
    sources: {binary: Wuninitialized-8.s, cflags: "-std=gnu++11 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-8_713:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-8.C'
    sources: {binary: Wuninitialized-8.s, cflags: "-std=gnu++14 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-9_2183:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-9.C'
    sources: {binary: Wuninitialized-9.s, cflags: "-std=gnu++11 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-9_2184:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-9.C'
    sources: {binary: Wuninitialized-9.s, cflags: "-std=gnu++14 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-9_714:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-9.C'
    sources: {binary: Wuninitialized-9.s, cflags: "-std=gnu++11 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wuninitialized-9_715:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuninitialized-9.C'
    sources: {binary: Wuninitialized-9.s, cflags: "-std=gnu++14 -Wuninitialized\n
        -S"}
  group: GRPSERIAL
test_Wunreachable-code-1_2185:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunreachable-code-1.C'
    sources: {binary: Wunreachable-code-1.s, cflags: "-std=gnu++98 -O -Wunreachable-code\n
        -S"}
  group: GRPSERIAL
test_Wunreachable-code-1_2186:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunreachable-code-1.C'
    sources: {binary: Wunreachable-code-1.s, cflags: "-std=gnu++11 -O -Wunreachable-code\n
        -S"}
  group: GRPSERIAL
test_Wunreachable-code-1_2187:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunreachable-code-1.C'
    sources: {binary: Wunreachable-code-1.s, cflags: "-std=gnu++14 -O -Wunreachable-code\n
        -S"}
  group: GRPSERIAL
test_Wunreachable-code-1_716:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunreachable-code-1.C'
    sources: {binary: Wunreachable-code-1.s, cflags: "-std=gnu++98 -O -Wunreachable-code\n
        -S"}
  group: GRPSERIAL
test_Wunreachable-code-1_717:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunreachable-code-1.C'
    sources: {binary: Wunreachable-code-1.s, cflags: "-std=gnu++11 -O -Wunreachable-code\n
        -S"}
  group: GRPSERIAL
test_Wunreachable-code-1_718:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunreachable-code-1.C'
    sources: {binary: Wunreachable-code-1.s, cflags: "-std=gnu++14 -O -Wunreachable-code\n
        -S"}
  group: GRPSERIAL
test_Wunreachable-code-2_2188:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunreachable-code-2.C'
    sources: {binary: Wunreachable-code-2.s, cflags: "-std=gnu++98 -Wunreachable-code\n
        -S"}
  group: GRPSERIAL
test_Wunreachable-code-2_2189:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunreachable-code-2.C'
    sources: {binary: Wunreachable-code-2.s, cflags: "-std=gnu++11 -Wunreachable-code\n
        -S"}
  group: GRPSERIAL
test_Wunreachable-code-2_2190:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunreachable-code-2.C'
    sources: {binary: Wunreachable-code-2.s, cflags: "-std=gnu++14 -Wunreachable-code\n
        -S"}
  group: GRPSERIAL
test_Wunreachable-code-2_719:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunreachable-code-2.C'
    sources: {binary: Wunreachable-code-2.s, cflags: "-std=gnu++98 -Wunreachable-code\n
        -S"}
  group: GRPSERIAL
test_Wunreachable-code-2_720:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunreachable-code-2.C'
    sources: {binary: Wunreachable-code-2.s, cflags: "-std=gnu++11 -Wunreachable-code\n
        -S"}
  group: GRPSERIAL
test_Wunreachable-code-2_721:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunreachable-code-2.C'
    sources: {binary: Wunreachable-code-2.s, cflags: "-std=gnu++14 -Wunreachable-code\n
        -S"}
  group: GRPSERIAL
test_Wunused-10_2194:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-10.C'
    sources: {binary: Wunused-10.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-10_2195:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-10.C'
    sources: {binary: Wunused-10.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-10_2196:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-10.C'
    sources: {binary: Wunused-10.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-10_725:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-10.C'
    sources: {binary: Wunused-10.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-10_726:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-10.C'
    sources: {binary: Wunused-10.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-10_727:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-10.C'
    sources: {binary: Wunused-10.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-11_2197:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-11.C'
    sources: {binary: Wunused-11.s, cflags: "-std=gnu++98 -O2 -Wunused -Wextra\n -S"}
  group: GRPSERIAL
test_Wunused-11_2198:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-11.C'
    sources: {binary: Wunused-11.s, cflags: "-std=gnu++11 -O2 -Wunused -Wextra\n -S"}
  group: GRPSERIAL
test_Wunused-11_2199:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-11.C'
    sources: {binary: Wunused-11.s, cflags: "-std=gnu++14 -O2 -Wunused -Wextra\n -S"}
  group: GRPSERIAL
test_Wunused-11_728:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-11.C'
    sources: {binary: Wunused-11.s, cflags: "-std=gnu++98 -O2 -Wunused -Wextra\n -S"}
  group: GRPSERIAL
test_Wunused-11_729:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-11.C'
    sources: {binary: Wunused-11.s, cflags: "-std=gnu++11 -O2 -Wunused -Wextra\n -S"}
  group: GRPSERIAL
test_Wunused-11_730:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-11.C'
    sources: {binary: Wunused-11.s, cflags: "-std=gnu++14 -O2 -Wunused -Wextra\n -S"}
  group: GRPSERIAL
test_Wunused-12_2200:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-12.C'
    sources: {binary: Wunused-12.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("used")[^\n]*\n?)+'}
test_Wunused-12_2201:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-12.C'
    sources: {binary: Wunused-12.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("used")[^\n]*\n?)+'}
test_Wunused-12_2202:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-12.C'
    sources: {binary: Wunused-12.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("used")[^\n]*\n?)+'}
test_Wunused-12_731:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-12.C'
    sources: {binary: Wunused-12.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("used")[^\n]*\n?)+'}
test_Wunused-12_732:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-12.C'
    sources: {binary: Wunused-12.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("used")[^\n]*\n?)+'}
test_Wunused-12_733:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-12.C'
    sources: {binary: Wunused-12.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("used")[^\n]*\n?)+'}
test_Wunused-13_2203:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-13.C'
    sources: {binary: Wunused-13.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("value
          computed is not used")[^\n]*\n?)+'}
test_Wunused-13_2204:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-13.C'
    sources: {binary: Wunused-13.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("value
          computed is not used")[^\n]*\n?)+'}
test_Wunused-13_2205:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-13.C'
    sources: {binary: Wunused-13.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("value
          computed is not used")[^\n]*\n?)+'}
test_Wunused-13_734:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-13.C'
    sources: {binary: Wunused-13.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("value
          computed is not used")[^\n]*\n?)+'}
test_Wunused-13_735:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-13.C'
    sources: {binary: Wunused-13.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("value
          computed is not used")[^\n]*\n?)+'}
test_Wunused-13_736:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-13.C'
    sources: {binary: Wunused-13.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("value
          computed is not used")[^\n]*\n?)+'}
test_Wunused-14_2206:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-14.C'
    sources: {binary: Wunused-14.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-14_2207:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-14.C'
    sources: {binary: Wunused-14.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-14_2208:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-14.C'
    sources: {binary: Wunused-14.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-14_737:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-14.C'
    sources: {binary: Wunused-14.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-14_738:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-14.C'
    sources: {binary: Wunused-14.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-14_739:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-14.C'
    sources: {binary: Wunused-14.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-15_2209:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-15.C'
    sources: {binary: Wunused-15.s, cflags: "-std=gnu++98 -Wunused-value\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("value
          computed is not used")[^\n]*\n?)+'}
test_Wunused-15_2210:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-15.C'
    sources: {binary: Wunused-15.s, cflags: "-std=gnu++11 -Wunused-value\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("value
          computed is not used")[^\n]*\n?)+'}
test_Wunused-15_2211:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-15.C'
    sources: {binary: Wunused-15.s, cflags: "-std=gnu++14 -Wunused-value\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("value
          computed is not used")[^\n]*\n?)+'}
test_Wunused-15_740:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-15.C'
    sources: {binary: Wunused-15.s, cflags: "-std=gnu++98 -Wunused-value\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("value
          computed is not used")[^\n]*\n?)+'}
test_Wunused-15_741:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-15.C'
    sources: {binary: Wunused-15.s, cflags: "-std=gnu++11 -Wunused-value\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("value
          computed is not used")[^\n]*\n?)+'}
test_Wunused-15_742:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-15.C'
    sources: {binary: Wunused-15.s, cflags: "-std=gnu++14 -Wunused-value\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("value
          computed is not used")[^\n]*\n?)+'}
test_Wunused-16_2212:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-16.C'
    sources: {binary: Wunused-16.s, cflags: "-std=gnu++98 -Wunused-value\n -S"}
  group: GRPSERIAL
test_Wunused-16_2213:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-16.C'
    sources: {binary: Wunused-16.s, cflags: "-std=gnu++11 -Wunused-value\n -S"}
  group: GRPSERIAL
test_Wunused-16_2214:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-16.C'
    sources: {binary: Wunused-16.s, cflags: "-std=gnu++14 -Wunused-value\n -S"}
  group: GRPSERIAL
test_Wunused-16_743:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-16.C'
    sources: {binary: Wunused-16.s, cflags: "-std=gnu++98 -Wunused-value\n -S"}
  group: GRPSERIAL
test_Wunused-16_744:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-16.C'
    sources: {binary: Wunused-16.s, cflags: "-std=gnu++11 -Wunused-value\n -S"}
  group: GRPSERIAL
test_Wunused-16_745:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-16.C'
    sources: {binary: Wunused-16.s, cflags: "-std=gnu++14 -Wunused-value\n -S"}
  group: GRPSERIAL
test_Wunused-17_2215:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-17.C'
    sources: {binary: Wunused-17.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-17_2216:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-17.C'
    sources: {binary: Wunused-17.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-17_2217:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-17.C'
    sources: {binary: Wunused-17.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-17_746:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-17.C'
    sources: {binary: Wunused-17.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-17_747:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-17.C'
    sources: {binary: Wunused-17.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-17_748:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-17.C'
    sources: {binary: Wunused-17.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-1_2191:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-1.C'
    sources: {binary: Wunused-1.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-1_2192:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-1.C'
    sources: {binary: Wunused-1.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-1_2193:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-1.C'
    sources: {binary: Wunused-1.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-1_722:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-1.C'
    sources: {binary: Wunused-1.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-1_723:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-1.C'
    sources: {binary: Wunused-1.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-1_724:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-1.C'
    sources: {binary: Wunused-1.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-2_2218:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-2.C'
    sources: {binary: Wunused-2.s, cflags: "-std=gnu++98 -Wunused -O3\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_Wunused-2_2219:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-2.C'
    sources: {binary: Wunused-2.s, cflags: "-std=gnu++11 -Wunused -O3\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_Wunused-2_2220:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-2.C'
    sources: {binary: Wunused-2.s, cflags: "-std=gnu++14 -Wunused -O3\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_Wunused-2_749:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-2.C'
    sources: {binary: Wunused-2.s, cflags: "-std=gnu++98 -Wunused -O3\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_Wunused-2_750:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-2.C'
    sources: {binary: Wunused-2.s, cflags: "-std=gnu++11 -Wunused -O3\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_Wunused-2_751:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-2.C'
    sources: {binary: Wunused-2.s, cflags: "-std=gnu++14 -Wunused -O3\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_Wunused-3_2221:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-3.C'
    sources: {binary: Wunused-3.s, cflags: "-std=gnu++98 -Wunused -O -fno-use-cxa-atexit\n
        -S"}
  group: GRPSERIAL
test_Wunused-3_2222:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-3.C'
    sources: {binary: Wunused-3.s, cflags: "-std=gnu++11 -Wunused -O -fno-use-cxa-atexit\n
        -S"}
  group: GRPSERIAL
test_Wunused-3_2223:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-3.C'
    sources: {binary: Wunused-3.s, cflags: "-std=gnu++14 -Wunused -O -fno-use-cxa-atexit\n
        -S"}
  group: GRPSERIAL
test_Wunused-3_752:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-3.C'
    sources: {binary: Wunused-3.s, cflags: "-std=gnu++98 -Wunused -O -fno-use-cxa-atexit\n
        -S"}
  group: GRPSERIAL
test_Wunused-3_753:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-3.C'
    sources: {binary: Wunused-3.s, cflags: "-std=gnu++11 -Wunused -O -fno-use-cxa-atexit\n
        -S"}
  group: GRPSERIAL
test_Wunused-3_754:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-3.C'
    sources: {binary: Wunused-3.s, cflags: "-std=gnu++14 -Wunused -O -fno-use-cxa-atexit\n
        -S"}
  group: GRPSERIAL
test_Wunused-4_2224:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-4.C'
    sources: {binary: Wunused-4.s, cflags: "-std=gnu++98 -Wunused-parameter\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
test_Wunused-4_2225:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-4.C'
    sources: {binary: Wunused-4.s, cflags: "-std=gnu++11 -Wunused-parameter\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
test_Wunused-4_2226:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-4.C'
    sources: {binary: Wunused-4.s, cflags: "-std=gnu++14 -Wunused-parameter\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
test_Wunused-4_755:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-4.C'
    sources: {binary: Wunused-4.s, cflags: "-std=gnu++98 -Wunused-parameter\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
test_Wunused-4_756:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-4.C'
    sources: {binary: Wunused-4.s, cflags: "-std=gnu++11 -Wunused-parameter\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
test_Wunused-4_757:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-4.C'
    sources: {binary: Wunused-4.s, cflags: "-std=gnu++14 -Wunused-parameter\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
test_Wunused-5_2227:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-5.C'
    sources: {binary: Wunused-5.s, cflags: "-std=gnu++98 -O -Wall\n -S"}
  group: GRPSERIAL
test_Wunused-5_2228:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-5.C'
    sources: {binary: Wunused-5.s, cflags: "-std=gnu++11 -O -Wall\n -S"}
  group: GRPSERIAL
test_Wunused-5_2229:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-5.C'
    sources: {binary: Wunused-5.s, cflags: "-std=gnu++14 -O -Wall\n -S"}
  group: GRPSERIAL
test_Wunused-5_758:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-5.C'
    sources: {binary: Wunused-5.s, cflags: "-std=gnu++98 -O -Wall\n -S"}
  group: GRPSERIAL
test_Wunused-5_759:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-5.C'
    sources: {binary: Wunused-5.s, cflags: "-std=gnu++11 -O -Wall\n -S"}
  group: GRPSERIAL
test_Wunused-5_760:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-5.C'
    sources: {binary: Wunused-5.s, cflags: "-std=gnu++14 -O -Wall\n -S"}
  group: GRPSERIAL
test_Wunused-6_2230:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-6.C'
    sources: {binary: Wunused-6.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-6_2231:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-6.C'
    sources: {binary: Wunused-6.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-6_2232:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-6.C'
    sources: {binary: Wunused-6.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-6_761:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-6.C'
    sources: {binary: Wunused-6.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-6_762:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-6.C'
    sources: {binary: Wunused-6.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-6_763:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-6.C'
    sources: {binary: Wunused-6.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-7_2233:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-7.C'
    sources: {binary: Wunused-7.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-7_2234:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-7.C'
    sources: {binary: Wunused-7.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-7_2235:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-7.C'
    sources: {binary: Wunused-7.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-7_764:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-7.C'
    sources: {binary: Wunused-7.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-7_765:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-7.C'
    sources: {binary: Wunused-7.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-7_766:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-7.C'
    sources: {binary: Wunused-7.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-8_2236:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-8.C'
    sources: {binary: Wunused-8.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("10:\''whatever\''
          was not declared")[^\n]*\n?)+'}
test_Wunused-8_2237:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-8.C'
    sources: {binary: Wunused-8.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("10:\''whatever\''
          was not declared")[^\n]*\n?)+'}
test_Wunused-8_2238:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-8.C'
    sources: {binary: Wunused-8.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("10:\''whatever\''
          was not declared")[^\n]*\n?)+'}
test_Wunused-8_767:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-8.C'
    sources: {binary: Wunused-8.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("10:\''whatever\''
          was not declared")[^\n]*\n?)+'}
test_Wunused-8_768:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-8.C'
    sources: {binary: Wunused-8.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("10:\''whatever\''
          was not declared")[^\n]*\n?)+'}
test_Wunused-8_769:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-8.C'
    sources: {binary: Wunused-8.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("10:\''whatever\''
          was not declared")[^\n]*\n?)+'}
test_Wunused-9_2239:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-9.C'
    sources: {binary: Wunused-9.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-9_2240:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-9.C'
    sources: {binary: Wunused-9.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-9_2241:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-9.C'
    sources: {binary: Wunused-9.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-9_770:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-9.C'
    sources: {binary: Wunused-9.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-9_771:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-9.C'
    sources: {binary: Wunused-9.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-9_772:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-9.C'
    sources: {binary: Wunused-9.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-function1_2242:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function1.C'
    sources: {binary: Wunused-function1.s, cflags: "-std=gnu++98 -Wunused-function\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_Wunused-function1_2243:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function1.C'
    sources: {binary: Wunused-function1.s, cflags: "-std=gnu++11 -Wunused-function\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_Wunused-function1_2244:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function1.C'
    sources: {binary: Wunused-function1.s, cflags: "-std=gnu++14 -Wunused-function\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_Wunused-function1_773:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function1.C'
    sources: {binary: Wunused-function1.s, cflags: "-std=gnu++98 -Wunused-function\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_Wunused-function1_774:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function1.C'
    sources: {binary: Wunused-function1.s, cflags: "-std=gnu++11 -Wunused-function\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_Wunused-function1_775:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function1.C'
    sources: {binary: Wunused-function1.s, cflags: "-std=gnu++14 -Wunused-function\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_Wunused-function2_2245:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function2.C'
    sources: {binary: Wunused-function2.s, cflags: "-std=gnu++98 -Wunused-function\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          test..\'' declared \''static\'' but never defined")[^\n]*\n?)+'}
test_Wunused-function2_2246:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function2.C'
    sources: {binary: Wunused-function2.s, cflags: "-std=gnu++11 -Wunused-function\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          test..\'' declared \''static\'' but never defined")[^\n]*\n?)+'}
test_Wunused-function2_2247:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function2.C'
    sources: {binary: Wunused-function2.s, cflags: "-std=gnu++14 -Wunused-function\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          test..\'' declared \''static\'' but never defined")[^\n]*\n?)+'}
test_Wunused-function2_776:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function2.C'
    sources: {binary: Wunused-function2.s, cflags: "-std=gnu++98 -Wunused-function\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          test..\'' declared \''static\'' but never defined")[^\n]*\n?)+'}
test_Wunused-function2_777:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function2.C'
    sources: {binary: Wunused-function2.s, cflags: "-std=gnu++11 -Wunused-function\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          test..\'' declared \''static\'' but never defined")[^\n]*\n?)+'}
test_Wunused-function2_778:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function2.C'
    sources: {binary: Wunused-function2.s, cflags: "-std=gnu++14 -Wunused-function\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          test..\'' declared \''static\'' but never defined")[^\n]*\n?)+'}
test_Wunused-function3_2248:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function3.C'
    sources: {binary: Wunused-function3.s, cflags: "-std=gnu++98 -Wunused-function\n
        -S"}
  group: GRPSERIAL
test_Wunused-function3_2249:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function3.C'
    sources: {binary: Wunused-function3.s, cflags: "-std=gnu++11 -Wunused-function\n
        -S"}
  group: GRPSERIAL
test_Wunused-function3_2250:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function3.C'
    sources: {binary: Wunused-function3.s, cflags: "-std=gnu++14 -Wunused-function\n
        -S"}
  group: GRPSERIAL
test_Wunused-function3_779:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function3.C'
    sources: {binary: Wunused-function3.s, cflags: "-std=gnu++98 -Wunused-function\n
        -S"}
  group: GRPSERIAL
test_Wunused-function3_780:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function3.C'
    sources: {binary: Wunused-function3.s, cflags: "-std=gnu++11 -Wunused-function\n
        -S"}
  group: GRPSERIAL
test_Wunused-function3_781:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-function3.C'
    sources: {binary: Wunused-function3.s, cflags: "-std=gnu++14 -Wunused-function\n
        -S"}
  group: GRPSERIAL
test_Wunused-label-1_2251:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-1.C'
    sources: {binary: Wunused-label-1.s, cflags: "-std=gnu++98 -Wunused-label\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-label-1_2252:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-1.C'
    sources: {binary: Wunused-label-1.s, cflags: "-std=gnu++11 -Wunused-label\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-label-1_2253:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-1.C'
    sources: {binary: Wunused-label-1.s, cflags: "-std=gnu++14 -Wunused-label\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-label-1_782:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-1.C'
    sources: {binary: Wunused-label-1.s, cflags: "-std=gnu++98 -Wunused-label\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-label-1_783:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-1.C'
    sources: {binary: Wunused-label-1.s, cflags: "-std=gnu++11 -Wunused-label\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-label-1_784:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-1.C'
    sources: {binary: Wunused-label-1.s, cflags: "-std=gnu++14 -Wunused-label\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-label-2_2254:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-2.C'
    sources: {binary: Wunused-label-2.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("label
          \\[^\\n\\]* not used")[^\n]*\n?)+'}
test_Wunused-label-2_2255:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-2.C'
    sources: {binary: Wunused-label-2.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("label
          \\[^\\n\\]* not used")[^\n]*\n?)+'}
test_Wunused-label-2_2256:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-2.C'
    sources: {binary: Wunused-label-2.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("label
          \\[^\\n\\]* not used")[^\n]*\n?)+'}
test_Wunused-label-2_785:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-2.C'
    sources: {binary: Wunused-label-2.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("label
          \\[^\\n\\]* not used")[^\n]*\n?)+'}
test_Wunused-label-2_786:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-2.C'
    sources: {binary: Wunused-label-2.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("label
          \\[^\\n\\]* not used")[^\n]*\n?)+'}
test_Wunused-label-2_787:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-2.C'
    sources: {binary: Wunused-label-2.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("label
          \\[^\\n\\]* not used")[^\n]*\n?)+'}
test_Wunused-label-3_2257:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-3.C'
    sources: {binary: Wunused-label-3.s, cflags: "-std=gnu++98 -Wunused-label\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-label-3_2258:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-3.C'
    sources: {binary: Wunused-label-3.s, cflags: "-std=gnu++11 -Wunused-label\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-label-3_2259:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-3.C'
    sources: {binary: Wunused-label-3.s, cflags: "-std=gnu++14 -Wunused-label\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-label-3_788:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-3.C'
    sources: {binary: Wunused-label-3.s, cflags: "-std=gnu++98 -Wunused-label\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-label-3_789:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-3.C'
    sources: {binary: Wunused-label-3.s, cflags: "-std=gnu++11 -Wunused-label\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-label-3_790:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-label-3.C'
    sources: {binary: Wunused-label-3.s, cflags: "-std=gnu++14 -Wunused-label\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_Wunused-local-typedefs-2_2260:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-2.C'
    sources: {binary: Wunused-local-typedefs-2.s, cflags: "-std=gnu++11 -Wunused\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-2_2261:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-2.C'
    sources: {binary: Wunused-local-typedefs-2.s, cflags: "-std=gnu++14 -Wunused\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-2_791:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-2.C'
    sources: {binary: Wunused-local-typedefs-2.s, cflags: "-std=gnu++11 -Wunused\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-2_792:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-2.C'
    sources: {binary: Wunused-local-typedefs-2.s, cflags: "-std=gnu++14 -Wunused\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-3_2262:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-3.C'
    sources: {binary: Wunused-local-typedefs-3.s, cflags: "-std=gnu++98 -Wunused-local-typedefs\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-3_2263:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-3.C'
    sources: {binary: Wunused-local-typedefs-3.s, cflags: "-std=gnu++11 -Wunused-local-typedefs\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-3_2264:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-3.C'
    sources: {binary: Wunused-local-typedefs-3.s, cflags: "-std=gnu++14 -Wunused-local-typedefs\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-3_793:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-3.C'
    sources: {binary: Wunused-local-typedefs-3.s, cflags: "-std=gnu++98 -Wunused-local-typedefs\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-3_794:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-3.C'
    sources: {binary: Wunused-local-typedefs-3.s, cflags: "-std=gnu++11 -Wunused-local-typedefs\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-3_795:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-3.C'
    sources: {binary: Wunused-local-typedefs-3.s, cflags: "-std=gnu++14 -Wunused-local-typedefs\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-4_2265:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-4.C'
    sources: {binary: Wunused-local-typedefs-4.s, cflags: "-std=gnu++98 -Wunused-local-typedefs\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-4_2266:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-4.C'
    sources: {binary: Wunused-local-typedefs-4.s, cflags: "-std=gnu++11 -Wunused-local-typedefs\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-4_2267:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-4.C'
    sources: {binary: Wunused-local-typedefs-4.s, cflags: "-std=gnu++14 -Wunused-local-typedefs\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-4_796:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-4.C'
    sources: {binary: Wunused-local-typedefs-4.s, cflags: "-std=gnu++98 -Wunused-local-typedefs\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-4_797:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-4.C'
    sources: {binary: Wunused-local-typedefs-4.s, cflags: "-std=gnu++11 -Wunused-local-typedefs\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs-4_798:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs-4.C'
    sources: {binary: Wunused-local-typedefs-4.s, cflags: "-std=gnu++14 -Wunused-local-typedefs\n
        -S"}
  group: GRPSERIAL
test_Wunused-local-typedefs_2268:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs.C'
    sources: {binary: Wunused-local-typedefs.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L122: {expect: true, expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
      L142: {expect: true, expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
test_Wunused-local-typedefs_2269:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs.C'
    sources: {binary: Wunused-local-typedefs.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L122: {expect: true, expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
      L142: {expect: true, expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
test_Wunused-local-typedefs_2270:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs.C'
    sources: {binary: Wunused-local-typedefs.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L122: {expect: true, expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
      L142: {expect: true, expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
test_Wunused-local-typedefs_799:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs.C'
    sources: {binary: Wunused-local-typedefs.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L122: {expect: true, expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
      L142: {expect: true, expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
test_Wunused-local-typedefs_800:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs.C'
    sources: {binary: Wunused-local-typedefs.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L122: {expect: true, expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
      L142: {expect: true, expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
test_Wunused-local-typedefs_801:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-local-typedefs.C'
    sources: {binary: Wunused-local-typedefs.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L122: {expect: true, expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
      L142: {expect: true, expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("locally
          defined but not used")[^\n]*\n?)+'}
test_Wunused-parm-10_2274:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-10.C'
    sources: {binary: Wunused-parm-10.s, cflags: "-std=gnu++11 -Wunused-but-set-parameter
        -Wunused-parameter\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
test_Wunused-parm-10_2275:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-10.C'
    sources: {binary: Wunused-parm-10.s, cflags: "-std=gnu++14 -Wunused-but-set-parameter
        -Wunused-parameter\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
test_Wunused-parm-10_805:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-10.C'
    sources: {binary: Wunused-parm-10.s, cflags: "-std=gnu++11 -Wunused-but-set-parameter
        -Wunused-parameter\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
test_Wunused-parm-10_806:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-10.C'
    sources: {binary: Wunused-parm-10.s, cflags: "-std=gnu++14 -Wunused-but-set-parameter
        -Wunused-parameter\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
test_Wunused-parm-1_2271:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-1.C'
    sources: {binary: Wunused-parm-1.s, cflags: "-std=gnu++98 -Wunused -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-parm-1_2272:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-1.C'
    sources: {binary: Wunused-parm-1.s, cflags: "-std=gnu++11 -Wunused -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-parm-1_2273:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-1.C'
    sources: {binary: Wunused-parm-1.s, cflags: "-std=gnu++14 -Wunused -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-parm-1_802:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-1.C'
    sources: {binary: Wunused-parm-1.s, cflags: "-std=gnu++98 -Wunused -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-parm-1_803:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-1.C'
    sources: {binary: Wunused-parm-1.s, cflags: "-std=gnu++11 -Wunused -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-parm-1_804:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-1.C'
    sources: {binary: Wunused-parm-1.s, cflags: "-std=gnu++14 -Wunused -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-parm-2_2276:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-2.C'
    sources: {binary: Wunused-parm-2.s, cflags: "-std=gnu++98 -Wunused -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-parm-2_2277:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-2.C'
    sources: {binary: Wunused-parm-2.s, cflags: "-std=gnu++11 -Wunused -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-parm-2_2278:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-2.C'
    sources: {binary: Wunused-parm-2.s, cflags: "-std=gnu++14 -Wunused -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-parm-2_807:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-2.C'
    sources: {binary: Wunused-parm-2.s, cflags: "-std=gnu++98 -Wunused -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-parm-2_808:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-2.C'
    sources: {binary: Wunused-parm-2.s, cflags: "-std=gnu++11 -Wunused -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-parm-2_809:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-2.C'
    sources: {binary: Wunused-parm-2.s, cflags: "-std=gnu++14 -Wunused -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unused
          parameter")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-parm-3_2279:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-3.C'
    sources: {binary: Wunused-parm-3.s, cflags: "-std=gnu++98 -Wunused -W -Wno-abi\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-3_2280:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-3.C'
    sources: {binary: Wunused-parm-3.s, cflags: "-std=gnu++11 -Wunused -W -Wno-abi\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-3_2281:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-3.C'
    sources: {binary: Wunused-parm-3.s, cflags: "-std=gnu++14 -Wunused -W -Wno-abi\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-3_810:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-3.C'
    sources: {binary: Wunused-parm-3.s, cflags: "-std=gnu++98 -Wunused -W -Wno-abi\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-3_811:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-3.C'
    sources: {binary: Wunused-parm-3.s, cflags: "-std=gnu++11 -Wunused -W -Wno-abi\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-3_812:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-3.C'
    sources: {binary: Wunused-parm-3.s, cflags: "-std=gnu++14 -Wunused -W -Wno-abi\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-4_2282:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-4.C'
    sources: {binary: Wunused-parm-4.s, cflags: "-std=gnu++98 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-parm-4_2283:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-4.C'
    sources: {binary: Wunused-parm-4.s, cflags: "-std=gnu++11 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-parm-4_2284:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-4.C'
    sources: {binary: Wunused-parm-4.s, cflags: "-std=gnu++14 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-parm-4_813:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-4.C'
    sources: {binary: Wunused-parm-4.s, cflags: "-std=gnu++98 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-parm-4_814:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-4.C'
    sources: {binary: Wunused-parm-4.s, cflags: "-std=gnu++11 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-parm-4_815:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-4.C'
    sources: {binary: Wunused-parm-4.s, cflags: "-std=gnu++14 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-parm-5_2285:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-5.C'
    sources: {binary: Wunused-parm-5.s, cflags: "-std=gnu++98 -Wunused-parameter\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("22:unused
          parameter \''u\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("22:unused
          parameter \''u\''")[^\n]*\n?)+'}
test_Wunused-parm-5_2286:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-5.C'
    sources: {binary: Wunused-parm-5.s, cflags: "-std=gnu++11 -Wunused-parameter\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("22:unused
          parameter \''u\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("22:unused
          parameter \''u\''")[^\n]*\n?)+'}
test_Wunused-parm-5_2287:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-5.C'
    sources: {binary: Wunused-parm-5.s, cflags: "-std=gnu++14 -Wunused-parameter\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("22:unused
          parameter \''u\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("22:unused
          parameter \''u\''")[^\n]*\n?)+'}
test_Wunused-parm-5_816:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-5.C'
    sources: {binary: Wunused-parm-5.s, cflags: "-std=gnu++98 -Wunused-parameter\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("22:unused
          parameter \''u\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("22:unused
          parameter \''u\''")[^\n]*\n?)+'}
test_Wunused-parm-5_817:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-5.C'
    sources: {binary: Wunused-parm-5.s, cflags: "-std=gnu++11 -Wunused-parameter\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("22:unused
          parameter \''u\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("22:unused
          parameter \''u\''")[^\n]*\n?)+'}
test_Wunused-parm-5_818:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-5.C'
    sources: {binary: Wunused-parm-5.s, cflags: "-std=gnu++14 -Wunused-parameter\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("22:unused
          parameter \''u\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("15:unused
          parameter \''s\''")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("22:unused
          parameter \''u\''")[^\n]*\n?)+'}
test_Wunused-parm-6_2288:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-6.C'
    sources: {binary: Wunused-parm-6.s, cflags: "-std=gnu++11 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-6_2289:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-6.C'
    sources: {binary: Wunused-parm-6.s, cflags: "-std=gnu++14 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-6_819:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-6.C'
    sources: {binary: Wunused-parm-6.s, cflags: "-std=gnu++11 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-6_820:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-6.C'
    sources: {binary: Wunused-parm-6.s, cflags: "-std=gnu++14 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-7_2290:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-7.C'
    sources: {binary: Wunused-parm-7.s, cflags: "-std=gnu++11 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-7_2291:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-7.C'
    sources: {binary: Wunused-parm-7.s, cflags: "-std=gnu++14 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-7_821:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-7.C'
    sources: {binary: Wunused-parm-7.s, cflags: "-std=gnu++11 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-7_822:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-7.C'
    sources: {binary: Wunused-parm-7.s, cflags: "-std=gnu++14 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-8_2292:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-8.C'
    sources: {binary: Wunused-parm-8.s, cflags: "-std=gnu++14 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-8_823:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-8.C'
    sources: {binary: Wunused-parm-8.s, cflags: "-std=gnu++14 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-9_2293:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-9.C'
    sources: {binary: Wunused-parm-9.s, cflags: "-std=gnu++98 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-9_2294:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-9.C'
    sources: {binary: Wunused-parm-9.s, cflags: "-std=gnu++11 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-9_2295:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-9.C'
    sources: {binary: Wunused-parm-9.s, cflags: "-std=gnu++14 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-9_824:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-9.C'
    sources: {binary: Wunused-parm-9.s, cflags: "-std=gnu++98 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-9_825:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-9.C'
    sources: {binary: Wunused-parm-9.s, cflags: "-std=gnu++11 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-parm-9_826:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-parm-9.C'
    sources: {binary: Wunused-parm-9.s, cflags: "-std=gnu++14 -Wunused-but-set-parameter\n
        -S"}
  group: GRPSERIAL
test_Wunused-result-1_2296:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-result-1.C'
    sources: {binary: Wunused-result-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          return value")[^\n]*\n?)+'}
test_Wunused-result-1_2297:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-result-1.C'
    sources: {binary: Wunused-result-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          return value")[^\n]*\n?)+'}
test_Wunused-result-1_2298:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-result-1.C'
    sources: {binary: Wunused-result-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          return value")[^\n]*\n?)+'}
test_Wunused-result-1_827:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-result-1.C'
    sources: {binary: Wunused-result-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          return value")[^\n]*\n?)+'}
test_Wunused-result-1_828:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-result-1.C'
    sources: {binary: Wunused-result-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          return value")[^\n]*\n?)+'}
test_Wunused-result-1_829:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-result-1.C'
    sources: {binary: Wunused-result-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ignoring
          return value")[^\n]*\n?)+'}
test_Wunused-result-2_2299:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-result-2.C'
    sources: {binary: Wunused-result-2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("warn_unused_result")[^\n]*\n?)+'}
test_Wunused-result-2_2300:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-result-2.C'
    sources: {binary: Wunused-result-2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("warn_unused_result")[^\n]*\n?)+'}
test_Wunused-result-2_2301:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-result-2.C'
    sources: {binary: Wunused-result-2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("warn_unused_result")[^\n]*\n?)+'}
test_Wunused-result-2_830:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-result-2.C'
    sources: {binary: Wunused-result-2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("warn_unused_result")[^\n]*\n?)+'}
test_Wunused-result-2_831:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-result-2.C'
    sources: {binary: Wunused-result-2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("warn_unused_result")[^\n]*\n?)+'}
test_Wunused-result-2_832:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-result-2.C'
    sources: {binary: Wunused-result-2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("warn_unused_result")[^\n]*\n?)+'}
test_Wunused-var-10_2305:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-10.C'
    sources: {binary: Wunused-var-10.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-10_2306:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-10.C'
    sources: {binary: Wunused-var-10.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-10_2307:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-10.C'
    sources: {binary: Wunused-var-10.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-10_836:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-10.C'
    sources: {binary: Wunused-var-10.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-10_837:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-10.C'
    sources: {binary: Wunused-var-10.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-10_838:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-10.C'
    sources: {binary: Wunused-var-10.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-11_2308:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-11.C'
    sources: {binary: Wunused-var-11.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-11_2309:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-11.C'
    sources: {binary: Wunused-var-11.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-11_2310:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-11.C'
    sources: {binary: Wunused-var-11.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-11_839:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-11.C'
    sources: {binary: Wunused-var-11.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-11_840:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-11.C'
    sources: {binary: Wunused-var-11.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-11_841:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-11.C'
    sources: {binary: Wunused-var-11.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-12_2311:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-12.C'
    sources: {binary: Wunused-var-12.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_Wunused-var-12_2312:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-12.C'
    sources: {binary: Wunused-var-12.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_Wunused-var-12_2313:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-12.C'
    sources: {binary: Wunused-var-12.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_Wunused-var-12_842:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-12.C'
    sources: {binary: Wunused-var-12.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_Wunused-var-12_843:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-12.C'
    sources: {binary: Wunused-var-12.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_Wunused-var-12_844:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-12.C'
    sources: {binary: Wunused-var-12.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_Wunused-var-13_2314:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-13.C'
    sources: {binary: Wunused-var-13.s, cflags: "-std=gnu++98 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-13_2315:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-13.C'
    sources: {binary: Wunused-var-13.s, cflags: "-std=gnu++11 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-13_2316:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-13.C'
    sources: {binary: Wunused-var-13.s, cflags: "-std=gnu++14 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-13_845:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-13.C'
    sources: {binary: Wunused-var-13.s, cflags: "-std=gnu++98 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-13_846:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-13.C'
    sources: {binary: Wunused-var-13.s, cflags: "-std=gnu++11 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-13_847:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-13.C'
    sources: {binary: Wunused-var-13.s, cflags: "-std=gnu++14 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-14_2317:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-14.C'
    sources: {binary: Wunused-var-14.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-14_2318:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-14.C'
    sources: {binary: Wunused-var-14.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-14_2319:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-14.C'
    sources: {binary: Wunused-var-14.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-14_848:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-14.C'
    sources: {binary: Wunused-var-14.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-14_849:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-14.C'
    sources: {binary: Wunused-var-14.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-14_850:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-14.C'
    sources: {binary: Wunused-var-14.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-15_2320:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-15.C'
    sources: {binary: Wunused-var-15.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-15_2321:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-15.C'
    sources: {binary: Wunused-var-15.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-15_2322:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-15.C'
    sources: {binary: Wunused-var-15.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-15_851:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-15.C'
    sources: {binary: Wunused-var-15.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-15_852:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-15.C'
    sources: {binary: Wunused-var-15.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-15_853:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-15.C'
    sources: {binary: Wunused-var-15.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-16_2323:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-16.C'
    sources: {binary: Wunused-var-16.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-16_2324:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-16.C'
    sources: {binary: Wunused-var-16.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-16_2325:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-16.C'
    sources: {binary: Wunused-var-16.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-16_854:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-16.C'
    sources: {binary: Wunused-var-16.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-16_855:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-16.C'
    sources: {binary: Wunused-var-16.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-16_856:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-16.C'
    sources: {binary: Wunused-var-16.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-17_2326:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-17.C'
    sources: {binary: Wunused-var-17.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-17_2327:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-17.C'
    sources: {binary: Wunused-var-17.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-17_2328:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-17.C'
    sources: {binary: Wunused-var-17.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-17_857:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-17.C'
    sources: {binary: Wunused-var-17.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-17_858:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-17.C'
    sources: {binary: Wunused-var-17.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-17_859:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-17.C'
    sources: {binary: Wunused-var-17.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-18_2329:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-18.C'
    sources: {binary: Wunused-var-18.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_Wunused-var-18_2330:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-18.C'
    sources: {binary: Wunused-var-18.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_Wunused-var-18_2331:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-18.C'
    sources: {binary: Wunused-var-18.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_Wunused-var-18_860:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-18.C'
    sources: {binary: Wunused-var-18.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_Wunused-var-18_861:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-18.C'
    sources: {binary: Wunused-var-18.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_Wunused-var-18_862:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-18.C'
    sources: {binary: Wunused-var-18.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_Wunused-var-19_2332:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-19.C'
    sources: {binary: Wunused-var-19.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-19_2333:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-19.C'
    sources: {binary: Wunused-var-19.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-19_863:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-19.C'
    sources: {binary: Wunused-var-19.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-19_864:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-19.C'
    sources: {binary: Wunused-var-19.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-1_2302:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-1.C'
    sources: {binary: Wunused-var-1.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-1_2303:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-1.C'
    sources: {binary: Wunused-var-1.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-1_2304:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-1.C'
    sources: {binary: Wunused-var-1.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-1_833:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-1.C'
    sources: {binary: Wunused-var-1.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-1_834:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-1.C'
    sources: {binary: Wunused-var-1.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-1_835:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-1.C'
    sources: {binary: Wunused-var-1.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-20_2337:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-20.C'
    sources: {binary: Wunused-var-20.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-20_2338:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-20.C'
    sources: {binary: Wunused-var-20.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-20_2339:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-20.C'
    sources: {binary: Wunused-var-20.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-20_868:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-20.C'
    sources: {binary: Wunused-var-20.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-20_869:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-20.C'
    sources: {binary: Wunused-var-20.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-20_870:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-20.C'
    sources: {binary: Wunused-var-20.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-21_2340:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-21.C'
    sources: {binary: Wunused-var-21.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-21_2341:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-21.C'
    sources: {binary: Wunused-var-21.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-21_2342:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-21.C'
    sources: {binary: Wunused-var-21.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-21_871:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-21.C'
    sources: {binary: Wunused-var-21.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-21_872:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-21.C'
    sources: {binary: Wunused-var-21.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-21_873:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-21.C'
    sources: {binary: Wunused-var-21.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-22_2343:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-22.C'
    sources: {binary: Wunused-var-22.s, cflags: "-std=gnu++98 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-var-22_2344:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-22.C'
    sources: {binary: Wunused-var-22.s, cflags: "-std=gnu++11 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-var-22_2345:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-22.C'
    sources: {binary: Wunused-var-22.s, cflags: "-std=gnu++14 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-var-22_874:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-22.C'
    sources: {binary: Wunused-var-22.s, cflags: "-std=gnu++98 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-var-22_875:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-22.C'
    sources: {binary: Wunused-var-22.s, cflags: "-std=gnu++11 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-var-22_876:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-22.C'
    sources: {binary: Wunused-var-22.s, cflags: "-std=gnu++14 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-var-23_2346:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-23.C'
    sources: {binary: Wunused-var-23.s, cflags: "-std=gnu++98 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-var-23_2347:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-23.C'
    sources: {binary: Wunused-var-23.s, cflags: "-std=gnu++11 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-var-23_2348:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-23.C'
    sources: {binary: Wunused-var-23.s, cflags: "-std=gnu++14 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-var-23_877:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-23.C'
    sources: {binary: Wunused-var-23.s, cflags: "-std=gnu++98 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-var-23_878:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-23.C'
    sources: {binary: Wunused-var-23.s, cflags: "-std=gnu++11 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-var-23_879:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-23.C'
    sources: {binary: Wunused-var-23.s, cflags: "-std=gnu++14 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'}
test_Wunused-var-24_2349:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-24.C'
    sources: {binary: Wunused-var-24.s, cflags: "-std=gnu++14 -Wunused-but-set-variable\n
        -S"}
  group: GRPSERIAL
test_Wunused-var-24_880:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-24.C'
    sources: {binary: Wunused-var-24.s, cflags: "-std=gnu++14 -Wunused-but-set-variable\n
        -S"}
  group: GRPSERIAL
test_Wunused-var-25_2350:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-25.C'
    sources: {binary: Wunused-var-25.s, cflags: "-std=gnu++14 -Wunused-but-set-variable\n
        -S"}
  group: GRPSERIAL
test_Wunused-var-25_881:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-25.C'
    sources: {binary: Wunused-var-25.s, cflags: "-std=gnu++14 -Wunused-but-set-variable\n
        -S"}
  group: GRPSERIAL
test_Wunused-var-26_2351:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-26.C'
    sources: {binary: Wunused-var-26.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_Wunused-var-26_2352:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-26.C'
    sources: {binary: Wunused-var-26.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_Wunused-var-26_2353:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-26.C'
    sources: {binary: Wunused-var-26.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_Wunused-var-26_882:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-26.C'
    sources: {binary: Wunused-var-26.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_Wunused-var-26_883:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-26.C'
    sources: {binary: Wunused-var-26.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_Wunused-var-26_884:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-26.C'
    sources: {binary: Wunused-var-26.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_Wunused-var-2_2334:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-2.C'
    sources: {binary: Wunused-var-2.s, cflags: "-std=gnu++98 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-2_2335:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-2.C'
    sources: {binary: Wunused-var-2.s, cflags: "-std=gnu++11 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-2_2336:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-2.C'
    sources: {binary: Wunused-var-2.s, cflags: "-std=gnu++14 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-2_865:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-2.C'
    sources: {binary: Wunused-var-2.s, cflags: "-std=gnu++98 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-2_866:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-2.C'
    sources: {binary: Wunused-var-2.s, cflags: "-std=gnu++11 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-2_867:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-2.C'
    sources: {binary: Wunused-var-2.s, cflags: "-std=gnu++14 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-3_2354:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-3.C'
    sources: {binary: Wunused-var-3.s, cflags: "-std=gnu++98 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-3_2355:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-3.C'
    sources: {binary: Wunused-var-3.s, cflags: "-std=gnu++11 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-3_2356:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-3.C'
    sources: {binary: Wunused-var-3.s, cflags: "-std=gnu++14 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-3_885:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-3.C'
    sources: {binary: Wunused-var-3.s, cflags: "-std=gnu++98 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-3_886:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-3.C'
    sources: {binary: Wunused-var-3.s, cflags: "-std=gnu++11 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-3_887:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-3.C'
    sources: {binary: Wunused-var-3.s, cflags: "-std=gnu++14 -Wunused -W\n -S"}
  group: GRPSERIAL
test_Wunused-var-4_2357:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-4.C'
    sources: {binary: Wunused-var-4.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-4_2358:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-4.C'
    sources: {binary: Wunused-var-4.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-4_2359:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-4.C'
    sources: {binary: Wunused-var-4.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-4_888:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-4.C'
    sources: {binary: Wunused-var-4.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-4_889:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-4.C'
    sources: {binary: Wunused-var-4.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-4_890:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-4.C'
    sources: {binary: Wunused-var-4.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-5_2360:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-5.C'
    sources: {binary: Wunused-var-5.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L119: {expect: true, expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("statement
          has no effect")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L165: {expect: true, expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-5_2361:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-5.C'
    sources: {binary: Wunused-var-5.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L119: {expect: true, expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("statement
          has no effect")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L165: {expect: true, expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-5_2362:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-5.C'
    sources: {binary: Wunused-var-5.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L119: {expect: true, expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("statement
          has no effect")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L165: {expect: true, expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-5_891:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-5.C'
    sources: {binary: Wunused-var-5.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L119: {expect: true, expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("statement
          has no effect")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L165: {expect: true, expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-5_892:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-5.C'
    sources: {binary: Wunused-var-5.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L119: {expect: true, expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("statement
          has no effect")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L165: {expect: true, expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-5_893:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-5.C'
    sources: {binary: Wunused-var-5.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L119: {expect: true, expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("statement
          has no effect")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L165: {expect: true, expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L174: {expect: true, expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L196: {expect: true, expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-6_2363:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-6.C'
    sources: {binary: Wunused-var-6.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-6_2364:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-6.C'
    sources: {binary: Wunused-var-6.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-6_2365:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-6.C'
    sources: {binary: Wunused-var-6.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-6_894:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-6.C'
    sources: {binary: Wunused-var-6.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-6_895:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-6.C'
    sources: {binary: Wunused-var-6.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-6_896:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-6.C'
    sources: {binary: Wunused-var-6.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-7_2366:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-7.C'
    sources: {binary: Wunused-var-7.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-7_2367:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-7.C'
    sources: {binary: Wunused-var-7.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-7_2368:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-7.C'
    sources: {binary: Wunused-var-7.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-7_897:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-7.C'
    sources: {binary: Wunused-var-7.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-7_898:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-7.C'
    sources: {binary: Wunused-var-7.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-7_899:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-7.C'
    sources: {binary: Wunused-var-7.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("set
          but not used")[^\n]*\n?)+'}
test_Wunused-var-8_2369:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-8.C'
    sources: {binary: Wunused-var-8.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-8_2370:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-8.C'
    sources: {binary: Wunused-var-8.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-8_2371:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-8.C'
    sources: {binary: Wunused-var-8.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-8_900:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-8.C'
    sources: {binary: Wunused-var-8.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-8_901:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-8.C'
    sources: {binary: Wunused-var-8.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-8_902:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-8.C'
    sources: {binary: Wunused-var-8.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-9_2372:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-9.C'
    sources: {binary: Wunused-var-9.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-9_2373:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-9.C'
    sources: {binary: Wunused-var-9.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-9_2374:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-9.C'
    sources: {binary: Wunused-var-9.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-9_903:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-9.C'
    sources: {binary: Wunused-var-9.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-9_904:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-9.C'
    sources: {binary: Wunused-var-9.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
test_Wunused-var-9_905:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wunused-var-9.C'
    sources: {binary: Wunused-var-9.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
test_Wuseless-cast_2375:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuseless-cast.C'
    sources: {binary: Wuseless-cast.s, cflags: "-std=gnu++98 -Wuseless-cast\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L115: {expect: true, expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L122: {expect: true, expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L124: {expect: true, expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L125: {expect: true, expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
test_Wuseless-cast_2376:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuseless-cast.C'
    sources: {binary: Wuseless-cast.s, cflags: "-std=gnu++11 -Wuseless-cast\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L115: {expect: true, expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L122: {expect: true, expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L124: {expect: true, expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L125: {expect: true, expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
test_Wuseless-cast_2377:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuseless-cast.C'
    sources: {binary: Wuseless-cast.s, cflags: "-std=gnu++14 -Wuseless-cast\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L115: {expect: true, expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L122: {expect: true, expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L124: {expect: true, expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L125: {expect: true, expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
test_Wuseless-cast_906:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuseless-cast.C'
    sources: {binary: Wuseless-cast.s, cflags: "-std=gnu++98 -Wuseless-cast\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L115: {expect: true, expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L122: {expect: true, expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L124: {expect: true, expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L125: {expect: true, expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
test_Wuseless-cast_907:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuseless-cast.C'
    sources: {binary: Wuseless-cast.s, cflags: "-std=gnu++11 -Wuseless-cast\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L115: {expect: true, expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L122: {expect: true, expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L124: {expect: true, expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L125: {expect: true, expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
test_Wuseless-cast_908:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wuseless-cast.C'
    sources: {binary: Wuseless-cast.s, cflags: "-std=gnu++14 -Wuseless-cast\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L114: {expect: true, expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L115: {expect: true, expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L118: {expect: true, expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L122: {expect: true, expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L123: {expect: true, expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L124: {expect: true, expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L125: {expect: true, expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L126: {expect: true, expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("useless
          cast")[^\n]*\n?)+'}
test_Wvla-1_2378:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-1.C'
    sources: {binary: Wvla-1.s, cflags: "-std=gnu++98 -Wvla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("variable
          length array \''array\'' is used")[^\n]*\n?)+'}
test_Wvla-1_2379:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-1.C'
    sources: {binary: Wvla-1.s, cflags: "-std=gnu++11 -Wvla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("variable
          length array \''array\'' is used")[^\n]*\n?)+'}
test_Wvla-1_2380:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-1.C'
    sources: {binary: Wvla-1.s, cflags: "-std=gnu++14 -Wvla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("variable
          length array \''array\'' is used")[^\n]*\n?)+'}
test_Wvla-1_909:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-1.C'
    sources: {binary: Wvla-1.s, cflags: "-std=gnu++98 -Wvla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("variable
          length array \''array\'' is used")[^\n]*\n?)+'}
test_Wvla-1_910:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-1.C'
    sources: {binary: Wvla-1.s, cflags: "-std=gnu++11 -Wvla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("variable
          length array \''array\'' is used")[^\n]*\n?)+'}
test_Wvla-1_911:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-1.C'
    sources: {binary: Wvla-1.s, cflags: "-std=gnu++14 -Wvla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("variable
          length array \''array\'' is used")[^\n]*\n?)+'}
test_Wvla-2_2381:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-2.C'
    sources: {binary: Wvla-2.s, cflags: "-std=gnu++98 -pedantic-errors -Wvla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C.* forbids variable.* array \''array\''")[^\n]*\n?)+'}
test_Wvla-2_2382:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-2.C'
    sources: {binary: Wvla-2.s, cflags: "-std=gnu++11 -pedantic-errors -Wvla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C.* forbids variable.* array \''array\''")[^\n]*\n?)+'}
test_Wvla-2_912:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-2.C'
    sources: {binary: Wvla-2.s, cflags: "-std=gnu++98 -pedantic-errors -Wvla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C.* forbids variable.* array \''array\''")[^\n]*\n?)+'}
test_Wvla-2_913:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-2.C'
    sources: {binary: Wvla-2.s, cflags: "-std=gnu++11 -pedantic-errors -Wvla\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C.* forbids variable.* array \''array\''")[^\n]*\n?)+'}
test_Wvla-3_2383:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-3.C'
    sources: {binary: Wvla-3.s, cflags: "-std=gnu++98 -pedantic-errors -Wno-vla\n
        -S"}
  group: GRPSERIAL
test_Wvla-3_2384:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-3.C'
    sources: {binary: Wvla-3.s, cflags: "-std=gnu++11 -pedantic-errors -Wno-vla\n
        -S"}
  group: GRPSERIAL
test_Wvla-3_2385:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-3.C'
    sources: {binary: Wvla-3.s, cflags: "-std=gnu++14 -pedantic-errors -Wno-vla\n
        -S"}
  group: GRPSERIAL
test_Wvla-3_914:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-3.C'
    sources: {binary: Wvla-3.s, cflags: "-std=gnu++98 -pedantic-errors -Wno-vla\n
        -S"}
  group: GRPSERIAL
test_Wvla-3_915:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-3.C'
    sources: {binary: Wvla-3.s, cflags: "-std=gnu++11 -pedantic-errors -Wno-vla\n
        -S"}
  group: GRPSERIAL
test_Wvla-3_916:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wvla-3.C'
    sources: {binary: Wvla-3.s, cflags: "-std=gnu++14 -pedantic-errors -Wno-vla\n
        -S"}
  group: GRPSERIAL
test_Wwrite-strings-10_2388:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-10.C'
    sources: {binary: Wwrite-strings-10.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("deprecated
          conversion from string constant")[^\n]*\n?)+'}
test_Wwrite-strings-10_919:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-10.C'
    sources: {binary: Wwrite-strings-10.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("deprecated
          conversion from string constant")[^\n]*\n?)+'}
test_Wwrite-strings-11_2389:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-11.C'
    sources: {binary: Wwrite-strings-11.s, cflags: "-std=gnu++98 -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("deprecated
          conversion from string constant")[^\n]*\n?)+'}
test_Wwrite-strings-11_920:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-11.C'
    sources: {binary: Wwrite-strings-11.s, cflags: "-std=gnu++98 -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("deprecated
          conversion from string constant")[^\n]*\n?)+'}
test_Wwrite-strings-12_2390:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-12.C'
    sources: {binary: Wwrite-strings-12.s, cflags: "-std=gnu++98 -Werror=write-strings\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deprecated
          conversion from string constant")[^\n]*\n?)+'}
test_Wwrite-strings-12_921:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-12.C'
    sources: {binary: Wwrite-strings-12.s, cflags: "-std=gnu++98 -Werror=write-strings\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("deprecated
          conversion from string constant")[^\n]*\n?)+'}
test_Wwrite-strings-1_2386:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-1.C'
    sources: {binary: Wwrite-strings-1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-1_2387:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-1.C'
    sources: {binary: Wwrite-strings-1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-1_917:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-1.C'
    sources: {binary: Wwrite-strings-1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-1_918:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-1.C'
    sources: {binary: Wwrite-strings-1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-2_2391:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-2.C'
    sources: {binary: Wwrite-strings-2.s, cflags: "-std=gnu++11 -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-2_2392:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-2.C'
    sources: {binary: Wwrite-strings-2.s, cflags: "-std=gnu++14 -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-2_922:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-2.C'
    sources: {binary: Wwrite-strings-2.s, cflags: "-std=gnu++11 -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-2_923:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-2.C'
    sources: {binary: Wwrite-strings-2.s, cflags: "-std=gnu++14 -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-3_2393:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-3.C'
    sources: {binary: Wwrite-strings-3.s, cflags: "-std=gnu++11 -pedantic-errors -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_Wwrite-strings-3_2394:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-3.C'
    sources: {binary: Wwrite-strings-3.s, cflags: "-std=gnu++14 -pedantic-errors -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_Wwrite-strings-3_924:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-3.C'
    sources: {binary: Wwrite-strings-3.s, cflags: "-std=gnu++11 -pedantic-errors -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_Wwrite-strings-3_925:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-3.C'
    sources: {binary: Wwrite-strings-3.s, cflags: "-std=gnu++14 -pedantic-errors -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_Wwrite-strings-4_2395:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-4.C'
    sources: {binary: Wwrite-strings-4.s, cflags: "-std=gnu++11 -Werror=write-strings\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-4_2396:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-4.C'
    sources: {binary: Wwrite-strings-4.s, cflags: "-std=gnu++14 -Werror=write-strings\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-4_926:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-4.C'
    sources: {binary: Wwrite-strings-4.s, cflags: "-std=gnu++11 -Werror=write-strings\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-4_927:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-4.C'
    sources: {binary: Wwrite-strings-4.s, cflags: "-std=gnu++14 -Werror=write-strings\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-5_2397:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-5.C'
    sources: {binary: Wwrite-strings-5.s, cflags: "-std=gnu++11 -Werror=write-strings
        -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-5_2398:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-5.C'
    sources: {binary: Wwrite-strings-5.s, cflags: "-std=gnu++14 -Werror=write-strings
        -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-5_928:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-5.C'
    sources: {binary: Wwrite-strings-5.s, cflags: "-std=gnu++11 -Werror=write-strings
        -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-5_929:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-5.C'
    sources: {binary: Wwrite-strings-5.s, cflags: "-std=gnu++14 -Werror=write-strings
        -Wpedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-6_2399:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-6.C'
    sources: {binary: Wwrite-strings-6.s, cflags: "-std=gnu++11 -Werror=write-strings
        -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-6_2400:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-6.C'
    sources: {binary: Wwrite-strings-6.s, cflags: "-std=gnu++14 -Werror=write-strings
        -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-6_930:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-6.C'
    sources: {binary: Wwrite-strings-6.s, cflags: "-std=gnu++11 -Werror=write-strings
        -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-6_931:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-6.C'
    sources: {binary: Wwrite-strings-6.s, cflags: "-std=gnu++14 -Werror=write-strings
        -Wno-pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-7_2401:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-7.C'
    sources: {binary: Wwrite-strings-7.s, cflags: "-std=gnu++11 -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_Wwrite-strings-7_2402:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-7.C'
    sources: {binary: Wwrite-strings-7.s, cflags: "-std=gnu++14 -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_Wwrite-strings-7_932:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-7.C'
    sources: {binary: Wwrite-strings-7.s, cflags: "-std=gnu++11 -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_Wwrite-strings-7_933:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-7.C'
    sources: {binary: Wwrite-strings-7.s, cflags: "-std=gnu++14 -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_Wwrite-strings-8_2403:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-8.C'
    sources: {binary: Wwrite-strings-8.s, cflags: "-std=gnu++11 -Wpedantic -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_Wwrite-strings-8_2404:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-8.C'
    sources: {binary: Wwrite-strings-8.s, cflags: "-std=gnu++14 -Wpedantic -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_Wwrite-strings-8_934:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-8.C'
    sources: {binary: Wwrite-strings-8.s, cflags: "-std=gnu++11 -Wpedantic -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_Wwrite-strings-8_935:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-8.C'
    sources: {binary: Wwrite-strings-8.s, cflags: "-std=gnu++14 -Wpedantic -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_Wwrite-strings-9_2405:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-9.C'
    sources: {binary: Wwrite-strings-9.s, cflags: "-std=gnu++11 -Wno-error=write-strings
        -pedantic-errors\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-9_2406:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-9.C'
    sources: {binary: Wwrite-strings-9.s, cflags: "-std=gnu++14 -Wno-error=write-strings
        -pedantic-errors\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-9_936:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-9.C'
    sources: {binary: Wwrite-strings-9.s, cflags: "-std=gnu++11 -Wno-error=write-strings
        -pedantic-errors\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wwrite-strings-9_937:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wwrite-strings-9.C'
    sources: {binary: Wwrite-strings-9.s, cflags: "-std=gnu++14 -Wno-error=write-strings
        -pedantic-errors\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ forbids converting a string constant")[^\n]*\n?)+'}
test_Wzero-as-null-pointer-constant-1_2407:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-1.C'
    sources: {binary: Wzero-as-null-pointer-constant-1.s, cflags: "-std=gnu++98 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
test_Wzero-as-null-pointer-constant-1_2408:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-1.C'
    sources: {binary: Wzero-as-null-pointer-constant-1.s, cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
test_Wzero-as-null-pointer-constant-1_2409:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-1.C'
    sources: {binary: Wzero-as-null-pointer-constant-1.s, cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
test_Wzero-as-null-pointer-constant-1_938:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-1.C'
    sources: {binary: Wzero-as-null-pointer-constant-1.s, cflags: "-std=gnu++98 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
test_Wzero-as-null-pointer-constant-1_939:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-1.C'
    sources: {binary: Wzero-as-null-pointer-constant-1.s, cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
test_Wzero-as-null-pointer-constant-1_940:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-1.C'
    sources: {binary: Wzero-as-null-pointer-constant-1.s, cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
test_Wzero-as-null-pointer-constant-2_2410:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-2.C'
    sources: {binary: Wzero-as-null-pointer-constant-2.s, cflags: "-std=gnu++98 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-2_2411:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-2.C'
    sources: {binary: Wzero-as-null-pointer-constant-2.s, cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-2_2412:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-2.C'
    sources: {binary: Wzero-as-null-pointer-constant-2.s, cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-2_941:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-2.C'
    sources: {binary: Wzero-as-null-pointer-constant-2.s, cflags: "-std=gnu++98 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-2_942:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-2.C'
    sources: {binary: Wzero-as-null-pointer-constant-2.s, cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-2_943:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-2.C'
    sources: {binary: Wzero-as-null-pointer-constant-2.s, cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-3_2413:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-3.C'
    sources: {binary: Wzero-as-null-pointer-constant-3.s, cflags: "-std=gnu++98 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-3_2414:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-3.C'
    sources: {binary: Wzero-as-null-pointer-constant-3.s, cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-3_2415:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-3.C'
    sources: {binary: Wzero-as-null-pointer-constant-3.s, cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-3_944:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-3.C'
    sources: {binary: Wzero-as-null-pointer-constant-3.s, cflags: "-std=gnu++98 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-3_945:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-3.C'
    sources: {binary: Wzero-as-null-pointer-constant-3.s, cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-3_946:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-3.C'
    sources: {binary: Wzero-as-null-pointer-constant-3.s, cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-4_2416:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-4.C'
    sources: {binary: Wzero-as-null-pointer-constant-4.s, cflags: "-std=gnu++98 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-4_2417:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-4.C'
    sources: {binary: Wzero-as-null-pointer-constant-4.s, cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-4_2418:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-4.C'
    sources: {binary: Wzero-as-null-pointer-constant-4.s, cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-4_947:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-4.C'
    sources: {binary: Wzero-as-null-pointer-constant-4.s, cflags: "-std=gnu++98 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-4_948:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-4.C'
    sources: {binary: Wzero-as-null-pointer-constant-4.s, cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-4_949:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-4.C'
    sources: {binary: Wzero-as-null-pointer-constant-4.s, cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-5_2419:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-5.C'
    sources: {binary: Wzero-as-null-pointer-constant-5.s, cflags: "-std=gnu++98 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
test_Wzero-as-null-pointer-constant-5_2420:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-5.C'
    sources: {binary: Wzero-as-null-pointer-constant-5.s, cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
test_Wzero-as-null-pointer-constant-5_2421:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-5.C'
    sources: {binary: Wzero-as-null-pointer-constant-5.s, cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
test_Wzero-as-null-pointer-constant-5_950:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-5.C'
    sources: {binary: Wzero-as-null-pointer-constant-5.s, cflags: "-std=gnu++98 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
test_Wzero-as-null-pointer-constant-5_951:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-5.C'
    sources: {binary: Wzero-as-null-pointer-constant-5.s, cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
test_Wzero-as-null-pointer-constant-5_952:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-5.C'
    sources: {binary: Wzero-as-null-pointer-constant-5.s, cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("zero
          as null pointer")[^\n]*\n?)+'}
test_Wzero-as-null-pointer-constant-6_2422:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-6.C'
    sources: {binary: Wzero-as-null-pointer-constant-6.s, cflags: "-std=gnu++98 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-6_2423:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-6.C'
    sources: {binary: Wzero-as-null-pointer-constant-6.s, cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-6_2424:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-6.C'
    sources: {binary: Wzero-as-null-pointer-constant-6.s, cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-6_953:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-6.C'
    sources: {binary: Wzero-as-null-pointer-constant-6.s, cflags: "-std=gnu++98 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-6_954:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-6.C'
    sources: {binary: Wzero-as-null-pointer-constant-6.s, cflags: "-std=gnu++11 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_Wzero-as-null-pointer-constant-6_955:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/Wzero-as-null-pointer-constant-6.C'
    sources: {binary: Wzero-as-null-pointer-constant-6.s, cflags: "-std=gnu++14 -Wzero-as-null-pointer-constant\n
        -S"}
  group: GRPSERIAL
test_anonymous-namespace-1_2425:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-1.C'
    sources: {binary: anonymous-namespace-1.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-1_2426:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-1.C'
    sources: {binary: anonymous-namespace-1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-1_2427:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-1.C'
    sources: {binary: anonymous-namespace-1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-1_956:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-1.C'
    sources: {binary: anonymous-namespace-1.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-1_957:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-1.C'
    sources: {binary: anonymous-namespace-1.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-1_958:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-1.C'
    sources: {binary: anonymous-namespace-1.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-2_2428:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-2.C'
    sources: {binary: anonymous-namespace-2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-2_2429:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-2.C'
    sources: {binary: anonymous-namespace-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-2_2430:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-2.C'
    sources: {binary: anonymous-namespace-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-2_959:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-2.C'
    sources: {binary: anonymous-namespace-2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-2_960:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-2.C'
    sources: {binary: anonymous-namespace-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-2_961:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-2.C'
    sources: {binary: anonymous-namespace-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-3_2431:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-3.C'
    sources: {binary: anonymous-namespace-3.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-3_2432:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-3.C'
    sources: {binary: anonymous-namespace-3.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-3_2433:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-3.C'
    sources: {binary: anonymous-namespace-3.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-3_962:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-3.C'
    sources: {binary: anonymous-namespace-3.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-3_963:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-3.C'
    sources: {binary: anonymous-namespace-3.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-3_964:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-3.C'
    sources: {binary: anonymous-namespace-3.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("uses
          the anonymous namespace")[^\n]*\n?)+'}
test_anonymous-namespace-4_2434:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-4.C'
    sources: {binary: anonymous-namespace-4.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_anonymous-namespace-4_2435:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-4.C'
    sources: {binary: anonymous-namespace-4.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_anonymous-namespace-4_2436:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-4.C'
    sources: {binary: anonymous-namespace-4.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_anonymous-namespace-4_965:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-4.C'
    sources: {binary: anonymous-namespace-4.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_anonymous-namespace-4_966:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-4.C'
    sources: {binary: anonymous-namespace-4.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_anonymous-namespace-4_967:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-4.C'
    sources: {binary: anonymous-namespace-4.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_anonymous-namespace-5_2437:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-5.C'
    sources: {binary: anonymous-namespace-5.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_anonymous-namespace-5_2438:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-5.C'
    sources: {binary: anonymous-namespace-5.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_anonymous-namespace-5_2439:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-5.C'
    sources: {binary: anonymous-namespace-5.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_anonymous-namespace-5_968:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-5.C'
    sources: {binary: anonymous-namespace-5.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_anonymous-namespace-5_969:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-5.C'
    sources: {binary: anonymous-namespace-5.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_anonymous-namespace-5_970:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-5.C'
    sources: {binary: anonymous-namespace-5.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_anonymous-namespace-6_2440:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-6.C'
    sources: {binary: anonymous-namespace-6.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_anonymous-namespace-6_2441:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-6.C'
    sources: {binary: anonymous-namespace-6.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_anonymous-namespace-6_2442:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-6.C'
    sources: {binary: anonymous-namespace-6.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_anonymous-namespace-6_971:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-6.C'
    sources: {binary: anonymous-namespace-6.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_anonymous-namespace-6_972:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-6.C'
    sources: {binary: anonymous-namespace-6.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_anonymous-namespace-6_973:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/anonymous-namespace-6.C'
    sources: {binary: anonymous-namespace-6.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
test_changes-meaning_2443:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/changes-meaning.C'
    sources: {binary: changes-meaning.s, cflags: "-std=gnu++98 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("changes
          meaning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_changes-meaning_2444:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/changes-meaning.C'
    sources: {binary: changes-meaning.s, cflags: "-std=gnu++11 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("changes
          meaning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_changes-meaning_2445:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/changes-meaning.C'
    sources: {binary: changes-meaning.s, cflags: "-std=gnu++14 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("changes
          meaning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_changes-meaning_974:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/changes-meaning.C'
    sources: {binary: changes-meaning.s, cflags: "-std=gnu++98 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("changes
          meaning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_changes-meaning_975:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/changes-meaning.C'
    sources: {binary: changes-meaning.s, cflags: "-std=gnu++11 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("changes
          meaning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_changes-meaning_976:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/changes-meaning.C'
    sources: {binary: changes-meaning.s, cflags: "-std=gnu++14 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("changes
          meaning")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_compare1_2446:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/compare1.C'
    sources: {binary: compare1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("signed
          and unsigned")[^\n]*\n?)+'}
test_compare1_2447:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/compare1.C'
    sources: {binary: compare1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("signed
          and unsigned")[^\n]*\n?)+'}
test_compare1_2448:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/compare1.C'
    sources: {binary: compare1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("signed
          and unsigned")[^\n]*\n?)+'}
test_compare1_977:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/compare1.C'
    sources: {binary: compare1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("signed
          and unsigned")[^\n]*\n?)+'}
test_compare1_978:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/compare1.C'
    sources: {binary: compare1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("signed
          and unsigned")[^\n]*\n?)+'}
test_compare1_979:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/compare1.C'
    sources: {binary: compare1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("signed
          and unsigned")[^\n]*\n?)+'}
test_constexpr-70194_2449:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/constexpr-70194.C'
    sources: {binary: constexpr-70194.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
test_constexpr-70194_2450:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/constexpr-70194.C'
    sources: {binary: constexpr-70194.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
test_constexpr-70194_980:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/constexpr-70194.C'
    sources: {binary: constexpr-70194.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
test_constexpr-70194_981:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/constexpr-70194.C'
    sources: {binary: constexpr-70194.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("the
          address of .i. will never be NULL")[^\n]*\n?)+'}
test_conv1_2451:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv1.C'
    sources: {binary: conv1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv1_2452:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv1.C'
    sources: {binary: conv1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv1_2453:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv1.C'
    sources: {binary: conv1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv1_982:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv1.C'
    sources: {binary: conv1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv1_983:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv1.C'
    sources: {binary: conv1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv1_984:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv1.C'
    sources: {binary: conv1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv2_2454:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv2.C'
    sources: {binary: conv2.s, cflags: "-std=gnu++98 -Wconversion\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_conv2_2455:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv2.C'
    sources: {binary: conv2.s, cflags: "-std=gnu++11 -Wconversion\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_conv2_2456:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv2.C'
    sources: {binary: conv2.s, cflags: "-std=gnu++14 -Wconversion\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_conv2_985:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv2.C'
    sources: {binary: conv2.s, cflags: "-std=gnu++98 -Wconversion\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_conv2_986:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv2.C'
    sources: {binary: conv2.s, cflags: "-std=gnu++11 -Wconversion\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_conv2_987:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv2.C'
    sources: {binary: conv2.s, cflags: "-std=gnu++14 -Wconversion\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_conv3_2457:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv3.C'
    sources: {binary: conv3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv3_2458:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv3.C'
    sources: {binary: conv3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv3_2459:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv3.C'
    sources: {binary: conv3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv3_988:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv3.C'
    sources: {binary: conv3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv3_989:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv3.C'
    sources: {binary: conv3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv3_990:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv3.C'
    sources: {binary: conv3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv4_2460:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv4.C'
    sources: {binary: conv4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv4_2461:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv4.C'
    sources: {binary: conv4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv4_2462:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv4.C'
    sources: {binary: conv4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv4_991:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv4.C'
    sources: {binary: conv4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv4_992:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv4.C'
    sources: {binary: conv4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conv4_993:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conv4.C'
    sources: {binary: conv4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_conversion-function-1_2463:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conversion-function-1.C'
    sources: {binary: conversion-function-1.s, cflags: "-std=gnu++98 -Wno-conversion\n
        -S"}
  group: GRPSERIAL
test_conversion-function-1_2464:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conversion-function-1.C'
    sources: {binary: conversion-function-1.s, cflags: "-std=gnu++11 -Wno-conversion\n
        -S"}
  group: GRPSERIAL
test_conversion-function-1_2465:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conversion-function-1.C'
    sources: {binary: conversion-function-1.s, cflags: "-std=gnu++14 -Wno-conversion\n
        -S"}
  group: GRPSERIAL
test_conversion-function-1_994:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conversion-function-1.C'
    sources: {binary: conversion-function-1.s, cflags: "-std=gnu++98 -Wno-conversion\n
        -S"}
  group: GRPSERIAL
test_conversion-function-1_995:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conversion-function-1.C'
    sources: {binary: conversion-function-1.s, cflags: "-std=gnu++11 -Wno-conversion\n
        -S"}
  group: GRPSERIAL
test_conversion-function-1_996:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/conversion-function-1.C'
    sources: {binary: conversion-function-1.s, cflags: "-std=gnu++14 -Wno-conversion\n
        -S"}
  group: GRPSERIAL
test_ctor-dtor-privacy-1_2466:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-dtor-privacy-1.C'
    sources: {binary: ctor-dtor-privacy-1.s, cflags: "-std=gnu++98 -Wctor-dtor-privacy\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_ctor-dtor-privacy-1_2467:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-dtor-privacy-1.C'
    sources: {binary: ctor-dtor-privacy-1.s, cflags: "-std=gnu++11 -Wctor-dtor-privacy\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_ctor-dtor-privacy-1_2468:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-dtor-privacy-1.C'
    sources: {binary: ctor-dtor-privacy-1.s, cflags: "-std=gnu++14 -Wctor-dtor-privacy\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_ctor-dtor-privacy-1_997:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-dtor-privacy-1.C'
    sources: {binary: ctor-dtor-privacy-1.s, cflags: "-std=gnu++98 -Wctor-dtor-privacy\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_ctor-dtor-privacy-1_998:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-dtor-privacy-1.C'
    sources: {binary: ctor-dtor-privacy-1.s, cflags: "-std=gnu++11 -Wctor-dtor-privacy\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_ctor-dtor-privacy-1_999:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-dtor-privacy-1.C'
    sources: {binary: ctor-dtor-privacy-1.s, cflags: "-std=gnu++14 -Wctor-dtor-privacy\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_ctor-dtor-privacy-2_1000:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-dtor-privacy-2.C'
    sources: {binary: ctor-dtor-privacy-2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_ctor-dtor-privacy-2_1001:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-dtor-privacy-2.C'
    sources: {binary: ctor-dtor-privacy-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_ctor-dtor-privacy-2_1002:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-dtor-privacy-2.C'
    sources: {binary: ctor-dtor-privacy-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_ctor-dtor-privacy-2_2469:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-dtor-privacy-2.C'
    sources: {binary: ctor-dtor-privacy-2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_ctor-dtor-privacy-2_2470:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-dtor-privacy-2.C'
    sources: {binary: ctor-dtor-privacy-2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_ctor-dtor-privacy-2_2471:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-dtor-privacy-2.C'
    sources: {binary: ctor-dtor-privacy-2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_ctor-init-1_1003:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-init-1.C'
    sources: {binary: ctor-init-1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_ctor-init-1_1004:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-init-1.C'
    sources: {binary: ctor-init-1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_ctor-init-1_1005:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-init-1.C'
    sources: {binary: ctor-init-1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_ctor-init-1_2472:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-init-1.C'
    sources: {binary: ctor-init-1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_ctor-init-1_2473:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-init-1.C'
    sources: {binary: ctor-init-1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_ctor-init-1_2474:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor-init-1.C'
    sources: {binary: ctor-init-1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_ctor1_1006:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor1.C'
    sources: {binary: ctor1.s, cflags: "-std=gnu++98 -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("base
          class")[^\n]*\n?)+'}
test_ctor1_1007:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor1.C'
    sources: {binary: ctor1.s, cflags: "-std=gnu++11 -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("base
          class")[^\n]*\n?)+'}
test_ctor1_1008:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor1.C'
    sources: {binary: ctor1.s, cflags: "-std=gnu++14 -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("base
          class")[^\n]*\n?)+'}
test_ctor1_2475:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor1.C'
    sources: {binary: ctor1.s, cflags: "-std=gnu++98 -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("base
          class")[^\n]*\n?)+'}
test_ctor1_2476:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor1.C'
    sources: {binary: ctor1.s, cflags: "-std=gnu++11 -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("base
          class")[^\n]*\n?)+'}
test_ctor1_2477:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ctor1.C'
    sources: {binary: ctor1.s, cflags: "-std=gnu++14 -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("base
          class")[^\n]*\n?)+'}
test_delete-array-1_1009:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/delete-array-1.C'
    sources: {binary: delete-array-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
test_delete-array-1_1010:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/delete-array-1.C'
    sources: {binary: delete-array-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
test_delete-array-1_1011:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/delete-array-1.C'
    sources: {binary: delete-array-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
test_delete-array-1_2478:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/delete-array-1.C'
    sources: {binary: delete-array-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
test_delete-array-1_2479:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/delete-array-1.C'
    sources: {binary: delete-array-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
test_delete-array-1_2480:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/delete-array-1.C'
    sources: {binary: delete-array-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("deleting
          array")[^\n]*\n?)+'}
test_delete-non-virtual-dtor_1012:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/delete-non-virtual-dtor.C'
    sources: {binary: delete-non-virtual-dtor.s, cflags: "-std=gnu++11 -Wdelete-non-virtual-dtor\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor will")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
test_delete-non-virtual-dtor_1013:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/delete-non-virtual-dtor.C'
    sources: {binary: delete-non-virtual-dtor.s, cflags: "-std=gnu++14 -Wdelete-non-virtual-dtor\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor will")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
test_delete-non-virtual-dtor_2481:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/delete-non-virtual-dtor.C'
    sources: {binary: delete-non-virtual-dtor.s, cflags: "-std=gnu++11 -Wdelete-non-virtual-dtor\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor will")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
test_delete-non-virtual-dtor_2482:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/delete-non-virtual-dtor.C'
    sources: {binary: delete-non-virtual-dtor.s, cflags: "-std=gnu++14 -Wdelete-non-virtual-dtor\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor will")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("non-virtual
          destructor might")[^\n]*\n?)+'}
test_deprecated-10_1014:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-10.C'
    sources: {binary: deprecated-10.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-10_1015:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-10.C'
    sources: {binary: deprecated-10.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-10_1016:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-10.C'
    sources: {binary: deprecated-10.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-10_2483:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-10.C'
    sources: {binary: deprecated-10.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-10_2484:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-10.C'
    sources: {binary: deprecated-10.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-10_2485:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-10.C'
    sources: {binary: deprecated-10.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-11_1017:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-11.C'
    sources: {binary: deprecated-11.s, cflags: "-std=gnu++98 -Wdeprecated-declarations\n
        -S"}
  group: GRPSERIAL
test_deprecated-11_1018:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-11.C'
    sources: {binary: deprecated-11.s, cflags: "-std=gnu++11 -Wdeprecated-declarations\n
        -S"}
  group: GRPSERIAL
test_deprecated-11_1019:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-11.C'
    sources: {binary: deprecated-11.s, cflags: "-std=gnu++14 -Wdeprecated-declarations\n
        -S"}
  group: GRPSERIAL
test_deprecated-11_2486:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-11.C'
    sources: {binary: deprecated-11.s, cflags: "-std=gnu++98 -Wdeprecated-declarations\n
        -S"}
  group: GRPSERIAL
test_deprecated-11_2487:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-11.C'
    sources: {binary: deprecated-11.s, cflags: "-std=gnu++11 -Wdeprecated-declarations\n
        -S"}
  group: GRPSERIAL
test_deprecated-11_2488:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-11.C'
    sources: {binary: deprecated-11.s, cflags: "-std=gnu++14 -Wdeprecated-declarations\n
        -S"}
  group: GRPSERIAL
test_deprecated-12_1020:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-12.C'
    sources: {binary: deprecated-12.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_deprecated-12_1021:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-12.C'
    sources: {binary: deprecated-12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_deprecated-12_1022:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-12.C'
    sources: {binary: deprecated-12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_deprecated-12_2489:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-12.C'
    sources: {binary: deprecated-12.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_deprecated-12_2490:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-12.C'
    sources: {binary: deprecated-12.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_deprecated-12_2491:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-12.C'
    sources: {binary: deprecated-12.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_deprecated-2_1023:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-2.C'
    sources: {binary: deprecated-2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          func\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
test_deprecated-2_1024:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-2.C'
    sources: {binary: deprecated-2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          func\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
test_deprecated-2_1025:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-2.C'
    sources: {binary: deprecated-2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          func\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
test_deprecated-2_2492:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-2.C'
    sources: {binary: deprecated-2.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          func\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
test_deprecated-2_2493:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-2.C'
    sources: {binary: deprecated-2.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          func\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
test_deprecated-2_2494:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-2.C'
    sources: {binary: deprecated-2.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          func\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
test_deprecated-3_1026:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-3.C'
    sources: {binary: deprecated-3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''Foo::operator
          int\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
test_deprecated-3_1027:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-3.C'
    sources: {binary: deprecated-3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''Foo::operator
          int\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
test_deprecated-3_1028:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-3.C'
    sources: {binary: deprecated-3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''Foo::operator
          int\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
test_deprecated-3_2495:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-3.C'
    sources: {binary: deprecated-3.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''Foo::operator
          int\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
test_deprecated-3_2496:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-3.C'
    sources: {binary: deprecated-3.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''Foo::operator
          int\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
test_deprecated-3_2497:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-3.C'
    sources: {binary: deprecated-3.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''Foo::operator
          int\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
test_deprecated-4_1029:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-4.C'
    sources: {binary: deprecated-4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-4_1030:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-4.C'
    sources: {binary: deprecated-4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-4_1031:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-4.C'
    sources: {binary: deprecated-4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-4_2498:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-4.C'
    sources: {binary: deprecated-4.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-4_2499:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-4.C'
    sources: {binary: deprecated-4.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-4_2500:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-4.C'
    sources: {binary: deprecated-4.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-5_1032:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-5.C'
    sources: {binary: deprecated-5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-5_1033:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-5.C'
    sources: {binary: deprecated-5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-5_1034:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-5.C'
    sources: {binary: deprecated-5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-5_2501:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-5.C'
    sources: {binary: deprecated-5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-5_2502:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-5.C'
    sources: {binary: deprecated-5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-5_2503:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-5.C'
    sources: {binary: deprecated-5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("deprecated")[^\n]*\n?)+'}
test_deprecated-6_1035:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-6.C'
    sources: {binary: deprecated-6.s, cflags: "-std=gnu++98 -Wdeprecated-declarations
        -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated: Please avoid T")[^\n]*\n?)+'}
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated: Please avoid member1")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated: Please avoid member1")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated: Please avoid member2")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated: Please avoid member2")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated: Please avoid INT2")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("\''Color\''
          is deprecated: Please avoid Color")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("\''x\''
          is deprecated: Please avoid x")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("\''y\''
          is deprecated: Please avoid y")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("\''g2\''
          is deprecated: Please avoid g2")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("\''g3\''
          is deprecated: Please avoid g3")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field2\''
          is deprecated: Please avoid field2")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field4\''
          is deprecated: Please avoid field4")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::u2\''
          is deprecated: Please avoid u2")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::<unnamed
          union>::field6\'' is deprecated: Please avoid field6")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field8\''
          is deprecated: Please avoid field8")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("\''SS1\''
          is deprecated: Please avoid SS1")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("\''SS2\''
          is deprecated: Please avoid SS2")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated: Please avoid T")[^\n]*\n?)+'}
test_deprecated-6_1036:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-6.C'
    sources: {binary: deprecated-6.s, cflags: "-std=gnu++11 -Wdeprecated-declarations
        -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated: Please avoid T")[^\n]*\n?)+'}
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated: Please avoid member1")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated: Please avoid member1")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated: Please avoid member2")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated: Please avoid member2")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated: Please avoid INT2")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("\''Color\''
          is deprecated: Please avoid Color")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("\''x\''
          is deprecated: Please avoid x")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("\''y\''
          is deprecated: Please avoid y")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("\''g2\''
          is deprecated: Please avoid g2")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("\''g3\''
          is deprecated: Please avoid g3")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field2\''
          is deprecated: Please avoid field2")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field4\''
          is deprecated: Please avoid field4")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::u2\''
          is deprecated: Please avoid u2")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::<unnamed
          union>::field6\'' is deprecated: Please avoid field6")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field8\''
          is deprecated: Please avoid field8")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("\''SS1\''
          is deprecated: Please avoid SS1")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("\''SS2\''
          is deprecated: Please avoid SS2")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated: Please avoid T")[^\n]*\n?)+'}
test_deprecated-6_1037:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-6.C'
    sources: {binary: deprecated-6.s, cflags: "-std=gnu++14 -Wdeprecated-declarations
        -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated: Please avoid T")[^\n]*\n?)+'}
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated: Please avoid member1")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated: Please avoid member1")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated: Please avoid member2")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated: Please avoid member2")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated: Please avoid INT2")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("\''Color\''
          is deprecated: Please avoid Color")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("\''x\''
          is deprecated: Please avoid x")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("\''y\''
          is deprecated: Please avoid y")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("\''g2\''
          is deprecated: Please avoid g2")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("\''g3\''
          is deprecated: Please avoid g3")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field2\''
          is deprecated: Please avoid field2")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field4\''
          is deprecated: Please avoid field4")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::u2\''
          is deprecated: Please avoid u2")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::<unnamed
          union>::field6\'' is deprecated: Please avoid field6")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field8\''
          is deprecated: Please avoid field8")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("\''SS1\''
          is deprecated: Please avoid SS1")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("\''SS2\''
          is deprecated: Please avoid SS2")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated: Please avoid T")[^\n]*\n?)+'}
test_deprecated-6_2504:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-6.C'
    sources: {binary: deprecated-6.s, cflags: "-std=gnu++98 -Wdeprecated-declarations
        -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated: Please avoid T")[^\n]*\n?)+'}
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated: Please avoid member1")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated: Please avoid member1")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated: Please avoid member2")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated: Please avoid member2")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated: Please avoid INT2")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("\''Color\''
          is deprecated: Please avoid Color")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("\''x\''
          is deprecated: Please avoid x")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("\''y\''
          is deprecated: Please avoid y")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("\''g2\''
          is deprecated: Please avoid g2")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("\''g3\''
          is deprecated: Please avoid g3")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field2\''
          is deprecated: Please avoid field2")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field4\''
          is deprecated: Please avoid field4")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::u2\''
          is deprecated: Please avoid u2")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::<unnamed
          union>::field6\'' is deprecated: Please avoid field6")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field8\''
          is deprecated: Please avoid field8")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("\''SS1\''
          is deprecated: Please avoid SS1")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("\''SS2\''
          is deprecated: Please avoid SS2")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated: Please avoid T")[^\n]*\n?)+'}
test_deprecated-6_2505:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-6.C'
    sources: {binary: deprecated-6.s, cflags: "-std=gnu++11 -Wdeprecated-declarations
        -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated: Please avoid T")[^\n]*\n?)+'}
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated: Please avoid member1")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated: Please avoid member1")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated: Please avoid member2")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated: Please avoid member2")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated: Please avoid INT2")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("\''Color\''
          is deprecated: Please avoid Color")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("\''x\''
          is deprecated: Please avoid x")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("\''y\''
          is deprecated: Please avoid y")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("\''g2\''
          is deprecated: Please avoid g2")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("\''g3\''
          is deprecated: Please avoid g3")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field2\''
          is deprecated: Please avoid field2")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field4\''
          is deprecated: Please avoid field4")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::u2\''
          is deprecated: Please avoid u2")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::<unnamed
          union>::field6\'' is deprecated: Please avoid field6")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field8\''
          is deprecated: Please avoid field8")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("\''SS1\''
          is deprecated: Please avoid SS1")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("\''SS2\''
          is deprecated: Please avoid SS2")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated: Please avoid T")[^\n]*\n?)+'}
test_deprecated-6_2506:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-6.C'
    sources: {binary: deprecated-6.s, cflags: "-std=gnu++14 -Wdeprecated-declarations
        -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated: Please avoid T")[^\n]*\n?)+'}
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated: Please avoid member1")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated: Please avoid member1")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated: Please avoid member2")[^\n]*\n?)+'}
      L106: {expect: true, expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated: Please avoid member2")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated: Please avoid INT2")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("\''Color\''
          is deprecated: Please avoid Color")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("\''x\''
          is deprecated: Please avoid x")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("\''y\''
          is deprecated: Please avoid y")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("\''g2\''
          is deprecated: Please avoid g2")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("\''g3\''
          is deprecated: Please avoid g3")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated: Please avoid f1")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field2\''
          is deprecated: Please avoid field2")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field4\''
          is deprecated: Please avoid field4")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::u2\''
          is deprecated: Please avoid u2")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::<unnamed
          union>::field6\'' is deprecated: Please avoid field6")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field8\''
          is deprecated: Please avoid field8")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("\''SS1\''
          is deprecated: Please avoid SS1")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated: Please avoid INT1")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("\''SS2\''
          is deprecated: Please avoid SS2")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated: Please avoid T")[^\n]*\n?)+'}
test_deprecated-7_1038:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-7.C'
    sources: {binary: deprecated-7.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''f_n\''
          is deprecated")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("\''g_n\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated-7_1039:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-7.C'
    sources: {binary: deprecated-7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''f_n\''
          is deprecated")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("\''g_n\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated-7_1040:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-7.C'
    sources: {binary: deprecated-7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''f_n\''
          is deprecated")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("\''g_n\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated-7_2507:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-7.C'
    sources: {binary: deprecated-7.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''f_n\''
          is deprecated")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("\''g_n\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated-7_2508:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-7.C'
    sources: {binary: deprecated-7.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''f_n\''
          is deprecated")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("\''g_n\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated-7_2509:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-7.C'
    sources: {binary: deprecated-7.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''f_n\''
          is deprecated")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("\''g_n\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated-8_1041:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-8.C'
    sources: {binary: deprecated-8.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated-8_1042:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-8.C'
    sources: {binary: deprecated-8.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated-8_1043:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-8.C'
    sources: {binary: deprecated-8.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated-8_2510:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-8.C'
    sources: {binary: deprecated-8.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated-8_2511:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-8.C'
    sources: {binary: deprecated-8.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated-8_2512:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-8.C'
    sources: {binary: deprecated-8.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("\''ToBeDeprecated\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated-9_1044:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-9.C'
    sources: {binary: deprecated-9.s, cflags: "-std=gnu++98 -Wdeprecated\n -S"}
  group: GRPSERIAL
test_deprecated-9_1045:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-9.C'
    sources: {binary: deprecated-9.s, cflags: "-std=gnu++11 -Wdeprecated\n -S"}
  group: GRPSERIAL
test_deprecated-9_1046:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-9.C'
    sources: {binary: deprecated-9.s, cflags: "-std=gnu++14 -Wdeprecated\n -S"}
  group: GRPSERIAL
test_deprecated-9_2513:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-9.C'
    sources: {binary: deprecated-9.s, cflags: "-std=gnu++98 -Wdeprecated\n -S"}
  group: GRPSERIAL
test_deprecated-9_2514:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-9.C'
    sources: {binary: deprecated-9.s, cflags: "-std=gnu++11 -Wdeprecated\n -S"}
  group: GRPSERIAL
test_deprecated-9_2515:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated-9.C'
    sources: {binary: deprecated-9.s, cflags: "-std=gnu++14 -Wdeprecated\n -S"}
  group: GRPSERIAL
test_deprecated_1047:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated.C'
    sources: {binary: deprecated.s, cflags: "-std=gnu++98 -Wdeprecated-declarations
        -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("\''Color\''
          is deprecated")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("\''x\''
          is deprecated")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("\''y\''
          is deprecated")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("\''g2\''
          is deprecated")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("\''g3\''
          is deprecated")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field2\''
          is deprecated")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field4\''
          is deprecated")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::u2\''
          is deprecated")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::<unnamed
          union>::field6\'' is deprecated")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field8\''
          is deprecated")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("\''SS1\''
          is deprecated")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("\''SS2\''
          is deprecated")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated_1048:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated.C'
    sources: {binary: deprecated.s, cflags: "-std=gnu++11 -Wdeprecated-declarations
        -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("\''Color\''
          is deprecated")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("\''x\''
          is deprecated")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("\''y\''
          is deprecated")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("\''g2\''
          is deprecated")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("\''g3\''
          is deprecated")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field2\''
          is deprecated")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field4\''
          is deprecated")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::u2\''
          is deprecated")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::<unnamed
          union>::field6\'' is deprecated")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field8\''
          is deprecated")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("\''SS1\''
          is deprecated")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("\''SS2\''
          is deprecated")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated_1049:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated.C'
    sources: {binary: deprecated.s, cflags: "-std=gnu++14 -Wdeprecated-declarations
        -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("\''Color\''
          is deprecated")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("\''x\''
          is deprecated")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("\''y\''
          is deprecated")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("\''g2\''
          is deprecated")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("\''g3\''
          is deprecated")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field2\''
          is deprecated")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field4\''
          is deprecated")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::u2\''
          is deprecated")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::<unnamed
          union>::field6\'' is deprecated")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field8\''
          is deprecated")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("\''SS1\''
          is deprecated")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("\''SS2\''
          is deprecated")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated_2516:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated.C'
    sources: {binary: deprecated.s, cflags: "-std=gnu++98 -Wdeprecated-declarations
        -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("\''Color\''
          is deprecated")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("\''x\''
          is deprecated")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("\''y\''
          is deprecated")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("\''g2\''
          is deprecated")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("\''g3\''
          is deprecated")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field2\''
          is deprecated")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field4\''
          is deprecated")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::u2\''
          is deprecated")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::<unnamed
          union>::field6\'' is deprecated")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field8\''
          is deprecated")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("\''SS1\''
          is deprecated")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("\''SS2\''
          is deprecated")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated_2517:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated.C'
    sources: {binary: deprecated.s, cflags: "-std=gnu++11 -Wdeprecated-declarations
        -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("\''Color\''
          is deprecated")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("\''x\''
          is deprecated")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("\''y\''
          is deprecated")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("\''g2\''
          is deprecated")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("\''g3\''
          is deprecated")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field2\''
          is deprecated")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field4\''
          is deprecated")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::u2\''
          is deprecated")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::<unnamed
          union>::field6\'' is deprecated")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field8\''
          is deprecated")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("\''SS1\''
          is deprecated")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("\''SS2\''
          is deprecated")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
test_deprecated_2518:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/deprecated.C'
    sources: {binary: deprecated.s, cflags: "-std=gnu++14 -Wdeprecated-declarations
        -fmessage-length=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated")[^\n]*\n?)+'}
      L105: {expect: true, expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("\''T\''
          is deprecated")[^\n]*\n?)+'}
      L107: {expect: true, expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L108: {expect: true, expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member1\\\\(int\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L109: {expect: true, expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L110: {expect: true, expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("\''void
          T::member2\\\\(INT1\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L113: {expect: true, expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("\''INT2\''
          is deprecated")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("\''Color\''
          is deprecated")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("\''x\''
          is deprecated")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("\''y\''
          is deprecated")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("\''g2\''
          is deprecated")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("\''g3\''
          is deprecated")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1
          f1\\\\(\\\\)\'' is deprecated")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field2\''
          is deprecated")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field4\''
          is deprecated")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::u2\''
          is deprecated")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::<unnamed
          union>::field6\'' is deprecated")[^\n]*\n?)+'}
      L74: {expect: true, expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("\''S1::field8\''
          is deprecated")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("\''SS1\''
          is deprecated")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L89: {expect: true, expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("\''SS2\''
          is deprecated")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("\''INT1\''
          is deprecated")[^\n]*\n?)+'}
test_do-empty_1050:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/do-empty.C'
    sources: {binary: do-empty.s, cflags: "-std=gnu++98 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body in")[^\n]*\n?)+'}
test_do-empty_1051:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/do-empty.C'
    sources: {binary: do-empty.s, cflags: "-std=gnu++11 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body in")[^\n]*\n?)+'}
test_do-empty_1052:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/do-empty.C'
    sources: {binary: do-empty.s, cflags: "-std=gnu++14 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body in")[^\n]*\n?)+'}
test_do-empty_2519:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/do-empty.C'
    sources: {binary: do-empty.s, cflags: "-std=gnu++98 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body in")[^\n]*\n?)+'}
test_do-empty_2520:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/do-empty.C'
    sources: {binary: do-empty.s, cflags: "-std=gnu++11 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body in")[^\n]*\n?)+'}
test_do-empty_2521:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/do-empty.C'
    sources: {binary: do-empty.s, cflags: "-std=gnu++14 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body in")[^\n]*\n?)+'}
test_effc1_1053:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc1.C'
    sources: {binary: effc1.s, cflags: "-std=gnu++98 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*(".*
          should return by value")[^\n]*\n?)+'}
test_effc1_1054:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc1.C'
    sources: {binary: effc1.s, cflags: "-std=gnu++11 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*(".*
          should return by value")[^\n]*\n?)+'}
test_effc1_1055:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc1.C'
    sources: {binary: effc1.s, cflags: "-std=gnu++14 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*(".*
          should return by value")[^\n]*\n?)+'}
test_effc1_2522:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc1.C'
    sources: {binary: effc1.s, cflags: "-std=gnu++98 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*(".*
          should return by value")[^\n]*\n?)+'}
test_effc1_2523:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc1.C'
    sources: {binary: effc1.s, cflags: "-std=gnu++11 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*(".*
          should return by value")[^\n]*\n?)+'}
test_effc1_2524:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc1.C'
    sources: {binary: effc1.s, cflags: "-std=gnu++14 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*(".*
          should return by value")[^\n]*\n?)+'}
test_effc2_1056:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc2.C'
    sources: {binary: effc2.s, cflags: "-std=gnu++98 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
test_effc2_1057:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc2.C'
    sources: {binary: effc2.s, cflags: "-std=gnu++11 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
test_effc2_1058:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc2.C'
    sources: {binary: effc2.s, cflags: "-std=gnu++14 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
test_effc2_2525:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc2.C'
    sources: {binary: effc2.s, cflags: "-std=gnu++98 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
test_effc2_2526:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc2.C'
    sources: {binary: effc2.s, cflags: "-std=gnu++11 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
test_effc2_2527:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc2.C'
    sources: {binary: effc2.s, cflags: "-std=gnu++14 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("should
          return a reference")[^\n]*\n?)+'}
test_effc3_1059:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc3.C'
    sources: {binary: effc3.s, cflags: "-std=gnu++98 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_effc3_1060:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc3.C'
    sources: {binary: effc3.s, cflags: "-std=gnu++11 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_effc3_1061:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc3.C'
    sources: {binary: effc3.s, cflags: "-std=gnu++14 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_effc3_2528:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc3.C'
    sources: {binary: effc3.s, cflags: "-std=gnu++98 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_effc3_2529:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc3.C'
    sources: {binary: effc3.s, cflags: "-std=gnu++11 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_effc3_2530:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/effc3.C'
    sources: {binary: effc3.s, cflags: "-std=gnu++14 -Weffc++\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_empty-body_1062:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/empty-body.C'
    sources: {binary: empty-body.s, cflags: "-std=gnu++98 -O2 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body")[^\n]*\n?)+'}
test_empty-body_1063:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/empty-body.C'
    sources: {binary: empty-body.s, cflags: "-std=gnu++11 -O2 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body")[^\n]*\n?)+'}
test_empty-body_1064:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/empty-body.C'
    sources: {binary: empty-body.s, cflags: "-std=gnu++14 -O2 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body")[^\n]*\n?)+'}
test_empty-body_2531:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/empty-body.C'
    sources: {binary: empty-body.s, cflags: "-std=gnu++98 -O2 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body")[^\n]*\n?)+'}
test_empty-body_2532:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/empty-body.C'
    sources: {binary: empty-body.s, cflags: "-std=gnu++11 -O2 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body")[^\n]*\n?)+'}
test_empty-body_2533:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/empty-body.C'
    sources: {binary: empty-body.s, cflags: "-std=gnu++14 -O2 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("empty
          body")[^\n]*\n?)+'}
test_format1_1065:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format1.C'
    sources: {binary: format1.s, cflags: "-std=gnu++98 -ansi -pedantic -Wformat\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
test_format1_1066:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format1.C'
    sources: {binary: format1.s, cflags: "-std=gnu++11 -ansi -pedantic -Wformat\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
test_format1_1067:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format1.C'
    sources: {binary: format1.s, cflags: "-std=gnu++14 -ansi -pedantic -Wformat\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
test_format1_2534:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format1.C'
    sources: {binary: format1.s, cflags: "-std=gnu++98 -ansi -pedantic -Wformat\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
test_format1_2535:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format1.C'
    sources: {binary: format1.s, cflags: "-std=gnu++11 -ansi -pedantic -Wformat\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
test_format1_2536:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format1.C'
    sources: {binary: format1.s, cflags: "-std=gnu++14 -ansi -pedantic -Wformat\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
test_format2_1068:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format2.C'
    sources: {binary: format2.s, cflags: "-std=gnu++98 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
test_format2_1069:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format2.C'
    sources: {binary: format2.s, cflags: "-std=gnu++11 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
test_format2_1070:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format2.C'
    sources: {binary: format2.s, cflags: "-std=gnu++14 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
test_format2_2537:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format2.C'
    sources: {binary: format2.s, cflags: "-std=gnu++98 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
test_format2_2538:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format2.C'
    sources: {binary: format2.s, cflags: "-std=gnu++11 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
test_format2_2539:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format2.C'
    sources: {binary: format2.s, cflags: "-std=gnu++14 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'}
test_format3_1071:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format3.C'
    sources: {binary: format3.s, cflags: "-std=gnu++98 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("too
          many")[^\n]*\n?)+'}
test_format3_1072:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format3.C'
    sources: {binary: format3.s, cflags: "-std=gnu++11 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("too
          many")[^\n]*\n?)+'}
test_format3_1073:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format3.C'
    sources: {binary: format3.s, cflags: "-std=gnu++14 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("too
          many")[^\n]*\n?)+'}
test_format3_2540:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format3.C'
    sources: {binary: format3.s, cflags: "-std=gnu++98 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("too
          many")[^\n]*\n?)+'}
test_format3_2541:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format3.C'
    sources: {binary: format3.s, cflags: "-std=gnu++11 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("too
          many")[^\n]*\n?)+'}
test_format3_2542:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format3.C'
    sources: {binary: format3.s, cflags: "-std=gnu++14 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("too
          many")[^\n]*\n?)+'}
test_format4_1074:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format4.C'
    sources: {binary: format4.s, cflags: "-std=gnu++98 -Wformat=2\n -S"}
  group: GRPSERIAL
test_format4_1075:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format4.C'
    sources: {binary: format4.s, cflags: "-std=gnu++11 -Wformat=2\n -S"}
  group: GRPSERIAL
test_format4_1076:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format4.C'
    sources: {binary: format4.s, cflags: "-std=gnu++14 -Wformat=2\n -S"}
  group: GRPSERIAL
test_format4_2543:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format4.C'
    sources: {binary: format4.s, cflags: "-std=gnu++98 -Wformat=2\n -S"}
  group: GRPSERIAL
test_format4_2544:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format4.C'
    sources: {binary: format4.s, cflags: "-std=gnu++11 -Wformat=2\n -S"}
  group: GRPSERIAL
test_format4_2545:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format4.C'
    sources: {binary: format4.s, cflags: "-std=gnu++14 -Wformat=2\n -S"}
  group: GRPSERIAL
test_format5_1077:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format5.C'
    sources: {binary: format5.s, cflags: "-std=gnu++98 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument")[^\n]*\n?)+'}
test_format5_1078:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format5.C'
    sources: {binary: format5.s, cflags: "-std=gnu++11 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument")[^\n]*\n?)+'}
test_format5_1079:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format5.C'
    sources: {binary: format5.s, cflags: "-std=gnu++14 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument")[^\n]*\n?)+'}
test_format5_2546:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format5.C'
    sources: {binary: format5.s, cflags: "-std=gnu++98 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument")[^\n]*\n?)+'}
test_format5_2547:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format5.C'
    sources: {binary: format5.s, cflags: "-std=gnu++11 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument")[^\n]*\n?)+'}
test_format5_2548:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format5.C'
    sources: {binary: format5.s, cflags: "-std=gnu++14 -Wformat\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument")[^\n]*\n?)+'}
test_format6_1080:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format6.C'
    sources: {binary: format6.s, cflags: "-std=gnu++98 -Wformat -Wno-format-zero-length\n
        -S"}
  group: GRPSERIAL
test_format6_1081:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format6.C'
    sources: {binary: format6.s, cflags: "-std=gnu++11 -Wformat -Wno-format-zero-length\n
        -S"}
  group: GRPSERIAL
test_format6_1082:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format6.C'
    sources: {binary: format6.s, cflags: "-std=gnu++14 -Wformat -Wno-format-zero-length\n
        -S"}
  group: GRPSERIAL
test_format6_2549:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format6.C'
    sources: {binary: format6.s, cflags: "-std=gnu++98 -Wformat -Wno-format-zero-length\n
        -S"}
  group: GRPSERIAL
test_format6_2550:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format6.C'
    sources: {binary: format6.s, cflags: "-std=gnu++11 -Wformat -Wno-format-zero-length\n
        -S"}
  group: GRPSERIAL
test_format6_2551:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format6.C'
    sources: {binary: format6.s, cflags: "-std=gnu++14 -Wformat -Wno-format-zero-length\n
        -S"}
  group: GRPSERIAL
test_format7_1083:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format7.C'
    sources: {binary: format7.s, cflags: "-std=gnu++98 -Wformat -Wno-nonnull\n -S"}
  group: GRPSERIAL
test_format7_1084:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format7.C'
    sources: {binary: format7.s, cflags: "-std=gnu++11 -Wformat -Wno-nonnull\n -S"}
  group: GRPSERIAL
test_format7_1085:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format7.C'
    sources: {binary: format7.s, cflags: "-std=gnu++14 -Wformat -Wno-nonnull\n -S"}
  group: GRPSERIAL
test_format7_2552:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format7.C'
    sources: {binary: format7.s, cflags: "-std=gnu++98 -Wformat -Wno-nonnull\n -S"}
  group: GRPSERIAL
test_format7_2553:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format7.C'
    sources: {binary: format7.s, cflags: "-std=gnu++11 -Wformat -Wno-nonnull\n -S"}
  group: GRPSERIAL
test_format7_2554:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format7.C'
    sources: {binary: format7.s, cflags: "-std=gnu++14 -Wformat -Wno-nonnull\n -S"}
  group: GRPSERIAL
test_format8_1086:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format8.C'
    sources: {binary: format8.s, cflags: "-std=gnu++98 -pedantic-errors -Wformat\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("%lf")[^\n]*\n?)+'}
test_format8_1087:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format8.C'
    sources: {binary: format8.s, cflags: "-std=gnu++11 -pedantic-errors -Wformat\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("%lf")[^\n]*\n?)+'}
test_format8_1088:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format8.C'
    sources: {binary: format8.s, cflags: "-std=gnu++14 -pedantic-errors -Wformat\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("%lf")[^\n]*\n?)+'}
test_format8_2555:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format8.C'
    sources: {binary: format8.s, cflags: "-std=gnu++98 -pedantic-errors -Wformat\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("%lf")[^\n]*\n?)+'}
test_format8_2556:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format8.C'
    sources: {binary: format8.s, cflags: "-std=gnu++11 -pedantic-errors -Wformat\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("%lf")[^\n]*\n?)+'}
test_format8_2557:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/format8.C'
    sources: {binary: format8.s, cflags: "-std=gnu++14 -pedantic-errors -Wformat\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("%lf")[^\n]*\n?)+'}
test_forward-inner_1089:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/forward-inner.C'
    sources: {binary: forward-inner.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2::C3\'' does not declare anything")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2\'' does not declare anything")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2::C3\'' does not declare anything")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::N2::C5\'' does not declare anything")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::C4\'' does not declare anything")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::N2::C5\'' does not declare anything")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
test_forward-inner_1090:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/forward-inner.C'
    sources: {binary: forward-inner.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2::C3\'' does not declare anything")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2\'' does not declare anything")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2::C3\'' does not declare anything")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::N2::C5\'' does not declare anything")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::C4\'' does not declare anything")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::N2::C5\'' does not declare anything")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
test_forward-inner_1091:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/forward-inner.C'
    sources: {binary: forward-inner.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2::C3\'' does not declare anything")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2\'' does not declare anything")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2::C3\'' does not declare anything")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::N2::C5\'' does not declare anything")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::C4\'' does not declare anything")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::N2::C5\'' does not declare anything")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
test_forward-inner_2558:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/forward-inner.C'
    sources: {binary: forward-inner.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2::C3\'' does not declare anything")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2\'' does not declare anything")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2::C3\'' does not declare anything")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::N2::C5\'' does not declare anything")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::C4\'' does not declare anything")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::N2::C5\'' does not declare anything")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
test_forward-inner_2559:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/forward-inner.C'
    sources: {binary: forward-inner.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2::C3\'' does not declare anything")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2\'' does not declare anything")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2::C3\'' does not declare anything")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::N2::C5\'' does not declare anything")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::C4\'' does not declare anything")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::N2::C5\'' does not declare anything")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
test_forward-inner_2560:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/forward-inner.C'
    sources: {binary: forward-inner.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2::C3\'' does not declare anything")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2\'' does not declare anything")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class C1::C2::C3\'' does not declare anything")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::N2::C5\'' does not declare anything")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::C4\'' does not declare anything")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("declaration
          \''class N1::N2::C5\'' does not declare anything")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          not been declared")[^\n]*\n?)+'}
test_friend_1092:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/friend.C'
    sources: {binary: friend.s, cflags: "-std=gnu++98 -Wredundant-decls\n -S"}
  group: GRPSERIAL
test_friend_1093:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/friend.C'
    sources: {binary: friend.s, cflags: "-std=gnu++11 -Wredundant-decls\n -S"}
  group: GRPSERIAL
test_friend_1094:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/friend.C'
    sources: {binary: friend.s, cflags: "-std=gnu++14 -Wredundant-decls\n -S"}
  group: GRPSERIAL
test_friend_2561:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/friend.C'
    sources: {binary: friend.s, cflags: "-std=gnu++98 -Wredundant-decls\n -S"}
  group: GRPSERIAL
test_friend_2562:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/friend.C'
    sources: {binary: friend.s, cflags: "-std=gnu++11 -Wredundant-decls\n -S"}
  group: GRPSERIAL
test_friend_2563:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/friend.C'
    sources: {binary: friend.s, cflags: "-std=gnu++14 -Wredundant-decls\n -S"}
  group: GRPSERIAL
test_huge-val1_1095:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/huge-val1.C'
    sources: {binary: huge-val1.exe, cflags: -std=gnu++98 -pedantic-errors}
  group: GRPSERIAL
  run: {cwd: .}
test_huge-val1_1096:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/huge-val1.C'
    sources: {binary: huge-val1.exe, cflags: -std=gnu++11 -pedantic-errors}
  group: GRPSERIAL
  run: {cwd: .}
test_huge-val1_1097:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/huge-val1.C'
    sources: {binary: huge-val1.exe, cflags: -std=gnu++14 -pedantic-errors}
  group: GRPSERIAL
  run: {cwd: .}
test_huge-val1_2564:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/huge-val1.C'
    sources: {binary: huge-val1.exe, cflags: -std=gnu++98 -pedantic-errors}
  group: GRPSERIAL
  run: {cwd: .}
test_huge-val1_2565:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/huge-val1.C'
    sources: {binary: huge-val1.exe, cflags: -std=gnu++11 -pedantic-errors}
  group: GRPSERIAL
  run: {cwd: .}
test_huge-val1_2566:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/huge-val1.C'
    sources: {binary: huge-val1.exe, cflags: -std=gnu++14 -pedantic-errors}
  group: GRPSERIAL
  run: {cwd: .}
test_if-empty-1_1098:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/if-empty-1.C'
    sources: {binary: if-empty-1.s, cflags: "-std=gnu++98 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          braces around empty body in an")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          braces around empty body in an")[^\n]*\n?)+'}
test_if-empty-1_1099:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/if-empty-1.C'
    sources: {binary: if-empty-1.s, cflags: "-std=gnu++11 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          braces around empty body in an")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          braces around empty body in an")[^\n]*\n?)+'}
test_if-empty-1_1100:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/if-empty-1.C'
    sources: {binary: if-empty-1.s, cflags: "-std=gnu++14 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          braces around empty body in an")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          braces around empty body in an")[^\n]*\n?)+'}
test_if-empty-1_2567:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/if-empty-1.C'
    sources: {binary: if-empty-1.s, cflags: "-std=gnu++98 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          braces around empty body in an")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          braces around empty body in an")[^\n]*\n?)+'}
test_if-empty-1_2568:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/if-empty-1.C'
    sources: {binary: if-empty-1.s, cflags: "-std=gnu++11 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          braces around empty body in an")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          braces around empty body in an")[^\n]*\n?)+'}
test_if-empty-1_2569:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/if-empty-1.C'
    sources: {binary: if-empty-1.s, cflags: "-std=gnu++14 -Wempty-body\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          braces around empty body in an")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          braces around empty body in an")[^\n]*\n?)+'}
test_ignored_typedef_1101:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ignored_typedef.C'
    sources: {binary: ignored_typedef.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
test_ignored_typedef_1102:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ignored_typedef.C'
    sources: {binary: ignored_typedef.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
test_ignored_typedef_1103:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ignored_typedef.C'
    sources: {binary: ignored_typedef.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
test_ignored_typedef_2570:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ignored_typedef.C'
    sources: {binary: ignored_typedef.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
test_ignored_typedef_2571:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ignored_typedef.C'
    sources: {binary: ignored_typedef.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
test_ignored_typedef_2572:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ignored_typedef.C'
    sources: {binary: ignored_typedef.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("\''typedef\''
          was ignored")[^\n]*\n?)+'}
test_implicit-typename1_1104:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename1.C'
    sources: {binary: implicit-typename1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_implicit-typename1_1105:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename1.C'
    sources: {binary: implicit-typename1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_implicit-typename1_1106:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename1.C'
    sources: {binary: implicit-typename1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_implicit-typename1_2573:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename1.C'
    sources: {binary: implicit-typename1.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_implicit-typename1_2574:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename1.C'
    sources: {binary: implicit-typename1.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_implicit-typename1_2575:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename1.C'
    sources: {binary: implicit-typename1.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_implicit-typename2_1107:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename2.C'
    sources: {binary: implicit-typename2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_implicit-typename2_1108:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename2.C'
    sources: {binary: implicit-typename2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_implicit-typename2_1109:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename2.C'
    sources: {binary: implicit-typename2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_implicit-typename2_2576:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename2.C'
    sources: {binary: implicit-typename2.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_implicit-typename2_2577:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename2.C'
    sources: {binary: implicit-typename2.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_implicit-typename2_2578:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename2.C'
    sources: {binary: implicit-typename2.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_implicit-typename3_1110:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename3.C'
    sources: {binary: implicit-typename3.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_implicit-typename3_1111:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename3.C'
    sources: {binary: implicit-typename3.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_implicit-typename3_1112:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename3.C'
    sources: {binary: implicit-typename3.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_implicit-typename3_2579:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename3.C'
    sources: {binary: implicit-typename3.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_implicit-typename3_2580:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename3.C'
    sources: {binary: implicit-typename3.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_implicit-typename3_2581:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/implicit-typename3.C'
    sources: {binary: implicit-typename3.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
test_incomplete1_1113:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/incomplete1.C'
    sources: {binary: incomplete1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''a\''
          has incomplete type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("delete")[^\n]*\n?)+'}
test_incomplete1_1114:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/incomplete1.C'
    sources: {binary: incomplete1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''a\''
          has incomplete type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("delete")[^\n]*\n?)+'}
test_incomplete1_1115:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/incomplete1.C'
    sources: {binary: incomplete1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''a\''
          has incomplete type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("delete")[^\n]*\n?)+'}
test_incomplete1_2582:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/incomplete1.C'
    sources: {binary: incomplete1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''a\''
          has incomplete type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("delete")[^\n]*\n?)+'}
test_incomplete1_2583:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/incomplete1.C'
    sources: {binary: incomplete1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''a\''
          has incomplete type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("delete")[^\n]*\n?)+'}
test_incomplete1_2584:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/incomplete1.C'
    sources: {binary: incomplete1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''a\''
          has incomplete type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("delete")[^\n]*\n?)+'}
test_incomplete2_1116:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/incomplete2.C'
    sources: {binary: incomplete2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of incomplete type")[^\n]*\n?)+'}
test_incomplete2_1117:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/incomplete2.C'
    sources: {binary: incomplete2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of incomplete type")[^\n]*\n?)+'}
test_incomplete2_1118:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/incomplete2.C'
    sources: {binary: incomplete2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of incomplete type")[^\n]*\n?)+'}
test_incomplete2_2585:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/incomplete2.C'
    sources: {binary: incomplete2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of incomplete type")[^\n]*\n?)+'}
test_incomplete2_2586:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/incomplete2.C'
    sources: {binary: incomplete2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of incomplete type")[^\n]*\n?)+'}
test_incomplete2_2587:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/incomplete2.C'
    sources: {binary: incomplete2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          use of incomplete type")[^\n]*\n?)+'}
test_inline1_1119:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/inline1.C'
    sources: {binary: inline1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("inline
          function")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("inline
          function")[^\n]*\n?)+'}
test_inline1_1120:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/inline1.C'
    sources: {binary: inline1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("inline
          function")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("inline
          function")[^\n]*\n?)+'}
test_inline1_1121:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/inline1.C'
    sources: {binary: inline1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("inline
          function")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("inline
          function")[^\n]*\n?)+'}
test_inline1_2588:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/inline1.C'
    sources: {binary: inline1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("inline
          function")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("inline
          function")[^\n]*\n?)+'}
test_inline1_2589:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/inline1.C'
    sources: {binary: inline1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("inline
          function")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("inline
          function")[^\n]*\n?)+'}
test_inline1_2590:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/inline1.C'
    sources: {binary: inline1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("inline
          function")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("inline
          function")[^\n]*\n?)+'}
test_inline2_1122:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/inline2.C'
    sources: {binary: inline2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_inline2_1123:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/inline2.C'
    sources: {binary: inline2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_inline2_1124:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/inline2.C'
    sources: {binary: inline2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_inline2_2591:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/inline2.C'
    sources: {binary: inline2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_inline2_2592:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/inline2.C'
    sources: {binary: inline2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_inline2_2593:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/inline2.C'
    sources: {binary: inline2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_main-2_1125:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-2.C'
    sources: {binary: main-2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          return")[^\n]*\n?)+'}
test_main-2_1126:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-2.C'
    sources: {binary: main-2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          return")[^\n]*\n?)+'}
test_main-2_1127:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-2.C'
    sources: {binary: main-2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          return")[^\n]*\n?)+'}
test_main-2_2594:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-2.C'
    sources: {binary: main-2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          return")[^\n]*\n?)+'}
test_main-2_2595:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-2.C'
    sources: {binary: main-2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          return")[^\n]*\n?)+'}
test_main-2_2596:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-2.C'
    sources: {binary: main-2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          return")[^\n]*\n?)+'}
test_main-3_1128:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-3.C'
    sources: {binary: main-3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          return")[^\n]*\n?)+'}
test_main-3_1129:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-3.C'
    sources: {binary: main-3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          return")[^\n]*\n?)+'}
test_main-3_1130:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-3.C'
    sources: {binary: main-3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          return")[^\n]*\n?)+'}
test_main-3_2597:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-3.C'
    sources: {binary: main-3.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          return")[^\n]*\n?)+'}
test_main-3_2598:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-3.C'
    sources: {binary: main-3.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          return")[^\n]*\n?)+'}
test_main-3_2599:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-3.C'
    sources: {binary: main-3.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must
          return")[^\n]*\n?)+'}
test_main-4_1131:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-4.C'
    sources: {binary: main-4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_main-4_1132:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-4.C'
    sources: {binary: main-4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_main-4_1133:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-4.C'
    sources: {binary: main-4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_main-4_2600:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-4.C'
    sources: {binary: main-4.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
test_main-4_2601:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-4.C'
    sources: {binary: main-4.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
test_main-4_2602:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main-4.C'
    sources: {binary: main-4.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
test_main_1134:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main.C'
    sources: {binary: main.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_main_1135:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main.C'
    sources: {binary: main.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_main_1136:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main.C'
    sources: {binary: main.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_main_2603:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main.C'
    sources: {binary: main.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_main_2604:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main.C'
    sources: {binary: main.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_main_2605:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/main.C'
    sources: {binary: main.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_miss-format-1_1137:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-1.C'
    sources: {binary: miss-format-1.s, cflags: "-std=gnu++98 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
test_miss-format-1_1138:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-1.C'
    sources: {binary: miss-format-1.s, cflags: "-std=gnu++11 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
test_miss-format-1_1139:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-1.C'
    sources: {binary: miss-format-1.s, cflags: "-std=gnu++14 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
test_miss-format-1_2606:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-1.C'
    sources: {binary: miss-format-1.s, cflags: "-std=gnu++98 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
test_miss-format-1_2607:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-1.C'
    sources: {binary: miss-format-1.s, cflags: "-std=gnu++11 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
test_miss-format-1_2608:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-1.C'
    sources: {binary: miss-format-1.s, cflags: "-std=gnu++14 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          declared")[^\n]*\n?)+'}
test_miss-format-2_1140:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-2.C'
    sources: {binary: miss-format-2.s, cflags: "-std=gnu++98 -Wmissing-format-attribute\n
        -S"}
  group: GRPSERIAL
test_miss-format-2_1141:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-2.C'
    sources: {binary: miss-format-2.s, cflags: "-std=gnu++11 -Wmissing-format-attribute\n
        -S"}
  group: GRPSERIAL
test_miss-format-2_1142:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-2.C'
    sources: {binary: miss-format-2.s, cflags: "-std=gnu++14 -Wmissing-format-attribute\n
        -S"}
  group: GRPSERIAL
test_miss-format-2_2609:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-2.C'
    sources: {binary: miss-format-2.s, cflags: "-std=gnu++98 -Wmissing-format-attribute\n
        -S"}
  group: GRPSERIAL
test_miss-format-2_2610:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-2.C'
    sources: {binary: miss-format-2.s, cflags: "-std=gnu++11 -Wmissing-format-attribute\n
        -S"}
  group: GRPSERIAL
test_miss-format-2_2611:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-2.C'
    sources: {binary: miss-format-2.s, cflags: "-std=gnu++14 -Wmissing-format-attribute\n
        -S"}
  group: GRPSERIAL
test_miss-format-3_1143:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-3.C'
    sources: {binary: miss-format-3.s, cflags: "-std=gnu++98 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-3_1144:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-3.C'
    sources: {binary: miss-format-3.s, cflags: "-std=gnu++11 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-3_1145:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-3.C'
    sources: {binary: miss-format-3.s, cflags: "-std=gnu++14 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-3_2612:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-3.C'
    sources: {binary: miss-format-3.s, cflags: "-std=gnu++98 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-3_2613:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-3.C'
    sources: {binary: miss-format-3.s, cflags: "-std=gnu++11 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-3_2614:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-3.C'
    sources: {binary: miss-format-3.s, cflags: "-std=gnu++14 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-4_1146:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-4.C'
    sources: {binary: miss-format-4.s, cflags: "-std=gnu++98 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-4_1147:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-4.C'
    sources: {binary: miss-format-4.s, cflags: "-std=gnu++11 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-4_1148:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-4.C'
    sources: {binary: miss-format-4.s, cflags: "-std=gnu++14 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-4_2615:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-4.C'
    sources: {binary: miss-format-4.s, cflags: "-std=gnu++98 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-4_2616:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-4.C'
    sources: {binary: miss-format-4.s, cflags: "-std=gnu++11 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-4_2617:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-4.C'
    sources: {binary: miss-format-4.s, cflags: "-std=gnu++14 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-5_1149:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-5.C'
    sources: {binary: miss-format-5.s, cflags: "-std=gnu++98 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-5_1150:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-5.C'
    sources: {binary: miss-format-5.s, cflags: "-std=gnu++11 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-5_1151:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-5.C'
    sources: {binary: miss-format-5.s, cflags: "-std=gnu++14 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-5_2618:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-5.C'
    sources: {binary: miss-format-5.s, cflags: "-std=gnu++98 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-5_2619:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-5.C'
    sources: {binary: miss-format-5.s, cflags: "-std=gnu++11 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-5_2620:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-5.C'
    sources: {binary: miss-format-5.s, cflags: "-std=gnu++14 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-6_1152:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-6.C'
    sources: {binary: miss-format-6.s, cflags: "-std=gnu++98 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-6_1153:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-6.C'
    sources: {binary: miss-format-6.s, cflags: "-std=gnu++11 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-6_1154:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-6.C'
    sources: {binary: miss-format-6.s, cflags: "-std=gnu++14 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-6_2621:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-6.C'
    sources: {binary: miss-format-6.s, cflags: "-std=gnu++98 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-6_2622:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-6.C'
    sources: {binary: miss-format-6.s, cflags: "-std=gnu++11 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_miss-format-6_2623:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/miss-format-6.C'
    sources: {binary: miss-format-6.s, cflags: "-std=gnu++14 -Wmissing-format-attribute
        -Wno-abi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'}
test_missing-field-init-1_1155:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/missing-field-init-1.C'
    sources: {binary: missing-field-init-1.s, cflags: "-std=gnu++98 -Wextra -Wno-missing-field-initializers\n
        -S"}
  group: GRPSERIAL
test_missing-field-init-1_1156:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/missing-field-init-1.C'
    sources: {binary: missing-field-init-1.s, cflags: "-std=gnu++11 -Wextra -Wno-missing-field-initializers\n
        -S"}
  group: GRPSERIAL
test_missing-field-init-1_1157:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/missing-field-init-1.C'
    sources: {binary: missing-field-init-1.s, cflags: "-std=gnu++14 -Wextra -Wno-missing-field-initializers\n
        -S"}
  group: GRPSERIAL
test_missing-field-init-1_2624:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/missing-field-init-1.C'
    sources: {binary: missing-field-init-1.s, cflags: "-std=gnu++98 -Wextra -Wno-missing-field-initializers\n
        -S"}
  group: GRPSERIAL
test_missing-field-init-1_2625:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/missing-field-init-1.C'
    sources: {binary: missing-field-init-1.s, cflags: "-std=gnu++11 -Wextra -Wno-missing-field-initializers\n
        -S"}
  group: GRPSERIAL
test_missing-field-init-1_2626:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/missing-field-init-1.C'
    sources: {binary: missing-field-init-1.s, cflags: "-std=gnu++14 -Wextra -Wno-missing-field-initializers\n
        -S"}
  group: GRPSERIAL
test_missing-field-init-2_1158:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/missing-field-init-2.C'
    sources: {binary: missing-field-init-2.s, cflags: "-std=gnu++98 -Wmissing-field-initializers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
test_missing-field-init-2_1159:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/missing-field-init-2.C'
    sources: {binary: missing-field-init-2.s, cflags: "-std=gnu++11 -Wmissing-field-initializers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
test_missing-field-init-2_1160:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/missing-field-init-2.C'
    sources: {binary: missing-field-init-2.s, cflags: "-std=gnu++14 -Wmissing-field-initializers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
test_missing-field-init-2_2627:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/missing-field-init-2.C'
    sources: {binary: missing-field-init-2.s, cflags: "-std=gnu++98 -Wmissing-field-initializers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
test_missing-field-init-2_2628:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/missing-field-init-2.C'
    sources: {binary: missing-field-init-2.s, cflags: "-std=gnu++11 -Wmissing-field-initializers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
test_missing-field-init-2_2629:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/missing-field-init-2.C'
    sources: {binary: missing-field-init-2.s, cflags: "-std=gnu++14 -Wmissing-field-initializers\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("(missing
          initializer)|(near initialization)")[^\n]*\n?)+'}
test_multiple-overflow-warn-1_1161:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-1.C'
    sources: {binary: multiple-overflow-warn-1.s, cflags: "-std=gnu++98 -Woverflow
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_multiple-overflow-warn-1_1162:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-1.C'
    sources: {binary: multiple-overflow-warn-1.s, cflags: "-std=gnu++11 -Woverflow
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_multiple-overflow-warn-1_1163:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-1.C'
    sources: {binary: multiple-overflow-warn-1.s, cflags: "-std=gnu++14 -Woverflow
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_multiple-overflow-warn-1_2630:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-1.C'
    sources: {binary: multiple-overflow-warn-1.s, cflags: "-std=gnu++98 -Woverflow
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_multiple-overflow-warn-1_2631:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-1.C'
    sources: {binary: multiple-overflow-warn-1.s, cflags: "-std=gnu++11 -Woverflow
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_multiple-overflow-warn-1_2632:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-1.C'
    sources: {binary: multiple-overflow-warn-1.s, cflags: "-std=gnu++14 -Woverflow
        -ftrack-macro-expansion=0\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_multiple-overflow-warn-2_1164:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-2.C'
    sources: {binary: multiple-overflow-warn-2.s, cflags: "-std=gnu++98 -Woverflow\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_multiple-overflow-warn-2_1165:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-2.C'
    sources: {binary: multiple-overflow-warn-2.s, cflags: "-std=gnu++11 -Woverflow\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_multiple-overflow-warn-2_1166:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-2.C'
    sources: {binary: multiple-overflow-warn-2.s, cflags: "-std=gnu++14 -Woverflow\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_multiple-overflow-warn-2_2633:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-2.C'
    sources: {binary: multiple-overflow-warn-2.s, cflags: "-std=gnu++98 -Woverflow\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_multiple-overflow-warn-2_2634:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-2.C'
    sources: {binary: multiple-overflow-warn-2.s, cflags: "-std=gnu++11 -Woverflow\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_multiple-overflow-warn-2_2635:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-2.C'
    sources: {binary: multiple-overflow-warn-2.s, cflags: "-std=gnu++14 -Woverflow\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_multiple-overflow-warn-3_1167:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-3.C'
    sources: {binary: multiple-overflow-warn-3.s, cflags: "-std=gnu++98 -Woverflow\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
test_multiple-overflow-warn-3_1168:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-3.C'
    sources: {binary: multiple-overflow-warn-3.s, cflags: "-std=gnu++11 -Woverflow\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
test_multiple-overflow-warn-3_1169:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-3.C'
    sources: {binary: multiple-overflow-warn-3.s, cflags: "-std=gnu++14 -Woverflow\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
test_multiple-overflow-warn-3_2636:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-3.C'
    sources: {binary: multiple-overflow-warn-3.s, cflags: "-std=gnu++98 -Woverflow\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
test_multiple-overflow-warn-3_2637:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-3.C'
    sources: {binary: multiple-overflow-warn-3.s, cflags: "-std=gnu++11 -Woverflow\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
test_multiple-overflow-warn-3_2638:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/multiple-overflow-warn-3.C'
    sources: {binary: multiple-overflow-warn-3.s, cflags: "-std=gnu++14 -Woverflow\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("overflow")[^\n]*\n?)+'}
test_new1_1170:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/new1.C'
    sources: {binary: new1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_new1_1171:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/new1.C'
    sources: {binary: new1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_new1_1172:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/new1.C'
    sources: {binary: new1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_new1_2639:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/new1.C'
    sources: {binary: new1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_new1_2640:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/new1.C'
    sources: {binary: new1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_new1_2641:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/new1.C'
    sources: {binary: new1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_no-write-strings_1173:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/no-write-strings.C'
    sources: {binary: no-write-strings.s, cflags: "-std=gnu++98 -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_no-write-strings_1174:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/no-write-strings.C'
    sources: {binary: no-write-strings.s, cflags: "-std=gnu++11 -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_no-write-strings_1175:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/no-write-strings.C'
    sources: {binary: no-write-strings.s, cflags: "-std=gnu++14 -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_no-write-strings_2642:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/no-write-strings.C'
    sources: {binary: no-write-strings.s, cflags: "-std=gnu++98 -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_no-write-strings_2643:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/no-write-strings.C'
    sources: {binary: no-write-strings.s, cflags: "-std=gnu++11 -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_no-write-strings_2644:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/no-write-strings.C'
    sources: {binary: no-write-strings.s, cflags: "-std=gnu++14 -Wno-write-strings\n
        -S"}
  group: GRPSERIAL
test_noeffect2_1176:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect2.C'
    sources: {binary: noeffect2.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
test_noeffect2_1177:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect2.C'
    sources: {binary: noeffect2.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
test_noeffect2_1178:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect2.C'
    sources: {binary: noeffect2.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
test_noeffect2_2645:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect2.C'
    sources: {binary: noeffect2.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
test_noeffect2_2646:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect2.C'
    sources: {binary: noeffect2.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
test_noeffect2_2647:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect2.C'
    sources: {binary: noeffect2.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("right
          operand of comma")[^\n]*\n?)+'}
test_noeffect4_1179:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect4.C'
    sources: {binary: noeffect4.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          cast")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_noeffect4_1180:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect4.C'
    sources: {binary: noeffect4.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          cast")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_noeffect4_1181:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect4.C'
    sources: {binary: noeffect4.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          cast")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_noeffect4_2648:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect4.C'
    sources: {binary: noeffect4.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          cast")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_noeffect4_2649:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect4.C'
    sources: {binary: noeffect4.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          cast")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_noeffect4_2650:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect4.C'
    sources: {binary: noeffect4.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          cast")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("not
          used")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_noeffect5_1182:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect5.C'
    sources: {binary: noeffect5.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_noeffect5_1183:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect5.C'
    sources: {binary: noeffect5.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_noeffect5_1184:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect5.C'
    sources: {binary: noeffect5.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_noeffect5_2651:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect5.C'
    sources: {binary: noeffect5.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_noeffect5_2652:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect5.C'
    sources: {binary: noeffect5.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_noeffect5_2653:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect5.C'
    sources: {binary: noeffect5.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_noeffect6_1185:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect6.C'
    sources: {binary: noeffect6.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_noeffect6_1186:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect6.C'
    sources: {binary: noeffect6.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_noeffect6_1187:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect6.C'
    sources: {binary: noeffect6.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_noeffect6_2654:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect6.C'
    sources: {binary: noeffect6.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_noeffect6_2655:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect6.C'
    sources: {binary: noeffect6.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_noeffect6_2656:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect6.C'
    sources: {binary: noeffect6.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_noeffect7_1188:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect7.C'
    sources: {binary: noeffect7.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_noeffect7_1189:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect7.C'
    sources: {binary: noeffect7.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_noeffect7_1190:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect7.C'
    sources: {binary: noeffect7.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_noeffect7_2657:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect7.C'
    sources: {binary: noeffect7.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_noeffect7_2658:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect7.C'
    sources: {binary: noeffect7.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_noeffect7_2659:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect7.C'
    sources: {binary: noeffect7.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("no
          effect")[^\n]*\n?)+'}
test_noeffect8_1191:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect8.C'
    sources: {binary: noeffect8.s, cflags: "-std=gnu++98 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not
          call")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          call")[^\n]*\n?)+'}
test_noeffect8_1192:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect8.C'
    sources: {binary: noeffect8.s, cflags: "-std=gnu++11 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not
          call")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          call")[^\n]*\n?)+'}
test_noeffect8_1193:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect8.C'
    sources: {binary: noeffect8.s, cflags: "-std=gnu++14 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not
          call")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          call")[^\n]*\n?)+'}
test_noeffect8_2660:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect8.C'
    sources: {binary: noeffect8.s, cflags: "-std=gnu++98 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not
          call")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          call")[^\n]*\n?)+'}
test_noeffect8_2661:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect8.C'
    sources: {binary: noeffect8.s, cflags: "-std=gnu++11 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not
          call")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          call")[^\n]*\n?)+'}
test_noeffect8_2662:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noeffect8.C'
    sources: {binary: noeffect8.s, cflags: "-std=gnu++14 -Waddress\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("not
          call")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("not
          call")[^\n]*\n?)+'}
test_nonnull1_1194:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull1.C'
    sources: {binary: nonnull1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'}
test_nonnull1_1195:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull1.C'
    sources: {binary: nonnull1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'}
test_nonnull1_1196:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull1.C'
    sources: {binary: nonnull1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'}
test_nonnull1_2663:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull1.C'
    sources: {binary: nonnull1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'}
test_nonnull1_2664:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull1.C'
    sources: {binary: nonnull1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'}
test_nonnull1_2665:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull1.C'
    sources: {binary: nonnull1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'}
test_nonnull2_1197:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull2.C'
    sources: {binary: nonnull2.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_nonnull2_1198:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull2.C'
    sources: {binary: nonnull2.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_nonnull2_1199:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull2.C'
    sources: {binary: nonnull2.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_nonnull2_2666:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull2.C'
    sources: {binary: nonnull2.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_nonnull2_2667:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull2.C'
    sources: {binary: nonnull2.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_nonnull2_2668:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull2.C'
    sources: {binary: nonnull2.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_nonnull3_1200:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull3.C'
    sources: {binary: nonnull3.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("nonnull
          argument")[^\n]*\n?)+'}
test_nonnull3_1201:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull3.C'
    sources: {binary: nonnull3.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("nonnull
          argument")[^\n]*\n?)+'}
test_nonnull3_2669:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull3.C'
    sources: {binary: nonnull3.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("nonnull
          argument")[^\n]*\n?)+'}
test_nonnull3_2670:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/nonnull3.C'
    sources: {binary: nonnull3.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("nonnull
          argument")[^\n]*\n?)+'}
test_noreturn-1_1202:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-1.C'
    sources: {binary: noreturn-1.s, cflags: "-std=gnu++98 -Wall -O2\n -S"}
  group: GRPSERIAL
test_noreturn-1_1203:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-1.C'
    sources: {binary: noreturn-1.s, cflags: "-std=gnu++11 -Wall -O2\n -S"}
  group: GRPSERIAL
test_noreturn-1_1204:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-1.C'
    sources: {binary: noreturn-1.s, cflags: "-std=gnu++14 -Wall -O2\n -S"}
  group: GRPSERIAL
test_noreturn-1_2671:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-1.C'
    sources: {binary: noreturn-1.s, cflags: "-std=gnu++98 -Wall -O2\n -S"}
  group: GRPSERIAL
test_noreturn-1_2672:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-1.C'
    sources: {binary: noreturn-1.s, cflags: "-std=gnu++11 -Wall -O2\n -S"}
  group: GRPSERIAL
test_noreturn-1_2673:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-1.C'
    sources: {binary: noreturn-1.s, cflags: "-std=gnu++14 -Wall -O2\n -S"}
  group: GRPSERIAL
test_noreturn-2_1205:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-2.C'
    sources: {binary: noreturn-2.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("no
          return")[^\n]*\n?)+'}
test_noreturn-2_1206:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-2.C'
    sources: {binary: noreturn-2.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("no
          return")[^\n]*\n?)+'}
test_noreturn-2_1207:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-2.C'
    sources: {binary: noreturn-2.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("no
          return")[^\n]*\n?)+'}
test_noreturn-2_2674:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-2.C'
    sources: {binary: noreturn-2.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("no
          return")[^\n]*\n?)+'}
test_noreturn-2_2675:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-2.C'
    sources: {binary: noreturn-2.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("no
          return")[^\n]*\n?)+'}
test_noreturn-2_2676:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-2.C'
    sources: {binary: noreturn-2.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("no
          return")[^\n]*\n?)+'}
test_noreturn-3_1208:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-3.C'
    sources: {binary: noreturn-3.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-3_1209:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-3.C'
    sources: {binary: noreturn-3.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-3_1210:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-3.C'
    sources: {binary: noreturn-3.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-3_2677:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-3.C'
    sources: {binary: noreturn-3.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-3_2678:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-3.C'
    sources: {binary: noreturn-3.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-3_2679:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-3.C'
    sources: {binary: noreturn-3.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-4_1211:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-4.C'
    sources: {binary: noreturn-4.s, cflags: "-std=gnu++98 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-4_1212:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-4.C'
    sources: {binary: noreturn-4.s, cflags: "-std=gnu++11 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-4_1213:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-4.C'
    sources: {binary: noreturn-4.s, cflags: "-std=gnu++14 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-4_2680:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-4.C'
    sources: {binary: noreturn-4.s, cflags: "-std=gnu++98 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-4_2681:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-4.C'
    sources: {binary: noreturn-4.s, cflags: "-std=gnu++11 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-4_2682:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-4.C'
    sources: {binary: noreturn-4.s, cflags: "-std=gnu++14 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-5_1214:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-5.C'
    sources: {binary: noreturn-5.s, cflags: "-std=gnu++98 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-5_1215:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-5.C'
    sources: {binary: noreturn-5.s, cflags: "-std=gnu++11 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-5_1216:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-5.C'
    sources: {binary: noreturn-5.s, cflags: "-std=gnu++14 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-5_2683:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-5.C'
    sources: {binary: noreturn-5.s, cflags: "-std=gnu++98 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-5_2684:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-5.C'
    sources: {binary: noreturn-5.s, cflags: "-std=gnu++11 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-5_2685:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-5.C'
    sources: {binary: noreturn-5.s, cflags: "-std=gnu++14 -O2 -Wall\n -S"}
  group: GRPSERIAL
test_noreturn-6_1217:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-6.C'
    sources: {binary: noreturn-6.s, cflags: "-std=gnu++98 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement in function returning non-void")[^\n]*\n?)+'}
test_noreturn-6_1218:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-6.C'
    sources: {binary: noreturn-6.s, cflags: "-std=gnu++11 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement in function returning non-void")[^\n]*\n?)+'}
test_noreturn-6_1219:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-6.C'
    sources: {binary: noreturn-6.s, cflags: "-std=gnu++14 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement in function returning non-void")[^\n]*\n?)+'}
test_noreturn-6_2686:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-6.C'
    sources: {binary: noreturn-6.s, cflags: "-std=gnu++98 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement in function returning non-void")[^\n]*\n?)+'}
test_noreturn-6_2687:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-6.C'
    sources: {binary: noreturn-6.s, cflags: "-std=gnu++11 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement in function returning non-void")[^\n]*\n?)+'}
test_noreturn-6_2688:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-6.C'
    sources: {binary: noreturn-6.s, cflags: "-std=gnu++14 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement in function returning non-void")[^\n]*\n?)+'}
test_noreturn-7_1220:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-7.C'
    sources: {binary: noreturn-7.s, cflags: "-std=gnu++98 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement in function returning non-void")[^\n]*\n?)+'}
test_noreturn-7_1221:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-7.C'
    sources: {binary: noreturn-7.s, cflags: "-std=gnu++11 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement in function returning non-void")[^\n]*\n?)+'}
test_noreturn-7_1222:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-7.C'
    sources: {binary: noreturn-7.s, cflags: "-std=gnu++14 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement in function returning non-void")[^\n]*\n?)+'}
test_noreturn-7_2689:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-7.C'
    sources: {binary: noreturn-7.s, cflags: "-std=gnu++98 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement in function returning non-void")[^\n]*\n?)+'}
test_noreturn-7_2690:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-7.C'
    sources: {binary: noreturn-7.s, cflags: "-std=gnu++11 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement in function returning non-void")[^\n]*\n?)+'}
test_noreturn-7_2691:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/noreturn-7.C'
    sources: {binary: noreturn-7.s, cflags: "-std=gnu++14 -O2 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("no
          return statement in function returning non-void")[^\n]*\n?)+'}
test_null4_1223:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/null4.C'
    sources: {binary: null4.s, cflags: "-std=gnu++98 -Wpointer-arith -Wconversion
        \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
test_null4_1224:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/null4.C'
    sources: {binary: null4.s, cflags: "-std=gnu++11 -Wpointer-arith -Wconversion
        \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
test_null4_1225:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/null4.C'
    sources: {binary: null4.s, cflags: "-std=gnu++14 -Wpointer-arith -Wconversion
        \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
test_null4_2692:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/null4.C'
    sources: {binary: null4.s, cflags: "-std=gnu++98 -Wpointer-arith -Wconversion
        \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
test_null4_2693:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/null4.C'
    sources: {binary: null4.s, cflags: "-std=gnu++11 -Wpointer-arith -Wconversion
        \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
test_null4_2694:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/null4.C'
    sources: {binary: null4.s, cflags: "-std=gnu++14 -Wpointer-arith -Wconversion
        \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("NULL
          used in arithmetic")[^\n]*\n?)+'}
test_oldcast1_1226:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/oldcast1.C'
    sources: {binary: oldcast1.s, cflags: "-std=gnu++98 -ansi -pedantic-errors -Wold-style-cast\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("use
          of old-style cast")[^\n]*\n?)+'}
test_oldcast1_1227:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/oldcast1.C'
    sources: {binary: oldcast1.s, cflags: "-std=gnu++11 -ansi -pedantic-errors -Wold-style-cast\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("use
          of old-style cast")[^\n]*\n?)+'}
test_oldcast1_1228:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/oldcast1.C'
    sources: {binary: oldcast1.s, cflags: "-std=gnu++14 -ansi -pedantic-errors -Wold-style-cast\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("use
          of old-style cast")[^\n]*\n?)+'}
test_oldcast1_2695:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/oldcast1.C'
    sources: {binary: oldcast1.s, cflags: "-std=gnu++98 -ansi -pedantic-errors -Wold-style-cast\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("use
          of old-style cast")[^\n]*\n?)+'}
test_oldcast1_2696:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/oldcast1.C'
    sources: {binary: oldcast1.s, cflags: "-std=gnu++11 -ansi -pedantic-errors -Wold-style-cast\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("use
          of old-style cast")[^\n]*\n?)+'}
test_oldcast1_2697:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/oldcast1.C'
    sources: {binary: oldcast1.s, cflags: "-std=gnu++14 -ansi -pedantic-errors -Wold-style-cast\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("use
          of old-style cast")[^\n]*\n?)+'}
test_overflow-warn-1_1229:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-1.C'
    sources: {binary: overflow-warn-1.s, cflags: "-std=gnu++98 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L129: {expect: true, expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L133: {expect: true, expr: '(^|\n)([^\n]+:133:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void*\''")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
test_overflow-warn-1_1230:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-1.C'
    sources: {binary: overflow-warn-1.s, cflags: "-std=gnu++11 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L129: {expect: true, expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L133: {expect: true, expr: '(^|\n)([^\n]+:133:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void*\''")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
test_overflow-warn-1_1231:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-1.C'
    sources: {binary: overflow-warn-1.s, cflags: "-std=gnu++14 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L129: {expect: true, expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L133: {expect: true, expr: '(^|\n)([^\n]+:133:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void*\''")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
test_overflow-warn-1_2698:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-1.C'
    sources: {binary: overflow-warn-1.s, cflags: "-std=gnu++98 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L129: {expect: true, expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L133: {expect: true, expr: '(^|\n)([^\n]+:133:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void*\''")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
test_overflow-warn-1_2699:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-1.C'
    sources: {binary: overflow-warn-1.s, cflags: "-std=gnu++11 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L129: {expect: true, expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L133: {expect: true, expr: '(^|\n)([^\n]+:133:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void*\''")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
test_overflow-warn-1_2700:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-1.C'
    sources: {binary: overflow-warn-1.s, cflags: "-std=gnu++14 -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L129: {expect: true, expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L130: {expect: true, expr: '(^|\n)([^\n]+:130:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L133: {expect: true, expr: '(^|\n)([^\n]+:133:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void*\''")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L92: {expect: true, expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
test_overflow-warn-3_1232:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-3.C'
    sources: {binary: overflow-warn-3.s, cflags: "-std=gnu++98 -fpermissive -pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L133: {expect: true, expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a constant expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
test_overflow-warn-3_1233:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-3.C'
    sources: {binary: overflow-warn-3.s, cflags: "-std=gnu++11 -fpermissive -pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L133: {expect: true, expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a constant expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
test_overflow-warn-3_1234:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-3.C'
    sources: {binary: overflow-warn-3.s, cflags: "-std=gnu++14 -fpermissive -pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L133: {expect: true, expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a constant expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
test_overflow-warn-3_2701:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-3.C'
    sources: {binary: overflow-warn-3.s, cflags: "-std=gnu++98 -fpermissive -pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L133: {expect: true, expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a constant expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
test_overflow-warn-3_2702:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-3.C'
    sources: {binary: overflow-warn-3.s, cflags: "-std=gnu++11 -fpermissive -pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L133: {expect: true, expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a constant expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
test_overflow-warn-3_2703:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-3.C'
    sources: {binary: overflow-warn-3.s, cflags: "-std=gnu++14 -fpermissive -pedantic\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L131: {expect: true, expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L133: {expect: true, expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          a constant expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L67: {expect: true, expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L69: {expect: true, expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L93: {expect: true, expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L94: {expect: true, expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L95: {expect: true, expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
test_overflow-warn-4_1235:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-4.C'
    sources: {binary: overflow-warn-4.s, cflags: "-std=gnu++98 -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L137: {expect: true, expr: '(^|\n)([^\n]+:137:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E5\'' is not an integer constant")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E6\'' is not an integer constant")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("bit-field
          .* width not an integer constant")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
test_overflow-warn-4_1236:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-4.C'
    sources: {binary: overflow-warn-4.s, cflags: "-std=gnu++11 -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L137: {expect: true, expr: '(^|\n)([^\n]+:137:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E5\'' is not an integer constant")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E6\'' is not an integer constant")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("bit-field
          .* width not an integer constant")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
test_overflow-warn-4_1237:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-4.C'
    sources: {binary: overflow-warn-4.s, cflags: "-std=gnu++14 -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L137: {expect: true, expr: '(^|\n)([^\n]+:137:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E5\'' is not an integer constant")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E6\'' is not an integer constant")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("bit-field
          .* width not an integer constant")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
test_overflow-warn-4_2704:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-4.C'
    sources: {binary: overflow-warn-4.s, cflags: "-std=gnu++98 -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L137: {expect: true, expr: '(^|\n)([^\n]+:137:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E5\'' is not an integer constant")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E6\'' is not an integer constant")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("bit-field
          .* width not an integer constant")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
test_overflow-warn-4_2705:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-4.C'
    sources: {binary: overflow-warn-4.s, cflags: "-std=gnu++11 -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L137: {expect: true, expr: '(^|\n)([^\n]+:137:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E5\'' is not an integer constant")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E6\'' is not an integer constant")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("bit-field
          .* width not an integer constant")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
test_overflow-warn-4_2706:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-4.C'
    sources: {binary: overflow-warn-4.s, cflags: "-std=gnu++14 -pedantic-errors\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L101: {expect: true, expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L103: {expect: true, expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("large
          integer implicitly truncated to unsigned type")[^\n]*\n?)+'}
      L134: {expect: true, expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L135: {expect: true, expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from")[^\n]*\n?)+'}
      L136: {expect: true, expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant.expression")[^\n]*\n?)+'}
      L137: {expect: true, expr: '(^|\n)([^\n]+:137:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L138: {expect: true, expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("width
          not an integer constant")[^\n]*\n?)+'}
      L139: {expect: true, expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is
          not a constant expression")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E3\'' is not an integer constant|not a constant.expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E4\'' is not an integer constant")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E5\'' is not an integer constant")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enumerator
          value for \''E6\'' is not an integer constant")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("bit-field
          .* width not an integer constant")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          conversion from \''int\'' to \''void")[^\n]*\n?)+'}
      L70: {expect: true, expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
      L71: {expect: true, expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("division
          by zero is not a constant expression")[^\n]*\n?)+'}
      L72: {expect: true, expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("overflow
          in constant expression")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L96: {expect: true, expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L97: {expect: true, expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L98: {expect: true, expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
      L99: {expect: true, expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("overflow
          in implicit constant conversion")[^\n]*\n?)+'}
test_overflow-warn-5_1238:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-5.C'
    sources: {binary: overflow-warn-5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_overflow-warn-5_1239:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-5.C'
    sources: {binary: overflow-warn-5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_overflow-warn-5_1240:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-5.C'
    sources: {binary: overflow-warn-5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_overflow-warn-5_2707:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-5.C'
    sources: {binary: overflow-warn-5.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_overflow-warn-5_2708:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-5.C'
    sources: {binary: overflow-warn-5.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_overflow-warn-5_2709:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-5.C'
    sources: {binary: overflow-warn-5.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("")[^\n]*\n?)+'}
test_overflow-warn-6_1241:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-6.C'
    sources: {binary: overflow-warn-6.s, cflags: "-std=gnu++98 -Woverflow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_overflow-warn-6_1242:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-6.C'
    sources: {binary: overflow-warn-6.s, cflags: "-std=gnu++11 -Woverflow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_overflow-warn-6_1243:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-6.C'
    sources: {binary: overflow-warn-6.s, cflags: "-std=gnu++14 -Woverflow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_overflow-warn-6_2710:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-6.C'
    sources: {binary: overflow-warn-6.s, cflags: "-std=gnu++98 -Woverflow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_overflow-warn-6_2711:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-6.C'
    sources: {binary: overflow-warn-6.s, cflags: "-std=gnu++11 -Woverflow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_overflow-warn-6_2712:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/overflow-warn-6.C'
    sources: {binary: overflow-warn-6.s, cflags: "-std=gnu++14 -Woverflow\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("integer
          overflow in expression")[^\n]*\n?)+'}
test_pedantic1_1244:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pedantic1.C'
    sources: {binary: pedantic1.s, cflags: "-std=gnu++98 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_pedantic1_1245:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pedantic1.C'
    sources: {binary: pedantic1.s, cflags: "-std=gnu++11 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_pedantic1_1246:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pedantic1.C'
    sources: {binary: pedantic1.s, cflags: "-std=gnu++14 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_pedantic1_2713:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pedantic1.C'
    sources: {binary: pedantic1.s, cflags: "-std=gnu++98 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_pedantic1_2714:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pedantic1.C'
    sources: {binary: pedantic1.s, cflags: "-std=gnu++11 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_pedantic1_2715:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pedantic1.C'
    sources: {binary: pedantic1.s, cflags: "-std=gnu++14 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_pedantic2_1247:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pedantic2.C'
    sources: {binary: pedantic2.s, cflags: "-std=gnu++98 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("extra")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("extra")[^\n]*\n?)+'}
test_pedantic2_1248:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pedantic2.C'
    sources: {binary: pedantic2.s, cflags: "-std=gnu++11 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("extra")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("extra")[^\n]*\n?)+'}
test_pedantic2_1249:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pedantic2.C'
    sources: {binary: pedantic2.s, cflags: "-std=gnu++14 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("extra")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("extra")[^\n]*\n?)+'}
test_pedantic2_2716:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pedantic2.C'
    sources: {binary: pedantic2.s, cflags: "-std=gnu++98 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("extra")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("extra")[^\n]*\n?)+'}
test_pedantic2_2717:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pedantic2.C'
    sources: {binary: pedantic2.s, cflags: "-std=gnu++11 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("extra")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("extra")[^\n]*\n?)+'}
test_pedantic2_2718:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pedantic2.C'
    sources: {binary: pedantic2.s, cflags: "-std=gnu++14 -pedantic\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("extra")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("extra")[^\n]*\n?)+'}
test_permissive-1_1250:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/permissive-1.C'
    sources: {binary: permissive-1.s, cflags: "-std=gnu++98 -fpermissive -Wno-shift-overflow
        -Wno-shift-count-overflow -Wno-shift-count-negative\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("shift
          expression")[^\n]*\n?)+'}
test_permissive-1_1251:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/permissive-1.C'
    sources: {binary: permissive-1.s, cflags: "-std=gnu++11 -fpermissive -Wno-shift-overflow
        -Wno-shift-count-overflow -Wno-shift-count-negative\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("shift
          expression")[^\n]*\n?)+'}
test_permissive-1_1252:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/permissive-1.C'
    sources: {binary: permissive-1.s, cflags: "-std=gnu++14 -fpermissive -Wno-shift-overflow
        -Wno-shift-count-overflow -Wno-shift-count-negative\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("shift
          expression")[^\n]*\n?)+'}
test_permissive-1_2719:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/permissive-1.C'
    sources: {binary: permissive-1.s, cflags: "-std=gnu++98 -fpermissive -Wno-shift-overflow
        -Wno-shift-count-overflow -Wno-shift-count-negative\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("shift
          expression")[^\n]*\n?)+'}
test_permissive-1_2720:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/permissive-1.C'
    sources: {binary: permissive-1.s, cflags: "-std=gnu++11 -fpermissive -Wno-shift-overflow
        -Wno-shift-count-overflow -Wno-shift-count-negative\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("shift
          expression")[^\n]*\n?)+'}
test_permissive-1_2721:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/permissive-1.C'
    sources: {binary: permissive-1.s, cflags: "-std=gnu++14 -fpermissive -Wno-shift-overflow
        -Wno-shift-count-overflow -Wno-shift-count-negative\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("operand
          of shift expression")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("shift
          expression")[^\n]*\n?)+'}
test_pmf1_1253:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pmf1.C'
    sources: {binary: pmf1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("&a::f")[^\n]*\n?)+'}
test_pmf1_1254:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pmf1.C'
    sources: {binary: pmf1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("&a::f")[^\n]*\n?)+'}
test_pmf1_1255:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pmf1.C'
    sources: {binary: pmf1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("&a::f")[^\n]*\n?)+'}
test_pmf1_2722:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pmf1.C'
    sources: {binary: pmf1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("&a::f")[^\n]*\n?)+'}
test_pmf1_2723:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pmf1.C'
    sources: {binary: pmf1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("&a::f")[^\n]*\n?)+'}
test_pmf1_2724:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pmf1.C'
    sources: {binary: pmf1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("&a::f")[^\n]*\n?)+'}
test_pmf2_1256:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pmf2.C'
    sources: {binary: pmf2.s, cflags: "-std=gnu++98 -Wall -O2\n -S"}
  group: GRPSERIAL
test_pmf2_1257:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pmf2.C'
    sources: {binary: pmf2.s, cflags: "-std=gnu++11 -Wall -O2\n -S"}
  group: GRPSERIAL
test_pmf2_1258:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pmf2.C'
    sources: {binary: pmf2.s, cflags: "-std=gnu++14 -Wall -O2\n -S"}
  group: GRPSERIAL
test_pmf2_2725:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pmf2.C'
    sources: {binary: pmf2.s, cflags: "-std=gnu++98 -Wall -O2\n -S"}
  group: GRPSERIAL
test_pmf2_2726:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pmf2.C'
    sources: {binary: pmf2.s, cflags: "-std=gnu++11 -Wall -O2\n -S"}
  group: GRPSERIAL
test_pmf2_2727:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pmf2.C'
    sources: {binary: pmf2.s, cflags: "-std=gnu++14 -Wall -O2\n -S"}
  group: GRPSERIAL
test_pointer-integer-comparison_1259:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pointer-integer-comparison.C'
    sources: {binary: pointer-integer-comparison.s, cflags: "-std=gnu++98 -fsyntax-only
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
test_pointer-integer-comparison_1260:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pointer-integer-comparison.C'
    sources: {binary: pointer-integer-comparison.s, cflags: "-std=gnu++11 -fsyntax-only
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
test_pointer-integer-comparison_1261:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pointer-integer-comparison.C'
    sources: {binary: pointer-integer-comparison.s, cflags: "-std=gnu++14 -fsyntax-only
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
test_pointer-integer-comparison_2728:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pointer-integer-comparison.C'
    sources: {binary: pointer-integer-comparison.s, cflags: "-std=gnu++98 -fsyntax-only
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
test_pointer-integer-comparison_2729:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pointer-integer-comparison.C'
    sources: {binary: pointer-integer-comparison.s, cflags: "-std=gnu++11 -fsyntax-only
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
test_pointer-integer-comparison_2730:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pointer-integer-comparison.C'
    sources: {binary: pointer-integer-comparison.s, cflags: "-std=gnu++14 -fsyntax-only
        -fpermissive\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C.. forbids comparison between pointer and integer")[^\n]*\n?)+'}
test_pr11159_1262:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr11159.C'
    sources: {binary: pr11159.s, cflags: "-std=gnu++98 -Wall -Wextra\n -S"}
  group: GRPSERIAL
test_pr11159_1263:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr11159.C'
    sources: {binary: pr11159.s, cflags: "-std=gnu++11 -Wall -Wextra\n -S"}
  group: GRPSERIAL
test_pr11159_1264:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr11159.C'
    sources: {binary: pr11159.s, cflags: "-std=gnu++14 -Wall -Wextra\n -S"}
  group: GRPSERIAL
test_pr11159_2731:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr11159.C'
    sources: {binary: pr11159.s, cflags: "-std=gnu++98 -Wall -Wextra\n -S"}
  group: GRPSERIAL
test_pr11159_2732:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr11159.C'
    sources: {binary: pr11159.s, cflags: "-std=gnu++11 -Wall -Wextra\n -S"}
  group: GRPSERIAL
test_pr11159_2733:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr11159.C'
    sources: {binary: pr11159.s, cflags: "-std=gnu++14 -Wall -Wextra\n -S"}
  group: GRPSERIAL
test_pr11492_1265:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr11492.C'
    sources: {binary: pr11492.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_pr11492_1266:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr11492.C'
    sources: {binary: pr11492.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_pr11492_1267:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr11492.C'
    sources: {binary: pr11492.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_pr11492_2734:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr11492.C'
    sources: {binary: pr11492.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_pr11492_2735:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr11492.C'
    sources: {binary: pr11492.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_pr11492_2736:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr11492.C'
    sources: {binary: pr11492.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
test_pr12242_1268:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr12242.C'
    sources: {binary: pr12242.s, cflags: "-std=gnu++98 -Wconversion -fpermissive\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .X. to .Y. in assignment")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
test_pr12242_1269:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr12242.C'
    sources: {binary: pr12242.s, cflags: "-std=gnu++11 -Wconversion -fpermissive\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .X. to .Y. in assignment")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
test_pr12242_1270:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr12242.C'
    sources: {binary: pr12242.s, cflags: "-std=gnu++14 -Wconversion -fpermissive\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .X. to .Y. in assignment")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
test_pr12242_2737:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr12242.C'
    sources: {binary: pr12242.s, cflags: "-std=gnu++98 -Wconversion -fpermissive\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .X. to .Y. in assignment")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
test_pr12242_2738:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr12242.C'
    sources: {binary: pr12242.s, cflags: "-std=gnu++11 -Wconversion -fpermissive\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .X. to .Y. in assignment")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
test_pr12242_2739:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr12242.C'
    sources: {binary: pr12242.s, cflags: "-std=gnu++14 -Wconversion -fpermissive\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .X. to .Y. in assignment")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          convert .Y. to .X. in assignment")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("invalid
          conversion from .int. to .X.")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("unspecified")[^\n]*\n?)+'}
test_pr13358-2_1271:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr13358-2.C'
    sources: {binary: pr13358-2.s, cflags: "-std=c++98 -pedantic-errors\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ 1998 does not support \''long long\''")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ 1998 does not support \''long long\''")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("long
          long")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("long
          long")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("long
          long")[^\n]*\n?)+'}
test_pr13358-2_2740:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr13358-2.C'
    sources: {binary: pr13358-2.s, cflags: "-std=c++98 -pedantic-errors\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ 1998 does not support \''long long\''")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO
          C\\\\+\\\\+ 1998 does not support \''long long\''")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("long
          long")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("long
          long")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("long
          long")[^\n]*\n?)+'}
test_pr13358-3_1272:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr13358-3.C'
    sources: {binary: pr13358-3.s, cflags: "-std=gnu++11 -pedantic-errors\n -S"}
  group: GRPSERIAL
test_pr13358-3_1273:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr13358-3.C'
    sources: {binary: pr13358-3.s, cflags: "-std=gnu++14 -pedantic-errors\n -S"}
  group: GRPSERIAL
test_pr13358-3_2741:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr13358-3.C'
    sources: {binary: pr13358-3.s, cflags: "-std=gnu++11 -pedantic-errors\n -S"}
  group: GRPSERIAL
test_pr13358-3_2742:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr13358-3.C'
    sources: {binary: pr13358-3.s, cflags: "-std=gnu++14 -pedantic-errors\n -S"}
  group: GRPSERIAL
test_pr13358-4_1274:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr13358-4.C'
    sources: {binary: pr13358-4.s, cflags: "-std=gnu++11 -pedantic-errors -Wlong-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ 1998 does not support \''long long\''")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ 1998 does not support \''long long\''")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("long
          long")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("long
          long")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("long
          long")[^\n]*\n?)+'}
test_pr13358-4_1275:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr13358-4.C'
    sources: {binary: pr13358-4.s, cflags: "-std=gnu++14 -pedantic-errors -Wlong-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ 1998 does not support \''long long\''")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ 1998 does not support \''long long\''")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("long
          long")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("long
          long")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("long
          long")[^\n]*\n?)+'}
test_pr13358-4_2743:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr13358-4.C'
    sources: {binary: pr13358-4.s, cflags: "-std=gnu++11 -pedantic-errors -Wlong-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ 1998 does not support \''long long\''")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ 1998 does not support \''long long\''")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("long
          long")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("long
          long")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("long
          long")[^\n]*\n?)+'}
test_pr13358-4_2744:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr13358-4.C'
    sources: {binary: pr13358-4.s, cflags: "-std=gnu++14 -pedantic-errors -Wlong-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ 1998 does not support \''long long\''")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("integer
          constant is too large for \''long\'' type")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+ 1998 does not support \''long long\''")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("long
          long")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("long
          long")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("long
          long")[^\n]*\n?)+'}
test_pr13358_1276:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr13358.C'
    sources: {binary: pr13358.s, cflags: "-std=c++98 -Wno-long-long -pedantic-errors\n
        -S"}
  group: GRPSERIAL
test_pr13358_2745:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr13358.C'
    sources: {binary: pr13358.s, cflags: "-std=c++98 -Wno-long-long -pedantic-errors\n
        -S"}
  group: GRPSERIAL
test_pr15774-1_1277:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr15774-1.C'
    sources: {binary: pr15774-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new
          declaration")[^\n]*\n?)+'}
test_pr15774-1_1278:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr15774-1.C'
    sources: {binary: pr15774-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new
          declaration")[^\n]*\n?)+'}
test_pr15774-1_1279:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr15774-1.C'
    sources: {binary: pr15774-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new
          declaration")[^\n]*\n?)+'}
test_pr15774-1_2746:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr15774-1.C'
    sources: {binary: pr15774-1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new
          declaration")[^\n]*\n?)+'}
test_pr15774-1_2747:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr15774-1.C'
    sources: {binary: pr15774-1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new
          declaration")[^\n]*\n?)+'}
test_pr15774-1_2748:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr15774-1.C'
    sources: {binary: pr15774-1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("new
          declaration")[^\n]*\n?)+'}
test_pr15774-2_1280:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr15774-2.C'
    sources: {binary: pr15774-2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr15774-2_1281:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr15774-2.C'
    sources: {binary: pr15774-2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr15774-2_1282:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr15774-2.C'
    sources: {binary: pr15774-2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr15774-2_2749:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr15774-2.C'
    sources: {binary: pr15774-2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr15774-2_2750:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr15774-2.C'
    sources: {binary: pr15774-2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr15774-2_2751:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr15774-2.C'
    sources: {binary: pr15774-2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr16302_1283:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr16302.C'
    sources: {binary: pr16302.s, cflags: "-std=gnu++98 -Wlogical-op\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
test_pr16302_1284:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr16302.C'
    sources: {binary: pr16302.s, cflags: "-std=gnu++11 -Wlogical-op\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
test_pr16302_1285:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr16302.C'
    sources: {binary: pr16302.s, cflags: "-std=gnu++14 -Wlogical-op\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
test_pr16302_2752:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr16302.C'
    sources: {binary: pr16302.s, cflags: "-std=gnu++98 -Wlogical-op\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
test_pr16302_2753:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr16302.C'
    sources: {binary: pr16302.s, cflags: "-std=gnu++11 -Wlogical-op\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
test_pr16302_2754:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr16302.C'
    sources: {binary: pr16302.s, cflags: "-std=gnu++14 -Wlogical-op\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''or\''
          of collectively exhaustive tests is always true")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("\''and\''
          of mutually exclusive tests is always false")[^\n]*\n?)+'}
test_pr18016_1286:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr18016.C'
    sources: {binary: pr18016.s, cflags: "-std=gnu++98 -Wuninitialized -Winit-self\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
test_pr18016_1287:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr18016.C'
    sources: {binary: pr18016.s, cflags: "-std=gnu++11 -Wuninitialized -Winit-self\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
test_pr18016_1288:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr18016.C'
    sources: {binary: pr18016.s, cflags: "-std=gnu++14 -Wuninitialized -Winit-self\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
test_pr18016_2755:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr18016.C'
    sources: {binary: pr18016.s, cflags: "-std=gnu++98 -Wuninitialized -Winit-self\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
test_pr18016_2756:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr18016.C'
    sources: {binary: pr18016.s, cflags: "-std=gnu++11 -Wuninitialized -Winit-self\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
test_pr18016_2757:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr18016.C'
    sources: {binary: pr18016.s, cflags: "-std=gnu++14 -Wuninitialized -Winit-self\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("initialized
          with itself")[^\n]*\n?)+'}
test_pr21983_1289:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr21983.C'
    sources: {binary: pr21983.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          unique final overrider")[^\n]*\n?)+'}
test_pr21983_1290:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr21983.C'
    sources: {binary: pr21983.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          unique final overrider")[^\n]*\n?)+'}
test_pr21983_1291:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr21983.C'
    sources: {binary: pr21983.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          unique final overrider")[^\n]*\n?)+'}
test_pr21983_2758:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr21983.C'
    sources: {binary: pr21983.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          unique final overrider")[^\n]*\n?)+'}
test_pr21983_2759:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr21983.C'
    sources: {binary: pr21983.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          unique final overrider")[^\n]*\n?)+'}
test_pr21983_2760:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr21983.C'
    sources: {binary: pr21983.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          unique final overrider")[^\n]*\n?)+'}
test_pr23075_1292:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr23075.C'
    sources: {binary: pr23075.s, cflags: "-std=gnu++98 -O2 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("with
          no value")[^\n]*\n?)+'}
test_pr23075_1293:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr23075.C'
    sources: {binary: pr23075.s, cflags: "-std=gnu++11 -O2 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("with
          no value")[^\n]*\n?)+'}
test_pr23075_1294:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr23075.C'
    sources: {binary: pr23075.s, cflags: "-std=gnu++14 -O2 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("with
          no value")[^\n]*\n?)+'}
test_pr23075_2761:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr23075.C'
    sources: {binary: pr23075.s, cflags: "-std=gnu++98 -O2 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("with
          no value")[^\n]*\n?)+'}
test_pr23075_2762:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr23075.C'
    sources: {binary: pr23075.s, cflags: "-std=gnu++11 -O2 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("with
          no value")[^\n]*\n?)+'}
test_pr23075_2763:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr23075.C'
    sources: {binary: pr23075.s, cflags: "-std=gnu++14 -O2 -Wreturn-type\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("with
          no value")[^\n]*\n?)+'}
test_pr26785_1295:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr26785.C'
    sources: {binary: pr26785.s, cflags: "-std=gnu++98 -fshow-column\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:extra
          qualification")[^\n]*\n?)+'}
test_pr26785_1296:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr26785.C'
    sources: {binary: pr26785.s, cflags: "-std=gnu++11 -fshow-column\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:extra
          qualification")[^\n]*\n?)+'}
test_pr26785_1297:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr26785.C'
    sources: {binary: pr26785.s, cflags: "-std=gnu++14 -fshow-column\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:extra
          qualification")[^\n]*\n?)+'}
test_pr26785_2764:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr26785.C'
    sources: {binary: pr26785.s, cflags: "-std=gnu++98 -fshow-column\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:extra
          qualification")[^\n]*\n?)+'}
test_pr26785_2765:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr26785.C'
    sources: {binary: pr26785.s, cflags: "-std=gnu++11 -fshow-column\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:extra
          qualification")[^\n]*\n?)+'}
test_pr26785_2766:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr26785.C'
    sources: {binary: pr26785.s, cflags: "-std=gnu++14 -fshow-column\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("3:extra
          qualification")[^\n]*\n?)+'}
test_pr28943_1298:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr28943.C'
    sources: {binary: pr28943.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("third
          operand .* type \''void\''.* second operand is neither a throw-expression
          nor of type \''void\''")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("second
          operand .* type \''void\''.* third operand is neither a throw-expression
          nor of type \''void\''")[^\n]*\n?)+'}
test_pr28943_1299:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr28943.C'
    sources: {binary: pr28943.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("third
          operand .* type \''void\''.* second operand is neither a throw-expression
          nor of type \''void\''")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("second
          operand .* type \''void\''.* third operand is neither a throw-expression
          nor of type \''void\''")[^\n]*\n?)+'}
test_pr28943_1300:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr28943.C'
    sources: {binary: pr28943.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("third
          operand .* type \''void\''.* second operand is neither a throw-expression
          nor of type \''void\''")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("second
          operand .* type \''void\''.* third operand is neither a throw-expression
          nor of type \''void\''")[^\n]*\n?)+'}
test_pr28943_2767:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr28943.C'
    sources: {binary: pr28943.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("third
          operand .* type \''void\''.* second operand is neither a throw-expression
          nor of type \''void\''")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("second
          operand .* type \''void\''.* third operand is neither a throw-expression
          nor of type \''void\''")[^\n]*\n?)+'}
test_pr28943_2768:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr28943.C'
    sources: {binary: pr28943.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("third
          operand .* type \''void\''.* second operand is neither a throw-expression
          nor of type \''void\''")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("second
          operand .* type \''void\''.* third operand is neither a throw-expression
          nor of type \''void\''")[^\n]*\n?)+'}
test_pr28943_2769:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr28943.C'
    sources: {binary: pr28943.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("third
          operand .* type \''void\''.* second operand is neither a throw-expression
          nor of type \''void\''")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("second
          operand .* type \''void\''.* third operand is neither a throw-expression
          nor of type \''void\''")[^\n]*\n?)+'}
test_pr30551-2_1301:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30551-2.C'
    sources: {binary: pr30551-2.s, cflags: "-std=gnu++98 -pedantic-errors\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first
          argument of .*main.* should be .int.")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("main.*
          takes only zero or two arguments")[^\n]*\n?)+'}
test_pr30551-2_1302:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30551-2.C'
    sources: {binary: pr30551-2.s, cflags: "-std=gnu++11 -pedantic-errors\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first
          argument of .*main.* should be .int.")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("main.*
          takes only zero or two arguments")[^\n]*\n?)+'}
test_pr30551-2_1303:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30551-2.C'
    sources: {binary: pr30551-2.s, cflags: "-std=gnu++14 -pedantic-errors\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first
          argument of .*main.* should be .int.")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("main.*
          takes only zero or two arguments")[^\n]*\n?)+'}
test_pr30551-2_2770:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30551-2.C'
    sources: {binary: pr30551-2.s, cflags: "-std=gnu++98 -pedantic-errors\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first
          argument of .*main.* should be .int.")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("main.*
          takes only zero or two arguments")[^\n]*\n?)+'}
test_pr30551-2_2771:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30551-2.C'
    sources: {binary: pr30551-2.s, cflags: "-std=gnu++11 -pedantic-errors\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first
          argument of .*main.* should be .int.")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("main.*
          takes only zero or two arguments")[^\n]*\n?)+'}
test_pr30551-2_2772:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30551-2.C'
    sources: {binary: pr30551-2.s, cflags: "-std=gnu++14 -pedantic-errors\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("first
          argument of .*main.* should be .int.")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("main.*
          takes only zero or two arguments")[^\n]*\n?)+'}
test_pr30551_1304:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30551.C'
    sources: {binary: pr30551.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("first
          argument of .*main.* should be .int.")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("main.*
          takes only zero or two arguments")[^\n]*\n?)+'}
test_pr30551_1305:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30551.C'
    sources: {binary: pr30551.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("first
          argument of .*main.* should be .int.")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("main.*
          takes only zero or two arguments")[^\n]*\n?)+'}
test_pr30551_1306:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30551.C'
    sources: {binary: pr30551.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("first
          argument of .*main.* should be .int.")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("main.*
          takes only zero or two arguments")[^\n]*\n?)+'}
test_pr30551_2773:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30551.C'
    sources: {binary: pr30551.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("first
          argument of .*main.* should be .int.")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("main.*
          takes only zero or two arguments")[^\n]*\n?)+'}
test_pr30551_2774:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30551.C'
    sources: {binary: pr30551.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("first
          argument of .*main.* should be .int.")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("main.*
          takes only zero or two arguments")[^\n]*\n?)+'}
test_pr30551_2775:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30551.C'
    sources: {binary: pr30551.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("first
          argument of .*main.* should be .int.")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("main.*
          takes only zero or two arguments")[^\n]*\n?)+'}
test_pr30636_1307:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30636.C'
    sources: {binary: pr30636.s, cflags: "-std=gnu++98 -O2 -Warray-bounds\n -S"}
  group: GRPSERIAL
test_pr30636_1308:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30636.C'
    sources: {binary: pr30636.s, cflags: "-std=gnu++11 -O2 -Warray-bounds\n -S"}
  group: GRPSERIAL
test_pr30636_1309:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30636.C'
    sources: {binary: pr30636.s, cflags: "-std=gnu++14 -O2 -Warray-bounds\n -S"}
  group: GRPSERIAL
test_pr30636_2776:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30636.C'
    sources: {binary: pr30636.s, cflags: "-std=gnu++98 -O2 -Warray-bounds\n -S"}
  group: GRPSERIAL
test_pr30636_2777:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30636.C'
    sources: {binary: pr30636.s, cflags: "-std=gnu++11 -O2 -Warray-bounds\n -S"}
  group: GRPSERIAL
test_pr30636_2778:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr30636.C'
    sources: {binary: pr30636.s, cflags: "-std=gnu++14 -O2 -Warray-bounds\n -S"}
  group: GRPSERIAL
test_pr31246-2_1310:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr31246-2.C'
    sources: {binary: pr31246-2.s, cflags: "-std=gnu++98 -Wunreachable-code\n -S"}
  group: GRPSERIAL
test_pr31246-2_1311:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr31246-2.C'
    sources: {binary: pr31246-2.s, cflags: "-std=gnu++11 -Wunreachable-code\n -S"}
  group: GRPSERIAL
test_pr31246-2_1312:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr31246-2.C'
    sources: {binary: pr31246-2.s, cflags: "-std=gnu++14 -Wunreachable-code\n -S"}
  group: GRPSERIAL
test_pr31246-2_2779:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr31246-2.C'
    sources: {binary: pr31246-2.s, cflags: "-std=gnu++98 -Wunreachable-code\n -S"}
  group: GRPSERIAL
test_pr31246-2_2780:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr31246-2.C'
    sources: {binary: pr31246-2.s, cflags: "-std=gnu++11 -Wunreachable-code\n -S"}
  group: GRPSERIAL
test_pr31246-2_2781:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr31246-2.C'
    sources: {binary: pr31246-2.s, cflags: "-std=gnu++14 -Wunreachable-code\n -S"}
  group: GRPSERIAL
test_pr31246_1313:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr31246.C'
    sources: {binary: pr31246.s, cflags: "-std=gnu++98 -Wunreachable-code -D_GLIBCXX_DEBUG\n
        -S"}
  group: GRPSERIAL
test_pr31246_1314:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr31246.C'
    sources: {binary: pr31246.s, cflags: "-std=gnu++11 -Wunreachable-code -D_GLIBCXX_DEBUG\n
        -S"}
  group: GRPSERIAL
test_pr31246_1315:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr31246.C'
    sources: {binary: pr31246.s, cflags: "-std=gnu++14 -Wunreachable-code -D_GLIBCXX_DEBUG\n
        -S"}
  group: GRPSERIAL
test_pr31246_2782:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr31246.C'
    sources: {binary: pr31246.s, cflags: "-std=gnu++98 -Wunreachable-code -D_GLIBCXX_DEBUG\n
        -S"}
  group: GRPSERIAL
test_pr31246_2783:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr31246.C'
    sources: {binary: pr31246.s, cflags: "-std=gnu++11 -Wunreachable-code -D_GLIBCXX_DEBUG\n
        -S"}
  group: GRPSERIAL
test_pr31246_2784:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr31246.C'
    sources: {binary: pr31246.s, cflags: "-std=gnu++14 -Wunreachable-code -D_GLIBCXX_DEBUG\n
        -S"}
  group: GRPSERIAL
test_pr33160_1316:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr33160.C'
    sources: {binary: pr33160.s, cflags: "-std=gnu++98 -Wall -Wextra -Wpointer-arith
        -pedantic -Wconversion\n -S"}
  group: GRPSERIAL
test_pr33160_1317:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr33160.C'
    sources: {binary: pr33160.s, cflags: "-std=gnu++11 -Wall -Wextra -Wpointer-arith
        -pedantic -Wconversion\n -S"}
  group: GRPSERIAL
test_pr33160_1318:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr33160.C'
    sources: {binary: pr33160.s, cflags: "-std=gnu++14 -Wall -Wextra -Wpointer-arith
        -pedantic -Wconversion\n -S"}
  group: GRPSERIAL
test_pr33160_2785:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr33160.C'
    sources: {binary: pr33160.s, cflags: "-std=gnu++98 -Wall -Wextra -Wpointer-arith
        -pedantic -Wconversion\n -S"}
  group: GRPSERIAL
test_pr33160_2786:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr33160.C'
    sources: {binary: pr33160.s, cflags: "-std=gnu++11 -Wall -Wextra -Wpointer-arith
        -pedantic -Wconversion\n -S"}
  group: GRPSERIAL
test_pr33160_2787:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr33160.C'
    sources: {binary: pr33160.s, cflags: "-std=gnu++14 -Wall -Wextra -Wpointer-arith
        -pedantic -Wconversion\n -S"}
  group: GRPSERIAL
test_pr33738_1319:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr33738.C'
    sources: {binary: ./pr33738.exe, cflags: -std=gnu++98 -O2 -Wtype-limits -fstrict-enums}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("always
          false due")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("always
          false due")[^\n]*\n?)+'}
test_pr33738_1320:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr33738.C'
    sources: {binary: ./pr33738.exe, cflags: -std=gnu++11 -O2 -Wtype-limits -fstrict-enums}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("always
          false due")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("always
          false due")[^\n]*\n?)+'}
test_pr33738_1321:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr33738.C'
    sources: {binary: ./pr33738.exe, cflags: -std=gnu++14 -O2 -Wtype-limits -fstrict-enums}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("always
          false due")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("always
          false due")[^\n]*\n?)+'}
test_pr33738_2788:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr33738.C'
    sources: {binary: ./pr33738.exe, cflags: -std=gnu++98 -O2 -Wtype-limits -fstrict-enums}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("always
          false due")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("always
          false due")[^\n]*\n?)+'}
test_pr33738_2789:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr33738.C'
    sources: {binary: ./pr33738.exe, cflags: -std=gnu++11 -O2 -Wtype-limits -fstrict-enums}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("always
          false due")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("always
          false due")[^\n]*\n?)+'}
test_pr33738_2790:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr33738.C'
    sources: {binary: ./pr33738.exe, cflags: -std=gnu++14 -O2 -Wtype-limits -fstrict-enums}
  group: GRPSERIAL
  run: {cwd: .}
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("always
          false due")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("always
          false due")[^\n]*\n?)+'}
test_pr34985_1322:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr34985.C'
    sources: {binary: pr34985.s, cflags: "-std=gnu++98 -Wall -Wextra -O2 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_pr34985_1323:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr34985.C'
    sources: {binary: pr34985.s, cflags: "-std=gnu++11 -Wall -Wextra -O2 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_pr34985_1324:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr34985.C'
    sources: {binary: pr34985.s, cflags: "-std=gnu++14 -Wall -Wextra -O2 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_pr34985_2791:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr34985.C'
    sources: {binary: pr34985.s, cflags: "-std=gnu++98 -Wall -Wextra -O2 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_pr34985_2792:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr34985.C'
    sources: {binary: pr34985.s, cflags: "-std=gnu++11 -Wall -Wextra -O2 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_pr34985_2793:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr34985.C'
    sources: {binary: pr34985.s, cflags: "-std=gnu++14 -Wall -Wextra -O2 -ffat-lto-objects\n
        -S"}
  group: GRPSERIAL
test_pr35602_1325:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35602.C'
    sources: {binary: pr35602.s, cflags: "-std=gnu++98 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
test_pr35602_1326:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35602.C'
    sources: {binary: pr35602.s, cflags: "-std=gnu++11 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
test_pr35602_1327:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35602.C'
    sources: {binary: pr35602.s, cflags: "-std=gnu++14 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
test_pr35602_2794:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35602.C'
    sources: {binary: pr35602.s, cflags: "-std=gnu++98 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
test_pr35602_2795:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35602.C'
    sources: {binary: pr35602.s, cflags: "-std=gnu++11 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
test_pr35602_2796:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35602.C'
    sources: {binary: pr35602.s, cflags: "-std=gnu++14 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
test_pr35635_1328:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35635.C'
    sources: {binary: pr35635.s, cflags: "-std=gnu++98 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("conver")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_pr35635_1329:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35635.C'
    sources: {binary: pr35635.s, cflags: "-std=gnu++11 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("conver")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_pr35635_1330:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35635.C'
    sources: {binary: pr35635.s, cflags: "-std=gnu++14 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("conver")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_pr35635_2797:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35635.C'
    sources: {binary: pr35635.s, cflags: "-std=gnu++98 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("conver")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_pr35635_2798:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35635.C'
    sources: {binary: pr35635.s, cflags: "-std=gnu++11 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("conver")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_pr35635_2799:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35635.C'
    sources: {binary: pr35635.s, cflags: "-std=gnu++14 -Wconversion -Wsign-conversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("conver")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("negative
          integer implicitly converted to unsigned type")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L77: {expect: true, expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L78: {expect: true, expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L80: {expect: true, expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L82: {expect: true, expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L83: {expect: true, expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L85: {expect: true, expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L86: {expect: true, expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L87: {expect: true, expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_pr35711_1331:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35711.C'
    sources: {binary: pr35711.s, cflags: "-std=gnu++98 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("cast
          from type \''volatile int\\\\*\'' to type \''int\\\\*\'' casts away qualifiers")[^\n]*\n?)+'}
test_pr35711_1332:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35711.C'
    sources: {binary: pr35711.s, cflags: "-std=gnu++11 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("cast
          from type \''volatile int\\\\*\'' to type \''int\\\\*\'' casts away qualifiers")[^\n]*\n?)+'}
test_pr35711_1333:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35711.C'
    sources: {binary: pr35711.s, cflags: "-std=gnu++14 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("cast
          from type \''volatile int\\\\*\'' to type \''int\\\\*\'' casts away qualifiers")[^\n]*\n?)+'}
test_pr35711_2800:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35711.C'
    sources: {binary: pr35711.s, cflags: "-std=gnu++98 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("cast
          from type \''volatile int\\\\*\'' to type \''int\\\\*\'' casts away qualifiers")[^\n]*\n?)+'}
test_pr35711_2801:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35711.C'
    sources: {binary: pr35711.s, cflags: "-std=gnu++11 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("cast
          from type \''volatile int\\\\*\'' to type \''int\\\\*\'' casts away qualifiers")[^\n]*\n?)+'}
test_pr35711_2802:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr35711.C'
    sources: {binary: pr35711.s, cflags: "-std=gnu++14 -Wcast-qual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("cast
          from type \''volatile int\\\\*\'' to type \''int\\\\*\'' casts away qualifiers")[^\n]*\n?)+'}
test_pr36069_1334:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36069.C'
    sources: {binary: pr36069.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
test_pr36069_1335:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36069.C'
    sources: {binary: pr36069.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
test_pr36069_1336:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36069.C'
    sources: {binary: pr36069.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
test_pr36069_2803:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36069.C'
    sources: {binary: pr36069.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
test_pr36069_2804:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36069.C'
    sources: {binary: pr36069.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
test_pr36069_2805:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36069.C'
    sources: {binary: pr36069.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
test_pr36921_1337:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36921.C'
    sources: {binary: pr36921.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
test_pr36921_1338:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36921.C'
    sources: {binary: pr36921.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
test_pr36921_1339:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36921.C'
    sources: {binary: pr36921.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
test_pr36921_2806:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36921.C'
    sources: {binary: pr36921.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
test_pr36921_2807:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36921.C'
    sources: {binary: pr36921.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
test_pr36921_2808:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36921.C'
    sources: {binary: pr36921.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("mathematical
          meaning")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("suggest
          parentheses")[^\n]*\n?)+'}
test_pr36954_1340:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36954.C'
    sources: {binary: pr36954.s, cflags: "-std=gnu++98 -Wlogical-op -Wextra -Wall\n
        -S"}
  group: GRPSERIAL
test_pr36954_1341:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36954.C'
    sources: {binary: pr36954.s, cflags: "-std=gnu++11 -Wlogical-op -Wextra -Wall\n
        -S"}
  group: GRPSERIAL
test_pr36954_1342:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36954.C'
    sources: {binary: pr36954.s, cflags: "-std=gnu++14 -Wlogical-op -Wextra -Wall\n
        -S"}
  group: GRPSERIAL
test_pr36954_2809:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36954.C'
    sources: {binary: pr36954.s, cflags: "-std=gnu++98 -Wlogical-op -Wextra -Wall\n
        -S"}
  group: GRPSERIAL
test_pr36954_2810:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36954.C'
    sources: {binary: pr36954.s, cflags: "-std=gnu++11 -Wlogical-op -Wextra -Wall\n
        -S"}
  group: GRPSERIAL
test_pr36954_2811:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36954.C'
    sources: {binary: pr36954.s, cflags: "-std=gnu++14 -Wlogical-op -Wextra -Wall\n
        -S"}
  group: GRPSERIAL
test_pr36999_1343:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36999.C'
    sources: {binary: pr36999.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr36999_1344:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36999.C'
    sources: {binary: pr36999.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr36999_1345:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36999.C'
    sources: {binary: pr36999.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr36999_2812:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36999.C'
    sources: {binary: pr36999.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr36999_2813:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36999.C'
    sources: {binary: pr36999.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr36999_2814:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr36999.C'
    sources: {binary: pr36999.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_pr5310_1346:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr5310.C'
    sources: {binary: pr5310.s, cflags: "-std=gnu++98 -pedantic -Wall -Wextra -Wpointer-arith
        -Wconversion\n -S"}
  group: GRPSERIAL
test_pr5310_1347:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr5310.C'
    sources: {binary: pr5310.s, cflags: "-std=gnu++11 -pedantic -Wall -Wextra -Wpointer-arith
        -Wconversion\n -S"}
  group: GRPSERIAL
test_pr5310_1348:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr5310.C'
    sources: {binary: pr5310.s, cflags: "-std=gnu++14 -pedantic -Wall -Wextra -Wpointer-arith
        -Wconversion\n -S"}
  group: GRPSERIAL
test_pr5310_2815:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr5310.C'
    sources: {binary: pr5310.s, cflags: "-std=gnu++98 -pedantic -Wall -Wextra -Wpointer-arith
        -Wconversion\n -S"}
  group: GRPSERIAL
test_pr5310_2816:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr5310.C'
    sources: {binary: pr5310.s, cflags: "-std=gnu++11 -pedantic -Wall -Wextra -Wpointer-arith
        -Wconversion\n -S"}
  group: GRPSERIAL
test_pr5310_2817:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr5310.C'
    sources: {binary: pr5310.s, cflags: "-std=gnu++14 -pedantic -Wall -Wextra -Wpointer-arith
        -Wconversion\n -S"}
  group: GRPSERIAL
test_pr5645_1349:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr5645.C'
    sources: {binary: pr5645.s, cflags: "-std=gnu++98 -Wall -Wextra\n -S"}
  group: GRPSERIAL
test_pr5645_1350:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr5645.C'
    sources: {binary: pr5645.s, cflags: "-std=gnu++11 -Wall -Wextra\n -S"}
  group: GRPSERIAL
test_pr5645_1351:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr5645.C'
    sources: {binary: pr5645.s, cflags: "-std=gnu++14 -Wall -Wextra\n -S"}
  group: GRPSERIAL
test_pr5645_2818:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr5645.C'
    sources: {binary: pr5645.s, cflags: "-std=gnu++98 -Wall -Wextra\n -S"}
  group: GRPSERIAL
test_pr5645_2819:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr5645.C'
    sources: {binary: pr5645.s, cflags: "-std=gnu++11 -Wall -Wextra\n -S"}
  group: GRPSERIAL
test_pr5645_2820:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr5645.C'
    sources: {binary: pr5645.s, cflags: "-std=gnu++14 -Wall -Wextra\n -S"}
  group: GRPSERIAL
test_pr61945_1352:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr61945.C'
    sources: {binary: pr61945.s, cflags: "-std=gnu++98 -Woverloaded-virtual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("by
          .B::foo\\\\(\\\\).")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("was
          hidden")[^\n]*\n?)+'}
test_pr61945_1353:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr61945.C'
    sources: {binary: pr61945.s, cflags: "-std=gnu++11 -Woverloaded-virtual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("by
          .B::foo\\\\(\\\\).")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("was
          hidden")[^\n]*\n?)+'}
test_pr61945_1354:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr61945.C'
    sources: {binary: pr61945.s, cflags: "-std=gnu++14 -Woverloaded-virtual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("by
          .B::foo\\\\(\\\\).")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("was
          hidden")[^\n]*\n?)+'}
test_pr61945_2821:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr61945.C'
    sources: {binary: pr61945.s, cflags: "-std=gnu++98 -Woverloaded-virtual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("by
          .B::foo\\\\(\\\\).")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("was
          hidden")[^\n]*\n?)+'}
test_pr61945_2822:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr61945.C'
    sources: {binary: pr61945.s, cflags: "-std=gnu++11 -Woverloaded-virtual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("by
          .B::foo\\\\(\\\\).")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("was
          hidden")[^\n]*\n?)+'}
test_pr61945_2823:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr61945.C'
    sources: {binary: pr61945.s, cflags: "-std=gnu++14 -Woverloaded-virtual\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("by
          .B::foo\\\\(\\\\).")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("was
          hidden")[^\n]*\n?)+'}
test_pr77496_1355:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr77496.C'
    sources: {binary: pr77496.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("omitted
          middle operand")[^\n]*\n?)+'}
test_pr77496_1356:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr77496.C'
    sources: {binary: pr77496.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("omitted
          middle operand")[^\n]*\n?)+'}
test_pr77496_1357:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr77496.C'
    sources: {binary: pr77496.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("omitted
          middle operand")[^\n]*\n?)+'}
test_pr77496_2824:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr77496.C'
    sources: {binary: pr77496.s, cflags: "-std=gnu++98 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("omitted
          middle operand")[^\n]*\n?)+'}
test_pr77496_2825:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr77496.C'
    sources: {binary: pr77496.s, cflags: "-std=gnu++11 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("omitted
          middle operand")[^\n]*\n?)+'}
test_pr77496_2826:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr77496.C'
    sources: {binary: pr77496.s, cflags: "-std=gnu++14 -Wparentheses\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("omitted
          middle operand")[^\n]*\n?)+'}
test_pr79290_1358:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr79290.C'
    sources: {binary: pr79290.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -Wall\n -S"}
  group: GRPSERIAL
test_pr79290_1359:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr79290.C'
    sources: {binary: pr79290.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -Wall\n -S"}
  group: GRPSERIAL
test_pr79290_1360:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr79290.C'
    sources: {binary: pr79290.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -Wall\n -S"}
  group: GRPSERIAL
test_pr79290_2827:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr79290.C'
    sources: {binary: pr79290.s, cflags: "-std=c++98 -pedantic-errors -Wno-long-long
        -Wall\n -S"}
  group: GRPSERIAL
test_pr79290_2828:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr79290.C'
    sources: {binary: pr79290.s, cflags: "-std=c++11 -pedantic-errors -Wno-long-long
        -Wall\n -S"}
  group: GRPSERIAL
test_pr79290_2829:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr79290.C'
    sources: {binary: pr79290.s, cflags: "-std=c++14 -pedantic-errors -Wno-long-long
        -Wall\n -S"}
  group: GRPSERIAL
test_pr81675_1361:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr81675.C'
    sources: {binary: pr81675.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_pr81675_1362:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr81675.C'
    sources: {binary: pr81675.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_pr81675_1363:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr81675.C'
    sources: {binary: pr81675.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_pr81675_2830:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr81675.C'
    sources: {binary: pr81675.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_pr81675_2831:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr81675.C'
    sources: {binary: pr81675.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_pr81675_2832:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr81675.C'
    sources: {binary: pr81675.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_pr8570_1364:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr8570.C'
    sources: {binary: pr8570.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared
          with 1 template parameter")[^\n]*\n?)+'}
test_pr8570_1365:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr8570.C'
    sources: {binary: pr8570.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared
          with 1 template parameter")[^\n]*\n?)+'}
test_pr8570_1366:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr8570.C'
    sources: {binary: pr8570.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared
          with 1 template parameter")[^\n]*\n?)+'}
test_pr8570_2833:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr8570.C'
    sources: {binary: pr8570.s, cflags: "-std=gnu++98 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared
          with 1 template parameter")[^\n]*\n?)+'}
test_pr8570_2834:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr8570.C'
    sources: {binary: pr8570.s, cflags: "-std=gnu++11 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared
          with 1 template parameter")[^\n]*\n?)+'}
test_pr8570_2835:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr8570.C'
    sources: {binary: pr8570.s, cflags: "-std=gnu++14 \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclared
          with 1 template parameter")[^\n]*\n?)+'}
test_pr8715_1367:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr8715.C'
    sources: {binary: pr8715.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("promoted
          ~unsigned is always non-zero")[^\n]*\n?)+'}
test_pr8715_1368:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr8715.C'
    sources: {binary: pr8715.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("promoted
          ~unsigned is always non-zero")[^\n]*\n?)+'}
test_pr8715_1369:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr8715.C'
    sources: {binary: pr8715.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("promoted
          ~unsigned is always non-zero")[^\n]*\n?)+'}
test_pr8715_2836:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr8715.C'
    sources: {binary: pr8715.s, cflags: "-std=gnu++98 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("promoted
          ~unsigned is always non-zero")[^\n]*\n?)+'}
test_pr8715_2837:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr8715.C'
    sources: {binary: pr8715.s, cflags: "-std=gnu++11 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("promoted
          ~unsigned is always non-zero")[^\n]*\n?)+'}
test_pr8715_2838:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pr8715.C'
    sources: {binary: pr8715.s, cflags: "-std=gnu++14 -Wsign-compare\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("promoted
          ~unsigned is always non-zero")[^\n]*\n?)+'}
test_pragma-system_header1_1370:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header1.C'
    sources: {binary: pragma-system_header1.s, cflags: "-std=gnu++98 -Wconversion\n
        -S"}
  group: GRPSERIAL
test_pragma-system_header1_1371:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header1.C'
    sources: {binary: pragma-system_header1.s, cflags: "-std=gnu++11 -Wconversion\n
        -S"}
  group: GRPSERIAL
test_pragma-system_header1_1372:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header1.C'
    sources: {binary: pragma-system_header1.s, cflags: "-std=gnu++14 -Wconversion\n
        -S"}
  group: GRPSERIAL
test_pragma-system_header1_2839:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header1.C'
    sources: {binary: pragma-system_header1.s, cflags: "-std=gnu++98 -Wconversion\n
        -S"}
  group: GRPSERIAL
test_pragma-system_header1_2840:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header1.C'
    sources: {binary: pragma-system_header1.s, cflags: "-std=gnu++11 -Wconversion\n
        -S"}
  group: GRPSERIAL
test_pragma-system_header1_2841:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header1.C'
    sources: {binary: pragma-system_header1.s, cflags: "-std=gnu++14 -Wconversion\n
        -S"}
  group: GRPSERIAL
test_pragma-system_header2_1373:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header2.C'
    sources: {binary: pragma-system_header2.s, cflags: "-std=gnu++98 -Wconversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_pragma-system_header2_1374:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header2.C'
    sources: {binary: pragma-system_header2.s, cflags: "-std=gnu++11 -Wconversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_pragma-system_header2_1375:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header2.C'
    sources: {binary: pragma-system_header2.s, cflags: "-std=gnu++14 -Wconversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_pragma-system_header2_2842:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header2.C'
    sources: {binary: pragma-system_header2.s, cflags: "-std=gnu++98 -Wconversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_pragma-system_header2_2843:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header2.C'
    sources: {binary: pragma-system_header2.s, cflags: "-std=gnu++11 -Wconversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_pragma-system_header2_2844:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header2.C'
    sources: {binary: pragma-system_header2.s, cflags: "-std=gnu++14 -Wconversion\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'}
test_pragma-system_header3_1376:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header3.C'
    sources: {binary: pragma-system_header3.s, cflags: "-std=gnu++98 -Wall -O\n -S"}
  group: GRPSERIAL
test_pragma-system_header3_1377:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header3.C'
    sources: {binary: pragma-system_header3.s, cflags: "-std=gnu++11 -Wall -O\n -S"}
  group: GRPSERIAL
test_pragma-system_header3_1378:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header3.C'
    sources: {binary: pragma-system_header3.s, cflags: "-std=gnu++14 -Wall -O\n -S"}
  group: GRPSERIAL
test_pragma-system_header3_2845:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header3.C'
    sources: {binary: pragma-system_header3.s, cflags: "-std=gnu++98 -Wall -O\n -S"}
  group: GRPSERIAL
test_pragma-system_header3_2846:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header3.C'
    sources: {binary: pragma-system_header3.s, cflags: "-std=gnu++11 -Wall -O\n -S"}
  group: GRPSERIAL
test_pragma-system_header3_2847:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header3.C'
    sources: {binary: pragma-system_header3.s, cflags: "-std=gnu++14 -Wall -O\n -S"}
  group: GRPSERIAL
test_pragma-system_header4_1379:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header4.C'
    sources: {binary: pragma-system_header4.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_pragma-system_header4_1380:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header4.C'
    sources: {binary: pragma-system_header4.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_pragma-system_header4_1381:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header4.C'
    sources: {binary: pragma-system_header4.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_pragma-system_header4_2848:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header4.C'
    sources: {binary: pragma-system_header4.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_pragma-system_header4_2849:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header4.C'
    sources: {binary: pragma-system_header4.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_pragma-system_header4_2850:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header4.C'
    sources: {binary: pragma-system_header4.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_pragma-system_header5_1382:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header5.C'
    sources: {binary: pragma-system_header5.s, cflags: "-std=gnu++98 -Wextra\n -S"}
  group: GRPSERIAL
test_pragma-system_header5_1383:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header5.C'
    sources: {binary: pragma-system_header5.s, cflags: "-std=gnu++11 -Wextra\n -S"}
  group: GRPSERIAL
test_pragma-system_header5_1384:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header5.C'
    sources: {binary: pragma-system_header5.s, cflags: "-std=gnu++14 -Wextra\n -S"}
  group: GRPSERIAL
test_pragma-system_header5_2851:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header5.C'
    sources: {binary: pragma-system_header5.s, cflags: "-std=gnu++98 -Wextra\n -S"}
  group: GRPSERIAL
test_pragma-system_header5_2852:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header5.C'
    sources: {binary: pragma-system_header5.s, cflags: "-std=gnu++11 -Wextra\n -S"}
  group: GRPSERIAL
test_pragma-system_header5_2853:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/pragma-system_header5.C'
    sources: {binary: pragma-system_header5.s, cflags: "-std=gnu++14 -Wextra\n -S"}
  group: GRPSERIAL
test_private1_1385:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/private1.C'
    sources: {binary: private1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_private1_1386:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/private1.C'
    sources: {binary: private1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_private1_1387:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/private1.C'
    sources: {binary: private1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_private1_2854:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/private1.C'
    sources: {binary: private1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_private1_2855:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/private1.C'
    sources: {binary: private1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_private1_2856:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/private1.C'
    sources: {binary: private1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_ref-temp1_1388:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ref-temp1.C'
    sources: {binary: ref-temp1.s, cflags: "-std=gnu++98 -Wall -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("temporary")[^\n]*\n?)+'}
test_ref-temp1_1389:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ref-temp1.C'
    sources: {binary: ref-temp1.s, cflags: "-std=gnu++11 -Wall -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("temporary")[^\n]*\n?)+'}
test_ref-temp1_1390:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ref-temp1.C'
    sources: {binary: ref-temp1.s, cflags: "-std=gnu++14 -Wall -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("temporary")[^\n]*\n?)+'}
test_ref-temp1_2857:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ref-temp1.C'
    sources: {binary: ref-temp1.s, cflags: "-std=gnu++98 -Wall -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("temporary")[^\n]*\n?)+'}
test_ref-temp1_2858:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ref-temp1.C'
    sources: {binary: ref-temp1.s, cflags: "-std=gnu++11 -Wall -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("temporary")[^\n]*\n?)+'}
test_ref-temp1_2859:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/ref-temp1.C'
    sources: {binary: ref-temp1.s, cflags: "-std=gnu++14 -Wall -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("temporary")[^\n]*\n?)+'}
test_register-parm-1_1391:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-parm-1.C'
    sources: {binary: register-parm-1.s, cflags: "-std=gnu++98 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
test_register-parm-1_1392:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-parm-1.C'
    sources: {binary: register-parm-1.s, cflags: "-std=gnu++11 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
test_register-parm-1_1393:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-parm-1.C'
    sources: {binary: register-parm-1.s, cflags: "-std=gnu++14 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
test_register-parm-1_2860:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-parm-1.C'
    sources: {binary: register-parm-1.s, cflags: "-std=gnu++98 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
test_register-parm-1_2861:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-parm-1.C'
    sources: {binary: register-parm-1.s, cflags: "-std=gnu++11 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
test_register-parm-1_2862:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-parm-1.C'
    sources: {binary: register-parm-1.s, cflags: "-std=gnu++14 -Wextra\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
test_register-var-1_1394:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-var-1.C'
    sources: {binary: register-var-1.s, cflags: "-std=gnu++98 -ansi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("address
          of explicit register variable")[^\n]*\n?)+'}
test_register-var-1_1395:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-var-1.C'
    sources: {binary: register-var-1.s, cflags: "-std=gnu++11 -ansi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("address
          of explicit register variable")[^\n]*\n?)+'}
test_register-var-1_1396:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-var-1.C'
    sources: {binary: register-var-1.s, cflags: "-std=gnu++14 -ansi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("address
          of explicit register variable")[^\n]*\n?)+'}
test_register-var-1_2863:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-var-1.C'
    sources: {binary: register-var-1.s, cflags: "-std=gnu++98 -ansi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("address
          of explicit register variable")[^\n]*\n?)+'}
test_register-var-1_2864:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-var-1.C'
    sources: {binary: register-var-1.s, cflags: "-std=gnu++11 -ansi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("address
          of explicit register variable")[^\n]*\n?)+'}
test_register-var-1_2865:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-var-1.C'
    sources: {binary: register-var-1.s, cflags: "-std=gnu++14 -ansi\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("address
          of explicit register variable")[^\n]*\n?)+'}
test_register-var-2_1397:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-var-2.C'
    sources: {binary: register-var-2.s, cflags: "-std=gnu++98 -Wall -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("address
          requested for \''x\'', which is declared \''register\''")[^\n]*\n?)+'}
test_register-var-2_1398:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-var-2.C'
    sources: {binary: register-var-2.s, cflags: "-std=gnu++11 -Wall -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("address
          requested for \''x\'', which is declared \''register\''")[^\n]*\n?)+'}
test_register-var-2_1399:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-var-2.C'
    sources: {binary: register-var-2.s, cflags: "-std=gnu++14 -Wall -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("address
          requested for \''x\'', which is declared \''register\''")[^\n]*\n?)+'}
test_register-var-2_2866:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-var-2.C'
    sources: {binary: register-var-2.s, cflags: "-std=gnu++98 -Wall -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("address
          requested for \''x\'', which is declared \''register\''")[^\n]*\n?)+'}
test_register-var-2_2867:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-var-2.C'
    sources: {binary: register-var-2.s, cflags: "-std=gnu++11 -Wall -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("address
          requested for \''x\'', which is declared \''register\''")[^\n]*\n?)+'}
test_register-var-2_2868:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/register-var-2.C'
    sources: {binary: register-var-2.s, cflags: "-std=gnu++14 -Wall -W\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("ISO
          C\\\\+\\\\+1z does not allow \''register\'' storage class specifier")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("address
          requested for \''x\'', which is declared \''register\''")[^\n]*\n?)+'}
test_return-reference2_1403:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/return-reference2.C'
    sources: {binary: return-reference2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("local")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("local")[^\n]*\n?)+'}
test_return-reference2_1404:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/return-reference2.C'
    sources: {binary: return-reference2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("local")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("local")[^\n]*\n?)+'}
test_return-reference2_1405:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/return-reference2.C'
    sources: {binary: return-reference2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("local")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("local")[^\n]*\n?)+'}
test_return-reference2_2872:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/return-reference2.C'
    sources: {binary: return-reference2.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("local")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("local")[^\n]*\n?)+'}
test_return-reference2_2873:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/return-reference2.C'
    sources: {binary: return-reference2.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("local")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("local")[^\n]*\n?)+'}
test_return-reference2_2874:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/return-reference2.C'
    sources: {binary: return-reference2.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("local")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("local")[^\n]*\n?)+'}
test_return-reference_1400:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/return-reference.C'
    sources: {binary: return-reference.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_return-reference_1401:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/return-reference.C'
    sources: {binary: return-reference.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_return-reference_1402:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/return-reference.C'
    sources: {binary: return-reference.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_return-reference_2869:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/return-reference.C'
    sources: {binary: return-reference.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_return-reference_2870:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/return-reference.C'
    sources: {binary: return-reference.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_return-reference_2871:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/return-reference.C'
    sources: {binary: return-reference.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
test_sentinel_1406:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sentinel.C'
    sources: {binary: sentinel.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("missing
          sentinel in function call")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("missing
          sentinel in function call")[^\n]*\n?)+'}
test_sentinel_1407:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sentinel.C'
    sources: {binary: sentinel.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("missing
          sentinel in function call")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("missing
          sentinel in function call")[^\n]*\n?)+'}
test_sentinel_1408:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sentinel.C'
    sources: {binary: sentinel.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("missing
          sentinel in function call")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("missing
          sentinel in function call")[^\n]*\n?)+'}
test_sentinel_2875:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sentinel.C'
    sources: {binary: sentinel.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("missing
          sentinel in function call")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("missing
          sentinel in function call")[^\n]*\n?)+'}
test_sentinel_2876:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sentinel.C'
    sources: {binary: sentinel.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("missing
          sentinel in function call")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("missing
          sentinel in function call")[^\n]*\n?)+'}
test_sentinel_2877:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sentinel.C'
    sources: {binary: sentinel.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("missing
          sentinel in function call")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("missing
          sentinel in function call")[^\n]*\n?)+'}
test_sequence-pt-1_1409:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-1.C'
    sources: {binary: sequence-pt-1.s, cflags: "-std=gnu++98 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-1_1410:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-1.C'
    sources: {binary: sequence-pt-1.s, cflags: "-std=gnu++11 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-1_1411:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-1.C'
    sources: {binary: sequence-pt-1.s, cflags: "-std=gnu++14 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-1_2878:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-1.C'
    sources: {binary: sequence-pt-1.s, cflags: "-std=gnu++98 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-1_2879:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-1.C'
    sources: {binary: sequence-pt-1.s, cflags: "-std=gnu++11 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-1_2880:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-1.C'
    sources: {binary: sequence-pt-1.s, cflags: "-std=gnu++14 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L43: {expect: true, expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L45: {expect: true, expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L46: {expect: true, expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L49: {expect: true, expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L51: {expect: true, expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L53: {expect: true, expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L55: {expect: true, expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L56: {expect: true, expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L57: {expect: true, expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L58: {expect: true, expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L59: {expect: true, expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L60: {expect: true, expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L61: {expect: true, expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L63: {expect: true, expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L64: {expect: true, expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-2_1412:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-2.C'
    sources: {binary: sequence-pt-2.s, cflags: "-std=gnu++98 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-2_1413:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-2.C'
    sources: {binary: sequence-pt-2.s, cflags: "-std=gnu++11 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-2_1414:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-2.C'
    sources: {binary: sequence-pt-2.s, cflags: "-std=gnu++14 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-2_2881:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-2.C'
    sources: {binary: sequence-pt-2.s, cflags: "-std=gnu++98 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-2_2882:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-2.C'
    sources: {binary: sequence-pt-2.s, cflags: "-std=gnu++11 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-2_2883:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-2.C'
    sources: {binary: sequence-pt-2.s, cflags: "-std=gnu++14 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L39: {expect: true, expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-3_1415:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-3.C'
    sources: {binary: sequence-pt-3.s, cflags: "-std=gnu++98 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-3_1416:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-3.C'
    sources: {binary: sequence-pt-3.s, cflags: "-std=gnu++11 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-3_1417:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-3.C'
    sources: {binary: sequence-pt-3.s, cflags: "-std=gnu++14 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-3_2884:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-3.C'
    sources: {binary: sequence-pt-3.s, cflags: "-std=gnu++98 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-3_2885:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-3.C'
    sources: {binary: sequence-pt-3.s, cflags: "-std=gnu++11 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-3_2886:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-3.C'
    sources: {binary: sequence-pt-3.s, cflags: "-std=gnu++14 -Wsequence-point\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-pr17880_1418:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-pr17880.C'
    sources: {binary: sequence-pt-pr17880.s, cflags: "-std=gnu++98 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-pr17880_1419:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-pr17880.C'
    sources: {binary: sequence-pt-pr17880.s, cflags: "-std=gnu++11 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-pr17880_1420:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-pr17880.C'
    sources: {binary: sequence-pt-pr17880.s, cflags: "-std=gnu++14 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-pr17880_2887:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-pr17880.C'
    sources: {binary: sequence-pt-pr17880.s, cflags: "-std=gnu++98 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-pr17880_2888:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-pr17880.C'
    sources: {binary: sequence-pt-pr17880.s, cflags: "-std=gnu++11 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_sequence-pt-pr17880_2889:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/sequence-pt-pr17880.C'
    sources: {binary: sequence-pt-pr17880.s, cflags: "-std=gnu++14 -Wsequence-point\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L25: {expect: true, expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L42: {expect: true, expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L47: {expect: true, expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("undefined")[^\n]*\n?)+'}
test_skip-1_1421:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/skip-1.C'
    sources: {binary: skip-1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_skip-1_1422:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/skip-1.C'
    sources: {binary: skip-1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_skip-1_1423:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/skip-1.C'
    sources: {binary: skip-1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_skip-1_2890:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/skip-1.C'
    sources: {binary: skip-1.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
test_skip-1_2891:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/skip-1.C'
    sources: {binary: skip-1.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
test_skip-1_2892:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/skip-1.C'
    sources: {binary: skip-1.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
test_skip-2_1424:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/skip-2.C'
    sources: {binary: skip-2.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shift
          count is negative")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shift
          count is negative")[^\n]*\n?)+'}
test_skip-2_1425:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/skip-2.C'
    sources: {binary: skip-2.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shift
          count is negative")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shift
          count is negative")[^\n]*\n?)+'}
test_skip-2_1426:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/skip-2.C'
    sources: {binary: skip-2.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shift
          count is negative")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shift
          count is negative")[^\n]*\n?)+'}
test_skip-2_2893:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/skip-2.C'
    sources: {binary: skip-2.s, cflags: "-std=gnu++98 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shift
          count is negative")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shift
          count is negative")[^\n]*\n?)+'}
test_skip-2_2894:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/skip-2.C'
    sources: {binary: skip-2.s, cflags: "-std=gnu++11 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shift
          count is negative")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shift
          count is negative")[^\n]*\n?)+'}
test_skip-2_2895:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/skip-2.C'
    sources: {binary: skip-2.s, cflags: "-std=gnu++14 -Wall\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("shift
          count is negative")[^\n]*\n?)+'}
      L35: {expect: true, expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("shift
          count is negative")[^\n]*\n?)+'}
test_string1_1427:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/string1.C'
    sources: {binary: string1.s, cflags: "-std=gnu++98 -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("bounds
          of constant string")[^\n]*\n?)+'}
test_string1_1428:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/string1.C'
    sources: {binary: string1.s, cflags: "-std=gnu++11 -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("bounds
          of constant string")[^\n]*\n?)+'}
test_string1_1429:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/string1.C'
    sources: {binary: string1.s, cflags: "-std=gnu++14 -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("bounds
          of constant string")[^\n]*\n?)+'}
test_string1_2896:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/string1.C'
    sources: {binary: string1.s, cflags: "-std=gnu++98 -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("bounds
          of constant string")[^\n]*\n?)+'}
test_string1_2897:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/string1.C'
    sources: {binary: string1.s, cflags: "-std=gnu++11 -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("bounds
          of constant string")[^\n]*\n?)+'}
test_string1_2898:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/string1.C'
    sources: {binary: string1.s, cflags: "-std=gnu++14 -O\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("bounds
          of constant string")[^\n]*\n?)+'}
test_switch1_1430:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/switch1.C'
    sources: {binary: switch1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("case
          label value exceeds maximum")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("case
          label value is less than minimum")[^\n]*\n?)+'}
test_switch1_1431:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/switch1.C'
    sources: {binary: switch1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("case
          label value exceeds maximum")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("case
          label value is less than minimum")[^\n]*\n?)+'}
test_switch1_1432:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/switch1.C'
    sources: {binary: switch1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("case
          label value exceeds maximum")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("case
          label value is less than minimum")[^\n]*\n?)+'}
test_switch1_2899:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/switch1.C'
    sources: {binary: switch1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("case
          label value exceeds maximum")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("case
          label value is less than minimum")[^\n]*\n?)+'}
test_switch1_2900:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/switch1.C'
    sources: {binary: switch1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("case
          label value exceeds maximum")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("case
          label value is less than minimum")[^\n]*\n?)+'}
test_switch1_2901:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/switch1.C'
    sources: {binary: switch1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("case
          label value exceeds maximum")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("case
          label value is less than minimum")[^\n]*\n?)+'}
test_template-1_1433:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/template-1.C'
    sources: {binary: template-1.s, cflags: "-std=gnu++98 -W\n -S"}
  group: GRPSERIAL
test_template-1_1434:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/template-1.C'
    sources: {binary: template-1.s, cflags: "-std=gnu++11 -W\n -S"}
  group: GRPSERIAL
test_template-1_1435:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/template-1.C'
    sources: {binary: template-1.s, cflags: "-std=gnu++14 -W\n -S"}
  group: GRPSERIAL
test_template-1_2902:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/template-1.C'
    sources: {binary: template-1.s, cflags: "-std=gnu++98 -W\n -S"}
  group: GRPSERIAL
test_template-1_2903:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/template-1.C'
    sources: {binary: template-1.s, cflags: "-std=gnu++11 -W\n -S"}
  group: GRPSERIAL
test_template-1_2904:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/template-1.C'
    sources: {binary: template-1.s, cflags: "-std=gnu++14 -W\n -S"}
  group: GRPSERIAL
test_translate-ice-1_1436:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/translate-ice-1.C'
    sources: {binary: translate-ice-1.s, cflags: "-std=c++98 -pedantic -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("long
          long")[^\n]*\n?)+'}
test_translate-ice-1_2905:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/translate-ice-1.C'
    sources: {binary: translate-ice-1.s, cflags: "-std=c++98 -pedantic -O2\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("attribute")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("long
          long")[^\n]*\n?)+'}
test_undefined1_1437:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/undefined1.C'
    sources: {binary: undefined1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("used
          but never")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("used
          but never")[^\n]*\n?)+'}
test_undefined1_1438:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/undefined1.C'
    sources: {binary: undefined1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("used
          but never")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("used
          but never")[^\n]*\n?)+'}
test_undefined1_1439:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/undefined1.C'
    sources: {binary: undefined1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("used
          but never")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("used
          but never")[^\n]*\n?)+'}
test_undefined1_2906:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/undefined1.C'
    sources: {binary: undefined1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("used
          but never")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("used
          but never")[^\n]*\n?)+'}
test_undefined1_2907:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/undefined1.C'
    sources: {binary: undefined1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("used
          but never")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("used
          but never")[^\n]*\n?)+'}
test_undefined1_2908:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/undefined1.C'
    sources: {binary: undefined1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+(:3:)[^\n]*[0-9]+: warning:[^\n]*("used
          but never")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("used
          but never")[^\n]*\n?)+'}
test_unit-1_1440:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unit-1.C'
    sources: {binary: unit-1.s, cflags: "-std=gnu++98 -O2 -Wuninitialized\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''setbuf.a::mode\''
          is used")[^\n]*\n?)+'}
test_unit-1_1441:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unit-1.C'
    sources: {binary: unit-1.s, cflags: "-std=gnu++11 -O2 -Wuninitialized\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''setbuf.a::mode\''
          is used")[^\n]*\n?)+'}
test_unit-1_1442:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unit-1.C'
    sources: {binary: unit-1.s, cflags: "-std=gnu++14 -O2 -Wuninitialized\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''setbuf.a::mode\''
          is used")[^\n]*\n?)+'}
test_unit-1_2909:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unit-1.C'
    sources: {binary: unit-1.s, cflags: "-std=gnu++98 -O2 -Wuninitialized\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''setbuf.a::mode\''
          is used")[^\n]*\n?)+'}
test_unit-1_2910:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unit-1.C'
    sources: {binary: unit-1.s, cflags: "-std=gnu++11 -O2 -Wuninitialized\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''setbuf.a::mode\''
          is used")[^\n]*\n?)+'}
test_unit-1_2911:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unit-1.C'
    sources: {binary: unit-1.s, cflags: "-std=gnu++14 -O2 -Wuninitialized\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("\''setbuf.a::mode\''
          is used")[^\n]*\n?)+'}
test_unused-result1_1443:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-result1.C'
    sources: {binary: unused-result1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("ignoring")[^\n]*\n?)+'}
test_unused-result1_1444:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-result1.C'
    sources: {binary: unused-result1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("ignoring")[^\n]*\n?)+'}
test_unused-result1_1445:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-result1.C'
    sources: {binary: unused-result1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("ignoring")[^\n]*\n?)+'}
test_unused-result1_2912:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-result1.C'
    sources: {binary: unused-result1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("ignoring")[^\n]*\n?)+'}
test_unused-result1_2913:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-result1.C'
    sources: {binary: unused-result1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("ignoring")[^\n]*\n?)+'}
test_unused-result1_2914:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-result1.C'
    sources: {binary: unused-result1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("ignoring")[^\n]*\n?)+'}
test_unused-variable-1_1446:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-variable-1.C'
    sources: {binary: unused-variable-1.s, cflags: "-std=gnu++98 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_unused-variable-1_1447:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-variable-1.C'
    sources: {binary: unused-variable-1.s, cflags: "-std=gnu++11 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_unused-variable-1_1448:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-variable-1.C'
    sources: {binary: unused-variable-1.s, cflags: "-std=gnu++14 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_unused-variable-1_2915:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-variable-1.C'
    sources: {binary: unused-variable-1.s, cflags: "-std=gnu++98 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_unused-variable-1_2916:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-variable-1.C'
    sources: {binary: unused-variable-1.s, cflags: "-std=gnu++11 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_unused-variable-1_2917:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-variable-1.C'
    sources: {binary: unused-variable-1.s, cflags: "-std=gnu++14 -Wunused-variable\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_unused-variable-2_1449:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-variable-2.C'
    sources: {binary: unused-variable-2.s, cflags: "-std=gnu++98 -Wunused-variable
        -Wunused-const-variable\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_unused-variable-2_1450:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-variable-2.C'
    sources: {binary: unused-variable-2.s, cflags: "-std=gnu++11 -Wunused-variable
        -Wunused-const-variable\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_unused-variable-2_1451:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-variable-2.C'
    sources: {binary: unused-variable-2.s, cflags: "-std=gnu++14 -Wunused-variable
        -Wunused-const-variable\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_unused-variable-2_2918:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-variable-2.C'
    sources: {binary: unused-variable-2.s, cflags: "-std=gnu++98 -Wunused-variable
        -Wunused-const-variable\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_unused-variable-2_2919:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-variable-2.C'
    sources: {binary: unused-variable-2.s, cflags: "-std=gnu++11 -Wunused-variable
        -Wunused-const-variable\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_unused-variable-2_2920:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/unused-variable-2.C'
    sources: {binary: unused-variable-2.s, cflags: "-std=gnu++14 -Wunused-variable
        -Wunused-const-variable\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+(:4:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
test_var-args1_1452:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/var-args1.C'
    sources: {binary: var-args1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          receive")[^\n]*\n?)+'}
test_var-args1_1453:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/var-args1.C'
    sources: {binary: var-args1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          receive")[^\n]*\n?)+'}
test_var-args1_1454:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/var-args1.C'
    sources: {binary: var-args1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          receive")[^\n]*\n?)+'}
test_var-args1_2921:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/var-args1.C'
    sources: {binary: var-args1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          receive")[^\n]*\n?)+'}
test_var-args1_2922:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/var-args1.C'
    sources: {binary: var-args1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          receive")[^\n]*\n?)+'}
test_var-args1_2923:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/var-args1.C'
    sources: {binary: var-args1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot
          receive")[^\n]*\n?)+'}
test_volatile1_1455:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/volatile1.C'
    sources: {binary: volatile1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("indirection
          will not access")[^\n]*\n?)+'}
test_volatile1_1456:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/volatile1.C'
    sources: {binary: volatile1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("indirection
          will not access")[^\n]*\n?)+'}
test_volatile1_1457:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/volatile1.C'
    sources: {binary: volatile1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("indirection
          will not access")[^\n]*\n?)+'}
test_volatile1_2924:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/volatile1.C'
    sources: {binary: volatile1.s, cflags: "-std=c++98  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("indirection
          will not access")[^\n]*\n?)+'}
test_volatile1_2925:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/volatile1.C'
    sources: {binary: volatile1.s, cflags: "-std=c++11  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("indirection
          will not access")[^\n]*\n?)+'}
test_volatile1_2926:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/volatile1.C'
    sources: {binary: volatile1.s, cflags: "-std=c++14  -pedantic-errors -Wno-long-long\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("indirection
          will not access")[^\n]*\n?)+'}
test_warn_format_signedness_1458:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/warn_format_signedness.C'
    sources: {binary: warn_format_signedness.s, cflags: "-std=gnu++98 -Wformat -Wformat-signedness\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument of type \''int\'', but argument 2 has type \''unsigned int\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument of type \''unsigned int\'', but argument 2 has type \''int\''")[^\n]*\n?)+'}
test_warn_format_signedness_1459:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/warn_format_signedness.C'
    sources: {binary: warn_format_signedness.s, cflags: "-std=gnu++11 -Wformat -Wformat-signedness\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument of type \''int\'', but argument 2 has type \''unsigned int\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument of type \''unsigned int\'', but argument 2 has type \''int\''")[^\n]*\n?)+'}
test_warn_format_signedness_1460:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/warn_format_signedness.C'
    sources: {binary: warn_format_signedness.s, cflags: "-std=gnu++14 -Wformat -Wformat-signedness\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument of type \''int\'', but argument 2 has type \''unsigned int\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument of type \''unsigned int\'', but argument 2 has type \''int\''")[^\n]*\n?)+'}
test_warn_format_signedness_2927:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/warn_format_signedness.C'
    sources: {binary: warn_format_signedness.s, cflags: "-std=gnu++98 -Wformat -Wformat-signedness\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument of type \''int\'', but argument 2 has type \''unsigned int\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument of type \''unsigned int\'', but argument 2 has type \''int\''")[^\n]*\n?)+'}
test_warn_format_signedness_2928:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/warn_format_signedness.C'
    sources: {binary: warn_format_signedness.s, cflags: "-std=gnu++11 -Wformat -Wformat-signedness\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument of type \''int\'', but argument 2 has type \''unsigned int\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument of type \''unsigned int\'', but argument 2 has type \''int\''")[^\n]*\n?)+'}
test_warn_format_signedness_2929:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/warn_format_signedness.C'
    sources: {binary: warn_format_signedness.s, cflags: "-std=gnu++14 -Wformat -Wformat-signedness\n
        -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument of type \''int\'', but argument 2 has type \''unsigned int\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects
          argument of type \''unsigned int\'', but argument 2 has type \''int\''")[^\n]*\n?)+'}
test_warn_unused_1461:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/warn_unused.C'
    sources: {binary: warn_unused.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_warn_unused_1462:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/warn_unused.C'
    sources: {binary: warn_unused.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_warn_unused_1463:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/warn_unused.C'
    sources: {binary: warn_unused.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_warn_unused_2930:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/warn_unused.C'
    sources: {binary: warn_unused.s, cflags: "-std=gnu++98 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_warn_unused_2931:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/warn_unused.C'
    sources: {binary: warn_unused.s, cflags: "-std=gnu++11 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_warn_unused_2932:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/warn_unused.C'
    sources: {binary: warn_unused.s, cflags: "-std=gnu++14 -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("unused
          variable")[^\n]*\n?)+'}
test_write-strings-default_1464:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/write-strings-default.C'
    sources: {binary: write-strings-default.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("deprecated|forbids
          converting a string constant")[^\n]*\n?)+'}
test_write-strings-default_1465:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/write-strings-default.C'
    sources: {binary: write-strings-default.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("deprecated|forbids
          converting a string constant")[^\n]*\n?)+'}
test_write-strings-default_1466:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/write-strings-default.C'
    sources: {binary: write-strings-default.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("deprecated|forbids
          converting a string constant")[^\n]*\n?)+'}
test_write-strings-default_2933:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/write-strings-default.C'
    sources: {binary: write-strings-default.s, cflags: "-std=c++98  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("deprecated|forbids
          converting a string constant")[^\n]*\n?)+'}
test_write-strings-default_2934:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/write-strings-default.C'
    sources: {binary: write-strings-default.s, cflags: "-std=c++11  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("deprecated|forbids
          converting a string constant")[^\n]*\n?)+'}
test_write-strings-default_2935:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/write-strings-default.C'
    sources: {binary: write-strings-default.s, cflags: "-std=c++14  -pedantic-errors
        -Wno-long-long\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("deprecated|forbids
          converting a string constant")[^\n]*\n?)+'}
test_write-strings_1467:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/write-strings.C'
    sources: {binary: write-strings.s, cflags: "-std=gnu++98 -Wwrite-strings\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("deprecated|forbids
          converting a string constant")[^\n]*\n?)+'}
test_write-strings_1468:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/write-strings.C'
    sources: {binary: write-strings.s, cflags: "-std=gnu++11 -Wwrite-strings\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("deprecated|forbids
          converting a string constant")[^\n]*\n?)+'}
test_write-strings_1469:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/write-strings.C'
    sources: {binary: write-strings.s, cflags: "-std=gnu++14 -Wwrite-strings\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("deprecated|forbids
          converting a string constant")[^\n]*\n?)+'}
test_write-strings_2936:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/write-strings.C'
    sources: {binary: write-strings.s, cflags: "-std=gnu++98 -Wwrite-strings\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("deprecated|forbids
          converting a string constant")[^\n]*\n?)+'}
test_write-strings_2937:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/write-strings.C'
    sources: {binary: write-strings.s, cflags: "-std=gnu++11 -Wwrite-strings\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("deprecated|forbids
          converting a string constant")[^\n]*\n?)+'}
test_write-strings_2938:
  build:
    files: '@ROOTPATH@/compilers/gcc/./g++.dg/warn/write-strings.C'
    sources: {binary: write-strings.s, cflags: "-std=gnu++14 -Wwrite-strings\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("deprecated|forbids
          converting a string constant")[^\n]*\n?)+'}
