test_Wunused_1:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/Wunused.c
    sources: {binary: Wunused.i, cflags: -Wunused-macros -traditional-cpp -E}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("used")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("used")[^\n]*\n?)+'}
test_Wunused_58:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/Wunused.c
    sources: {binary: Wunused.i, cflags: -Wunused-macros -traditional-cpp -E}
  group: GRPSERIAL
  validate:
    match:
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("used")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("used")[^\n]*\n?)+'}
test___STDC___2:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/__STDC__.c
    sources: {binary: __STDC__.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test___STDC___59:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/__STDC__.c
    sources: {binary: __STDC__.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_argcount_3:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/argcount.c
    sources: {binary: argcount.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("passed
          2")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("passed
          2")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("passed
          1")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("passed
          2")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("requires
          2")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("requires
          2")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("passed
          3")[^\n]*\n?)+'}
test_argcount_60:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/argcount.c
    sources: {binary: argcount.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("passed
          2")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("passed
          2")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("passed
          1")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("passed
          2")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("requires
          2")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("requires
          2")[^\n]*\n?)+'}
      L21: {expect: true, expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("passed
          3")[^\n]*\n?)+'}
test_assembler_4:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/assembler.S
    sources: {binary: assembler.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("diagnostic")[^\n]*\n?)+'}
test_assembler_61:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/assembler.S
    sources: {binary: assembler.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("diagnostic")[^\n]*\n?)+'}
test_assert1_5:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/assert1.c
    sources: {binary: assert1.s, cflags: -Wno-deprecated -S}
  group: GRPSERIAL
test_assert1_62:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/assert1.c
    sources: {binary: assert1.s, cflags: -Wno-deprecated -S}
  group: GRPSERIAL
test_assert2_6:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/assert2.c
    sources: {binary: assert2.i, cflags: -Wno-deprecated -E}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without
          predicate")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("an
          identifier")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("an
          identifier")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          valid in")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without
          predicate")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("an
          identifier")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("an
          identifier")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("missing")[^\n]*\n?)+'}
test_assert2_63:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/assert2.c
    sources: {binary: assert2.i, cflags: -Wno-deprecated -E}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without
          predicate")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("an
          identifier")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("an
          identifier")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          valid in")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("without
          predicate")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("an
          identifier")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("an
          identifier")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("missing")[^\n]*\n?)+'}
test_assert3_64:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/assert3.c
    sources: {binary: assert3.i, cflags: -A abc=def -A abc(ghi) "-Aabc = jkl" -A abc=mno
        -A -abc=mno -Wno-deprecated -E}
  group: GRPSERIAL
test_assert3_7:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/assert3.c
    sources: {binary: assert3.i, cflags: -A abc=def -A abc(ghi) "-Aabc = jkl" -A abc=mno
        -A -abc=mno -Wno-deprecated -E}
  group: GRPSERIAL
test_builtins_65:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/builtins.c
    sources: {binary: ./builtins.exe, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/}
  group: GRPSERIAL
  run: {cwd: .}
test_builtins_8:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/builtins.c
    sources: {binary: ./builtins.exe, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/}
  group: GRPSERIAL
  run: {cwd: .}
test_cmdlne-C2_10:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/cmdlne-C2.c
    sources: {binary: cmdlne-C2.i, cflags: -C -traditional-cpp -E}
  group: GRPSERIAL
test_cmdlne-C2_67:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/cmdlne-C2.c
    sources: {binary: cmdlne-C2.i, cflags: -C -traditional-cpp -E}
  group: GRPSERIAL
test_cmdlne-C_66:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/cmdlne-C.c
    sources: {binary: cmdlne-C.i, cflags: -C -traditional-cpp -E}
  group: GRPSERIAL
test_cmdlne-C_9:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/cmdlne-C.c
    sources: {binary: cmdlne-C.i, cflags: -C -traditional-cpp -E}
  group: GRPSERIAL
test_cmdlne-dD_11:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/cmdlne-dD.c
    sources: {binary: cmdlne-dD.i, cflags: -dD -traditional-cpp -E}
  group: GRPSERIAL
test_cmdlne-dD_68:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/cmdlne-dD.c
    sources: {binary: cmdlne-dD.i, cflags: -dD -traditional-cpp -E}
  group: GRPSERIAL
test_cmdlne-dM_12:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/cmdlne-dM.c
    sources: {binary: cmdlne-dM.i, cflags: -dM -traditional-cpp -E}
  group: GRPSERIAL
test_cmdlne-dM_69:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/cmdlne-dM.c
    sources: {binary: cmdlne-dM.i, cflags: -dM -traditional-cpp -E}
  group: GRPSERIAL
test_comment-2_13:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/comment-2.c
    sources: {binary: comment-2.i, cflags: -traditional-cpp -Wcomments -E}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("2:
          within comment")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("within
          comment")[^\n]*\n?)+'}
test_comment-2_70:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/comment-2.c
    sources: {binary: comment-2.i, cflags: -traditional-cpp -Wcomments -E}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("2:
          within comment")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("within
          comment")[^\n]*\n?)+'}
test_comment-3_14:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/comment-3.c
    sources: {binary: comment-3.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("extra
          tokens")[^\n]*\n?)+'}
test_comment-3_71:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/comment-3.c
    sources: {binary: comment-3.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("extra
          tokens")[^\n]*\n?)+'}
test_comment_15:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/comment.c
    sources: {binary: comment.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unterminated
          comment")[^\n]*\n?)+'}
test_comment_72:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/comment.c
    sources: {binary: comment.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unterminated
          comment")[^\n]*\n?)+'}
test_define_16:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/define.c
    sources: {binary: define.i, cflags: -traditional-cpp -DDEFINE1DEFINE -DDEFINE2DEFIN=
        -E}
  group: GRPSERIAL
test_define_73:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/define.c
    sources: {binary: define.i, cflags: -traditional-cpp -DDEFINE1DEFINE -DDEFINE2DEFIN=
        -E}
  group: GRPSERIAL
test_defined_17:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/defined.c
    sources: {binary: defined.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defined")[^\n]*\n?)+'}
test_defined_74:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/defined.c
    sources: {binary: defined.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("defined")[^\n]*\n?)+'}
test_directive_18:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/directive.c
    sources: {binary: directive.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("bad")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'}
test_directive_75:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/directive.c
    sources: {binary: directive.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("bad")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid")[^\n]*\n?)+'}
test_escaped-eof_19:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/escaped-eof.c
    sources: {binary: escaped-eof.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/
        -E}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("backslash-new")[^\n]*\n?)+'}
test_escaped-eof_76:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/escaped-eof.c
    sources: {binary: escaped-eof.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/
        -E}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("backslash-new")[^\n]*\n?)+'}
test_escaped-nl_20:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/escaped-nl.c
    sources: {binary: escaped-nl.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/
        -E}
  group: GRPSERIAL
test_escaped-nl_77:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/escaped-nl.c
    sources: {binary: escaped-nl.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/
        -E}
  group: GRPSERIAL
test_funlike-2_21:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/funlike-2.c
    sources: {binary: funlike-2.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_funlike-2_78:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/funlike-2.c
    sources: {binary: funlike-2.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_funlike-3_22:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/funlike-3.c
    sources: {binary: funlike-3.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unterminated")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unterminated")[^\n]*\n?)+'}
test_funlike-3_79:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/funlike-3.c
    sources: {binary: funlike-3.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unterminated")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unterminated")[^\n]*\n?)+'}
test_funlike-4_23:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/funlike-4.c
    sources: {binary: ./funlike-4.exe, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/}
  group: GRPSERIAL
  run: {cwd: .}
test_funlike-4_80:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/funlike-4.c
    sources: {binary: ./funlike-4.exe, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/}
  group: GRPSERIAL
  run: {cwd: .}
test_funlike-5_24:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/funlike-5.c
    sources: {binary: funlike-5.s, cflags: -traditional-cpp -E -dD -S}
  group: GRPSERIAL
test_funlike-5_81:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/funlike-5.c
    sources: {binary: funlike-5.s, cflags: -traditional-cpp -E -dD -S}
  group: GRPSERIAL
test_funlike_25:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/funlike.c
    sources: {binary: funlike.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("missing
          binary")[^\n]*\n?)+'}
test_funlike_82:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/funlike.c
    sources: {binary: funlike.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("missing
          binary")[^\n]*\n?)+'}
test_hash_26:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/hash.c
    sources: {binary: hash.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_hash_83:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/hash.c
    sources: {binary: hash.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_include_27:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/include.c
    sources: {binary: include.s, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -S}
  group: GRPSERIAL
test_include_84:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/include.c
    sources: {binary: include.s, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -S}
  group: GRPSERIAL
test_literals-1_28:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/literals-1.c
    sources: {binary: ./literals-1.exe, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/}
  group: GRPSERIAL
  run: {cwd: .}
test_literals-1_85:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/literals-1.c
    sources: {binary: ./literals-1.exe, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/}
  group: GRPSERIAL
  run: {cwd: .}
test_literals-2_29:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/literals-2.c
    sources: {binary: literals-2.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/
        -E}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("missing
          terminating")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          valid")[^\n]*\n?)+'}
test_literals-2_86:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/literals-2.c
    sources: {binary: literals-2.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/
        -E}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("missing
          terminating")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          valid")[^\n]*\n?)+'}
test_maccom1_30:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/maccom1.c
    sources: {binary: maccom1.i, cflags: -CC -traditional-cpp -E}
  group: GRPSERIAL
test_maccom1_87:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/maccom1.c
    sources: {binary: maccom1.i, cflags: -CC -traditional-cpp -E}
  group: GRPSERIAL
test_maccom2_31:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/maccom2.c
    sources: {binary: maccom2.i, cflags: -CC -traditional-cpp -E}
  group: GRPSERIAL
test_maccom2_88:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/maccom2.c
    sources: {binary: maccom2.i, cflags: -CC -traditional-cpp -E}
  group: GRPSERIAL
test_maccom3_32:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/maccom3.c
    sources: {binary: maccom3.i, cflags: -CC -traditional-cpp -E}
  group: GRPSERIAL
test_maccom3_89:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/maccom3.c
    sources: {binary: maccom3.i, cflags: -CC -traditional-cpp -E}
  group: GRPSERIAL
test_maccom4_33:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/maccom4.c
    sources: {binary: maccom4.i, cflags: -CC -traditional-cpp -E}
  group: GRPSERIAL
test_maccom4_90:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/maccom4.c
    sources: {binary: maccom4.i, cflags: -CC -traditional-cpp -E}
  group: GRPSERIAL
test_maccom6_34:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/maccom6.c
    sources: {binary: maccom6.i, cflags: -CC -traditional-cpp -E}
  group: GRPSERIAL
test_maccom6_91:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/maccom6.c
    sources: {binary: maccom6.i, cflags: -CC -traditional-cpp -E}
  group: GRPSERIAL
test_macro_35:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/macro.c
    sources: {binary: macro.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("macro
          parameter list")[^\n]*\n?)+'}
test_macro_92:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/macro.c
    sources: {binary: macro.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("macro
          parameter list")[^\n]*\n?)+'}
test_macroargs_36:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/macroargs.c
    sources: {binary: ./macroargs.exe, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/}
  group: GRPSERIAL
  run: {cwd: .}
test_macroargs_93:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/macroargs.c
    sources: {binary: ./macroargs.exe, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/}
  group: GRPSERIAL
  run: {cwd: .}
test_mi1_37:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/mi1.c
    sources: {binary: mi1.s, cflags: -H -traditional-cpp -S}
  group: GRPSERIAL
test_mi1_94:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/mi1.c
    sources: {binary: mi1.s, cflags: -H -traditional-cpp -S}
  group: GRPSERIAL
test_mi2_38:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/mi2.c
    sources: {binary: mi2.s, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -S}
  group: GRPSERIAL
test_mi2_95:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/mi2.c
    sources: {binary: mi2.s, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -S}
  group: GRPSERIAL
test_mi3_39:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/mi3.c
    sources: {binary: mi3.s, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -S}
  group: GRPSERIAL
test_mi3_96:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/mi3.c
    sources: {binary: mi3.s, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -S}
  group: GRPSERIAL
test_mi4_40:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/mi4.c
    sources: {binary: mi4.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_mi4_97:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/mi4.c
    sources: {binary: mi4.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_mi5_41:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/mi5.c
    sources: {binary: mi5.i, cflags: -H -C -traditional-cpp -E}
  group: GRPSERIAL
test_mi5_98:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/mi5.c
    sources: {binary: mi5.i, cflags: -H -C -traditional-cpp -E}
  group: GRPSERIAL
test_mi6_42:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/mi6.c
    sources: {binary: mi6.s, cflags: ' -S'}
  group: GRPSERIAL
test_mi6_99:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/mi6.c
    sources: {binary: mi6.s, cflags: ' -S'}
  group: GRPSERIAL
test_mi7_100:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/mi7.c
    sources: {binary: mi7.i, cflags: -H -traditional-cpp -E}
  group: GRPSERIAL
test_mi7_43:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/mi7.c
    sources: {binary: mi7.i, cflags: -H -traditional-cpp -E}
  group: GRPSERIAL
test_null-drctv_101:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/null-drctv.c
    sources: {binary: null-drctv.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/
        -E}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OK")[^\n]*\n?)+'}
test_null-drctv_44:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/null-drctv.c
    sources: {binary: null-drctv.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/
        -E}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OK")[^\n]*\n?)+'}
test_num-sign_102:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/num-sign.c
    sources: {binary: num-sign.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_num-sign_45:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/num-sign.c
    sources: {binary: num-sign.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_paste_103:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/paste.c
    sources: {binary: paste.s, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -S}
  group: GRPSERIAL
test_paste_46:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/paste.c
    sources: {binary: paste.s, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -S}
  group: GRPSERIAL
test_pr65238-3_104:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/pr65238-3.c
    sources: {binary: ./pr65238-3.exe, cflags: -traditional-cpp}
  group: GRPSERIAL
  run: {cwd: .}
test_pr65238-3_47:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/pr65238-3.c
    sources: {binary: ./pr65238-3.exe, cflags: -traditional-cpp}
  group: GRPSERIAL
  run: {cwd: .}
test_pr65238-4_105:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/pr65238-4.c
    sources: {binary: pr65238-4.i, cflags: -traditional-cpp -E}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unterminated
          argument list invoking macro .__has_attribute.")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("#if
          with no expression")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unterminated
          argument list invoking macro .__has_attribute.")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("macro
          .__has_attribute. passed 2 arguments, but takes just 1")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("missing
          ... in expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("macro
          .__has_attribute. requires an identifier")[^\n]*\n?)+'}
test_pr65238-4_48:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/pr65238-4.c
    sources: {binary: pr65238-4.i, cflags: -traditional-cpp -E}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unterminated
          argument list invoking macro .__has_attribute.")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("#if
          with no expression")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unterminated
          argument list invoking macro .__has_attribute.")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("macro
          .__has_attribute. passed 2 arguments, but takes just 1")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("missing
          ... in expression")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("macro
          .__has_attribute. requires an identifier")[^\n]*\n?)+'}
test_quote_106:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/quote.c
    sources: {binary: quote.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_quote_49:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/quote.c
    sources: {binary: quote.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_recurse-1_107:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/recurse-1.c
    sources: {binary: recurse-1.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("detected
          recursion")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("detected
          recursion")[^\n]*\n?)+'}
test_recurse-1_50:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/recurse-1.c
    sources: {binary: recurse-1.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("detected
          recursion")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("detected
          recursion")[^\n]*\n?)+'}
test_recurse-2_108:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/recurse-2.c
    sources: {binary: recurse-2.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("detected
          recursion")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("detected
          recursion")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("detected
          recursion")[^\n]*\n?)+'}
test_recurse-2_51:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/recurse-2.c
    sources: {binary: recurse-2.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("detected
          recursion")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("detected
          recursion")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("detected
          recursion")[^\n]*\n?)+'}
test_recurse-3_109:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/recurse-3.c
    sources: {binary: recurse-3.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_recurse-3_52:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/recurse-3.c
    sources: {binary: recurse-3.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_redef1_110:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/redef1.c
    sources: {binary: redef1.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_redef1_53:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/redef1.c
    sources: {binary: redef1.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_redef2_111:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/redef2.c
    sources: {binary: redef2.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
test_redef2_54:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/redef2.c
    sources: {binary: redef2.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L26: {expect: true, expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("redefined")[^\n]*\n?)+'}
test_strify_112:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/strify.c
    sources: {binary: ./strify.exe, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/}
  group: GRPSERIAL
  run: {cwd: .}
test_strify_55:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/strify.c
    sources: {binary: ./strify.exe, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/}
  group: GRPSERIAL
  run: {cwd: .}
test_uchar_113:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/uchar.c
    sources: {binary: uchar.i, cflags: -funsigned-char -fsigned-char -traditional-cpp
        -E}
  group: GRPSERIAL
test_uchar_56:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/uchar.c
    sources: {binary: uchar.i, cflags: -funsigned-char -fsigned-char -traditional-cpp
        -E}
  group: GRPSERIAL
test_xwin1_114:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/xwin1.c
    sources: {binary: xwin1.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
test_xwin1_57:
  build:
    files: compilers/gcc/./gcc.dg/cpp/trad/xwin1.c
    sources: {binary: xwin1.i, cflags: -traditional-cpp -I./gcc.dg/cpp/trad/ -E}
  group: GRPSERIAL
