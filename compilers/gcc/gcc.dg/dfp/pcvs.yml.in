---
test_Wbad-function-cast-1_1:
  build:
    cflags: ' -Wbad-function-cast -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/Wbad-function-cast-1.c'
    sources:
      binary: Wbad-function-cast-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wbad-function-cast"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'int' to non-matching type '_Decimal32'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'char' to non-matching type '_Decimal64'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'long int' to non-matching type '_Decimal128'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type '_Decimal32' to non-matching type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type '_Decimal64' to non-matching type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type '_Decimal128' to non-matching type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'complex double' to non-matching type '_Decimal32'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtraditional-conversion-2_2:
  build:
    cflags: ' -Wtraditional-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/Wtraditional-conversion-2.c'
    sources:
      binary: Wtraditional-conversion-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fd32' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fd32' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fd64' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fd64' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fd128' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fd128' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fd32' as '_Decimal32' rather than 'double' due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fd32' as '_Decimal32' rather than 'double' due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fd64' as '_Decimal64' rather than 'double' due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fd64' as '_Decimal64' rather than 'double' due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fd128' as '_Decimal128' rather than 'double' due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fd128' as '_Decimal128' rather than 'double' due to prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-complex_3:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/builtin-complex.c'
    sources:
      binary: builtin-complex.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not of real binary floating-point type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-bad_4:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/cast-bad.c'
    sources:
      binary: cast-bad.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conversion to non-scalar type requested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conversion to non-scalar type requested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast to union type from type not present in union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conversion to non-scalar type requested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast to union type from type not present in union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_composite-type_5:
  build:
    cflags: ' -O -Wall -ftrack-macro-expansion=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/composite-type.c'
    sources:
      binary: composite-type.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning to type '\[^\n\]*' from type '\[^\n\]*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning to type '\[^\n\]*' from type '\[^\n\]*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning to type '\[^\n\]*' from type '\[^\n\]*'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_constants-c99_6:
  build:
    cflags: ' -std=c99 -Wno-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/constants-c99.c'
    sources:
      binary: constants-c99.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wno-overflow"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_constants-hex_7:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/constants-hex.c'
    sources:
      binary: constants-hex.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "hexadecimal floating constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "hexadecimal floating constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "hexadecimal floating constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "hexadecimal floating constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "hexadecimal floating constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "hexadecimal floating constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_constants-pedantic_8:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/constants-pedantic.c'
    sources:
      binary: constants-pedantic.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_constants_9:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/constants.c'
    sources:
      binary: constants.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_convert-complex_10:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/convert-complex.c'
    sources:
      binary: convert-complex.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_convert-dfp-round-thread_11:
  build:
    cflags: ' -std=gnu99 -D_GNU_SOURCE -pthread'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/convert-dfp-round-thread.c'
    sources:
      binary: ./convert-dfp-round-thread.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -D_GNU_SOURCE -pthread"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ctypes_12:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/ctypes.c'
    sources:
      binary: ctypes.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ddmode-ice_13:
  build:
    cflags: ' -O1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/ddmode-ice.c'
    sources:
      binary: ddmode-ice.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dec-eval-method-2_14:
  build:
    cflags: ' -D__STDC_WANT_DEC_FP__ -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/dec-eval-method-2.c'
    sources:
      binary: dec-eval-method-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-D__STDC_WANT_DEC_FP__"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dec-eval-method_15:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/dec-eval-method.c'
    sources:
      binary: dec-eval-method.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decfloat-constants_16:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/decfloat-constants.c'
    sources:
      binary: decfloat-constants.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fe-convert-2_17:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/fe-convert-2.c'
    sources:
      binary: fe-convert-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-mno-hard-dfp" { target { s390*-*-* } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fe-convert-3_18:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/fe-convert-3.c'
    sources:
      binary: fe-convert-3.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float-constant-double_19:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/float-constant-double.c'
    sources:
      binary: float-constant-double.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_floatn_20:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/floatn.c'
    sources:
      binary: floatn.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mix operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mix operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mix operands))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-c89_21:
  build:
    cflags: ' -std=c89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-c89.c'
    sources:
      binary: keywords-c89.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-c99_22:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-c99.c'
    sources:
      binary: keywords-c99.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-ignored-c99_23:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-ignored-c99.c'
    sources:
      binary: keywords-ignored-c99.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-pedantic_24:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-pedantic.c'
    sources:
      binary: keywords-pedantic.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-reserved_25:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-reserved.c'
    sources:
      binary: keywords-reserved.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_operator-bitwise_26:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/operator-bitwise.c'
    sources:
      binary: operator-bitwise.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31344_27:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr31344.c'
    sources:
      binary: pr31344.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -mtune=i386" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37435_28:
  build:
    cflags: ' -O2 -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr37435.c'
    sources:
      binary: pr37435.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41049_29:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr41049.c'
    sources:
      binary: pr41049.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48204_30:
  build:
    cflags: ' -O -fno-tree-ccp -fno-tree-dominator-opts -fno-tree-fre -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr48204.c'
    sources:
      binary: pr48204.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-dominator-opts -fno-tree-fre -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48928_31:
  build:
    cflags: ' -g -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr48928.c'
    sources:
      binary: pr48928.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52140_32:
  build:
    cflags: ' -O1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr52140.c'
    sources:
      binary: pr52140.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70052_33:
  build:
    cflags: ' -O1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr70052.c'
    sources:
      binary: pr70052.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79487_34:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr79487.c'
    sources:
      binary: pr79487.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79515_35:
  build:
    cflags: ' -Wdouble-promotion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr79515.c'
    sources:
      binary: pr79515.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wdouble-promotion"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mix operands))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-1_36:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-1.c'
    sources:
      binary: pragma-float-const-decimal64-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-2_37:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-2.c'
    sources:
      binary: pragma-float-const-decimal64-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-3_38:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-3.c'
    sources:
      binary: pragma-float-const-decimal64-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-4_39:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-4.c'
    sources:
      binary: pragma-float-const-decimal64-4.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(junk at end))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(junk at end))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-5_40:
  build:
    cflags: ' -std=c99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-5.c'
    sources:
      binary: pragma-float-const-decimal64-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-6_41:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-6.c'
    sources:
      binary: pragma-float-const-decimal64-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-7_42:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-7.c'
    sources:
      binary: pragma-float-const-decimal64-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with hex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-8_43:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-8.c'
    sources:
      binary: pragma-float-const-decimal64-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(before))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-union_44:
  build:
    cflags: ' -O -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/struct-union.c'
    sources:
      binary: struct-union.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd32' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd64' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd32' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd64' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd32' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd64' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd32' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd64' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typespec_45:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/typespec.c'
    sources:
      binary: typespec.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:215:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:220:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:221:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:229:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:231:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:233:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:235:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:245:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:246:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:248:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:250:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:251:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:252:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:254:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:255:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:256:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:262:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:269:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:271:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:272:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:279:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:286:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:287:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:289:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Decimal128))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-init_46:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/union-init.c'
    sources:
      binary: union-init.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_usual-arith-conv-bad-2_47:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/usual-arith-conv-bad-2.c'
    sources:
      binary: usual-arith-conv-bad-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mix operands))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_usual-arith-conv-bad-3_48:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/usual-arith-conv-bad-3.c'
    sources:
      binary: usual-arith-conv-bad-3.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mix operands))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_usual-arith-conv-bad_49:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/usual-arith-conv-bad.c'
    sources:
      binary: usual-arith-conv-bad.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.*mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-conversion-1_50:
  build:
    cflags: ' -Wtraditional-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/wtr-conversion-1.c'
    sources:
      binary: wtr-conversion-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(as integer rather than floating" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(as integer rather than floating" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(as integer rather than floating" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(as floating rather than integer" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal32' rather than 'float'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal32' rather than 'long double'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal32' rather than '_Decimal64'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal32' rather than '_Decimal128'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(as floating rather than integer" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal64' rather than 'float'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal64' rather than 'long double'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal64' rather than '_Decimal128'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(as floating rather than integer" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal128' rather than 'float'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal128' rather than 'long double'" "prototype conversion warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
