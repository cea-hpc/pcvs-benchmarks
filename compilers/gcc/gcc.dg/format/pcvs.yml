test_array-1_1:
  build:
    cflags: "-std=gnu99 -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/array-1.c'
    sources:
      binary: array-1.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("11:unterminated")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("11:unterminated")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("11:not a string literal")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("25:not a string literal")[^\n]*\n?)+'
test_array-1_2:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/array-1.c'
    sources:
      binary: array-1.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("11:unterminated")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("11:unterminated")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("11:not a string literal")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("25:not a string literal")[^\n]*\n?)+'
test_array-1_223:
  build:
    cflags: "-std=gnu99 -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/array-1.c'
    sources:
      binary: array-1.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("11:unterminated")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("11:unterminated")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("11:not a string literal")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("25:not a string literal")[^\n]*\n?)+'
test_array-1_224:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/array-1.c'
    sources:
      binary: array-1.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("11:unterminated")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("11:unterminated")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("11:not a string literal")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("25:not a string literal")[^\n]*\n?)+'
test_array-1_445:
  build:
    cflags: "-std=gnu99 -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/array-1.c'
    sources:
      binary: array-1.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("11:unterminated")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("11:unterminated")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("11:not a string literal")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("25:not a string literal")[^\n]*\n?)+'
test_array-1_446:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/array-1.c'
    sources:
      binary: array-1.s
  group: GRPSERIAL
  validate:
    match:
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("11:unterminated")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("11:unterminated")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("11:format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("11:not a string literal")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("25:not a string literal")[^\n]*\n?)+'
test_asm_fprintf-1_225:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-1.c'
    sources:
      binary: asm_fprintf-1.s
  group: GRPSERIAL
  validate:
    match:
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("20:matching")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("16:arguments")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("16:zero-length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("17:embedded")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("19:embedded")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("19:embedded|too many")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("17:trailing")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("19:repeated")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("30:wide")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("16:too many arguments
          for format")[^\n]*\n?)+'
test_asm_fprintf-1_226:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-1.c'
    sources:
      binary: asm_fprintf-1.s
  group: GRPSERIAL
  validate:
    match:
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("20:matching")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("16:arguments")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("16:zero-length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("17:embedded")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("19:embedded")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("19:embedded|too many")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("17:trailing")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("19:repeated")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("30:wide")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("16:too many arguments
          for format")[^\n]*\n?)+'
test_asm_fprintf-1_3:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-1.c'
    sources:
      binary: asm_fprintf-1.s
  group: GRPSERIAL
  validate:
    match:
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("20:matching")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("16:arguments")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("16:zero-length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("17:embedded")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("19:embedded")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("19:embedded|too many")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("17:trailing")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("19:repeated")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("30:wide")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("16:too many arguments
          for format")[^\n]*\n?)+'
test_asm_fprintf-1_4:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-1.c'
    sources:
      binary: asm_fprintf-1.s
  group: GRPSERIAL
  validate:
    match:
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("20:matching")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("16:arguments")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("16:zero-length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("17:embedded")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("19:embedded")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("19:embedded|too many")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("17:trailing")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("19:repeated")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("30:wide")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("16:too many arguments
          for format")[^\n]*\n?)+'
test_asm_fprintf-1_447:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-1.c'
    sources:
      binary: asm_fprintf-1.s
  group: GRPSERIAL
  validate:
    match:
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("20:matching")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("16:arguments")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("16:zero-length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("17:embedded")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("19:embedded")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("19:embedded|too many")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("17:trailing")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("19:repeated")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("30:wide")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("16:too many arguments
          for format")[^\n]*\n?)+'
test_asm_fprintf-1_448:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-1.c'
    sources:
      binary: asm_fprintf-1.s
  group: GRPSERIAL
  validate:
    match:
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("18:format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("20:matching")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("16:arguments")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("16:zero-length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("17:embedded")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("19:embedded")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("19:embedded|too many")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("17:trailing")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("19:repeated")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("30:wide")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("16:too many arguments
          for format")[^\n]*\n?)+'
test_asm_fprintf-2_227:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-2.c'
    sources:
      binary: asm_fprintf-2.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-2_228:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-2.c'
    sources:
      binary: asm_fprintf-2.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-2_449:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-2.c'
    sources:
      binary: asm_fprintf-2.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-2_450:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-2.c'
    sources:
      binary: asm_fprintf-2.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-2_5:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-2.c'
    sources:
      binary: asm_fprintf-2.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-2_6:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-2.c'
    sources:
      binary: asm_fprintf-2.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-3_229:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-3.c'
    sources:
      binary: asm_fprintf-3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-3_230:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-3.c'
    sources:
      binary: asm_fprintf-3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-3_451:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-3.c'
    sources:
      binary: asm_fprintf-3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-3_452:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-3.c'
    sources:
      binary: asm_fprintf-3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-3_7:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-3.c'
    sources:
      binary: asm_fprintf-3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-3_8:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-3.c'
    sources:
      binary: asm_fprintf-3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-4_10:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-4.c'
    sources:
      binary: asm_fprintf-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-4_231:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-4.c'
    sources:
      binary: asm_fprintf-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-4_232:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-4.c'
    sources:
      binary: asm_fprintf-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-4_453:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-4.c'
    sources:
      binary: asm_fprintf-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-4_454:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-4.c'
    sources:
      binary: asm_fprintf-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-4_9:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-4.c'
    sources:
      binary: asm_fprintf-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_asm_fprintf-5_11:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-5.c'
    sources:
      binary: asm_fprintf-5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as \''long\'' or \''long long\''")[^\n]*\n?)+'
test_asm_fprintf-5_12:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-5.c'
    sources:
      binary: asm_fprintf-5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as \''long\'' or \''long long\''")[^\n]*\n?)+'
test_asm_fprintf-5_233:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-5.c'
    sources:
      binary: asm_fprintf-5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as \''long\'' or \''long long\''")[^\n]*\n?)+'
test_asm_fprintf-5_234:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-5.c'
    sources:
      binary: asm_fprintf-5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as \''long\'' or \''long long\''")[^\n]*\n?)+'
test_asm_fprintf-5_455:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-5.c'
    sources:
      binary: asm_fprintf-5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as \''long\'' or \''long long\''")[^\n]*\n?)+'
test_asm_fprintf-5_456:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-5.c'
    sources:
      binary: asm_fprintf-5.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as \''long\'' or \''long long\''")[^\n]*\n?)+'
test_attr-1_13:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-1.c'
    sources:
      binary: attr-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot format")[^\n]*\n?)+'
test_attr-1_14:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-1.c'
    sources:
      binary: attr-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot format")[^\n]*\n?)+'
test_attr-1_235:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-1.c'
    sources:
      binary: attr-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot format")[^\n]*\n?)+'
test_attr-1_236:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-1.c'
    sources:
      binary: attr-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot format")[^\n]*\n?)+'
test_attr-1_457:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-1.c'
    sources:
      binary: attr-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot format")[^\n]*\n?)+'
test_attr-1_458:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-1.c'
    sources:
      binary: attr-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot format")[^\n]*\n?)+'
test_attr-2_15:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-2.c'
    sources:
      binary: attr-2.s
  group: GRPSERIAL
  validate:
    match:
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("22:format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-2_16:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-2.c'
    sources:
      binary: attr-2.s
  group: GRPSERIAL
  validate:
    match:
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("22:format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-2_237:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-2.c'
    sources:
      binary: attr-2.s
  group: GRPSERIAL
  validate:
    match:
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("22:format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-2_238:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-2.c'
    sources:
      binary: attr-2.s
  group: GRPSERIAL
  validate:
    match:
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("22:format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-2_459:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-2.c'
    sources:
      binary: attr-2.s
  group: GRPSERIAL
  validate:
    match:
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("22:format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-2_460:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-2.c'
    sources:
      binary: attr-2.s
  group: GRPSERIAL
  validate:
    match:
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("19:format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("22:format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-3_17:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-3.c'
    sources:
      binary: attr-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("format specifier")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("format function type")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("follows")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("follows")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
test_attr-3_18:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-3.c'
    sources:
      binary: attr-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("format specifier")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("format function type")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("follows")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("follows")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
test_attr-3_239:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-3.c'
    sources:
      binary: attr-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("format specifier")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("format function type")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("follows")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("follows")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
test_attr-3_240:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-3.c'
    sources:
      binary: attr-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("format specifier")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("format function type")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("follows")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("follows")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
test_attr-3_461:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-3.c'
    sources:
      binary: attr-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("format specifier")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("format function type")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("follows")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("follows")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
test_attr-3_462:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-3.c'
    sources:
      binary: attr-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("does not apply|only
          applies")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("format specifier")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("format function type")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid operand")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("follows")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("follows")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a string")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not return string")[^\n]*\n?)+'
test_attr-4_19:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-4.c'
    sources:
      binary: attr-4.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("20:format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-4_20:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-4.c'
    sources:
      binary: attr-4.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("20:format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-4_241:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-4.c'
    sources:
      binary: attr-4.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("20:format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-4_242:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-4.c'
    sources:
      binary: attr-4.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("20:format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-4_463:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-4.c'
    sources:
      binary: attr-4.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("20:format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-4_464:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-4.c'
    sources:
      binary: attr-4.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("20:format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-5_21:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-5.c'
    sources:
      binary: attr-5.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("conflict")[^\n]*\n?)+'
test_attr-5_22:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-5.c'
    sources:
      binary: attr-5.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("conflict")[^\n]*\n?)+'
test_attr-5_243:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-5.c'
    sources:
      binary: attr-5.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("conflict")[^\n]*\n?)+'
test_attr-5_244:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-5.c'
    sources:
      binary: attr-5.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("conflict")[^\n]*\n?)+'
test_attr-5_465:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-5.c'
    sources:
      binary: attr-5.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("conflict")[^\n]*\n?)+'
test_attr-5_466:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-5.c'
    sources:
      binary: attr-5.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("conflict")[^\n]*\n?)+'
test_attr-6_23:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-6.c'
    sources:
      binary: attr-6.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("12:format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("implicit")[^\n]*\n?)+'
test_attr-6_24:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-6.c'
    sources:
      binary: attr-6.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("12:format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("implicit")[^\n]*\n?)+'
test_attr-6_245:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-6.c'
    sources:
      binary: attr-6.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("12:format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("implicit")[^\n]*\n?)+'
test_attr-6_246:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-6.c'
    sources:
      binary: attr-6.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("12:format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("implicit")[^\n]*\n?)+'
test_attr-6_467:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-6.c'
    sources:
      binary: attr-6.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("12:format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("implicit")[^\n]*\n?)+'
test_attr-6_468:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-6.c'
    sources:
      binary: attr-6.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("12:format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("implicit")[^\n]*\n?)+'
test_attr-7_247:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-7.c'
    sources:
      binary: attr-7.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("23:format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-7_248:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-7.c'
    sources:
      binary: attr-7.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("23:format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-7_25:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-7.c'
    sources:
      binary: attr-7.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("23:format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-7_26:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-7.c'
    sources:
      binary: attr-7.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("23:format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-7_469:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-7.c'
    sources:
      binary: attr-7.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("23:format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_attr-7_470:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-7.c'
    sources:
      binary: attr-7.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("23:format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_bitfld-1_249:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/bitfld-1.c'
    sources:
      binary: bitfld-1.s
  group: GRPSERIAL
  validate:
    match:
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("15:has type \''.*unsigned
          int:48\''")[^\n]*\n?)+'
test_bitfld-1_250:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/bitfld-1.c'
    sources:
      binary: bitfld-1.s
  group: GRPSERIAL
  validate:
    match:
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("15:has type \''.*unsigned
          int:48\''")[^\n]*\n?)+'
test_bitfld-1_27:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/bitfld-1.c'
    sources:
      binary: bitfld-1.s
  group: GRPSERIAL
  validate:
    match:
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("15:has type \''.*unsigned
          int:48\''")[^\n]*\n?)+'
test_bitfld-1_28:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/bitfld-1.c'
    sources:
      binary: bitfld-1.s
  group: GRPSERIAL
  validate:
    match:
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("15:has type \''.*unsigned
          int:48\''")[^\n]*\n?)+'
test_bitfld-1_471:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/bitfld-1.c'
    sources:
      binary: bitfld-1.s
  group: GRPSERIAL
  validate:
    match:
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("15:has type \''.*unsigned
          int:48\''")[^\n]*\n?)+'
test_bitfld-1_472:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/bitfld-1.c'
    sources:
      binary: bitfld-1.s
  group: GRPSERIAL
  validate:
    match:
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("15:has type \''.*unsigned
          int:48\''")[^\n]*\n?)+'
test_branch-1_251:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/branch-1.c'
    sources:
      binary: branch-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("23:int")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("16:int")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("36:int")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("23:int")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("38:too many")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("64:long int")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("27:long int")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("53:long int")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("14:too many")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
test_branch-1_252:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/branch-1.c'
    sources:
      binary: branch-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("23:int")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("16:int")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("36:int")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("23:int")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("38:too many")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("64:long int")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("27:long int")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("53:long int")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("14:too many")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
test_branch-1_29:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/branch-1.c'
    sources:
      binary: branch-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("23:int")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("16:int")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("36:int")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("23:int")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("38:too many")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("64:long int")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("27:long int")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("53:long int")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("14:too many")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
test_branch-1_30:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/branch-1.c'
    sources:
      binary: branch-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("23:int")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("16:int")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("36:int")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("23:int")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("38:too many")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("64:long int")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("27:long int")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("53:long int")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("14:too many")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
test_branch-1_473:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/branch-1.c'
    sources:
      binary: branch-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("23:int")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("16:int")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("36:int")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("23:int")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("38:too many")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("64:long int")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("27:long int")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("53:long int")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("14:too many")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
test_branch-1_474:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/branch-1.c'
    sources:
      binary: branch-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("23:int")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("16:int")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("36:int")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("23:int")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("38:too many")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("64:long int")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("27:long int")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("53:long int")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("14:too many")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
test_builtin-1_253:
  build:
    cflags: "-std=gnu99 -Wformat -ffreestanding\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/builtin-1.c'
    sources:
      binary: builtin-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_builtin-1_254:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -ffreestanding\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/builtin-1.c'
    sources:
      binary: builtin-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_builtin-1_31:
  build:
    cflags: "-std=gnu99 -Wformat -ffreestanding\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/builtin-1.c'
    sources:
      binary: builtin-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_builtin-1_32:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -ffreestanding\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/builtin-1.c'
    sources:
      binary: builtin-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_builtin-1_475:
  build:
    cflags: "-std=gnu99 -Wformat -ffreestanding\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/builtin-1.c'
    sources:
      binary: builtin-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_builtin-1_476:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -ffreestanding\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/builtin-1.c'
    sources:
      binary: builtin-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-printf-1_255:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-1.c'
    sources:
      binary: c90-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("14:length|C")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("11:use of both|ignored")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("11:use of both|ignored")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("13:field")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("15:field")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("14:format")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+(:230:)[^\n]*[0-9]+: warning:[^\n]*("15:matching")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+(:231:)[^\n]*[0-9]+: warning:[^\n]*("11:arguments")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+(:233:)[^\n]*[0-9]+: warning:[^\n]*("11:zero-length")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+(:234:)[^\n]*[0-9]+: warning:[^\n]*("12:embedded")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+(:235:)[^\n]*[0-9]+: warning:[^\n]*("14:embedded")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+(:236:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+(:238:)[^\n]*[0-9]+: warning:[^\n]*("12:trailing")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+(:239:)[^\n]*[0-9]+: warning:[^\n]*("14:repeated")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+(:240:)[^\n]*[0-9]+: warning:[^\n]*("3:constant")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+(:241:)[^\n]*[0-9]+: warning:[^\n]*("25:wide")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+(:242:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L246:
        expect: true
        expr: '(^|\n)([^\n]+(:246:)[^\n]*[0-9]+: warning:[^\n]*("25:width")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+(:247:)[^\n]*[0-9]+: warning:[^\n]*("20:width")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("14:width")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("14:format|precision")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("too many arguments
          for format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("14:format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("too many arguments
          for format")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("14:type")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("15:trailing")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("13:type")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("14:trailing")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("14:conversion lacks
          type")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("15:conversion")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("14:length|C")[^\n]*\n?)+'
test_c90-printf-1_256:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-1.c'
    sources:
      binary: c90-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("14:length|C")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("11:use of both|ignored")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("11:use of both|ignored")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("13:field")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("15:field")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("14:format")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+(:230:)[^\n]*[0-9]+: warning:[^\n]*("15:matching")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+(:231:)[^\n]*[0-9]+: warning:[^\n]*("11:arguments")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+(:233:)[^\n]*[0-9]+: warning:[^\n]*("11:zero-length")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+(:234:)[^\n]*[0-9]+: warning:[^\n]*("12:embedded")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+(:235:)[^\n]*[0-9]+: warning:[^\n]*("14:embedded")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+(:236:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+(:238:)[^\n]*[0-9]+: warning:[^\n]*("12:trailing")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+(:239:)[^\n]*[0-9]+: warning:[^\n]*("14:repeated")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+(:240:)[^\n]*[0-9]+: warning:[^\n]*("3:constant")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+(:241:)[^\n]*[0-9]+: warning:[^\n]*("25:wide")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+(:242:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L246:
        expect: true
        expr: '(^|\n)([^\n]+(:246:)[^\n]*[0-9]+: warning:[^\n]*("25:width")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+(:247:)[^\n]*[0-9]+: warning:[^\n]*("20:width")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("14:width")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("14:format|precision")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("too many arguments
          for format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("14:format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("too many arguments
          for format")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("14:type")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("15:trailing")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("13:type")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("14:trailing")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("14:conversion lacks
          type")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("15:conversion")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("14:length|C")[^\n]*\n?)+'
test_c90-printf-1_33:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-1.c'
    sources:
      binary: c90-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("14:length|C")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("11:use of both|ignored")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("11:use of both|ignored")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("13:field")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("15:field")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("14:format")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+(:230:)[^\n]*[0-9]+: warning:[^\n]*("15:matching")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+(:231:)[^\n]*[0-9]+: warning:[^\n]*("11:arguments")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+(:233:)[^\n]*[0-9]+: warning:[^\n]*("11:zero-length")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+(:234:)[^\n]*[0-9]+: warning:[^\n]*("12:embedded")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+(:235:)[^\n]*[0-9]+: warning:[^\n]*("14:embedded")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+(:236:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+(:238:)[^\n]*[0-9]+: warning:[^\n]*("12:trailing")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+(:239:)[^\n]*[0-9]+: warning:[^\n]*("14:repeated")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+(:240:)[^\n]*[0-9]+: warning:[^\n]*("3:constant")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+(:241:)[^\n]*[0-9]+: warning:[^\n]*("25:wide")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+(:242:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L246:
        expect: true
        expr: '(^|\n)([^\n]+(:246:)[^\n]*[0-9]+: warning:[^\n]*("25:width")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+(:247:)[^\n]*[0-9]+: warning:[^\n]*("20:width")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("14:width")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("14:format|precision")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("too many arguments
          for format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("14:format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("too many arguments
          for format")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("14:type")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("15:trailing")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("13:type")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("14:trailing")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("14:conversion lacks
          type")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("15:conversion")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("14:length|C")[^\n]*\n?)+'
test_c90-printf-1_34:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-1.c'
    sources:
      binary: c90-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("14:length|C")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("11:use of both|ignored")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("11:use of both|ignored")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("13:field")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("15:field")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("14:format")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+(:230:)[^\n]*[0-9]+: warning:[^\n]*("15:matching")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+(:231:)[^\n]*[0-9]+: warning:[^\n]*("11:arguments")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+(:233:)[^\n]*[0-9]+: warning:[^\n]*("11:zero-length")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+(:234:)[^\n]*[0-9]+: warning:[^\n]*("12:embedded")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+(:235:)[^\n]*[0-9]+: warning:[^\n]*("14:embedded")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+(:236:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+(:238:)[^\n]*[0-9]+: warning:[^\n]*("12:trailing")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+(:239:)[^\n]*[0-9]+: warning:[^\n]*("14:repeated")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+(:240:)[^\n]*[0-9]+: warning:[^\n]*("3:constant")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+(:241:)[^\n]*[0-9]+: warning:[^\n]*("25:wide")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+(:242:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L246:
        expect: true
        expr: '(^|\n)([^\n]+(:246:)[^\n]*[0-9]+: warning:[^\n]*("25:width")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+(:247:)[^\n]*[0-9]+: warning:[^\n]*("20:width")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("14:width")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("14:format|precision")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("too many arguments
          for format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("14:format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("too many arguments
          for format")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("14:type")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("15:trailing")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("13:type")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("14:trailing")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("14:conversion lacks
          type")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("15:conversion")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("14:length|C")[^\n]*\n?)+'
test_c90-printf-1_477:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-1.c'
    sources:
      binary: c90-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("14:length|C")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("11:use of both|ignored")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("11:use of both|ignored")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("13:field")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("15:field")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("14:format")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+(:230:)[^\n]*[0-9]+: warning:[^\n]*("15:matching")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+(:231:)[^\n]*[0-9]+: warning:[^\n]*("11:arguments")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+(:233:)[^\n]*[0-9]+: warning:[^\n]*("11:zero-length")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+(:234:)[^\n]*[0-9]+: warning:[^\n]*("12:embedded")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+(:235:)[^\n]*[0-9]+: warning:[^\n]*("14:embedded")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+(:236:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+(:238:)[^\n]*[0-9]+: warning:[^\n]*("12:trailing")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+(:239:)[^\n]*[0-9]+: warning:[^\n]*("14:repeated")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+(:240:)[^\n]*[0-9]+: warning:[^\n]*("3:constant")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+(:241:)[^\n]*[0-9]+: warning:[^\n]*("25:wide")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+(:242:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L246:
        expect: true
        expr: '(^|\n)([^\n]+(:246:)[^\n]*[0-9]+: warning:[^\n]*("25:width")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+(:247:)[^\n]*[0-9]+: warning:[^\n]*("20:width")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("14:width")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("14:format|precision")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("too many arguments
          for format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("14:format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("too many arguments
          for format")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("14:type")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("15:trailing")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("13:type")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("14:trailing")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("14:conversion lacks
          type")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("15:conversion")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("14:length|C")[^\n]*\n?)+'
test_c90-printf-1_478:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-1.c'
    sources:
      binary: c90-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("14:length|C")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("14:does not support")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("14:length")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("11:use of both|ignored")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("11:use of both|ignored")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("14:flag")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("11:ignored")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("11:flags|ignored")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("13:field")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("15:field")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("14:format")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+(:230:)[^\n]*[0-9]+: warning:[^\n]*("15:matching")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+(:231:)[^\n]*[0-9]+: warning:[^\n]*("11:arguments")[^\n]*\n?)+'
      L233:
        expect: true
        expr: '(^|\n)([^\n]+(:233:)[^\n]*[0-9]+: warning:[^\n]*("11:zero-length")[^\n]*\n?)+'
      L234:
        expect: true
        expr: '(^|\n)([^\n]+(:234:)[^\n]*[0-9]+: warning:[^\n]*("12:embedded")[^\n]*\n?)+'
      L235:
        expect: true
        expr: '(^|\n)([^\n]+(:235:)[^\n]*[0-9]+: warning:[^\n]*("14:embedded")[^\n]*\n?)+'
      L236:
        expect: true
        expr: '(^|\n)([^\n]+(:236:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L238:
        expect: true
        expr: '(^|\n)([^\n]+(:238:)[^\n]*[0-9]+: warning:[^\n]*("12:trailing")[^\n]*\n?)+'
      L239:
        expect: true
        expr: '(^|\n)([^\n]+(:239:)[^\n]*[0-9]+: warning:[^\n]*("14:repeated")[^\n]*\n?)+'
      L240:
        expect: true
        expr: '(^|\n)([^\n]+(:240:)[^\n]*[0-9]+: warning:[^\n]*("3:constant")[^\n]*\n?)+'
      L241:
        expect: true
        expr: '(^|\n)([^\n]+(:241:)[^\n]*[0-9]+: warning:[^\n]*("25:wide")[^\n]*\n?)+'
      L242:
        expect: true
        expr: '(^|\n)([^\n]+(:242:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("3:null")[^\n]*\n?)+'
      L246:
        expect: true
        expr: '(^|\n)([^\n]+(:246:)[^\n]*[0-9]+: warning:[^\n]*("25:width")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+(:247:)[^\n]*[0-9]+: warning:[^\n]*("20:width")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("14:width")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("14:format|precision")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("too many arguments
          for format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("14:format")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("too many arguments
          for format")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("15:precision")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("14:type")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("15:trailing")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("13:type")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("14:trailing")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("13:format")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("15:format")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("15:length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("14:conversion lacks
          type")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("15:conversion")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("15:length|C")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("14:length|C")[^\n]*\n?)+'
test_c90-printf-2_257:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-2.c'
    sources:
      binary: c90-printf-2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-printf-2_258:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-2.c'
    sources:
      binary: c90-printf-2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-printf-2_35:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-2.c'
    sources:
      binary: c90-printf-2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-printf-2_36:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-2.c'
    sources:
      binary: c90-printf-2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-printf-2_479:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-2.c'
    sources:
      binary: c90-printf-2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-printf-2_480:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-2.c'
    sources:
      binary: c90-printf-2.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-printf-3_259:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-3.c'
    sources:
      binary: c90-printf-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-printf-3_260:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-3.c'
    sources:
      binary: c90-printf-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-printf-3_37:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-3.c'
    sources:
      binary: c90-printf-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-printf-3_38:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-3.c'
    sources:
      binary: c90-printf-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-printf-3_481:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-3.c'
    sources:
      binary: c90-printf-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-printf-3_482:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-3.c'
    sources:
      binary: c90-printf-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-scanf-1_261:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-1.c'
    sources:
      binary: c90-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("suppress")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("together")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("conversion lacks type")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("no closing")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-scanf-1_262:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-1.c'
    sources:
      binary: c90-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("suppress")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("together")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("conversion lacks type")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("no closing")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-scanf-1_39:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-1.c'
    sources:
      binary: c90-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("suppress")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("together")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("conversion lacks type")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("no closing")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-scanf-1_40:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-1.c'
    sources:
      binary: c90-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("suppress")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("together")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("conversion lacks type")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("no closing")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-scanf-1_483:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-1.c'
    sources:
      binary: c90-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("suppress")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("together")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("conversion lacks type")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("no closing")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-scanf-1_484:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-1.c'
    sources:
      binary: c90-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("constant")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("suppress")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("together")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("conversion lacks type")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("conversion")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("no closing")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-scanf-2_263:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-2.c'
    sources:
      binary: c90-scanf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-2_264:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-2.c'
    sources:
      binary: c90-scanf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-2_41:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-2.c'
    sources:
      binary: c90-scanf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-2_42:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-2.c'
    sources:
      binary: c90-scanf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-2_485:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-2.c'
    sources:
      binary: c90-scanf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-2_486:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-2.c'
    sources:
      binary: c90-scanf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-3_265:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-3.c'
    sources:
      binary: c90-scanf-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-3_266:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-3.c'
    sources:
      binary: c90-scanf-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-3_43:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-3.c'
    sources:
      binary: c90-scanf-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-3_44:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-3.c'
    sources:
      binary: c90-scanf-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-3_487:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-3.c'
    sources:
      binary: c90-scanf-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-3_488:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-3.c'
    sources:
      binary: c90-scanf-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-4_267:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-4.c'
    sources:
      binary: c90-scanf-4.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-scanf-4_268:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-4.c'
    sources:
      binary: c90-scanf-4.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-scanf-4_45:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-4.c'
    sources:
      binary: c90-scanf-4.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-scanf-4_46:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-4.c'
    sources:
      binary: c90-scanf-4.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-scanf-4_489:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-4.c'
    sources:
      binary: c90-scanf-4.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-scanf-4_490:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-4.c'
    sources:
      binary: c90-scanf-4.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c90-scanf-5_269:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-5.c'
    sources:
      binary: c90-scanf-5.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-5_270:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-5.c'
    sources:
      binary: c90-scanf-5.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-5_47:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-5.c'
    sources:
      binary: c90-scanf-5.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-5_48:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-5.c'
    sources:
      binary: c90-scanf-5.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-5_491:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-5.c'
    sources:
      binary: c90-scanf-5.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-scanf-5_492:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-5.c'
    sources:
      binary: c90-scanf-5.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-strftime-1_271:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-1.c'
    sources:
      binary: c90-strftime-1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
test_c90-strftime-1_272:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-1.c'
    sources:
      binary: c90-strftime-1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
test_c90-strftime-1_49:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-1.c'
    sources:
      binary: c90-strftime-1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
test_c90-strftime-1_493:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-1.c'
    sources:
      binary: c90-strftime-1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
test_c90-strftime-1_494:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-1.c'
    sources:
      binary: c90-strftime-1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
test_c90-strftime-1_50:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-1.c'
    sources:
      binary: c90-strftime-1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
test_c90-strftime-2_273:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-2.c'
    sources:
      binary: c90-strftime-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-strftime-2_274:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-2.c'
    sources:
      binary: c90-strftime-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-strftime-2_495:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-2.c'
    sources:
      binary: c90-strftime-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-strftime-2_496:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-2.c'
    sources:
      binary: c90-strftime-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-strftime-2_51:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-2.c'
    sources:
      binary: c90-strftime-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c90-strftime-2_52:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-2.c'
    sources:
      binary: c90-strftime-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c94-printf-1_275:
  build:
    cflags: "-std=iso9899:199409 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-printf-1.c'
    sources:
      binary: c94-printf-1.s
  group: GRPSERIAL
test_c94-printf-1_276:
  build:
    cflags: "-DWIDE  -std=iso9899:199409 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-printf-1.c'
    sources:
      binary: c94-printf-1.s
  group: GRPSERIAL
test_c94-printf-1_497:
  build:
    cflags: "-std=iso9899:199409 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-printf-1.c'
    sources:
      binary: c94-printf-1.s
  group: GRPSERIAL
test_c94-printf-1_498:
  build:
    cflags: "-DWIDE  -std=iso9899:199409 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-printf-1.c'
    sources:
      binary: c94-printf-1.s
  group: GRPSERIAL
test_c94-printf-1_53:
  build:
    cflags: "-std=iso9899:199409 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-printf-1.c'
    sources:
      binary: c94-printf-1.s
  group: GRPSERIAL
test_c94-printf-1_54:
  build:
    cflags: "-DWIDE  -std=iso9899:199409 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-printf-1.c'
    sources:
      binary: c94-printf-1.s
  group: GRPSERIAL
test_c94-scanf-1_277:
  build:
    cflags: "-std=iso9899:199409 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-scanf-1.c'
    sources:
      binary: c94-scanf-1.s
  group: GRPSERIAL
test_c94-scanf-1_278:
  build:
    cflags: "-DWIDE  -std=iso9899:199409 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-scanf-1.c'
    sources:
      binary: c94-scanf-1.s
  group: GRPSERIAL
test_c94-scanf-1_499:
  build:
    cflags: "-std=iso9899:199409 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-scanf-1.c'
    sources:
      binary: c94-scanf-1.s
  group: GRPSERIAL
test_c94-scanf-1_500:
  build:
    cflags: "-DWIDE  -std=iso9899:199409 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-scanf-1.c'
    sources:
      binary: c94-scanf-1.s
  group: GRPSERIAL
test_c94-scanf-1_55:
  build:
    cflags: "-std=iso9899:199409 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-scanf-1.c'
    sources:
      binary: c94-scanf-1.s
  group: GRPSERIAL
test_c94-scanf-1_56:
  build:
    cflags: "-DWIDE  -std=iso9899:199409 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-scanf-1.c'
    sources:
      binary: c94-scanf-1.s
  group: GRPSERIAL
test_c99-printf-1_279:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-1.c'
    sources:
      binary: c99-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("use of both|ignored")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("use of both|ignored")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_c99-printf-1_280:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-1.c'
    sources:
      binary: c99-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("use of both|ignored")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("use of both|ignored")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_c99-printf-1_501:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-1.c'
    sources:
      binary: c99-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("use of both|ignored")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("use of both|ignored")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_c99-printf-1_502:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-1.c'
    sources:
      binary: c99-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("use of both|ignored")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("use of both|ignored")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_c99-printf-1_57:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-1.c'
    sources:
      binary: c99-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("use of both|ignored")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("use of both|ignored")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_c99-printf-1_58:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-1.c'
    sources:
      binary: c99-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("use of both|ignored")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("use of both|ignored")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("ignored")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("flags|ignored")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length|C")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_c99-printf-2_281:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-2.c'
    sources:
      binary: c99-printf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-printf-2_282:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-2.c'
    sources:
      binary: c99-printf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-printf-2_503:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-2.c'
    sources:
      binary: c99-printf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-printf-2_504:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-2.c'
    sources:
      binary: c99-printf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-printf-2_59:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-2.c'
    sources:
      binary: c99-printf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-printf-2_60:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-2.c'
    sources:
      binary: c99-printf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-printf-3_283:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-3.c'
    sources:
      binary: c99-printf-3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c99-printf-3_284:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-3.c'
    sources:
      binary: c99-printf-3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c99-printf-3_505:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-3.c'
    sources:
      binary: c99-printf-3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c99-printf-3_506:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-3.c'
    sources:
      binary: c99-printf-3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c99-printf-3_61:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-3.c'
    sources:
      binary: c99-printf-3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c99-printf-3_62:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-3.c'
    sources:
      binary: c99-printf-3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c99-scanf-1_285:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-1.c'
    sources:
      binary: c99-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("suppress")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("together")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_c99-scanf-1_286:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-1.c'
    sources:
      binary: c99-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("suppress")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("together")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_c99-scanf-1_507:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-1.c'
    sources:
      binary: c99-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("suppress")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("together")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_c99-scanf-1_508:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-1.c'
    sources:
      binary: c99-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("suppress")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("together")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_c99-scanf-1_63:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-1.c'
    sources:
      binary: c99-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("suppress")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("together")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_c99-scanf-1_64:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-1.c'
    sources:
      binary: c99-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("does not support")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("suppress")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("together")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_c99-scanf-2_287:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-2.c'
    sources:
      binary: c99-scanf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-scanf-2_288:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-2.c'
    sources:
      binary: c99-scanf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-scanf-2_509:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-2.c'
    sources:
      binary: c99-scanf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-scanf-2_510:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-2.c'
    sources:
      binary: c99-scanf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-scanf-2_65:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-2.c'
    sources:
      binary: c99-scanf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-scanf-2_66:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-2.c'
    sources:
      binary: c99-scanf-2.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-scanf-3_289:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-3.c'
    sources:
      binary: c99-scanf-3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c99-scanf-3_290:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-3.c'
    sources:
      binary: c99-scanf-3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c99-scanf-3_511:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-3.c'
    sources:
      binary: c99-scanf-3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c99-scanf-3_512:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-3.c'
    sources:
      binary: c99-scanf-3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c99-scanf-3_67:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-3.c'
    sources:
      binary: c99-scanf-3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c99-scanf-3_68:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-3.c'
    sources:
      binary: c99-scanf-3.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_c99-scanf-4_291:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-4.c'
    sources:
      binary: c99-scanf-4.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-scanf-4_292:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-4.c'
    sources:
      binary: c99-scanf-4.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-scanf-4_513:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-4.c'
    sources:
      binary: c99-scanf-4.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-scanf-4_514:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-4.c'
    sources:
      binary: c99-scanf-4.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-scanf-4_69:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-4.c'
    sources:
      binary: c99-scanf-4.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-scanf-4_70:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-4.c'
    sources:
      binary: c99-scanf-4.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-strftime-1_293:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-1.c'
    sources:
      binary: c99-strftime-1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("multiple|repeated")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("multiple|together")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("multiple|together")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("multiple|repeated")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("in some locales")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("in some locales")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
test_c99-strftime-1_294:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-1.c'
    sources:
      binary: c99-strftime-1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("multiple|repeated")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("multiple|together")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("multiple|together")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("multiple|repeated")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("in some locales")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("in some locales")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
test_c99-strftime-1_515:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-1.c'
    sources:
      binary: c99-strftime-1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("multiple|repeated")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("multiple|together")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("multiple|together")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("multiple|repeated")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("in some locales")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("in some locales")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
test_c99-strftime-1_516:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-1.c'
    sources:
      binary: c99-strftime-1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("multiple|repeated")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("multiple|together")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("multiple|together")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("multiple|repeated")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("in some locales")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("in some locales")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
test_c99-strftime-1_71:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-1.c'
    sources:
      binary: c99-strftime-1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("multiple|repeated")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("multiple|together")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("multiple|together")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("multiple|repeated")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("in some locales")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("in some locales")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
test_c99-strftime-1_72:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-1.c'
    sources:
      binary: c99-strftime-1.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("some locales")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("multiple|repeated")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("multiple|together")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("multiple|together")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("multiple|repeated")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("in some locales")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("in some locales")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier|C")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
test_c99-strftime-2_295:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-2.c'
    sources:
      binary: c99-strftime-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-strftime-2_296:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-2.c'
    sources:
      binary: c99-strftime-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-strftime-2_517:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-2.c'
    sources:
      binary: c99-strftime-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-strftime-2_518:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-2.c'
    sources:
      binary: c99-strftime-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-strftime-2_73:
  build:
    cflags: "-std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-2.c'
    sources:
      binary: c99-strftime-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_c99-strftime-2_74:
  build:
    cflags: "-DWIDE  -std=iso9899:1999 -pedantic -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-2.c'
    sources:
      binary: c99-strftime-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_cast-1_297:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/cast-1.c'
    sources:
      binary: cast-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("cast from pointer
          to integer of different size")[^\n]*\n?)+'
test_cast-1_298:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/cast-1.c'
    sources:
      binary: cast-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("cast from pointer
          to integer of different size")[^\n]*\n?)+'
test_cast-1_519:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/cast-1.c'
    sources:
      binary: cast-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("cast from pointer
          to integer of different size")[^\n]*\n?)+'
test_cast-1_520:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/cast-1.c'
    sources:
      binary: cast-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("cast from pointer
          to integer of different size")[^\n]*\n?)+'
test_cast-1_75:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/cast-1.c'
    sources:
      binary: cast-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("cast from pointer
          to integer of different size")[^\n]*\n?)+'
test_cast-1_76:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/cast-1.c'
    sources:
      binary: cast-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("cast from pointer
          to integer of different size")[^\n]*\n?)+'
test_dfp-printf-1_299:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-printf-1.c'
    sources:
      binary: dfp-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_dfp-printf-1_300:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-printf-1.c'
    sources:
      binary: dfp-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_dfp-printf-1_521:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-printf-1.c'
    sources:
      binary: dfp-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_dfp-printf-1_522:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-printf-1.c'
    sources:
      binary: dfp-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_dfp-printf-1_77:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-printf-1.c'
    sources:
      binary: dfp-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_dfp-printf-1_78:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-printf-1.c'
    sources:
      binary: dfp-printf-1.s
  group: GRPSERIAL
  validate:
    match:
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("flag ignored")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_dfp-scanf-1_301:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-scanf-1.c'
    sources:
      binary: dfp-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_dfp-scanf-1_302:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-scanf-1.c'
    sources:
      binary: dfp-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_dfp-scanf-1_523:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-scanf-1.c'
    sources:
      binary: dfp-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_dfp-scanf-1_524:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-scanf-1.c'
    sources:
      binary: dfp-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_dfp-scanf-1_79:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-scanf-1.c'
    sources:
      binary: dfp-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_dfp-scanf-1_80:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-scanf-1.c'
    sources:
      binary: dfp-scanf-1.s
  group: GRPSERIAL
  validate:
    match:
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
test_diag-1_303:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-1.c'
    sources:
      binary: diag-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("hh")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ll")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("size_t")[^\n]*\n?)+'
test_diag-1_304:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-1.c'
    sources:
      binary: diag-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("hh")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ll")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("size_t")[^\n]*\n?)+'
test_diag-1_525:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-1.c'
    sources:
      binary: diag-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("hh")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ll")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("size_t")[^\n]*\n?)+'
test_diag-1_526:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-1.c'
    sources:
      binary: diag-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("hh")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ll")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("size_t")[^\n]*\n?)+'
test_diag-1_81:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-1.c'
    sources:
      binary: diag-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("hh")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ll")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("size_t")[^\n]*\n?)+'
test_diag-1_82:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-1.c'
    sources:
      binary: diag-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("hh")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("ll")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("size_t")[^\n]*\n?)+'
test_diag-2_305:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-2.c'
    sources:
      binary: diag-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("char \\\\*")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("size_t \\\\*")[^\n]*\n?)+'
test_diag-2_306:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-2.c'
    sources:
      binary: diag-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("char \\\\*")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("size_t \\\\*")[^\n]*\n?)+'
test_diag-2_527:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-2.c'
    sources:
      binary: diag-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("char \\\\*")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("size_t \\\\*")[^\n]*\n?)+'
test_diag-2_528:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-2.c'
    sources:
      binary: diag-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("char \\\\*")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("size_t \\\\*")[^\n]*\n?)+'
test_diag-2_83:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-2.c'
    sources:
      binary: diag-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("char \\\\*")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("size_t \\\\*")[^\n]*\n?)+'
test_diag-2_84:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-2.c'
    sources:
      binary: diag-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("char \\\\*")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("size_t \\\\*")[^\n]*\n?)+'
test_diagnostic-ranges_307:
  build:
    cflags: "-Wformat -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diagnostic-ranges.c'
    sources:
      binary: diagnostic-ranges.s
  group: GRPSERIAL
  validate:
    match:
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\''")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("17: format \''%s\''
          expects argument of type \''char \\\\*\'', but argument 2 has type \''long
          int\''")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("14: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 2 has type
          \''long int\''")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("28: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("28: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("29: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          3 has type \''long int\''")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("29: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          3 has type \''long int\''")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          argument of type \''char \\\\*\'', but argument 2 has type \''int\''")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("23: spurious trailing")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("20: empty left precision
          in gnu_strfmon format")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+(:210:)[^\n]*[0-9]+: warning:[^\n]*("22: empty precision
          in gnu_strfmon format")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("14: repeated \''\\\\+\''
          flag in format")[^\n]*\n?)+'
      L228:
        expect: true
        expr: '(^|\n)([^\n]+(:228:)[^\n]*[0-9]+: warning:[^\n]*("14:conversion lacks
          type at end of format")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("13:embedded")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+(:247:)[^\n]*[0-9]+: warning:[^\n]*("10: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+(:263:)[^\n]*[0-9]+: warning:[^\n]*("10: format \''%u\''
          expects argument of type \''unsigned int\'', but argument 2 has type \''const
          char \\\\*\'' ")[^\n]*\n?)+'
      L277:
        expect: true
        expr: '(^|\n)([^\n]+(:277:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''long int\'' ")[^\n]*\n?)+'
      L292:
        expect: true
        expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L312:
        expect: true
        expr: '(^|\n)([^\n]+(:312:)[^\n]*[0-9]+: warning:[^\n]*("20: format .%d. expects
          argument of type .int., but argument 2 has type .double.")[^\n]*\n?)+'
      L330:
        expect: true
        expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("20: format .%d. expects
          argument of type .int., but argument 2 has type .double.")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("29: format \''%s\''")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("29: format \''%s\''")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("11: format \''%d\''
          expects a matching \''int\'' argument")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
test_diagnostic-ranges_308:
  build:
    cflags: "-DWIDE  -Wformat -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diagnostic-ranges.c'
    sources:
      binary: diagnostic-ranges.s
  group: GRPSERIAL
  validate:
    match:
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\''")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("17: format \''%s\''
          expects argument of type \''char \\\\*\'', but argument 2 has type \''long
          int\''")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("14: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 2 has type
          \''long int\''")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("28: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("28: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("29: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          3 has type \''long int\''")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("29: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          3 has type \''long int\''")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          argument of type \''char \\\\*\'', but argument 2 has type \''int\''")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("23: spurious trailing")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("20: empty left precision
          in gnu_strfmon format")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+(:210:)[^\n]*[0-9]+: warning:[^\n]*("22: empty precision
          in gnu_strfmon format")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("14: repeated \''\\\\+\''
          flag in format")[^\n]*\n?)+'
      L228:
        expect: true
        expr: '(^|\n)([^\n]+(:228:)[^\n]*[0-9]+: warning:[^\n]*("14:conversion lacks
          type at end of format")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("13:embedded")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+(:247:)[^\n]*[0-9]+: warning:[^\n]*("10: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+(:263:)[^\n]*[0-9]+: warning:[^\n]*("10: format \''%u\''
          expects argument of type \''unsigned int\'', but argument 2 has type \''const
          char \\\\*\'' ")[^\n]*\n?)+'
      L277:
        expect: true
        expr: '(^|\n)([^\n]+(:277:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''long int\'' ")[^\n]*\n?)+'
      L292:
        expect: true
        expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L312:
        expect: true
        expr: '(^|\n)([^\n]+(:312:)[^\n]*[0-9]+: warning:[^\n]*("20: format .%d. expects
          argument of type .int., but argument 2 has type .double.")[^\n]*\n?)+'
      L330:
        expect: true
        expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("20: format .%d. expects
          argument of type .int., but argument 2 has type .double.")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("29: format \''%s\''")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("29: format \''%s\''")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("11: format \''%d\''
          expects a matching \''int\'' argument")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
test_diagnostic-ranges_529:
  build:
    cflags: "-Wformat -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diagnostic-ranges.c'
    sources:
      binary: diagnostic-ranges.s
  group: GRPSERIAL
  validate:
    match:
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\''")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("17: format \''%s\''
          expects argument of type \''char \\\\*\'', but argument 2 has type \''long
          int\''")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("14: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 2 has type
          \''long int\''")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("28: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("28: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("29: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          3 has type \''long int\''")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("29: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          3 has type \''long int\''")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          argument of type \''char \\\\*\'', but argument 2 has type \''int\''")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("23: spurious trailing")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("20: empty left precision
          in gnu_strfmon format")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+(:210:)[^\n]*[0-9]+: warning:[^\n]*("22: empty precision
          in gnu_strfmon format")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("14: repeated \''\\\\+\''
          flag in format")[^\n]*\n?)+'
      L228:
        expect: true
        expr: '(^|\n)([^\n]+(:228:)[^\n]*[0-9]+: warning:[^\n]*("14:conversion lacks
          type at end of format")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("13:embedded")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+(:247:)[^\n]*[0-9]+: warning:[^\n]*("10: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+(:263:)[^\n]*[0-9]+: warning:[^\n]*("10: format \''%u\''
          expects argument of type \''unsigned int\'', but argument 2 has type \''const
          char \\\\*\'' ")[^\n]*\n?)+'
      L277:
        expect: true
        expr: '(^|\n)([^\n]+(:277:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''long int\'' ")[^\n]*\n?)+'
      L292:
        expect: true
        expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L312:
        expect: true
        expr: '(^|\n)([^\n]+(:312:)[^\n]*[0-9]+: warning:[^\n]*("20: format .%d. expects
          argument of type .int., but argument 2 has type .double.")[^\n]*\n?)+'
      L330:
        expect: true
        expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("20: format .%d. expects
          argument of type .int., but argument 2 has type .double.")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("29: format \''%s\''")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("29: format \''%s\''")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("11: format \''%d\''
          expects a matching \''int\'' argument")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
test_diagnostic-ranges_530:
  build:
    cflags: "-DWIDE  -Wformat -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diagnostic-ranges.c'
    sources:
      binary: diagnostic-ranges.s
  group: GRPSERIAL
  validate:
    match:
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\''")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("17: format \''%s\''
          expects argument of type \''char \\\\*\'', but argument 2 has type \''long
          int\''")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("14: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 2 has type
          \''long int\''")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("28: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("28: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("29: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          3 has type \''long int\''")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("29: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          3 has type \''long int\''")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          argument of type \''char \\\\*\'', but argument 2 has type \''int\''")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("23: spurious trailing")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("20: empty left precision
          in gnu_strfmon format")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+(:210:)[^\n]*[0-9]+: warning:[^\n]*("22: empty precision
          in gnu_strfmon format")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("14: repeated \''\\\\+\''
          flag in format")[^\n]*\n?)+'
      L228:
        expect: true
        expr: '(^|\n)([^\n]+(:228:)[^\n]*[0-9]+: warning:[^\n]*("14:conversion lacks
          type at end of format")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("13:embedded")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+(:247:)[^\n]*[0-9]+: warning:[^\n]*("10: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+(:263:)[^\n]*[0-9]+: warning:[^\n]*("10: format \''%u\''
          expects argument of type \''unsigned int\'', but argument 2 has type \''const
          char \\\\*\'' ")[^\n]*\n?)+'
      L277:
        expect: true
        expr: '(^|\n)([^\n]+(:277:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''long int\'' ")[^\n]*\n?)+'
      L292:
        expect: true
        expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L312:
        expect: true
        expr: '(^|\n)([^\n]+(:312:)[^\n]*[0-9]+: warning:[^\n]*("20: format .%d. expects
          argument of type .int., but argument 2 has type .double.")[^\n]*\n?)+'
      L330:
        expect: true
        expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("20: format .%d. expects
          argument of type .int., but argument 2 has type .double.")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("29: format \''%s\''")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("29: format \''%s\''")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("11: format \''%d\''
          expects a matching \''int\'' argument")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
test_diagnostic-ranges_85:
  build:
    cflags: "-Wformat -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diagnostic-ranges.c'
    sources:
      binary: diagnostic-ranges.s
  group: GRPSERIAL
  validate:
    match:
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\''")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("17: format \''%s\''
          expects argument of type \''char \\\\*\'', but argument 2 has type \''long
          int\''")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("14: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 2 has type
          \''long int\''")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("28: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("28: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("29: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          3 has type \''long int\''")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("29: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          3 has type \''long int\''")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          argument of type \''char \\\\*\'', but argument 2 has type \''int\''")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("23: spurious trailing")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("20: empty left precision
          in gnu_strfmon format")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+(:210:)[^\n]*[0-9]+: warning:[^\n]*("22: empty precision
          in gnu_strfmon format")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("14: repeated \''\\\\+\''
          flag in format")[^\n]*\n?)+'
      L228:
        expect: true
        expr: '(^|\n)([^\n]+(:228:)[^\n]*[0-9]+: warning:[^\n]*("14:conversion lacks
          type at end of format")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("13:embedded")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+(:247:)[^\n]*[0-9]+: warning:[^\n]*("10: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+(:263:)[^\n]*[0-9]+: warning:[^\n]*("10: format \''%u\''
          expects argument of type \''unsigned int\'', but argument 2 has type \''const
          char \\\\*\'' ")[^\n]*\n?)+'
      L277:
        expect: true
        expr: '(^|\n)([^\n]+(:277:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''long int\'' ")[^\n]*\n?)+'
      L292:
        expect: true
        expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L312:
        expect: true
        expr: '(^|\n)([^\n]+(:312:)[^\n]*[0-9]+: warning:[^\n]*("20: format .%d. expects
          argument of type .int., but argument 2 has type .double.")[^\n]*\n?)+'
      L330:
        expect: true
        expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("20: format .%d. expects
          argument of type .int., but argument 2 has type .double.")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("29: format \''%s\''")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("29: format \''%s\''")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("11: format \''%d\''
          expects a matching \''int\'' argument")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
test_diagnostic-ranges_86:
  build:
    cflags: "-DWIDE  -Wformat -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diagnostic-ranges.c'
    sources:
      binary: diagnostic-ranges.s
  group: GRPSERIAL
  validate:
    match:
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\''")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("17: format \''%s\''
          expects argument of type \''char \\\\*\'', but argument 2 has type \''long
          int\''")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("14: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 2 has type
          \''long int\''")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("28: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("28: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("29: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          3 has type \''long int\''")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("29: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          3 has type \''long int\''")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          argument of type \''char \\\\*\'', but argument 2 has type \''int\''")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("23: spurious trailing")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("20: empty left precision
          in gnu_strfmon format")[^\n]*\n?)+'
      L210:
        expect: true
        expr: '(^|\n)([^\n]+(:210:)[^\n]*[0-9]+: warning:[^\n]*("22: empty precision
          in gnu_strfmon format")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("14: repeated \''\\\\+\''
          flag in format")[^\n]*\n?)+'
      L228:
        expect: true
        expr: '(^|\n)([^\n]+(:228:)[^\n]*[0-9]+: warning:[^\n]*("14:conversion lacks
          type at end of format")[^\n]*\n?)+'
      L237:
        expect: true
        expr: '(^|\n)([^\n]+(:237:)[^\n]*[0-9]+: warning:[^\n]*("13:embedded")[^\n]*\n?)+'
      L247:
        expect: true
        expr: '(^|\n)([^\n]+(:247:)[^\n]*[0-9]+: warning:[^\n]*("10: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+(:263:)[^\n]*[0-9]+: warning:[^\n]*("10: format \''%u\''
          expects argument of type \''unsigned int\'', but argument 2 has type \''const
          char \\\\*\'' ")[^\n]*\n?)+'
      L277:
        expect: true
        expr: '(^|\n)([^\n]+(:277:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''long int\'' ")[^\n]*\n?)+'
      L292:
        expect: true
        expr: '(^|\n)([^\n]+(:292:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%i\''
          expects argument of type \''int\'', but argument 2 has type \''const char
          \\\\*\'' ")[^\n]*\n?)+'
      L312:
        expect: true
        expr: '(^|\n)([^\n]+(:312:)[^\n]*[0-9]+: warning:[^\n]*("20: format .%d. expects
          argument of type .int., but argument 2 has type .double.")[^\n]*\n?)+'
      L330:
        expect: true
        expr: '(^|\n)([^\n]+(:330:)[^\n]*[0-9]+: warning:[^\n]*("20: format .%d. expects
          argument of type .int., but argument 2 has type .double.")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("29: format \''%s\''")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("29: format \''%s\''")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("11: format \''%d\''
          expects a matching \''int\'' argument")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\'', but argument 2 has type \''const char \\\\*\''
          ")[^\n]*\n?)+'
test_errmk-1_309:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/errmk-1.c'
    sources:
      binary: errmk-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'
test_errmk-1_310:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/errmk-1.c'
    sources:
      binary: errmk-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'
test_errmk-1_531:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/errmk-1.c'
    sources:
      binary: errmk-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'
test_errmk-1_532:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/errmk-1.c'
    sources:
      binary: errmk-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'
test_errmk-1_87:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/errmk-1.c'
    sources:
      binary: errmk-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'
test_errmk-1_88:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/errmk-1.c'
    sources:
      binary: errmk-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'
test_ext-1_311:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-1.c'
    sources:
      binary: ext-1.s
  group: GRPSERIAL
  validate:
    match:
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("no argument")[^\n]*\n?)+'
test_ext-1_312:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-1.c'
    sources:
      binary: ext-1.s
  group: GRPSERIAL
  validate:
    match:
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("no argument")[^\n]*\n?)+'
test_ext-1_533:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-1.c'
    sources:
      binary: ext-1.s
  group: GRPSERIAL
  validate:
    match:
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("no argument")[^\n]*\n?)+'
test_ext-1_534:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-1.c'
    sources:
      binary: ext-1.s
  group: GRPSERIAL
  validate:
    match:
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("no argument")[^\n]*\n?)+'
test_ext-1_89:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-1.c'
    sources:
      binary: ext-1.s
  group: GRPSERIAL
  validate:
    match:
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("no argument")[^\n]*\n?)+'
test_ext-1_90:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-1.c'
    sources:
      binary: ext-1.s
  group: GRPSERIAL
  validate:
    match:
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("no argument")[^\n]*\n?)+'
test_ext-2_313:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-2.c'
    sources:
      binary: ext-2.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
test_ext-2_314:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-2.c'
    sources:
      binary: ext-2.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
test_ext-2_535:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-2.c'
    sources:
      binary: ext-2.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
test_ext-2_536:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-2.c'
    sources:
      binary: ext-2.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
test_ext-2_91:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-2.c'
    sources:
      binary: ext-2.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
test_ext-2_92:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-2.c'
    sources:
      binary: ext-2.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
test_ext-3_315:
  build:
    cflags: "-std=gnu99 -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-3.c'
    sources:
      binary: ext-3.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+(:140:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L198:
        expect: true
        expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+(:212:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+(:213:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
test_ext-3_316:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-3.c'
    sources:
      binary: ext-3.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+(:140:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L198:
        expect: true
        expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+(:212:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+(:213:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
test_ext-3_537:
  build:
    cflags: "-std=gnu99 -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-3.c'
    sources:
      binary: ext-3.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+(:140:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L198:
        expect: true
        expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+(:212:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+(:213:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
test_ext-3_538:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-3.c'
    sources:
      binary: ext-3.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+(:140:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L198:
        expect: true
        expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+(:212:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+(:213:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
test_ext-3_93:
  build:
    cflags: "-std=gnu99 -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-3.c'
    sources:
      binary: ext-3.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+(:140:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L198:
        expect: true
        expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+(:212:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+(:213:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
test_ext-3_94:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-3.c'
    sources:
      binary: ext-3.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+(:112:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+(:131:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+(:135:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+(:139:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+(:140:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+(:142:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+(:143:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L152:
        expect: true
        expr: '(^|\n)([^\n]+(:152:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L198:
        expect: true
        expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L209:
        expect: true
        expr: '(^|\n)([^\n]+(:209:)[^\n]*[0-9]+: warning:[^\n]*("flag|modifier")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+(:212:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L213:
        expect: true
        expr: '(^|\n)([^\n]+(:213:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("only last 2")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+(:89:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+(:90:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+(:91:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+(:93:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L94:
        expect: true
        expr: '(^|\n)([^\n]+(:94:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+(:95:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+(:97:)[^\n]*[0-9]+: warning:[^\n]*("width")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
test_ext-4_317:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-4.c'
    sources:
      binary: ext-4.s
  group: GRPSERIAL
test_ext-4_318:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-4.c'
    sources:
      binary: ext-4.s
  group: GRPSERIAL
test_ext-4_539:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-4.c'
    sources:
      binary: ext-4.s
  group: GRPSERIAL
test_ext-4_540:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-4.c'
    sources:
      binary: ext-4.s
  group: GRPSERIAL
test_ext-4_95:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-4.c'
    sources:
      binary: ext-4.s
  group: GRPSERIAL
test_ext-4_96:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-4.c'
    sources:
      binary: ext-4.s
  group: GRPSERIAL
test_ext-5_319:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-5.c'
    sources:
      binary: ext-5.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_ext-5_320:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-5.c'
    sources:
      binary: ext-5.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_ext-5_541:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-5.c'
    sources:
      binary: ext-5.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_ext-5_542:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-5.c'
    sources:
      binary: ext-5.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_ext-5_97:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-5.c'
    sources:
      binary: ext-5.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_ext-5_98:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-5.c'
    sources:
      binary: ext-5.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_ext-6_100:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-6.c'
    sources:
      binary: ext-6.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_ext-6_321:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-6.c'
    sources:
      binary: ext-6.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_ext-6_322:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-6.c'
    sources:
      binary: ext-6.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_ext-6_543:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-6.c'
    sources:
      binary: ext-6.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_ext-6_544:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-6.c'
    sources:
      binary: ext-6.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_ext-6_99:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-6.c'
    sources:
      binary: ext-6.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_ext-7_101:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-7.c'
    sources:
      binary: ext-7.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("but argument 2 has
          type")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("but argument 2 has
          type")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
test_ext-7_102:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-7.c'
    sources:
      binary: ext-7.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("but argument 2 has
          type")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("but argument 2 has
          type")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
test_ext-7_323:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-7.c'
    sources:
      binary: ext-7.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("but argument 2 has
          type")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("but argument 2 has
          type")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
test_ext-7_324:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-7.c'
    sources:
      binary: ext-7.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("but argument 2 has
          type")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("but argument 2 has
          type")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
test_ext-7_545:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-7.c'
    sources:
      binary: ext-7.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("but argument 2 has
          type")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("but argument 2 has
          type")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
test_ext-7_546:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-7.c'
    sources:
      binary: ext-7.s
  group: GRPSERIAL
  validate:
    match:
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("but argument 2 has
          type")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("but argument 2 has
          type")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+(:72:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L74:
        expect: true
        expr: '(^|\n)([^\n]+(:74:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+(:75:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L76:
        expect: true
        expr: '(^|\n)([^\n]+(:76:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+(:77:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag together")[^\n]*\n?)+'
test_ext-8_103:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-8.c'
    sources:
      binary: ext-8.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
test_ext-8_104:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-8.c'
    sources:
      binary: ext-8.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
test_ext-8_325:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-8.c'
    sources:
      binary: ext-8.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
test_ext-8_326:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-8.c'
    sources:
      binary: ext-8.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
test_ext-8_547:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-8.c'
    sources:
      binary: ext-8.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
test_ext-8_548:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-8.c'
    sources:
      binary: ext-8.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("assignment suppression
          and length modifier")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("flag used with")[^\n]*\n?)+'
test_few-1_105:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/few-1.c'
    sources:
      binary: few-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("field width specifier
          \''\\\\*\'' expects argument of type \''int\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          argument of type \''char \\\\*\''")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\''")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          a matching \''int\'' argument")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          a matching \''wint_t\'' argument")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          argument of type \''wint_t\''")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int \\\\*\''")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          a matching \''wchar_t \\\\*\'' argument")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          argument of type \''wchar_t \\\\*\''")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("field width specifier
          \''\\\\*\'' expects a matching \''int\'' argument")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("field precision specifier
          \''\\\\.\\\\*\'' expects a matching \''int\'' argument")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
test_few-1_106:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/few-1.c'
    sources:
      binary: few-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("field width specifier
          \''\\\\*\'' expects argument of type \''int\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          argument of type \''char \\\\*\''")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\''")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          a matching \''int\'' argument")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          a matching \''wint_t\'' argument")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          argument of type \''wint_t\''")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int \\\\*\''")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          a matching \''wchar_t \\\\*\'' argument")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          argument of type \''wchar_t \\\\*\''")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("field width specifier
          \''\\\\*\'' expects a matching \''int\'' argument")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("field precision specifier
          \''\\\\.\\\\*\'' expects a matching \''int\'' argument")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
test_few-1_327:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/few-1.c'
    sources:
      binary: few-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("field width specifier
          \''\\\\*\'' expects argument of type \''int\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          argument of type \''char \\\\*\''")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\''")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          a matching \''int\'' argument")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          a matching \''wint_t\'' argument")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          argument of type \''wint_t\''")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int \\\\*\''")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          a matching \''wchar_t \\\\*\'' argument")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          argument of type \''wchar_t \\\\*\''")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("field width specifier
          \''\\\\*\'' expects a matching \''int\'' argument")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("field precision specifier
          \''\\\\.\\\\*\'' expects a matching \''int\'' argument")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
test_few-1_328:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/few-1.c'
    sources:
      binary: few-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("field width specifier
          \''\\\\*\'' expects argument of type \''int\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          argument of type \''char \\\\*\''")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\''")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          a matching \''int\'' argument")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          a matching \''wint_t\'' argument")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          argument of type \''wint_t\''")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int \\\\*\''")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          a matching \''wchar_t \\\\*\'' argument")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          argument of type \''wchar_t \\\\*\''")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("field width specifier
          \''\\\\*\'' expects a matching \''int\'' argument")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("field precision specifier
          \''\\\\.\\\\*\'' expects a matching \''int\'' argument")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
test_few-1_549:
  build:
    cflags: "-std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/few-1.c'
    sources:
      binary: few-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("field width specifier
          \''\\\\*\'' expects argument of type \''int\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          argument of type \''char \\\\*\''")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\''")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          a matching \''int\'' argument")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          a matching \''wint_t\'' argument")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          argument of type \''wint_t\''")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int \\\\*\''")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          a matching \''wchar_t \\\\*\'' argument")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          argument of type \''wchar_t \\\\*\''")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("field width specifier
          \''\\\\*\'' expects a matching \''int\'' argument")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("field precision specifier
          \''\\\\.\\\\*\'' expects a matching \''int\'' argument")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
test_few-1_550:
  build:
    cflags: "-DWIDE  -std=gnu89 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/few-1.c'
    sources:
      binary: few-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("field width specifier
          \''\\\\*\'' expects argument of type \''int\''")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          argument of type \''char \\\\*\''")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int\''")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          a matching \''int\'' argument")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          a matching \''wint_t\'' argument")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          argument of type \''wint_t\''")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("format \''%i\'' expects
          argument of type \''int \\\\*\''")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          a matching \''wchar_t \\\\*\'' argument")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format \''%lc\'' expects
          argument of type \''wchar_t \\\\*\''")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("field width specifier
          \''\\\\*\'' expects a matching \''int\'' argument")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("field precision specifier
          \''\\\\.\\\\*\'' expects a matching \''int\'' argument")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("format \''%s\'' expects
          a matching \''char \\\\*\'' argument")[^\n]*\n?)+'
test_gcc_diag-1_107:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-1.c'
    sources:
      binary: gcc_diag-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+(:140:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L202:
        expect: true
        expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+(:212:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L214:
        expect: true
        expr: '(^|\n)([^\n]+(:214:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L216:
        expect: true
        expr: '(^|\n)([^\n]+(:216:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+(:220:)[^\n]*[0-9]+: warning:[^\n]*("wide")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+(:221:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L224:
        expect: true
        expr: '(^|\n)([^\n]+(:224:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_gcc_diag-1_108:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-1.c'
    sources:
      binary: gcc_diag-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+(:140:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L202:
        expect: true
        expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+(:212:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L214:
        expect: true
        expr: '(^|\n)([^\n]+(:214:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L216:
        expect: true
        expr: '(^|\n)([^\n]+(:216:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+(:220:)[^\n]*[0-9]+: warning:[^\n]*("wide")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+(:221:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L224:
        expect: true
        expr: '(^|\n)([^\n]+(:224:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_gcc_diag-1_329:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-1.c'
    sources:
      binary: gcc_diag-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+(:140:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L202:
        expect: true
        expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+(:212:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L214:
        expect: true
        expr: '(^|\n)([^\n]+(:214:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L216:
        expect: true
        expr: '(^|\n)([^\n]+(:216:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+(:220:)[^\n]*[0-9]+: warning:[^\n]*("wide")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+(:221:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L224:
        expect: true
        expr: '(^|\n)([^\n]+(:224:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_gcc_diag-1_330:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-1.c'
    sources:
      binary: gcc_diag-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+(:140:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L202:
        expect: true
        expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+(:212:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L214:
        expect: true
        expr: '(^|\n)([^\n]+(:214:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L216:
        expect: true
        expr: '(^|\n)([^\n]+(:216:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+(:220:)[^\n]*[0-9]+: warning:[^\n]*("wide")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+(:221:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L224:
        expect: true
        expr: '(^|\n)([^\n]+(:224:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_gcc_diag-1_551:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-1.c'
    sources:
      binary: gcc_diag-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+(:140:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L202:
        expect: true
        expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+(:212:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L214:
        expect: true
        expr: '(^|\n)([^\n]+(:214:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L216:
        expect: true
        expr: '(^|\n)([^\n]+(:216:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+(:220:)[^\n]*[0-9]+: warning:[^\n]*("wide")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+(:221:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L224:
        expect: true
        expr: '(^|\n)([^\n]+(:224:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_gcc_diag-1_552:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-1.c'
    sources:
      binary: gcc_diag-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L102:
        expect: true
        expr: '(^|\n)([^\n]+(:102:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+(:108:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+(:109:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L110:
        expect: true
        expr: '(^|\n)([^\n]+(:110:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L114:
        expect: true
        expr: '(^|\n)([^\n]+(:114:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+(:115:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+(:119:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+(:120:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+(:123:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+(:125:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L126:
        expect: true
        expr: '(^|\n)([^\n]+(:126:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+(:127:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+(:128:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L130:
        expect: true
        expr: '(^|\n)([^\n]+(:130:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+(:132:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+(:133:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+(:134:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+(:137:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+(:138:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L140:
        expect: true
        expr: '(^|\n)([^\n]+(:140:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L141:
        expect: true
        expr: '(^|\n)([^\n]+(:141:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+(:144:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+(:145:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+(:147:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+(:148:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+(:149:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+(:150:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L151:
        expect: true
        expr: '(^|\n)([^\n]+(:151:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L154:
        expect: true
        expr: '(^|\n)([^\n]+(:154:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L155:
        expect: true
        expr: '(^|\n)([^\n]+(:155:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L156:
        expect: true
        expr: '(^|\n)([^\n]+(:156:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L157:
        expect: true
        expr: '(^|\n)([^\n]+(:157:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L158:
        expect: true
        expr: '(^|\n)([^\n]+(:158:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L159:
        expect: true
        expr: '(^|\n)([^\n]+(:159:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L161:
        expect: true
        expr: '(^|\n)([^\n]+(:161:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L162:
        expect: true
        expr: '(^|\n)([^\n]+(:162:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L163:
        expect: true
        expr: '(^|\n)([^\n]+(:163:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L164:
        expect: true
        expr: '(^|\n)([^\n]+(:164:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L165:
        expect: true
        expr: '(^|\n)([^\n]+(:165:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L166:
        expect: true
        expr: '(^|\n)([^\n]+(:166:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+(:167:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+(:168:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+(:169:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+(:170:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L171:
        expect: true
        expr: '(^|\n)([^\n]+(:171:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L172:
        expect: true
        expr: '(^|\n)([^\n]+(:172:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L173:
        expect: true
        expr: '(^|\n)([^\n]+(:173:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L174:
        expect: true
        expr: '(^|\n)([^\n]+(:174:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L175:
        expect: true
        expr: '(^|\n)([^\n]+(:175:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L176:
        expect: true
        expr: '(^|\n)([^\n]+(:176:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L177:
        expect: true
        expr: '(^|\n)([^\n]+(:177:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L178:
        expect: true
        expr: '(^|\n)([^\n]+(:178:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L179:
        expect: true
        expr: '(^|\n)([^\n]+(:179:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L180:
        expect: true
        expr: '(^|\n)([^\n]+(:180:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L181:
        expect: true
        expr: '(^|\n)([^\n]+(:181:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L182:
        expect: true
        expr: '(^|\n)([^\n]+(:182:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L184:
        expect: true
        expr: '(^|\n)([^\n]+(:184:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L185:
        expect: true
        expr: '(^|\n)([^\n]+(:185:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L186:
        expect: true
        expr: '(^|\n)([^\n]+(:186:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L187:
        expect: true
        expr: '(^|\n)([^\n]+(:187:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L188:
        expect: true
        expr: '(^|\n)([^\n]+(:188:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L189:
        expect: true
        expr: '(^|\n)([^\n]+(:189:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L191:
        expect: true
        expr: '(^|\n)([^\n]+(:191:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L192:
        expect: true
        expr: '(^|\n)([^\n]+(:192:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L193:
        expect: true
        expr: '(^|\n)([^\n]+(:193:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L194:
        expect: true
        expr: '(^|\n)([^\n]+(:194:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L195:
        expect: true
        expr: '(^|\n)([^\n]+(:195:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L196:
        expect: true
        expr: '(^|\n)([^\n]+(:196:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L197:
        expect: true
        expr: '(^|\n)([^\n]+(:197:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+(:199:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+(:200:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+(:201:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L202:
        expect: true
        expr: '(^|\n)([^\n]+(:202:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L203:
        expect: true
        expr: '(^|\n)([^\n]+(:203:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L204:
        expect: true
        expr: '(^|\n)([^\n]+(:204:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L206:
        expect: true
        expr: '(^|\n)([^\n]+(:206:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L207:
        expect: true
        expr: '(^|\n)([^\n]+(:207:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L208:
        expect: true
        expr: '(^|\n)([^\n]+(:208:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L211:
        expect: true
        expr: '(^|\n)([^\n]+(:211:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L212:
        expect: true
        expr: '(^|\n)([^\n]+(:212:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L214:
        expect: true
        expr: '(^|\n)([^\n]+(:214:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L215:
        expect: true
        expr: '(^|\n)([^\n]+(:215:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L216:
        expect: true
        expr: '(^|\n)([^\n]+(:216:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L217:
        expect: true
        expr: '(^|\n)([^\n]+(:217:)[^\n]*[0-9]+: warning:[^\n]*("embedded|too many")[^\n]*\n?)+'
      L218:
        expect: true
        expr: '(^|\n)([^\n]+(:218:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L219:
        expect: true
        expr: '(^|\n)([^\n]+(:219:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L220:
        expect: true
        expr: '(^|\n)([^\n]+(:220:)[^\n]*[0-9]+: warning:[^\n]*("wide")[^\n]*\n?)+'
      L221:
        expect: true
        expr: '(^|\n)([^\n]+(:221:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L224:
        expect: true
        expr: '(^|\n)([^\n]+(:224:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_gcc_diag-2_109:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-2.c'
    sources:
      binary: gcc_diag-2.s
  group: GRPSERIAL
test_gcc_diag-2_110:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-2.c'
    sources:
      binary: gcc_diag-2.s
  group: GRPSERIAL
test_gcc_diag-2_331:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-2.c'
    sources:
      binary: gcc_diag-2.s
  group: GRPSERIAL
test_gcc_diag-2_332:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-2.c'
    sources:
      binary: gcc_diag-2.s
  group: GRPSERIAL
test_gcc_diag-2_553:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-2.c'
    sources:
      binary: gcc_diag-2.s
  group: GRPSERIAL
test_gcc_diag-2_554:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-2.c'
    sources:
      binary: gcc_diag-2.s
  group: GRPSERIAL
test_gcc_diag-3_111:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-3.c'
    sources:
      binary: gcc_diag-3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''tree\'' is
          not defined as a type")[^\n]*\n?)+'
test_gcc_diag-3_112:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-3.c'
    sources:
      binary: gcc_diag-3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''tree\'' is
          not defined as a type")[^\n]*\n?)+'
test_gcc_diag-3_333:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-3.c'
    sources:
      binary: gcc_diag-3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''tree\'' is
          not defined as a type")[^\n]*\n?)+'
test_gcc_diag-3_334:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-3.c'
    sources:
      binary: gcc_diag-3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''tree\'' is
          not defined as a type")[^\n]*\n?)+'
test_gcc_diag-3_555:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-3.c'
    sources:
      binary: gcc_diag-3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''tree\'' is
          not defined as a type")[^\n]*\n?)+'
test_gcc_diag-3_556:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-3.c'
    sources:
      binary: gcc_diag-3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''tree\'' is
          not defined as a type")[^\n]*\n?)+'
test_gcc_diag-4_113:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-4.c'
    sources:
      binary: gcc_diag-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''tree\'' is
          not defined as a pointer type")[^\n]*\n?)+'
test_gcc_diag-4_114:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-4.c'
    sources:
      binary: gcc_diag-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''tree\'' is
          not defined as a pointer type")[^\n]*\n?)+'
test_gcc_diag-4_335:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-4.c'
    sources:
      binary: gcc_diag-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''tree\'' is
          not defined as a pointer type")[^\n]*\n?)+'
test_gcc_diag-4_336:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-4.c'
    sources:
      binary: gcc_diag-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''tree\'' is
          not defined as a pointer type")[^\n]*\n?)+'
test_gcc_diag-4_557:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-4.c'
    sources:
      binary: gcc_diag-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''tree\'' is
          not defined as a pointer type")[^\n]*\n?)+'
test_gcc_diag-4_558:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-4.c'
    sources:
      binary: gcc_diag-4.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''tree\'' is
          not defined as a pointer type")[^\n]*\n?)+'
test_gcc_diag-5_115:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-5.c'
    sources:
      binary: gcc_diag-5.s
  group: GRPSERIAL
test_gcc_diag-5_116:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-5.c'
    sources:
      binary: gcc_diag-5.s
  group: GRPSERIAL
test_gcc_diag-5_337:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-5.c'
    sources:
      binary: gcc_diag-5.s
  group: GRPSERIAL
test_gcc_diag-5_338:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-5.c'
    sources:
      binary: gcc_diag-5.s
  group: GRPSERIAL
test_gcc_diag-5_559:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-5.c'
    sources:
      binary: gcc_diag-5.s
  group: GRPSERIAL
test_gcc_diag-5_560:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-5.c'
    sources:
      binary: gcc_diag-5.s
  group: GRPSERIAL
test_gcc_diag-6_117:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-6.c'
    sources:
      binary: gcc_diag-6.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''location_t\''
          is not defined as a type")[^\n]*\n?)+'
test_gcc_diag-6_118:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-6.c'
    sources:
      binary: gcc_diag-6.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''location_t\''
          is not defined as a type")[^\n]*\n?)+'
test_gcc_diag-6_339:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-6.c'
    sources:
      binary: gcc_diag-6.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''location_t\''
          is not defined as a type")[^\n]*\n?)+'
test_gcc_diag-6_340:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-6.c'
    sources:
      binary: gcc_diag-6.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''location_t\''
          is not defined as a type")[^\n]*\n?)+'
test_gcc_diag-6_561:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-6.c'
    sources:
      binary: gcc_diag-6.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''location_t\''
          is not defined as a type")[^\n]*\n?)+'
test_gcc_diag-6_562:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-6.c'
    sources:
      binary: gcc_diag-6.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''location_t\''
          is not defined as a type")[^\n]*\n?)+'
test_gcc_diag-7_119:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-7.c'
    sources:
      binary: gcc_diag-7.s
  group: GRPSERIAL
test_gcc_diag-7_120:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-7.c'
    sources:
      binary: gcc_diag-7.s
  group: GRPSERIAL
test_gcc_diag-7_341:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-7.c'
    sources:
      binary: gcc_diag-7.s
  group: GRPSERIAL
test_gcc_diag-7_342:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-7.c'
    sources:
      binary: gcc_diag-7.s
  group: GRPSERIAL
test_gcc_diag-7_563:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-7.c'
    sources:
      binary: gcc_diag-7.s
  group: GRPSERIAL
test_gcc_diag-7_564:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-7.c'
    sources:
      binary: gcc_diag-7.s
  group: GRPSERIAL
test_gcc_diag-8_121:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-8.c'
    sources:
      binary: gcc_diag-8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_gcc_diag-8_122:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-8.c'
    sources:
      binary: gcc_diag-8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_gcc_diag-8_343:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-8.c'
    sources:
      binary: gcc_diag-8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_gcc_diag-8_344:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-8.c'
    sources:
      binary: gcc_diag-8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_gcc_diag-8_565:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-8.c'
    sources:
      binary: gcc_diag-8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_gcc_diag-8_566:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-8.c'
    sources:
      binary: gcc_diag-8.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as a type")[^\n]*\n?)+'
test_gcc_diag-9_123:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-9.c'
    sources:
      binary: gcc_diag-9.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as \''long\'' or \''long long\''")[^\n]*\n?)+'
test_gcc_diag-9_124:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-9.c'
    sources:
      binary: gcc_diag-9.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as \''long\'' or \''long long\''")[^\n]*\n?)+'
test_gcc_diag-9_345:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-9.c'
    sources:
      binary: gcc_diag-9.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as \''long\'' or \''long long\''")[^\n]*\n?)+'
test_gcc_diag-9_346:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-9.c'
    sources:
      binary: gcc_diag-9.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as \''long\'' or \''long long\''")[^\n]*\n?)+'
test_gcc_diag-9_567:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-9.c'
    sources:
      binary: gcc_diag-9.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as \''long\'' or \''long long\''")[^\n]*\n?)+'
test_gcc_diag-9_568:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-9.c'
    sources:
      binary: gcc_diag-9.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''__gcc_host_wide_int__\''
          is not defined as \''long\'' or \''long long\''")[^\n]*\n?)+'
test_gcc_gfc-1_125:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-1.c'
    sources:
      binary: gcc_gfc-1.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_gcc_gfc-1_126:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-1.c'
    sources:
      binary: gcc_gfc-1.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_gcc_gfc-1_347:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-1.c'
    sources:
      binary: gcc_gfc-1.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_gcc_gfc-1_348:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-1.c'
    sources:
      binary: gcc_gfc-1.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_gcc_gfc-1_569:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-1.c'
    sources:
      binary: gcc_gfc-1.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_gcc_gfc-1_570:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-1.c'
    sources:
      binary: gcc_gfc-1.s
  group: GRPSERIAL
  validate:
    match:
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_gcc_gfc-2_127:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-2.c'
    sources:
      binary: gcc_gfc-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of void")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("locus")[^\n]*\n?)+'
test_gcc_gfc-2_128:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-2.c'
    sources:
      binary: gcc_gfc-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of void")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("locus")[^\n]*\n?)+'
test_gcc_gfc-2_349:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-2.c'
    sources:
      binary: gcc_gfc-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of void")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("locus")[^\n]*\n?)+'
test_gcc_gfc-2_350:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-2.c'
    sources:
      binary: gcc_gfc-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of void")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("locus")[^\n]*\n?)+'
test_gcc_gfc-2_571:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-2.c'
    sources:
      binary: gcc_gfc-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of void")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("locus")[^\n]*\n?)+'
test_gcc_gfc-2_572:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-2.c'
    sources:
      binary: gcc_gfc-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array of void")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("locus")[^\n]*\n?)+'
test_miss-1_129:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-1.c'
    sources:
      binary: miss-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-1_130:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-1.c'
    sources:
      binary: miss-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-1_351:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-1.c'
    sources:
      binary: miss-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-1_352:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-1.c'
    sources:
      binary: miss-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-1_573:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-1.c'
    sources:
      binary: miss-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-1_574:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-1.c'
    sources:
      binary: miss-1.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-2_131:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-2.c'
    sources:
      binary: miss-2.s
  group: GRPSERIAL
test_miss-2_132:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-2.c'
    sources:
      binary: miss-2.s
  group: GRPSERIAL
test_miss-2_353:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-2.c'
    sources:
      binary: miss-2.s
  group: GRPSERIAL
test_miss-2_354:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-2.c'
    sources:
      binary: miss-2.s
  group: GRPSERIAL
test_miss-2_575:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-2.c'
    sources:
      binary: miss-2.s
  group: GRPSERIAL
test_miss-2_576:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-2.c'
    sources:
      binary: miss-2.s
  group: GRPSERIAL
test_miss-3_133:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-3.c'
    sources:
      binary: miss-3.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-3_134:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-3.c'
    sources:
      binary: miss-3.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-3_355:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-3.c'
    sources:
      binary: miss-3.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-3_356:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-3.c'
    sources:
      binary: miss-3.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-3_577:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-3.c'
    sources:
      binary: miss-3.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-3_578:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-3.c'
    sources:
      binary: miss-3.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-4_135:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-4.c'
    sources:
      binary: miss-4.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-4_136:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-4.c'
    sources:
      binary: miss-4.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-4_357:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-4.c'
    sources:
      binary: miss-4.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-4_358:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-4.c'
    sources:
      binary: miss-4.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-4_579:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-4.c'
    sources:
      binary: miss-4.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-4_580:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-4.c'
    sources:
      binary: miss-4.s
  group: GRPSERIAL
  validate:
    match:
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-5_137:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-5.c'
    sources:
      binary: miss-5.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-5_138:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-5.c'
    sources:
      binary: miss-5.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-5_359:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-5.c'
    sources:
      binary: miss-5.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-5_360:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-5.c'
    sources:
      binary: miss-5.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-5_581:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-5.c'
    sources:
      binary: miss-5.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-5_582:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-5.c'
    sources:
      binary: miss-5.s
  group: GRPSERIAL
  validate:
    match:
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-6_139:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-6.c'
    sources:
      binary: miss-6.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-6_140:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-6.c'
    sources:
      binary: miss-6.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-6_361:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-6.c'
    sources:
      binary: miss-6.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-6_362:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-6.c'
    sources:
      binary: miss-6.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-6_583:
  build:
    cflags: "-std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-6.c'
    sources:
      binary: miss-6.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-6_584:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wmissing-format-attribute\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-6.c'
    sources:
      binary: miss-6.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("candidate")[^\n]*\n?)+'
test_miss-7_141:
  build:
    cflags: "-Wsuggest-attribute=format\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-7.c'
    sources:
      binary: miss-7.s
  group: GRPSERIAL
  validate:
    match:
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("function .bar. might
          be a candidate for .gnu_printf. format attribute")[^\n]*\n?)+'
test_miss-7_142:
  build:
    cflags: "-DWIDE  -Wsuggest-attribute=format\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-7.c'
    sources:
      binary: miss-7.s
  group: GRPSERIAL
  validate:
    match:
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("function .bar. might
          be a candidate for .gnu_printf. format attribute")[^\n]*\n?)+'
test_miss-7_363:
  build:
    cflags: "-Wsuggest-attribute=format\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-7.c'
    sources:
      binary: miss-7.s
  group: GRPSERIAL
  validate:
    match:
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("function .bar. might
          be a candidate for .gnu_printf. format attribute")[^\n]*\n?)+'
test_miss-7_364:
  build:
    cflags: "-DWIDE  -Wsuggest-attribute=format\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-7.c'
    sources:
      binary: miss-7.s
  group: GRPSERIAL
  validate:
    match:
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("function .bar. might
          be a candidate for .gnu_printf. format attribute")[^\n]*\n?)+'
test_miss-7_585:
  build:
    cflags: "-Wsuggest-attribute=format\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-7.c'
    sources:
      binary: miss-7.s
  group: GRPSERIAL
  validate:
    match:
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("function .bar. might
          be a candidate for .gnu_printf. format attribute")[^\n]*\n?)+'
test_miss-7_586:
  build:
    cflags: "-DWIDE  -Wsuggest-attribute=format\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-7.c'
    sources:
      binary: miss-7.s
  group: GRPSERIAL
  validate:
    match:
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("function .bar. might
          be a candidate for .gnu_printf. format attribute")[^\n]*\n?)+'
test_multattr-1_143:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-1.c'
    sources:
      binary: multattr-1.s
  group: GRPSERIAL
  validate:
    match:
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_multattr-1_144:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-1.c'
    sources:
      binary: multattr-1.s
  group: GRPSERIAL
  validate:
    match:
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_multattr-1_365:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-1.c'
    sources:
      binary: multattr-1.s
  group: GRPSERIAL
  validate:
    match:
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_multattr-1_366:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-1.c'
    sources:
      binary: multattr-1.s
  group: GRPSERIAL
  validate:
    match:
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_multattr-1_587:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-1.c'
    sources:
      binary: multattr-1.s
  group: GRPSERIAL
  validate:
    match:
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_multattr-1_588:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-1.c'
    sources:
      binary: multattr-1.s
  group: GRPSERIAL
  validate:
    match:
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_multattr-2_145:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-2.c'
    sources:
      binary: multattr-2.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_multattr-2_146:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-2.c'
    sources:
      binary: multattr-2.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_multattr-2_367:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-2.c'
    sources:
      binary: multattr-2.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_multattr-2_368:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-2.c'
    sources:
      binary: multattr-2.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_multattr-2_589:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-2.c'
    sources:
      binary: multattr-2.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_multattr-2_590:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-2.c'
    sources:
      binary: multattr-2.s
  group: GRPSERIAL
  validate:
    match:
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_multattr-3_147:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-3.c'
    sources:
      binary: multattr-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
test_multattr-3_148:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-3.c'
    sources:
      binary: multattr-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
test_multattr-3_369:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-3.c'
    sources:
      binary: multattr-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
test_multattr-3_370:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-3.c'
    sources:
      binary: multattr-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
test_multattr-3_591:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-3.c'
    sources:
      binary: multattr-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
test_multattr-3_592:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-3.c'
    sources:
      binary: multattr-3.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("int")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("long int")[^\n]*\n?)+'
test_no-exargs-1_149:
  build:
    cflags: "-std=gnu99 -Wformat -Wno-format-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-1.c'
    sources:
      binary: no-exargs-1.s
  group: GRPSERIAL
test_no-exargs-1_150:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wno-format-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-1.c'
    sources:
      binary: no-exargs-1.s
  group: GRPSERIAL
test_no-exargs-1_371:
  build:
    cflags: "-std=gnu99 -Wformat -Wno-format-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-1.c'
    sources:
      binary: no-exargs-1.s
  group: GRPSERIAL
test_no-exargs-1_372:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wno-format-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-1.c'
    sources:
      binary: no-exargs-1.s
  group: GRPSERIAL
test_no-exargs-1_593:
  build:
    cflags: "-std=gnu99 -Wformat -Wno-format-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-1.c'
    sources:
      binary: no-exargs-1.s
  group: GRPSERIAL
test_no-exargs-1_594:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wno-format-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-1.c'
    sources:
      binary: no-exargs-1.s
  group: GRPSERIAL
test_no-exargs-2_151:
  build:
    cflags: "-std=gnu99 -Wformat -Wno-format-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-2.c'
    sources:
      binary: no-exargs-2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
test_no-exargs-2_152:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wno-format-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-2.c'
    sources:
      binary: no-exargs-2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
test_no-exargs-2_373:
  build:
    cflags: "-std=gnu99 -Wformat -Wno-format-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-2.c'
    sources:
      binary: no-exargs-2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
test_no-exargs-2_374:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wno-format-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-2.c'
    sources:
      binary: no-exargs-2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
test_no-exargs-2_595:
  build:
    cflags: "-std=gnu99 -Wformat -Wno-format-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-2.c'
    sources:
      binary: no-exargs-2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
test_no-exargs-2_596:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wno-format-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-2.c'
    sources:
      binary: no-exargs-2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
test_no-y2k-1_153:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-y2k-1.c'
    sources:
      binary: no-y2k-1.s
  group: GRPSERIAL
test_no-y2k-1_154:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-y2k-1.c'
    sources:
      binary: no-y2k-1.s
  group: GRPSERIAL
test_no-y2k-1_375:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-y2k-1.c'
    sources:
      binary: no-y2k-1.s
  group: GRPSERIAL
test_no-y2k-1_376:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-y2k-1.c'
    sources:
      binary: no-y2k-1.s
  group: GRPSERIAL
test_no-y2k-1_597:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-y2k-1.c'
    sources:
      binary: no-y2k-1.s
  group: GRPSERIAL
test_no-y2k-1_598:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-y2k-1.c'
    sources:
      binary: no-y2k-1.s
  group: GRPSERIAL
test_nonlit-1_155:
  build:
    cflags: "-std=gnu99 -Wformat -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-1.c'
    sources:
      binary: nonlit-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
test_nonlit-1_156:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-1.c'
    sources:
      binary: nonlit-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
test_nonlit-1_377:
  build:
    cflags: "-std=gnu99 -Wformat -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-1.c'
    sources:
      binary: nonlit-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
test_nonlit-1_378:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-1.c'
    sources:
      binary: nonlit-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
test_nonlit-1_599:
  build:
    cflags: "-std=gnu99 -Wformat -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-1.c'
    sources:
      binary: nonlit-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
test_nonlit-1_600:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-1.c'
    sources:
      binary: nonlit-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
test_nonlit-2_157:
  build:
    cflags: "-std=gnu99 -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-2.c'
    sources:
      binary: nonlit-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
test_nonlit-2_158:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-2.c'
    sources:
      binary: nonlit-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
test_nonlit-2_379:
  build:
    cflags: "-std=gnu99 -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-2.c'
    sources:
      binary: nonlit-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
test_nonlit-2_380:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-2.c'
    sources:
      binary: nonlit-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
test_nonlit-2_601:
  build:
    cflags: "-std=gnu99 -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-2.c'
    sources:
      binary: nonlit-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
test_nonlit-2_602:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-2.c'
    sources:
      binary: nonlit-2.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("argument types")[^\n]*\n?)+'
test_nonlit-3_159:
  build:
    cflags: "-std=gnu99 -Wformat -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-3.c'
    sources:
      binary: nonlit-3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("format string")[^\n]*\n?)+'
test_nonlit-3_160:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-3.c'
    sources:
      binary: nonlit-3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("format string")[^\n]*\n?)+'
test_nonlit-3_381:
  build:
    cflags: "-std=gnu99 -Wformat -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-3.c'
    sources:
      binary: nonlit-3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("format string")[^\n]*\n?)+'
test_nonlit-3_382:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-3.c'
    sources:
      binary: nonlit-3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("format string")[^\n]*\n?)+'
test_nonlit-3_603:
  build:
    cflags: "-std=gnu99 -Wformat -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-3.c'
    sources:
      binary: nonlit-3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("format string")[^\n]*\n?)+'
test_nonlit-3_604:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-3.c'
    sources:
      binary: nonlit-3.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("format string")[^\n]*\n?)+'
test_nul-1_161:
  build:
    cflags: "-Wformat -Wno-format-contains-nul\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-1.c'
    sources:
      binary: nul-1.s
  group: GRPSERIAL
test_nul-1_162:
  build:
    cflags: "-DWIDE  -Wformat -Wno-format-contains-nul\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-1.c'
    sources:
      binary: nul-1.s
  group: GRPSERIAL
test_nul-1_383:
  build:
    cflags: "-Wformat -Wno-format-contains-nul\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-1.c'
    sources:
      binary: nul-1.s
  group: GRPSERIAL
test_nul-1_384:
  build:
    cflags: "-DWIDE  -Wformat -Wno-format-contains-nul\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-1.c'
    sources:
      binary: nul-1.s
  group: GRPSERIAL
test_nul-1_605:
  build:
    cflags: "-Wformat -Wno-format-contains-nul\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-1.c'
    sources:
      binary: nul-1.s
  group: GRPSERIAL
test_nul-1_606:
  build:
    cflags: "-DWIDE  -Wformat -Wno-format-contains-nul\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-1.c'
    sources:
      binary: nul-1.s
  group: GRPSERIAL
test_nul-2_163:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-2.c'
    sources:
      binary: nul-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("embedded .* in format")[^\n]*\n?)+'
test_nul-2_164:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-2.c'
    sources:
      binary: nul-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("embedded .* in format")[^\n]*\n?)+'
test_nul-2_385:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-2.c'
    sources:
      binary: nul-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("embedded .* in format")[^\n]*\n?)+'
test_nul-2_386:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-2.c'
    sources:
      binary: nul-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("embedded .* in format")[^\n]*\n?)+'
test_nul-2_607:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-2.c'
    sources:
      binary: nul-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("embedded .* in format")[^\n]*\n?)+'
test_nul-2_608:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-2.c'
    sources:
      binary: nul-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("embedded .* in format")[^\n]*\n?)+'
test_null-1_165:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/null-1.c'
    sources:
      binary: null-1.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
test_null-1_166:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/null-1.c'
    sources:
      binary: null-1.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
test_null-1_387:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/null-1.c'
    sources:
      binary: null-1.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
test_null-1_388:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/null-1.c'
    sources:
      binary: null-1.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
test_null-1_609:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/null-1.c'
    sources:
      binary: null-1.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
test_null-1_610:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/null-1.c'
    sources:
      binary: null-1.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("too many")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
test_opt-1_167:
  build:
    cflags: "-Wformat-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-1.c'
    sources:
      binary: opt-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-extra-args
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-1_168:
  build:
    cflags: "-DWIDE  -Wformat-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-1.c'
    sources:
      binary: opt-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-extra-args
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-1_389:
  build:
    cflags: "-Wformat-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-1.c'
    sources:
      binary: opt-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-extra-args
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-1_390:
  build:
    cflags: "-DWIDE  -Wformat-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-1.c'
    sources:
      binary: opt-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-extra-args
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-1_611:
  build:
    cflags: "-Wformat-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-1.c'
    sources:
      binary: opt-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-extra-args
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-1_612:
  build:
    cflags: "-DWIDE  -Wformat-extra-args\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-1.c'
    sources:
      binary: opt-1.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-extra-args
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-2_169:
  build:
    cflags: "-Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-2.c'
    sources:
      binary: opt-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-nonliteral
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-2_170:
  build:
    cflags: "-DWIDE  -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-2.c'
    sources:
      binary: opt-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-nonliteral
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-2_391:
  build:
    cflags: "-Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-2.c'
    sources:
      binary: opt-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-nonliteral
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-2_392:
  build:
    cflags: "-DWIDE  -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-2.c'
    sources:
      binary: opt-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-nonliteral
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-2_613:
  build:
    cflags: "-Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-2.c'
    sources:
      binary: opt-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-nonliteral
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-2_614:
  build:
    cflags: "-DWIDE  -Wformat-nonliteral\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-2.c'
    sources:
      binary: opt-2.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-nonliteral
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-3_171:
  build:
    cflags: "-Wformat-security\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-3.c'
    sources:
      binary: opt-3.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-security ignored
          without -Wformat")[^\n]*\n?)+'
test_opt-3_172:
  build:
    cflags: "-DWIDE  -Wformat-security\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-3.c'
    sources:
      binary: opt-3.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-security ignored
          without -Wformat")[^\n]*\n?)+'
test_opt-3_393:
  build:
    cflags: "-Wformat-security\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-3.c'
    sources:
      binary: opt-3.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-security ignored
          without -Wformat")[^\n]*\n?)+'
test_opt-3_394:
  build:
    cflags: "-DWIDE  -Wformat-security\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-3.c'
    sources:
      binary: opt-3.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-security ignored
          without -Wformat")[^\n]*\n?)+'
test_opt-3_615:
  build:
    cflags: "-Wformat-security\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-3.c'
    sources:
      binary: opt-3.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-security ignored
          without -Wformat")[^\n]*\n?)+'
test_opt-3_616:
  build:
    cflags: "-DWIDE  -Wformat-security\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-3.c'
    sources:
      binary: opt-3.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-security ignored
          without -Wformat")[^\n]*\n?)+'
test_opt-4_173:
  build:
    cflags: "-Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-4.c'
    sources:
      binary: opt-4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-y2k ignored
          without -Wformat")[^\n]*\n?)+'
test_opt-4_174:
  build:
    cflags: "-DWIDE  -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-4.c'
    sources:
      binary: opt-4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-y2k ignored
          without -Wformat")[^\n]*\n?)+'
test_opt-4_395:
  build:
    cflags: "-Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-4.c'
    sources:
      binary: opt-4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-y2k ignored
          without -Wformat")[^\n]*\n?)+'
test_opt-4_396:
  build:
    cflags: "-DWIDE  -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-4.c'
    sources:
      binary: opt-4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-y2k ignored
          without -Wformat")[^\n]*\n?)+'
test_opt-4_617:
  build:
    cflags: "-Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-4.c'
    sources:
      binary: opt-4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-y2k ignored
          without -Wformat")[^\n]*\n?)+'
test_opt-4_618:
  build:
    cflags: "-DWIDE  -Wformat-y2k\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-4.c'
    sources:
      binary: opt-4.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-y2k ignored
          without -Wformat")[^\n]*\n?)+'
test_opt-5_175:
  build:
    cflags: "-Wformat-zero-length\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-5.c'
    sources:
      binary: opt-5.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-zero-length
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-5_176:
  build:
    cflags: "-DWIDE  -Wformat-zero-length\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-5.c'
    sources:
      binary: opt-5.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-zero-length
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-5_397:
  build:
    cflags: "-Wformat-zero-length\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-5.c'
    sources:
      binary: opt-5.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-zero-length
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-5_398:
  build:
    cflags: "-DWIDE  -Wformat-zero-length\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-5.c'
    sources:
      binary: opt-5.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-zero-length
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-5_619:
  build:
    cflags: "-Wformat-zero-length\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-5.c'
    sources:
      binary: opt-5.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-zero-length
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-5_620:
  build:
    cflags: "-DWIDE  -Wformat-zero-length\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-5.c'
    sources:
      binary: opt-5.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-zero-length
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-6_177:
  build:
    cflags: "-Wformat-contains-nul\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-6.c'
    sources:
      binary: opt-6.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-contains-nul
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-6_178:
  build:
    cflags: "-DWIDE  -Wformat-contains-nul\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-6.c'
    sources:
      binary: opt-6.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-contains-nul
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-6_399:
  build:
    cflags: "-Wformat-contains-nul\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-6.c'
    sources:
      binary: opt-6.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-contains-nul
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-6_400:
  build:
    cflags: "-DWIDE  -Wformat-contains-nul\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-6.c'
    sources:
      binary: opt-6.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-contains-nul
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-6_621:
  build:
    cflags: "-Wformat-contains-nul\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-6.c'
    sources:
      binary: opt-6.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-contains-nul
          ignored without -Wformat")[^\n]*\n?)+'
test_opt-6_622:
  build:
    cflags: "-DWIDE  -Wformat-contains-nul\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-6.c'
    sources:
      binary: opt-6.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("-Wformat-contains-nul
          ignored without -Wformat")[^\n]*\n?)+'
test_plus-1_179:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/plus-1.c'
    sources:
      binary: plus-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
test_plus-1_180:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/plus-1.c'
    sources:
      binary: plus-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
test_plus-1_401:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/plus-1.c'
    sources:
      binary: plus-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
test_plus-1_402:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/plus-1.c'
    sources:
      binary: plus-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
test_plus-1_623:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/plus-1.c'
    sources:
      binary: plus-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
test_plus-1_624:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat=2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/plus-1.c'
    sources:
      binary: plus-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("arguments")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("not a string")[^\n]*\n?)+'
test_pr72858_181:
  build:
    cflags: "-Wformat -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr72858.c'
    sources:
      binary: pr72858.s
  group: GRPSERIAL
  validate:
    match:
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''int\''")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''unsigned int\''")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long int\''")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long unsigned int\''")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''double\''")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''double\''")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long double\''")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          int\''")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          unsigned int\''")[^\n]*\n?)+'
      L198:
        expect: true
        expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long int\''")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long unsigned int\''")[^\n]*\n?)+'
      L225:
        expect: true
        expr: '(^|\n)([^\n]+(:225:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''int\''")[^\n]*\n?)+'
      L232:
        expect: true
        expr: '(^|\n)([^\n]+(:232:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''unsigned int\''")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long int\''")[^\n]*\n?)+'
      L250:
        expect: true
        expr: '(^|\n)([^\n]+(:250:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long unsigned int\''")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+(:267:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%e\''
          expects argument of type \''double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          int\''")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+(:279:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%e\''
          expects argument of type \''double\'', but argument 3 has type \''long double\''")[^\n]*\n?)+'
      L296:
        expect: true
        expr: '(^|\n)([^\n]+(:296:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L306:
        expect: true
        expr: '(^|\n)([^\n]+(:306:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L313:
        expect: true
        expr: '(^|\n)([^\n]+(:313:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L331:
        expect: true
        expr: '(^|\n)([^\n]+(:331:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%E\''
          expects argument of type \''double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          unsigned int\''")[^\n]*\n?)+'
      L343:
        expect: true
        expr: '(^|\n)([^\n]+(:343:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%E\''
          expects argument of type \''double\'', but argument 3 has type \''long double\''")[^\n]*\n?)+'
      L360:
        expect: true
        expr: '(^|\n)([^\n]+(:360:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+(:368:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+(:375:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L392:
        expect: true
        expr: '(^|\n)([^\n]+(:392:)[^\n]*[0-9]+: warning:[^\n]*("26: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L398:
        expect: true
        expr: '(^|\n)([^\n]+(:398:)[^\n]*[0-9]+: warning:[^\n]*("28: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          4 has type \''long int\''")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+(:404:)[^\n]*[0-9]+: warning:[^\n]*("31: format \''%lld\''
          expects argument of type \''long long int\'', but argument 5 has type \''long
          int\''")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long int\''")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long unsigned int\''")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          double\''")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''void
          \\\\*\''")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''struct
          s\''")[^\n]*\n?)+'
test_pr72858_182:
  build:
    cflags: "-DWIDE  -Wformat -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr72858.c'
    sources:
      binary: pr72858.s
  group: GRPSERIAL
  validate:
    match:
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''int\''")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''unsigned int\''")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long int\''")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long unsigned int\''")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''double\''")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''double\''")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long double\''")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          int\''")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          unsigned int\''")[^\n]*\n?)+'
      L198:
        expect: true
        expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long int\''")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long unsigned int\''")[^\n]*\n?)+'
      L225:
        expect: true
        expr: '(^|\n)([^\n]+(:225:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''int\''")[^\n]*\n?)+'
      L232:
        expect: true
        expr: '(^|\n)([^\n]+(:232:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''unsigned int\''")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long int\''")[^\n]*\n?)+'
      L250:
        expect: true
        expr: '(^|\n)([^\n]+(:250:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long unsigned int\''")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+(:267:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%e\''
          expects argument of type \''double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          int\''")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+(:279:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%e\''
          expects argument of type \''double\'', but argument 3 has type \''long double\''")[^\n]*\n?)+'
      L296:
        expect: true
        expr: '(^|\n)([^\n]+(:296:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L306:
        expect: true
        expr: '(^|\n)([^\n]+(:306:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L313:
        expect: true
        expr: '(^|\n)([^\n]+(:313:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L331:
        expect: true
        expr: '(^|\n)([^\n]+(:331:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%E\''
          expects argument of type \''double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          unsigned int\''")[^\n]*\n?)+'
      L343:
        expect: true
        expr: '(^|\n)([^\n]+(:343:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%E\''
          expects argument of type \''double\'', but argument 3 has type \''long double\''")[^\n]*\n?)+'
      L360:
        expect: true
        expr: '(^|\n)([^\n]+(:360:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+(:368:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+(:375:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L392:
        expect: true
        expr: '(^|\n)([^\n]+(:392:)[^\n]*[0-9]+: warning:[^\n]*("26: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L398:
        expect: true
        expr: '(^|\n)([^\n]+(:398:)[^\n]*[0-9]+: warning:[^\n]*("28: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          4 has type \''long int\''")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+(:404:)[^\n]*[0-9]+: warning:[^\n]*("31: format \''%lld\''
          expects argument of type \''long long int\'', but argument 5 has type \''long
          int\''")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long int\''")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long unsigned int\''")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          double\''")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''void
          \\\\*\''")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''struct
          s\''")[^\n]*\n?)+'
test_pr72858_403:
  build:
    cflags: "-Wformat -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr72858.c'
    sources:
      binary: pr72858.s
  group: GRPSERIAL
  validate:
    match:
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''int\''")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''unsigned int\''")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long int\''")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long unsigned int\''")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''double\''")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''double\''")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long double\''")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          int\''")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          unsigned int\''")[^\n]*\n?)+'
      L198:
        expect: true
        expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long int\''")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long unsigned int\''")[^\n]*\n?)+'
      L225:
        expect: true
        expr: '(^|\n)([^\n]+(:225:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''int\''")[^\n]*\n?)+'
      L232:
        expect: true
        expr: '(^|\n)([^\n]+(:232:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''unsigned int\''")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long int\''")[^\n]*\n?)+'
      L250:
        expect: true
        expr: '(^|\n)([^\n]+(:250:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long unsigned int\''")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+(:267:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%e\''
          expects argument of type \''double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          int\''")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+(:279:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%e\''
          expects argument of type \''double\'', but argument 3 has type \''long double\''")[^\n]*\n?)+'
      L296:
        expect: true
        expr: '(^|\n)([^\n]+(:296:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L306:
        expect: true
        expr: '(^|\n)([^\n]+(:306:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L313:
        expect: true
        expr: '(^|\n)([^\n]+(:313:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L331:
        expect: true
        expr: '(^|\n)([^\n]+(:331:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%E\''
          expects argument of type \''double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          unsigned int\''")[^\n]*\n?)+'
      L343:
        expect: true
        expr: '(^|\n)([^\n]+(:343:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%E\''
          expects argument of type \''double\'', but argument 3 has type \''long double\''")[^\n]*\n?)+'
      L360:
        expect: true
        expr: '(^|\n)([^\n]+(:360:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+(:368:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+(:375:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L392:
        expect: true
        expr: '(^|\n)([^\n]+(:392:)[^\n]*[0-9]+: warning:[^\n]*("26: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L398:
        expect: true
        expr: '(^|\n)([^\n]+(:398:)[^\n]*[0-9]+: warning:[^\n]*("28: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          4 has type \''long int\''")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+(:404:)[^\n]*[0-9]+: warning:[^\n]*("31: format \''%lld\''
          expects argument of type \''long long int\'', but argument 5 has type \''long
          int\''")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long int\''")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long unsigned int\''")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          double\''")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''void
          \\\\*\''")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''struct
          s\''")[^\n]*\n?)+'
test_pr72858_404:
  build:
    cflags: "-DWIDE  -Wformat -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr72858.c'
    sources:
      binary: pr72858.s
  group: GRPSERIAL
  validate:
    match:
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''int\''")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''unsigned int\''")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long int\''")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long unsigned int\''")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''double\''")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''double\''")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long double\''")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          int\''")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          unsigned int\''")[^\n]*\n?)+'
      L198:
        expect: true
        expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long int\''")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long unsigned int\''")[^\n]*\n?)+'
      L225:
        expect: true
        expr: '(^|\n)([^\n]+(:225:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''int\''")[^\n]*\n?)+'
      L232:
        expect: true
        expr: '(^|\n)([^\n]+(:232:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''unsigned int\''")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long int\''")[^\n]*\n?)+'
      L250:
        expect: true
        expr: '(^|\n)([^\n]+(:250:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long unsigned int\''")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+(:267:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%e\''
          expects argument of type \''double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          int\''")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+(:279:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%e\''
          expects argument of type \''double\'', but argument 3 has type \''long double\''")[^\n]*\n?)+'
      L296:
        expect: true
        expr: '(^|\n)([^\n]+(:296:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L306:
        expect: true
        expr: '(^|\n)([^\n]+(:306:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L313:
        expect: true
        expr: '(^|\n)([^\n]+(:313:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L331:
        expect: true
        expr: '(^|\n)([^\n]+(:331:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%E\''
          expects argument of type \''double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          unsigned int\''")[^\n]*\n?)+'
      L343:
        expect: true
        expr: '(^|\n)([^\n]+(:343:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%E\''
          expects argument of type \''double\'', but argument 3 has type \''long double\''")[^\n]*\n?)+'
      L360:
        expect: true
        expr: '(^|\n)([^\n]+(:360:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+(:368:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+(:375:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L392:
        expect: true
        expr: '(^|\n)([^\n]+(:392:)[^\n]*[0-9]+: warning:[^\n]*("26: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L398:
        expect: true
        expr: '(^|\n)([^\n]+(:398:)[^\n]*[0-9]+: warning:[^\n]*("28: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          4 has type \''long int\''")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+(:404:)[^\n]*[0-9]+: warning:[^\n]*("31: format \''%lld\''
          expects argument of type \''long long int\'', but argument 5 has type \''long
          int\''")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long int\''")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long unsigned int\''")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          double\''")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''void
          \\\\*\''")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''struct
          s\''")[^\n]*\n?)+'
test_pr72858_625:
  build:
    cflags: "-Wformat -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr72858.c'
    sources:
      binary: pr72858.s
  group: GRPSERIAL
  validate:
    match:
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''int\''")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''unsigned int\''")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long int\''")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long unsigned int\''")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''double\''")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''double\''")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long double\''")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          int\''")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          unsigned int\''")[^\n]*\n?)+'
      L198:
        expect: true
        expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long int\''")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long unsigned int\''")[^\n]*\n?)+'
      L225:
        expect: true
        expr: '(^|\n)([^\n]+(:225:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''int\''")[^\n]*\n?)+'
      L232:
        expect: true
        expr: '(^|\n)([^\n]+(:232:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''unsigned int\''")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long int\''")[^\n]*\n?)+'
      L250:
        expect: true
        expr: '(^|\n)([^\n]+(:250:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long unsigned int\''")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+(:267:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%e\''
          expects argument of type \''double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          int\''")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+(:279:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%e\''
          expects argument of type \''double\'', but argument 3 has type \''long double\''")[^\n]*\n?)+'
      L296:
        expect: true
        expr: '(^|\n)([^\n]+(:296:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L306:
        expect: true
        expr: '(^|\n)([^\n]+(:306:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L313:
        expect: true
        expr: '(^|\n)([^\n]+(:313:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L331:
        expect: true
        expr: '(^|\n)([^\n]+(:331:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%E\''
          expects argument of type \''double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          unsigned int\''")[^\n]*\n?)+'
      L343:
        expect: true
        expr: '(^|\n)([^\n]+(:343:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%E\''
          expects argument of type \''double\'', but argument 3 has type \''long double\''")[^\n]*\n?)+'
      L360:
        expect: true
        expr: '(^|\n)([^\n]+(:360:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+(:368:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+(:375:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L392:
        expect: true
        expr: '(^|\n)([^\n]+(:392:)[^\n]*[0-9]+: warning:[^\n]*("26: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L398:
        expect: true
        expr: '(^|\n)([^\n]+(:398:)[^\n]*[0-9]+: warning:[^\n]*("28: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          4 has type \''long int\''")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+(:404:)[^\n]*[0-9]+: warning:[^\n]*("31: format \''%lld\''
          expects argument of type \''long long int\'', but argument 5 has type \''long
          int\''")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long int\''")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long unsigned int\''")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          double\''")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''void
          \\\\*\''")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''struct
          s\''")[^\n]*\n?)+'
test_pr72858_626:
  build:
    cflags: "-DWIDE  -Wformat -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr72858.c'
    sources:
      binary: pr72858.s
  group: GRPSERIAL
  validate:
    match:
      L111:
        expect: true
        expr: '(^|\n)([^\n]+(:111:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''int\''")[^\n]*\n?)+'
      L118:
        expect: true
        expr: '(^|\n)([^\n]+(:118:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''unsigned int\''")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long int\''")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+(:136:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long unsigned int\''")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+(:146:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''double\''")[^\n]*\n?)+'
      L153:
        expect: true
        expr: '(^|\n)([^\n]+(:153:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''double\''")[^\n]*\n?)+'
      L160:
        expect: true
        expr: '(^|\n)([^\n]+(:160:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lx\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long double\''")[^\n]*\n?)+'
      L183:
        expect: true
        expr: '(^|\n)([^\n]+(:183:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          int\''")[^\n]*\n?)+'
      L190:
        expect: true
        expr: '(^|\n)([^\n]+(:190:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          unsigned int\''")[^\n]*\n?)+'
      L198:
        expect: true
        expr: '(^|\n)([^\n]+(:198:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long int\''")[^\n]*\n?)+'
      L205:
        expect: true
        expr: '(^|\n)([^\n]+(:205:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%o\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long unsigned int\''")[^\n]*\n?)+'
      L225:
        expect: true
        expr: '(^|\n)([^\n]+(:225:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''int\''")[^\n]*\n?)+'
      L232:
        expect: true
        expr: '(^|\n)([^\n]+(:232:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''unsigned int\''")[^\n]*\n?)+'
      L243:
        expect: true
        expr: '(^|\n)([^\n]+(:243:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long int\''")[^\n]*\n?)+'
      L250:
        expect: true
        expr: '(^|\n)([^\n]+(:250:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%lo\''
          expects argument of type \''long unsigned int\'', but argument 3 has type
          \''long long unsigned int\''")[^\n]*\n?)+'
      L267:
        expect: true
        expr: '(^|\n)([^\n]+(:267:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%e\''
          expects argument of type \''double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          int\''")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+(:279:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%e\''
          expects argument of type \''double\'', but argument 3 has type \''long double\''")[^\n]*\n?)+'
      L296:
        expect: true
        expr: '(^|\n)([^\n]+(:296:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L306:
        expect: true
        expr: '(^|\n)([^\n]+(:306:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L313:
        expect: true
        expr: '(^|\n)([^\n]+(:313:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%Le\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L331:
        expect: true
        expr: '(^|\n)([^\n]+(:331:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%E\''
          expects argument of type \''double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          unsigned int\''")[^\n]*\n?)+'
      L343:
        expect: true
        expr: '(^|\n)([^\n]+(:343:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%E\''
          expects argument of type \''double\'', but argument 3 has type \''long double\''")[^\n]*\n?)+'
      L360:
        expect: true
        expr: '(^|\n)([^\n]+(:360:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''int\''")[^\n]*\n?)+'
      L368:
        expect: true
        expr: '(^|\n)([^\n]+(:368:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L375:
        expect: true
        expr: '(^|\n)([^\n]+(:375:)[^\n]*[0-9]+: warning:[^\n]*("21: format \''%LE\''
          expects argument of type \''long double\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L392:
        expect: true
        expr: '(^|\n)([^\n]+(:392:)[^\n]*[0-9]+: warning:[^\n]*("26: field width specifier
          \''\\\\*\'' expects argument of type \''int\'', but argument 3 has type
          \''long int\''")[^\n]*\n?)+'
      L398:
        expect: true
        expr: '(^|\n)([^\n]+(:398:)[^\n]*[0-9]+: warning:[^\n]*("28: field precision
          specifier \''\\\\.\\\\*\'' expects argument of type \''int\'', but argument
          4 has type \''long int\''")[^\n]*\n?)+'
      L404:
        expect: true
        expr: '(^|\n)([^\n]+(:404:)[^\n]*[0-9]+: warning:[^\n]*("31: format \''%lld\''
          expects argument of type \''long long int\'', but argument 5 has type \''long
          int\''")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long int\''")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          long unsigned int\''")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''double\''")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+(:73:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''long
          double\''")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''void
          \\\\*\''")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("20: format \''%x\''
          expects argument of type \''unsigned int\'', but argument 3 has type \''struct
          s\''")[^\n]*\n?)+'
test_pr78304-2_183:
  build:
    cflags: "-O2 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304-2.c'
    sources:
      binary: pr78304-2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78304-2_184:
  build:
    cflags: "-DWIDE  -O2 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304-2.c'
    sources:
      binary: pr78304-2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78304-2_405:
  build:
    cflags: "-O2 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304-2.c'
    sources:
      binary: pr78304-2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78304-2_406:
  build:
    cflags: "-DWIDE  -O2 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304-2.c'
    sources:
      binary: pr78304-2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78304-2_627:
  build:
    cflags: "-O2 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304-2.c'
    sources:
      binary: pr78304-2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78304-2_628:
  build:
    cflags: "-DWIDE  -O2 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304-2.c'
    sources:
      binary: pr78304-2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78304_185:
  build:
    cflags: "-O2 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304.c'
    sources:
      binary: pr78304.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78304_186:
  build:
    cflags: "-DWIDE  -O2 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304.c'
    sources:
      binary: pr78304.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78304_407:
  build:
    cflags: "-O2 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304.c'
    sources:
      binary: pr78304.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78304_408:
  build:
    cflags: "-DWIDE  -O2 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304.c'
    sources:
      binary: pr78304.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78304_629:
  build:
    cflags: "-O2 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304.c'
    sources:
      binary: pr78304.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78304_630:
  build:
    cflags: "-DWIDE  -O2 -Wall -Wextra\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304.c'
    sources:
      binary: pr78304.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78498_187:
  build:
    cflags: "-O2 -Wall -Wextra -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78498.c'
    sources:
      binary: pr78498.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78498_188:
  build:
    cflags: "-DWIDE  -O2 -Wall -Wextra -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78498.c'
    sources:
      binary: pr78498.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78498_409:
  build:
    cflags: "-O2 -Wall -Wextra -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78498.c'
    sources:
      binary: pr78498.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78498_410:
  build:
    cflags: "-DWIDE  -O2 -Wall -Wextra -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78498.c'
    sources:
      binary: pr78498.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78498_631:
  build:
    cflags: "-O2 -Wall -Wextra -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78498.c'
    sources:
      binary: pr78498.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78498_632:
  build:
    cflags: "-DWIDE  -O2 -Wall -Wextra -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78498.c'
    sources:
      binary: pr78498.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr78569_189:
  build:
    cflags: "-Wformat-truncation\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78569.c'
    sources:
      binary: pr78569.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("output truncated")[^\n]*\n?)+'
test_pr78569_190:
  build:
    cflags: "-DWIDE  -Wformat-truncation\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78569.c'
    sources:
      binary: pr78569.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("output truncated")[^\n]*\n?)+'
test_pr78569_411:
  build:
    cflags: "-Wformat-truncation\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78569.c'
    sources:
      binary: pr78569.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("output truncated")[^\n]*\n?)+'
test_pr78569_412:
  build:
    cflags: "-DWIDE  -Wformat-truncation\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78569.c'
    sources:
      binary: pr78569.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("output truncated")[^\n]*\n?)+'
test_pr78569_633:
  build:
    cflags: "-Wformat-truncation\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78569.c'
    sources:
      binary: pr78569.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("output truncated")[^\n]*\n?)+'
test_pr78569_634:
  build:
    cflags: "-DWIDE  -Wformat-truncation\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78569.c'
    sources:
      binary: pr78569.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("output truncated")[^\n]*\n?)+'
test_pr78680_191:
  build:
    cflags: "-O2 -Wall -Wextra -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78680.c'
    sources:
      binary: pr78680.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects a matching")[^\n]*\n?)+'
test_pr78680_192:
  build:
    cflags: "-DWIDE  -O2 -Wall -Wextra -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78680.c'
    sources:
      binary: pr78680.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects a matching")[^\n]*\n?)+'
test_pr78680_413:
  build:
    cflags: "-O2 -Wall -Wextra -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78680.c'
    sources:
      binary: pr78680.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects a matching")[^\n]*\n?)+'
test_pr78680_414:
  build:
    cflags: "-DWIDE  -O2 -Wall -Wextra -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78680.c'
    sources:
      binary: pr78680.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects a matching")[^\n]*\n?)+'
test_pr78680_635:
  build:
    cflags: "-O2 -Wall -Wextra -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78680.c'
    sources:
      binary: pr78680.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects a matching")[^\n]*\n?)+'
test_pr78680_636:
  build:
    cflags: "-DWIDE  -O2 -Wall -Wextra -fdiagnostics-show-caret\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78680.c'
    sources:
      binary: pr78680.s
  group: GRPSERIAL
  validate:
    match:
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects a matching")[^\n]*\n?)+'
test_pr79210_193:
  build:
    cflags: "-Wformat -Wformat-signedness\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr79210.c'
    sources:
      binary: pr79210.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("6: format .%d. expects
          argument of type .int., but argument 4 has type .unsigned int. ")[^\n]*\n?)+'
test_pr79210_194:
  build:
    cflags: "-DWIDE  -Wformat -Wformat-signedness\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr79210.c'
    sources:
      binary: pr79210.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("6: format .%d. expects
          argument of type .int., but argument 4 has type .unsigned int. ")[^\n]*\n?)+'
test_pr79210_415:
  build:
    cflags: "-Wformat -Wformat-signedness\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr79210.c'
    sources:
      binary: pr79210.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("6: format .%d. expects
          argument of type .int., but argument 4 has type .unsigned int. ")[^\n]*\n?)+'
test_pr79210_416:
  build:
    cflags: "-DWIDE  -Wformat -Wformat-signedness\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr79210.c'
    sources:
      binary: pr79210.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("6: format .%d. expects
          argument of type .int., but argument 4 has type .unsigned int. ")[^\n]*\n?)+'
test_pr79210_637:
  build:
    cflags: "-Wformat -Wformat-signedness\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr79210.c'
    sources:
      binary: pr79210.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("6: format .%d. expects
          argument of type .int., but argument 4 has type .unsigned int. ")[^\n]*\n?)+'
test_pr79210_638:
  build:
    cflags: "-DWIDE  -Wformat -Wformat-signedness\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr79210.c'
    sources:
      binary: pr79210.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("6: format .%d. expects
          argument of type .int., but argument 4 has type .unsigned int. ")[^\n]*\n?)+'
test_pr80919_195:
  build:
    cflags: "-Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr80919.c'
    sources:
      binary: pr80919.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr80919_196:
  build:
    cflags: "-DWIDE  -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr80919.c'
    sources:
      binary: pr80919.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr80919_417:
  build:
    cflags: "-Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr80919.c'
    sources:
      binary: pr80919.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr80919_418:
  build:
    cflags: "-DWIDE  -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr80919.c'
    sources:
      binary: pr80919.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr80919_639:
  build:
    cflags: "-Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr80919.c'
    sources:
      binary: pr80919.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_pr80919_640:
  build:
    cflags: "-DWIDE  -Wall\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr80919.c'
    sources:
      binary: pr80919.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+(:10:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type")[^\n]*\n?)+'
test_sec-1_197:
  build:
    cflags: "-std=gnu99 -Wformat -Wformat-security\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sec-1.c'
    sources:
      binary: sec-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("no format arguments")[^\n]*\n?)+'
test_sec-1_198:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wformat-security\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sec-1.c'
    sources:
      binary: sec-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("no format arguments")[^\n]*\n?)+'
test_sec-1_419:
  build:
    cflags: "-std=gnu99 -Wformat -Wformat-security\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sec-1.c'
    sources:
      binary: sec-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("no format arguments")[^\n]*\n?)+'
test_sec-1_420:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wformat-security\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sec-1.c'
    sources:
      binary: sec-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("no format arguments")[^\n]*\n?)+'
test_sec-1_641:
  build:
    cflags: "-std=gnu99 -Wformat -Wformat-security\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sec-1.c'
    sources:
      binary: sec-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("no format arguments")[^\n]*\n?)+'
test_sec-1_642:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat -Wformat-security\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sec-1.c'
    sources:
      binary: sec-1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+(:11:)[^\n]*[0-9]+: warning:[^\n]*("no format arguments")[^\n]*\n?)+'
test_sentinel-1_199:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sentinel-1.c'
    sources:
      binary: sentinel-1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("applies to function
          types")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C requires|named
          arguments")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("named arguments")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("variadic functions")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("not an integer constant")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("less than zero")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not enough|too
          few arguments")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
test_sentinel-1_200:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sentinel-1.c'
    sources:
      binary: sentinel-1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("applies to function
          types")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C requires|named
          arguments")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("named arguments")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("variadic functions")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("not an integer constant")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("less than zero")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not enough|too
          few arguments")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
test_sentinel-1_421:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sentinel-1.c'
    sources:
      binary: sentinel-1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("applies to function
          types")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C requires|named
          arguments")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("named arguments")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("variadic functions")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("not an integer constant")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("less than zero")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not enough|too
          few arguments")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
test_sentinel-1_422:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sentinel-1.c'
    sources:
      binary: sentinel-1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("applies to function
          types")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C requires|named
          arguments")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("named arguments")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("variadic functions")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("not an integer constant")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("less than zero")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not enough|too
          few arguments")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
test_sentinel-1_643:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sentinel-1.c'
    sources:
      binary: sentinel-1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("applies to function
          types")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C requires|named
          arguments")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("named arguments")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("variadic functions")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("not an integer constant")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("less than zero")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not enough|too
          few arguments")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
test_sentinel-1_644:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sentinel-1.c'
    sources:
      binary: sentinel-1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+(:15:)[^\n]*[0-9]+: warning:[^\n]*("applies to function
          types")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ISO C requires|named
          arguments")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("named arguments")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("variadic functions")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("not an integer constant")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("less than zero")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong number
          of arguments")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not enough|too
          few arguments")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("not enough")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("missing sentinel")[^\n]*\n?)+'
test_strfmon-1_201:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-1.c'
    sources:
      binary: strfmon-1.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("empty")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("empty")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("repeated")[^\n]*\n?)+'
test_strfmon-1_202:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-1.c'
    sources:
      binary: strfmon-1.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("empty")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("empty")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("repeated")[^\n]*\n?)+'
test_strfmon-1_423:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-1.c'
    sources:
      binary: strfmon-1.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("empty")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("empty")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("repeated")[^\n]*\n?)+'
test_strfmon-1_424:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-1.c'
    sources:
      binary: strfmon-1.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("empty")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("empty")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("repeated")[^\n]*\n?)+'
test_strfmon-1_645:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-1.c'
    sources:
      binary: strfmon-1.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("empty")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("empty")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("repeated")[^\n]*\n?)+'
test_strfmon-1_646:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-1.c'
    sources:
      binary: strfmon-1.s
  group: GRPSERIAL
  validate:
    match:
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+(:46:)[^\n]*[0-9]+: warning:[^\n]*("empty")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("empty")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+(:53:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+(:54:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+(:55:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("matching")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("zero-length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("null")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("trailing")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("embedded")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("repeated")[^\n]*\n?)+'
test_strfmon-2_203:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-2.c'
    sources:
      binary: strfmon-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("missing fill character
          at end")[^\n]*\n?)+'
test_strfmon-2_204:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-2.c'
    sources:
      binary: strfmon-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("missing fill character
          at end")[^\n]*\n?)+'
test_strfmon-2_425:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-2.c'
    sources:
      binary: strfmon-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("missing fill character
          at end")[^\n]*\n?)+'
test_strfmon-2_426:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-2.c'
    sources:
      binary: strfmon-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("missing fill character
          at end")[^\n]*\n?)+'
test_strfmon-2_647:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-2.c'
    sources:
      binary: strfmon-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("missing fill character
          at end")[^\n]*\n?)+'
test_strfmon-2_648:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-2.c'
    sources:
      binary: strfmon-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("missing fill character
          at end")[^\n]*\n?)+'
test_unnamed-1_205:
  build:
    cflags: "-Wformat -msse\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/unnamed-1.c'
    sources:
      binary: unnamed-1.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unsigned only|too
          large")[^\n]*\n?)+'
test_unnamed-1_206:
  build:
    cflags: "-DWIDE  -Wformat -msse\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/unnamed-1.c'
    sources:
      binary: unnamed-1.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unsigned only|too
          large")[^\n]*\n?)+'
test_unnamed-1_427:
  build:
    cflags: "-Wformat -msse\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/unnamed-1.c'
    sources:
      binary: unnamed-1.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unsigned only|too
          large")[^\n]*\n?)+'
test_unnamed-1_428:
  build:
    cflags: "-DWIDE  -Wformat -msse\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/unnamed-1.c'
    sources:
      binary: unnamed-1.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unsigned only|too
          large")[^\n]*\n?)+'
test_unnamed-1_649:
  build:
    cflags: "-Wformat -msse\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/unnamed-1.c'
    sources:
      binary: unnamed-1.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unsigned only|too
          large")[^\n]*\n?)+'
test_unnamed-1_650:
  build:
    cflags: "-DWIDE  -Wformat -msse\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/unnamed-1.c'
    sources:
      binary: unnamed-1.s
  group: GRPSERIAL
  validate:
    match:
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("expects argument")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("unsigned only|too
          large")[^\n]*\n?)+'
test_va-1_207:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/va-1.c'
    sources:
      binary: va-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_va-1_208:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/va-1.c'
    sources:
      binary: va-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_va-1_429:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/va-1.c'
    sources:
      binary: va-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_va-1_430:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/va-1.c'
    sources:
      binary: va-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_va-1_651:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/va-1.c'
    sources:
      binary: va-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_va-1_652:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/va-1.c'
    sources:
      binary: va-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("format")[^\n]*\n?)+'
test_warn-signedness_209:
  build:
    cflags: "-Wformat -Wformat-signedness\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warn-signedness.c'
    sources:
      binary: warn-signedness.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type \''int\'', but argument 2 has type \''unsigned int\''")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type \''unsigned int\'', but argument 2 has type \''int\''")[^\n]*\n?)+'
test_warn-signedness_210:
  build:
    cflags: "-DWIDE  -Wformat -Wformat-signedness\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warn-signedness.c'
    sources:
      binary: warn-signedness.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type \''int\'', but argument 2 has type \''unsigned int\''")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type \''unsigned int\'', but argument 2 has type \''int\''")[^\n]*\n?)+'
test_warn-signedness_431:
  build:
    cflags: "-Wformat -Wformat-signedness\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warn-signedness.c'
    sources:
      binary: warn-signedness.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type \''int\'', but argument 2 has type \''unsigned int\''")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type \''unsigned int\'', but argument 2 has type \''int\''")[^\n]*\n?)+'
test_warn-signedness_432:
  build:
    cflags: "-DWIDE  -Wformat -Wformat-signedness\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warn-signedness.c'
    sources:
      binary: warn-signedness.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type \''int\'', but argument 2 has type \''unsigned int\''")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type \''unsigned int\'', but argument 2 has type \''int\''")[^\n]*\n?)+'
test_warn-signedness_653:
  build:
    cflags: "-Wformat -Wformat-signedness\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warn-signedness.c'
    sources:
      binary: warn-signedness.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type \''int\'', but argument 2 has type \''unsigned int\''")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type \''unsigned int\'', but argument 2 has type \''int\''")[^\n]*\n?)+'
test_warn-signedness_654:
  build:
    cflags: "-DWIDE  -Wformat -Wformat-signedness\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warn-signedness.c'
    sources:
      binary: warn-signedness.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type \''int\'', but argument 2 has type \''unsigned int\''")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("expects argument of
          type \''unsigned int\'', but argument 2 has type \''int\''")[^\n]*\n?)+'
test_warnll-1_211:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warnll-1.c'
    sources:
      binary: warnll-1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_warnll-1_212:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warnll-1.c'
    sources:
      binary: warnll-1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_warnll-1_433:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warnll-1.c'
    sources:
      binary: warnll-1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_warnll-1_434:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warnll-1.c'
    sources:
      binary: warnll-1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_warnll-1_655:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warnll-1.c'
    sources:
      binary: warnll-1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_warnll-1_656:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wno-long-long\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warnll-1.c'
    sources:
      binary: warnll-1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+(:19:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+(:35:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+(:36:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+(:37:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("C")[^\n]*\n?)+'
test_xopen-1_213:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-1.c'
    sources:
      binary: xopen-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("more than once")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("precision")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("arg 2|argument 2")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
test_xopen-1_214:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-1.c'
    sources:
      binary: xopen-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("more than once")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("precision")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("arg 2|argument 2")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
test_xopen-1_435:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-1.c'
    sources:
      binary: xopen-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("more than once")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("precision")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("arg 2|argument 2")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
test_xopen-1_436:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-1.c'
    sources:
      binary: xopen-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("more than once")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("precision")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("arg 2|argument 2")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
test_xopen-1_657:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-1.c'
    sources:
      binary: xopen-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("more than once")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("precision")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("arg 2|argument 2")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
test_xopen-1_658:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-1.c'
    sources:
      binary: xopen-1.s
  group: GRPSERIAL
  validate:
    match:
      L100:
        expect: true
        expr: '(^|\n)([^\n]+(:100:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L101:
        expect: true
        expr: '(^|\n)([^\n]+(:101:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+(:103:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L104:
        expect: true
        expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+(:105:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+(:106:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+(:107:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+(:113:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L116:
        expect: true
        expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+(:117:)[^\n]*[0-9]+: warning:[^\n]*("before used")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+(:121:)[^\n]*[0-9]+: warning:[^\n]*("unused")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+(:122:)[^\n]*[0-9]+: warning:[^\n]*("operand")[^\n]*\n?)+'
      L124:
        expect: true
        expr: '(^|\n)([^\n]+(:124:)[^\n]*[0-9]+: warning:[^\n]*("more than once")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+(:20:)[^\n]*[0-9]+: warning:[^\n]*("precision")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+(:21:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+(:22:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+(:23:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+(:25:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+(:26:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+(:28:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+(:32:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+(:34:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+(:40:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+(:41:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+(:44:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+(:47:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+(:48:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+(:50:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+(:51:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+(:56:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+(:57:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+(:58:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+(:59:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+(:60:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+(:61:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+(:62:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+(:63:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+(:64:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+(:65:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+(:66:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+(:67:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+(:68:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+(:69:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+(:70:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+(:71:)[^\n]*[0-9]+: warning:[^\n]*("length")[^\n]*\n?)+'
      L78:
        expect: true
        expr: '(^|\n)([^\n]+(:78:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+(:79:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L80:
        expect: true
        expr: '(^|\n)([^\n]+(:80:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+(:81:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L82:
        expect: true
        expr: '(^|\n)([^\n]+(:82:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+(:83:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+(:84:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+(:85:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L86:
        expect: true
        expr: '(^|\n)([^\n]+(:86:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+(:87:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L88:
        expect: true
        expr: '(^|\n)([^\n]+(:88:)[^\n]*[0-9]+: warning:[^\n]*("flag")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+(:92:)[^\n]*[0-9]+: warning:[^\n]*("arg 2|argument 2")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+(:96:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+(:98:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+(:99:)[^\n]*[0-9]+: warning:[^\n]*("missing")[^\n]*\n?)+'
test_xopen-2_215:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-2.c'
    sources:
      binary: xopen-2.s
  group: GRPSERIAL
test_xopen-2_216:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-2.c'
    sources:
      binary: xopen-2.s
  group: GRPSERIAL
test_xopen-2_437:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-2.c'
    sources:
      binary: xopen-2.s
  group: GRPSERIAL
test_xopen-2_438:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-2.c'
    sources:
      binary: xopen-2.s
  group: GRPSERIAL
test_xopen-2_659:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-2.c'
    sources:
      binary: xopen-2.s
  group: GRPSERIAL
test_xopen-2_660:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-2.c'
    sources:
      binary: xopen-2.s
  group: GRPSERIAL
test_xopen-3_217:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-3.c'
    sources:
      binary: xopen-3.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
test_xopen-3_218:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-3.c'
    sources:
      binary: xopen-3.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
test_xopen-3_439:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-3.c'
    sources:
      binary: xopen-3.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
test_xopen-3_440:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-3.c'
    sources:
      binary: xopen-3.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
test_xopen-3_661:
  build:
    cflags: "-std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-3.c'
    sources:
      binary: xopen-3.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
test_xopen-3_662:
  build:
    cflags: "-DWIDE  -std=gnu99 -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-3.c'
    sources:
      binary: xopen-3.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+(:13:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+(:14:)[^\n]*[0-9]+: warning:[^\n]*("used after format")[^\n]*\n?)+'
test_z-1_219:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/z-1.c'
    sources:
      binary: z-1.s
  group: GRPSERIAL
test_z-1_220:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/z-1.c'
    sources:
      binary: z-1.s
  group: GRPSERIAL
test_z-1_441:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/z-1.c'
    sources:
      binary: z-1.s
  group: GRPSERIAL
test_z-1_442:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/z-1.c'
    sources:
      binary: z-1.s
  group: GRPSERIAL
test_z-1_663:
  build:
    cflags: "-Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/z-1.c'
    sources:
      binary: z-1.s
  group: GRPSERIAL
test_z-1_664:
  build:
    cflags: "-DWIDE  -Wformat\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/z-1.c'
    sources:
      binary: z-1.s
  group: GRPSERIAL
test_zero-length-1_221:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat -Wno-format-zero-length\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/zero-length-1.c'
    sources:
      binary: zero-length-1.s
  group: GRPSERIAL
test_zero-length-1_222:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wno-format-zero-length\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/zero-length-1.c'
    sources:
      binary: zero-length-1.s
  group: GRPSERIAL
test_zero-length-1_443:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat -Wno-format-zero-length\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/zero-length-1.c'
    sources:
      binary: zero-length-1.s
  group: GRPSERIAL
test_zero-length-1_444:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wno-format-zero-length\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/zero-length-1.c'
    sources:
      binary: zero-length-1.s
  group: GRPSERIAL
test_zero-length-1_665:
  build:
    cflags: "-std=iso9899:1990 -pedantic -Wformat -Wno-format-zero-length\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/zero-length-1.c'
    sources:
      binary: zero-length-1.s
  group: GRPSERIAL
test_zero-length-1_666:
  build:
    cflags: "-DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wno-format-zero-length\n\
      \ -S"
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/zero-length-1.c'
    sources:
      binary: zero-length-1.s
  group: GRPSERIAL
