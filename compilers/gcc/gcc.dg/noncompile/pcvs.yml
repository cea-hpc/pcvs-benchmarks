test_20000901-1_1:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_1027:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_1028:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_1029:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_1030:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_1031:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_1032:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_1033:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_2:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_3:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_4:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_5:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_514:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_515:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_516:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_517:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_518:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_519:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_520:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_6:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20000901-1_7:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20000901-1.c'
    sources: {binary: 20000901-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_20001228-1_10:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_1034:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_1035:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_1036:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_1037:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_1038:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_1039:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_1040:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_1041:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_11:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_12:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_13:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_14:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_15:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_521:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_522:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_523:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_524:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_525:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_526:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_527:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_528:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_8:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20001228-1_9:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20001228-1.c'
    sources: {binary: 20001228-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          union")[^\n]*\n?)+'}
test_20010425-1_1042:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_1043:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_1044:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_1045:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_1046:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_1047:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_1048:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_16:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_17:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_18:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_19:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_20:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_21:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_22:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_529:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_530:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_531:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_532:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_533:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_534:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010425-1_535:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010425-1.c'
    sources: {binary: 20010425-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function")[^\n]*\n?)+'}
test_20010524-1_1049:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_1050:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_1051:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_1052:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_1053:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_1054:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_1055:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_23:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_24:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_25:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_26:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_27:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_28:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_29:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_536:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_537:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_538:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_539:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_540:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_541:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20010524-1_542:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20010524-1.c'
    sources: {binary: 20010524-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          constant")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+(:2:)[^\n]*[0-9]+: warning:[^\n]*("division
          by zero")[^\n]*\n?)+'}
test_20011025-1_1056:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_1057:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_1058:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_1059:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_1060:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_1061:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_1062:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_30:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_31:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_32:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_33:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_34:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_35:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_36:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_543:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_544:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_545:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_546:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_547:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_548:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20011025-1_549:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20011025-1.c'
    sources: {binary: 20011025-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|is
          not constant|near init")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types|is not constant|near init")[^\n]*\n?)+'}
test_20020130-1_1063:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O0  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_1064:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O1  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_1065:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O2  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_1066:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O3 -g  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_1067:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-Os  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_1068:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_1069:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_37:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O0  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_38:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O1  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_39:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O2  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_40:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O3 -g  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_41:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-Os  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_42:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_43:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_550:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O0  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_551:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O1  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_552:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O2  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_553:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O3 -g  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_554:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-Os  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_555:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020130-1_556:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020130-1.c'
    sources: {binary: 20020130-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function")[^\n]*\n?)+'}
test_20020207-1_1070:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_1071:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_1072:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_1073:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_1074:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_1075:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_1076:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_1077:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_44:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_45:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_46:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_47:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_48:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_49:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_50:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_51:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_557:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_558:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_559:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_560:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_561:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_562:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_563:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020207-1_564:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020207-1.c'
    sources: {binary: 20020207-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L26: {expect: true, expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L28: {expect: true, expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("void
          value")[^\n]*\n?)+'}
test_20020213-1_1078:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_1079:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_1080:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_1081:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_1082:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_1083:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_1084:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_52:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_53:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_54:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_55:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_56:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_565:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_566:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_567:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_568:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_569:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_57:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_570:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_571:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020213-1_58:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020213-1.c'
    sources: {binary: 20020213-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          many")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L19: {expect: true, expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L20: {expect: true, expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L27: {expect: true, expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L29: {expect: true, expr: '(^|\n)([^\n]+(:29:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L30: {expect: true, expr: '(^|\n)([^\n]+(:30:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 2 of")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
      L33: {expect: true, expr: '(^|\n)([^\n]+(:33:)[^\n]*[0-9]+: warning:[^\n]*("passing
          argument 1 of")[^\n]*\n?)+'}
test_20020220-1_1085:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_1086:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_1087:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_1088:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_1089:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_1090:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_1091:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_572:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_573:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_574:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_575:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_576:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_577:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_578:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_59:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_60:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_61:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_62:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_63:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_64:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20020220-1_65:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20020220-1.c'
    sources: {binary: 20020220-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redeclaration
          of")[^\n]*\n?)+'}
test_20030818-1_1092:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_1093:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_1094:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_1095:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_1096:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_1097:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_1098:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_579:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_580:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_581:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_582:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_583:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_584:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_585:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_66:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_67:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_68:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_69:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_70:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_71:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20030818-1_72:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20030818-1.c'
    sources: {binary: 20030818-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near init")[^\n]*\n?)+'}
test_20040203-1_1099:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_1100:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_1101:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_1102:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_1103:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_1104:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_1105:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_1106:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_586:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_587:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_588:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_589:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_590:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_591:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_592:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_593:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_73:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_74:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_75:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_76:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_77:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_78:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_79:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-1_80:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-1.c'
    sources: {binary: 20040203-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("struct
          type")[^\n]*\n?)+'}
test_20040203-2_1107:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_1108:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_1109:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_1110:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_1111:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_1112:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_1113:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_1114:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_594:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_595:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_596:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_597:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_598:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_599:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_600:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_601:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_81:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_82:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_83:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_84:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_85:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_86:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_87:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-2_88:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-2.c'
    sources: {binary: 20040203-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("union
          type")[^\n]*\n?)+'}
test_20040203-3_1115:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O0  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_1116:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O1  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_1117:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O2  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_1118:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_1119:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O3 -g  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_1120:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-Os  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_1121:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_1122:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_602:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O0  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_603:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O1  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_604:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O2  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_605:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_606:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O3 -g  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_607:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-Os  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_608:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_609:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_89:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O0  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_90:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O1  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_91:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O2  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_92:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_93:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O3 -g  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_94:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-Os  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_95:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040203-3_96:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040203-3.c'
    sources: {binary: 20040203-3.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("wrong
          type argument to unary exclamation mark")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          that cannot be converted")[^\n]*\n?)+'}
test_20040629-1_100:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_101:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_102:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_103:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_1123:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_1124:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_1125:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_1126:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_1127:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_1128:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_1129:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_610:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_611:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_612:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_613:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_614:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_615:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_616:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_97:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_98:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20040629-1_99:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20040629-1.c'
    sources: {binary: 20040629-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'}
test_20041207_104:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_105:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_106:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_107:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_108:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_109:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_110:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_1130:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_1131:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_1132:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_1133:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_1134:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_1135:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_1136:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_617:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_618:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_619:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_620:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_621:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_622:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20041207_623:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20041207.c'
    sources: {binary: 20041207.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          an integer")[^\n]*\n?)+'}
test_20050120-1_111:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O0  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_112:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O1  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_113:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O2  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_1137:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O0  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_1138:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O1  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_1139:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O2  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_114:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O3 -g  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_1140:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O3 -g  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_1141:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-Os  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_1142:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_1143:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_115:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-Os  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_116:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_117:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_624:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O0  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_625:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O1  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_626:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O2  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_627:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O3 -g  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_628:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-Os  -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_629:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_20050120-1_630:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/20050120-1.c'
    sources: {binary: 20050120-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -Wshadow -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+(:9:)[^\n]*[0-9]+: warning:[^\n]*("shadows
          previous")[^\n]*\n?)+'}
test_920507-1_1144:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O0  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_1145:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O1  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_1146:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O2  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_1147:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O3 -g  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_1148:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-Os  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_1149:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_1150:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_118:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O0  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_119:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O1  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_120:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O2  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_121:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O3 -g  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_122:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-Os  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_123:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_124:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_631:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O0  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_632:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O1  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_633:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O2  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_634:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O3 -g  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_635:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-Os  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_636:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920507-1_637:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920507-1.c'
    sources: {binary: 920507-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid
          register")[^\n]*\n?)+'}
test_920616-2_1151:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_1152:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_1153:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_1154:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_1155:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_1156:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_1157:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_125:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_126:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_127:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_128:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_129:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_130:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_131:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_638:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_639:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_640:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_641:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_642:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_643:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920616-2_644:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920616-2.c'
    sources: {binary: 920616-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_920721-2_1158:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_1159:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_1160:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_1161:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_1162:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_1163:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_1164:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_1165:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_132:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_133:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_134:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_135:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_136:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_137:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_138:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_139:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_645:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_646:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_647:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_648:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_649:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_650:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_651:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920721-2_652:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920721-2.c'
    sources: {binary: 920721-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_920824-1_1166:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_1167:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_1168:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_1169:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_1170:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_1171:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_1172:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_140:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_141:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_142:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_143:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_144:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_145:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_146:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_653:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_654:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_655:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_656:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_657:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_658:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920824-1_659:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920824-1.c'
    sources: {binary: 920824-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("nested
          redefinition")[^\n]*\n?)+'}
test_920923-1_1173:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_1174:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_1175:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_1176:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_1177:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_1178:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_1179:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_1180:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_147:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_148:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_149:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_150:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_151:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_152:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_153:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_154:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_660:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_661:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_662:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_663:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_664:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_665:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_666:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_920923-1_667:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/920923-1.c'
    sources: {binary: 920923-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L100: {expect: true, expr: '(^|\n)([^\n]+:100:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected|no
          member")[^\n]*\n?)+'}
      L101: {expect: true, expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member|expected")[^\n]*\n?)+'}
      L102: {expect: true, expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|no
          member")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L111: {expect: true, expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|expected")[^\n]*\n?)+'}
      L112: {expect: true, expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L117: {expect: true, expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L22: {expect: true, expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L34: {expect: true, expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L36: {expect: true, expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L37: {expect: true, expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L38: {expect: true, expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L40: {expect: true, expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L44: {expect: true, expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L48: {expect: true, expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L50: {expect: true, expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L54: {expect: true, expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L62: {expect: true, expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L65: {expect: true, expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L68: {expect: true, expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L73: {expect: true, expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected|undeclared|no
          member")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          member")[^\n]*\n?)+'}
      L79: {expect: true, expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
      L81: {expect: true, expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L84: {expect: true, expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_921102-1_1181:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_1182:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_1183:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_1184:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_1185:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_1186:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_1187:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_155:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_156:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_157:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_158:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_159:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_160:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_161:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_668:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_669:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_670:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_671:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_672:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_673:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921102-1_674:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921102-1.c'
    sources: {binary: 921102-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not
          of integer type|near init")[^\n]*\n?)+'}
test_921116-1_1188:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_1189:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_1190:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_1191:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_1192:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_1193:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_1194:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_162:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_163:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_164:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_165:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_166:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_167:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_168:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_675:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_676:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_677:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_678:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_679:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_680:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_921116-1_681:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/921116-1.c'
    sources: {binary: 921116-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_930301-1_1195:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_1196:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_1197:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_1198:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_1199:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_1200:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_1201:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_169:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_170:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_171:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_172:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_173:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_174:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_175:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_682:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_683:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_684:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_685:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_686:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_687:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930301-1_688:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930301-1.c'
    sources: {binary: 930301-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("pointer
          to")[^\n]*\n?)+'}
test_930622-1_1202:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_1203:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_1204:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_1205:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_1206:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_1207:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_1208:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_176:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_177:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_178:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_179:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_180:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_181:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_182:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_689:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_690:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_691:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_692:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_693:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_694:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-1_695:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-1.c'
    sources: {binary: 930622-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_930622-2_1209:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_1210:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_1211:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_1212:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_1213:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_1214:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_1215:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_1216:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_183:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_184:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_185:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_186:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_187:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_188:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_189:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_190:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_696:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_697:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_698:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_699:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_700:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_701:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_702:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930622-2_703:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930622-2.c'
    sources: {binary: 930622-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse|syntax|expected")[^\n]*\n?)+'}
test_930714-1_1217:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_1218:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_1219:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_1220:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_1221:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_1222:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_1223:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_191:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_192:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_193:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_194:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_195:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_196:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_197:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_704:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_705:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_706:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_707:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_708:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_709:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_930714-1_710:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/930714-1.c'
    sources: {binary: 930714-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_1224:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_1225:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_1226:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_1227:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_1228:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_1229:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_1230:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_198:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_199:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_200:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_201:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_202:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_203:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_204:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_711:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_712:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_713:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_714:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_715:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_716:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_931203-1_717:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/931203-1.c'
    sources: {binary: 931203-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incompatible
          types")[^\n]*\n?)+'}
test_940112-1_1231:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_1232:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_1233:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_1234:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_1235:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_1236:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_1237:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_205:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_206:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_207:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_208:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_209:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_210:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_211:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_718:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_719:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_720:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_721:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_722:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_723:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940112-1_724:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940112-1.c'
    sources: {binary: 940112-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
test_940227-1_1238:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_1239:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_1240:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_1241:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_1242:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_1243:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_1244:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_212:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_213:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_214:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_215:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_216:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_217:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_218:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_725:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_726:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_727:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_728:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_729:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_730:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_940227-1_731:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/940227-1.c'
    sources: {binary: 940227-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess")[^\n]*\n?)+'}
test_950825-1_1245:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_1246:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_1247:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_1248:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_1249:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_1250:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_1251:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_219:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_220:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_221:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_222:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_223:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_224:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_225:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_732:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_733:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_734:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_735:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_736:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_737:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950825-1_738:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950825-1.c'
    sources: {binary: 950825-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra|near|excess|incompatible|invalid")[^\n]*\n?)+'}
test_950921-1_1252:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_1253:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_1254:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_1255:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_1256:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_1257:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_1258:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_226:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_227:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_228:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_229:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_230:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_231:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_232:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_739:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_740:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_741:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_742:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_743:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_744:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_950921-1_745:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/950921-1.c'
    sources: {binary: 950921-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|not
          integer|parse error|syntax error|expected")[^\n]*\n?)+'}
test_951123-1_1259:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_1260:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_1261:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_1262:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_1263:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_1264:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_1265:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_233:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_234:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_235:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_236:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_237:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_238:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_239:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_746:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_747:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_748:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_749:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_750:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_751:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_951123-1_752:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/951123-1.c'
    sources: {binary: 951123-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          index|near|parse|syntax|expected")[^\n]*\n?)+'}
test_971104-1_1266:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_1267:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_1268:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_1269:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_1270:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_1271:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_1272:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_240:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_241:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_242:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_243:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_244:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_245:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_246:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_753:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_754:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_755:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_756:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_757:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_758:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_971104-1_759:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/971104-1.c'
    sources: {binary: 971104-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L30: {expect: true, expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected")[^\n]*\n?)+'}
      L31: {expect: true, expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_990416-1_1273:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_1274:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_1275:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_1276:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_1277:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_1278:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_1279:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_247:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_248:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_249:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_250:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_251:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_252:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_253:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_760:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_761:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_762:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_763:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_764:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_765:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_990416-1_766:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/990416-1.c'
    sources: {binary: 990416-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name")[^\n]*\n?)+'}
test_const-ll-1_1280:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_1281:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_1282:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_1283:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_1284:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_1285:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_1286:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_254:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_255:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_256:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_257:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_258:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_259:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_260:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_767:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_768:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_769:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_770:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_771:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_772:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_const-ll-1_773:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/const-ll-1.c'
    sources: {binary: const-ll-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L23: {expect: true, expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lul|LUL")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ll")[^\n]*\n?)+'}
test_incomplete-1_1287:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_1288:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_1289:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_1290:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_1291:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_1292:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_1293:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_261:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_262:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_263:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_264:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_265:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_266:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_267:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_774:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_775:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_776:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_777:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_778:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_779:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-1_780:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-1.c'
    sources: {binary: incomplete-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-2_1294:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O0  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_1295:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O1  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_1296:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O2  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_1297:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_1298:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O3 -g  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_1299:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-Os  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_1300:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_1301:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_268:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O0  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_269:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O1  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_270:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O2  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_271:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_272:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O3 -g  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_273:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-Os  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_274:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_275:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_781:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O0  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_782:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O1  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_783:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O2  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_784:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O3 -fomit-frame-pointer -funroll-loops
        -fpeel-loops -ftracer -finline-functions  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_785:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O3 -g  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_786:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-Os  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_787:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-2_788:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-2.c'
    sources: {binary: incomplete-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_1302:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_1303:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_1304:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_1305:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_1306:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_1307:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_1308:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_276:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_277:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_278:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_279:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_280:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_281:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_282:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_789:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_790:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_791:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_792:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_793:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_794:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-3_795:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-3.c'
    sources: {binary: incomplete-3.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("incompatible
          pointer type")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          type")[^\n]*\n?)+'}
test_incomplete-4_1309:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_1310:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_1311:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_1312:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_1313:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_1314:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_1315:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_283:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_284:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_285:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_286:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_287:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_288:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_289:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_796:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_797:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_798:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_799:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_800:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_801:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-4_802:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-4.c'
    sources: {binary: incomplete-4.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("storage
          size")[^\n]*\n?)+'}
test_incomplete-5_1316:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_1317:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_1318:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_1319:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_1320:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_1321:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_1322:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_290:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_291:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_292:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_293:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_294:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_295:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_296:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_803:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_804:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_805:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_806:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_807:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_808:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_incomplete-5_809:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/incomplete-5.c'
    sources: {binary: incomplete-5.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("narrower
          than values of its type")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("has
          incomplete type")[^\n]*\n?)+'}
test_init-1_1323:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_1324:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_1325:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_1326:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_1327:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_1328:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_1329:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_297:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_298:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_299:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_300:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_301:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_302:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_303:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_810:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_811:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_812:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_813:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_814:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_815:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-1_816:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-1.c'
    sources: {binary: init-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("extra
          brace|excess elements|near")[^\n]*\n?)+'}
test_init-2_1330:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_1331:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_1332:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_1333:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_1334:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_1335:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_1336:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_304:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_305:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_306:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_307:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_308:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_309:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_310:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_817:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_818:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_819:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_820:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_821:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_822:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-2_823:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-2.c'
    sources: {binary: init-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("incomplete
          element type")[^\n]*\n?)+'}
test_init-3_1337:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_1338:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_1339:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_1340:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_1341:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_1342:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_1343:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_311:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_312:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_313:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_314:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_315:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_316:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_317:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_824:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_825:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_826:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_827:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_828:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_829:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-3_830:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-3.c'
    sources: {binary: init-3.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|function|incomplete
          type")[^\n]*\n?)+'}
test_init-4_1344:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_1345:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_1346:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_1347:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_1348:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_1349:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_1350:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_318:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_319:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_320:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_321:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_322:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_323:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_324:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_831:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_832:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_833:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_834:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_835:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_836:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-4_837:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-4.c'
    sources: {binary: init-4.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_init-5_1351:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_1352:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_1353:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_1354:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_1355:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_1356:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_1357:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_325:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_326:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_327:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_328:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_329:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_330:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_331:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_838:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_839:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_840:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_841:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_842:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_843:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_init-5_844:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/init-5.c'
    sources: {binary: init-5.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          expression")[^\n]*\n?)+'}
test_invalid_asm_1358:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O0  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_1359:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O1  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_1360:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O2  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_1361:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O3 -g  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_1362:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-Os  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_1363:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_1364:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_332:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O0  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_333:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O1  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_334:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O2  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_335:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O3 -g  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_336:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-Os  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_337:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_338:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_845:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O0  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_846:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O1  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_847:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O2  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_848:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O3 -g  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_849:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-Os  -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_850:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_invalid_asm_851:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/invalid_asm.c'
    sources: {binary: invalid_asm.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -ffat-lto-objects\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          register")[^\n]*\n?)+'}
test_label-1_1365:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O0  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_1366:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O1  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_1367:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O2  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_1368:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O3 -g  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_1369:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-Os  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_1370:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_1371:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_339:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O0  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_340:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O1  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_341:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O2  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_342:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O3 -g  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_343:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-Os  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_344:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_345:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_852:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O0  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_853:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O1  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_854:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O2  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_855:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O3 -g  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_856:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-Os  -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_857:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-1_858:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-1.c'
    sources: {binary: label-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -Wunused\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L104: {expect: true, expr: '(^|\n)([^\n]+(:104:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L116: {expect: true, expr: '(^|\n)([^\n]+(:116:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L119: {expect: true, expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L129: {expect: true, expr: '(^|\n)([^\n]+(:129:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L132: {expect: true, expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L156: {expect: true, expr: '(^|\n)([^\n]+:156:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+(:17:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+(:18:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L24: {expect: true, expr: '(^|\n)([^\n]+(:24:)[^\n]*[0-9]+: warning:[^\n]*("declared
          but not defined")[^\n]*\n?)+'}
      L32: {expect: true, expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L41: {expect: true, expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
      L52: {expect: true, expr: '(^|\n)([^\n]+(:52:)[^\n]*[0-9]+: warning:[^\n]*("defined
          but not used")[^\n]*\n?)+'}
      L66: {expect: true, expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L76: {expect: true, expr: '(^|\n)([^\n]+:76:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
      L88: {expect: true, expr: '(^|\n)([^\n]+:88:[^\n]*[0-9]+: (fatal )?error:[^\n]*("used
          but not defined")[^\n]*\n?)+'}
test_label-lineno-1_1372:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_1373:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_1374:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_1375:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_1376:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_1377:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O2 -flto -fno-use-linker-plugin
        -flto-partition=none  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_1378:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_346:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_347:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_348:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_349:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_350:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_351:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O2 -flto -fno-use-linker-plugin
        -flto-partition=none  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_352:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_859:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_860:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_861:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_862:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_863:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_864:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O2 -flto -fno-use-linker-plugin
        -flto-partition=none  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_label-lineno-1_865:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/label-lineno-1.c'
    sources: {binary: label-lineno-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("duplicate
          label")[^\n]*\n?)+'}
test_old-style-parm-1_1379:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_1380:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_1381:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_1382:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_1383:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_1384:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O2 -flto -fno-use-linker-plugin
        -flto-partition=none  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_1385:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_353:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_354:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_355:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_356:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_357:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_358:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O2 -flto -fno-use-linker-plugin
        -flto-partition=none  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_359:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_866:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_867:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_868:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_869:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_870:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_871:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O2 -flto -fno-use-linker-plugin
        -flto-partition=none  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-1_872:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-1.c'
    sources: {binary: old-style-parm-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_1386:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O0  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_1387:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O1  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_1388:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O2  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_1389:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O3 -g  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_1390:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-Os  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_1391:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O2 -flto -fno-use-linker-plugin
        -flto-partition=none  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_1392:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_360:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O0  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_361:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O1  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_362:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O2  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_363:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O3 -g  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_364:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-Os  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_365:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O2 -flto -fno-use-linker-plugin
        -flto-partition=none  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_366:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_873:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O0  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_874:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O1  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_875:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O2  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_876:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O3 -g  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_877:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-Os  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_878:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O2 -flto -fno-use-linker-plugin
        -flto-partition=none  -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-2_879:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-2.c'
    sources: {binary: old-style-parm-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -std=gnu89\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parse
          error|syntax error|no type or storage class|expected declaration specifiers")[^\n]*\n?)+'}
test_old-style-parm-3_1393:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_1394:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_1395:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_1396:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_1397:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_1398:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O2 -flto -fno-use-linker-plugin
        -flto-partition=none  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_1399:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_367:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_368:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_369:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_370:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_371:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_372:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O2 -flto -fno-use-linker-plugin
        -flto-partition=none  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_373:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_880:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_881:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_882:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_883:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_884:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_885:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O2 -flto -fno-use-linker-plugin
        -flto-partition=none  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_old-style-parm-3_886:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/old-style-parm-3.c'
    sources: {binary: old-style-parm-3.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("empty
          declaration")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*(".a.
          declared as a non-parameter")[^\n]*\n?)+'}
test_pr23576_1400:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_1401:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_1402:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_1403:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_1404:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_1405:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_1406:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_374:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_375:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_376:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_377:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_378:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_379:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_380:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_887:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_888:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_889:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_890:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_891:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_892:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr23576_893:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr23576.c'
    sources: {binary: pr23576.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("array
          type has incomplete element type")[^\n]*\n?)+'}
test_pr35444-1_1407:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_1408:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_1409:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_1410:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_1411:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_1412:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_1413:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_381:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_382:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_383:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_384:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_385:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_386:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_387:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_894:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_895:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_896:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_897:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_898:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_899:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-1_900:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-1.c'
    sources: {binary: pr35444-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_1414:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_1415:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_1416:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_1417:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_1418:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_1419:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_1420:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_388:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_389:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_390:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_391:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_392:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_393:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_394:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_901:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_902:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_903:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_904:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_905:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_906:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35444-2_907:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35444-2.c'
    sources: {binary: pr35444-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_1421:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_1422:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_1423:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_1424:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_1425:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_1426:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_1427:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_395:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_396:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_397:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_398:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_399:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_400:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_401:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_908:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_909:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_910:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_911:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_912:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_913:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr35447-1_914:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr35447-1.c'
    sources: {binary: pr35447-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_1428:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_1429:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_1430:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_1431:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_1432:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_1433:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_1434:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_402:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_403:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_404:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_405:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_406:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_407:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_408:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_915:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_916:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_917:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_918:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_919:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_920:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr40033-1_921:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr40033-1.c'
    sources: {binary: pr40033-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr44517_1435:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_1436:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_1437:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_1438:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_1439:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_1440:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_1441:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_409:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_410:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_411:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_412:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_413:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_414:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_415:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_922:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_923:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_924:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_925:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_926:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_927:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr44517_928:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr44517.c'
    sources: {binary: pr44517.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L12: {expect: true, expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''b\''")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected
          declaration specifiers or")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L18: {expect: true, expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''pid_t\''")[^\n]*\n?)+'}
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''in\''")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          type name \''lon\''")[^\n]*\n?)+'}
test_pr52290_1442:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_1443:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_1444:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_1445:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_1446:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_1447:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_1448:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_416:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_417:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_418:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_419:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_420:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_421:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_422:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_929:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_930:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_931:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_932:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_933:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_934:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr52290_935:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr52290.c'
    sources: {binary: pr52290.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L1: {expect: true, expr: '(^|\n)([^\n]+:1:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here")[^\n]*\n?)+'}
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71265_1449:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_1450:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_1451:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_1452:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_1453:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_1454:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_1455:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_423:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_424:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_425:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_426:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_427:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_428:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_429:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_936:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_937:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_938:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_939:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_940:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_941:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71265_942:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71265.c'
    sources: {binary: pr71265.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("size
          of array .ID. has non-integer type")[^\n]*\n?)+'}
test_pr71418_1456:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_1457:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_1458:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_1459:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_1460:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_1461:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_1462:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_430:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_431:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_432:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_433:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_434:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_435:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_436:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_943:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_944:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_945:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_946:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_947:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_948:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71418_949:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71418.c'
    sources: {binary: pr71418.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("lvalue
          required")[^\n]*\n?)+'}
test_pr71426_1463:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O0  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_1464:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O1  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_1465:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O2  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_1466:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O3 -g  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_1467:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-Os  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_1468:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_1469:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_437:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O0  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_438:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O1  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_439:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O2  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_440:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O3 -g  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_441:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-Os  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_442:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_443:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_950:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O0  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_951:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O1  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_952:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O2  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_953:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O3 -g  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_954:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-Os  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_955:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71426_956:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71426.c'
    sources: {binary: pr71426.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared")[^\n]*\n?)+'}
test_pr71573_1470:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_1471:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_1472:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_1473:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_1474:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_1475:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_1476:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_444:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_445:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_446:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_447:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_448:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_449:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_450:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_957:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_958:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_959:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_960:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_961:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_962:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71573_963:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71573.c'
    sources: {binary: pr71573.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("called
          object .t. is not a function or function pointer")[^\n]*\n?)+'}
test_pr71583_1477:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_1478:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_1479:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_1480:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_1481:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_1482:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_1483:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_451:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_452:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_453:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_454:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_455:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_456:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_457:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_964:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_965:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_966:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_967:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_968:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_969:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71583_970:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71583.c'
    sources: {binary: pr71583.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("too
          few")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("empty")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_1484:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_1485:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_1486:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_1487:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_1488:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_1489:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_1490:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_458:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_459:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_460:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_461:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_462:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_463:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_464:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_971:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_972:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_973:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_974:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_975:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_976:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr71853_977:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr71853.c'
    sources: {binary: pr71853.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("expected")[^\n]*\n?)+'}
test_pr79758_1491:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_1492:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_1493:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_1494:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_1495:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_1496:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_1497:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_465:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_466:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_467:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_468:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_469:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_470:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_471:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_978:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_979:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_980:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_981:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_982:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_983:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_pr79758_984:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/pr79758.c'
    sources: {binary: pr79758.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L4: {expect: true, expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared
          here|parameter name omitted")[^\n]*\n?)+'}
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("redefinition")[^\n]*\n?)+'}
      L6: {expect: true, expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*("defaults
          to \''int\''")[^\n]*\n?)+'}
test_redecl-1_1498:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_1499:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_1500:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_1501:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_1502:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_1503:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_1504:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_472:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_473:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_474:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_475:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_476:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_477:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_478:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_985:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_986:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_987:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_988:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_989:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_990:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_redecl-1_991:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/redecl-1.c'
    sources: {binary: redecl-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("conflicting
          type qualifiers")[^\n]*\n?)+'}
test_scope_1505:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_1506:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_1507:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_1508:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_1509:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_1510:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_1511:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_479:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_480:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_481:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_482:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_483:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_484:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_485:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_992:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_993:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_994:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_995:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_996:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_997:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_scope_998:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/scope.c'
    sources: {binary: scope.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("static")[^\n]*\n?)+'}
test_undeclared-1_1000:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O1  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_1001:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O2  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_1002:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O3 -g  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_1003:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-Os  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_1004:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_1005:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_1512:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O0  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_1513:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O1  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_1514:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O2  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_1515:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O3 -g  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_1516:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-Os  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_1517:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_1518:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_486:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O0  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_487:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O1  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_488:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O2  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_489:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O3 -g  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_490:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-Os  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_491:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_492:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-1_999:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-1.c'
    sources: {binary: undeclared-1.s, cflags: "-O0  -w\n -S"}
  group: GRPSERIAL
  validate:
    match:
      L6: {expect: true, expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_1006:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_1007:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_1008:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_1009:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_1010:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_1011:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_1012:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_1519:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_1520:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_1521:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_1522:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_1523:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_1524:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_1525:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_493:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_494:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_495:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_496:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_497:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_498:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_undeclared-2_499:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/undeclared-2.c'
    sources: {binary: undeclared-2.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L3: {expect: true, expr: '(^|\n)([^\n]+:3:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each")[^\n]*\n?)+'}
test_va-arg-1_1013:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_1014:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_1015:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_1016:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_1017:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_1018:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_1019:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_1526:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_1527:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_1528:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_1529:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_1530:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_1531:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_1532:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_500:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_501:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_502:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_503:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_504:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_505:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_va-arg-1_506:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/va-arg-1.c'
    sources: {binary: va-arg-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("undeclared|for
          each function|not last named")[^\n]*\n?)+'}
test_voidparam-1_1020:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_1021:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_1022:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_1023:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_1024:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_1025:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_1026:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_1533:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_1534:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_1535:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_1536:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_1537:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_1538:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_1539:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_507:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O0  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_508:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O1  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_509:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O2  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_510:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O3 -g  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_511:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-Os  \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_512:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O2 -flto -fno-use-linker-plugin -flto-partition=none
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
test_voidparam-1_513:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noncompile/voidparam-1.c'
    sources: {binary: voidparam-1.s, cflags: "-O2 -flto -fuse-linker-plugin -fno-fat-lto-objects
        \ \n -S"}
  group: GRPSERIAL
  validate:
    match:
      L10: {expect: true, expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L11: {expect: true, expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L13: {expect: true, expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L14: {expect: true, expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L15: {expect: true, expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L16: {expect: true, expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L17: {expect: true, expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L7: {expect: true, expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L8: {expect: true, expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
      L9: {expect: true, expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("parameter")[^\n]*\n?)+'}
